/*! For license information please see client.js.LICENSE */
!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=5)}([function(t,e,i){var n;!function(e,i){"use strict";"object"==typeof t.exports?t.exports=e.document?i(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(e)}("undefined"!=typeof window?window:this,(function(i,s){"use strict";var r=[],o=i.document,a=Object.getPrototypeOf,l=r.slice,u=r.concat,c=r.push,h=r.indexOf,d={},p=d.toString,f=d.hasOwnProperty,g=f.toString,m=g.call(Object),v={},y=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},b=function(t){return null!=t&&t===t.window},_={type:!0,src:!0,nonce:!0,noModule:!0};function x(t,e,i){var n,s,r=(i=i||o).createElement("script");if(r.text=t,e)for(n in _)(s=e[n]||e.getAttribute&&e.getAttribute(n))&&r.setAttribute(n,s);i.head.appendChild(r).parentNode.removeChild(r)}function w(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?d[p.call(t)]||"object":typeof t}var C=function(t,e){return new C.fn.init(t,e)},k=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function T(t){var e=!!t&&"length"in t&&t.length,i=w(t);return!y(t)&&!b(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}C.fn=C.prototype={jquery:"3.4.1",constructor:C,length:0,toArray:function(){return l.call(this)},get:function(t){return null==t?l.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=C.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return C.each(this,t)},map:function(t){return this.pushStack(C.map(this,(function(e,i){return t.call(e,i,e)})))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:r.sort,splice:r.splice},C.extend=C.fn.extend=function(){var t,e,i,n,s,r,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||y(o)||(o={}),a===l&&(o=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)n=t[e],"__proto__"!==e&&o!==n&&(u&&n&&(C.isPlainObject(n)||(s=Array.isArray(n)))?(i=o[e],r=s&&!Array.isArray(i)?[]:s||C.isPlainObject(i)?i:{},s=!1,o[e]=C.extend(u,r,n)):void 0!==n&&(o[e]=n));return o},C.extend({expando:"jQuery"+("3.4.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==p.call(t))&&(!(e=a(t))||"function"==typeof(i=f.call(e,"constructor")&&e.constructor)&&g.call(i)===m)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e){x(t,{nonce:e&&e.nonce})},each:function(t,e){var i,n=0;if(T(t))for(i=t.length;n<i&&!1!==e.call(t[n],n,t[n]);n++);else for(n in t)if(!1===e.call(t[n],n,t[n]))break;return t},trim:function(t){return null==t?"":(t+"").replace(k,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(T(Object(t))?C.merge(i,"string"==typeof t?[t]:t):c.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:h.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,s=t.length;n<i;n++)t[s++]=e[n];return t.length=s,t},grep:function(t,e,i){for(var n=[],s=0,r=t.length,o=!i;s<r;s++)!e(t[s],s)!==o&&n.push(t[s]);return n},map:function(t,e,i){var n,s,r=0,o=[];if(T(t))for(n=t.length;r<n;r++)null!=(s=e(t[r],r,i))&&o.push(s);else for(r in t)null!=(s=e(t[r],r,i))&&o.push(s);return u.apply([],o)},guid:1,support:v}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=r[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){d["[object "+e+"]"]=e.toLowerCase()}));var D=function(t){var e,i,n,s,r,o,a,l,u,c,h,d,p,f,g,m,v,y,b,_="sizzle"+1*new Date,x=t.document,w=0,C=0,k=lt(),T=lt(),D=lt(),S=lt(),E=function(t,e){return t===e&&(h=!0),0},A={}.hasOwnProperty,P=[],I=P.pop,N=P.push,M=P.push,O=P.slice,H=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",j="[\\x20\\t\\r\\n\\f]",z="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",R="\\["+j+"*("+z+")(?:"+j+"*([*^$|!~]?=)"+j+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+z+"))|)"+j+"*\\]",q=":("+z+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(j+"+","g"),W=new RegExp("^"+j+"+|((?:^|[^\\\\])(?:\\\\.)*)"+j+"+$","g"),B=new RegExp("^"+j+"*,"+j+"*"),$=new RegExp("^"+j+"*([>+~]|"+j+")"+j+"*"),Y=new RegExp(j+"|>"),V=new RegExp(q),U=new RegExp("^"+z+"$"),K={ID:new RegExp("^#("+z+")"),CLASS:new RegExp("^\\.("+z+")"),TAG:new RegExp("^("+z+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+j+"*(even|odd|(([+-]|)(\\d*)n|)"+j+"*(?:([+-]|)"+j+"*(\\d+)|))"+j+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+j+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+j+"*((?:-\\d)?\\d*)"+j+"*\\)|)(?=[^-]|$)","i")},X=/HTML$/i,G=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\([\\da-f]{1,6}"+j+"?|("+j+")|.)","ig"),it=function(t,e,i){var n="0x"+e-65536;return n!=n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},nt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,st=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},rt=function(){d()},ot=_t((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{M.apply(P=O.call(x.childNodes),x.childNodes),P[x.childNodes.length].nodeType}catch(t){M={apply:P.length?function(t,e){N.apply(t,O.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}function at(t,e,n,s){var r,a,u,c,h,f,v,y=e&&e.ownerDocument,w=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==w&&9!==w&&11!==w)return n;if(!s&&((e?e.ownerDocument||e:x)!==p&&d(e),e=e||p,g)){if(11!==w&&(h=J.exec(t)))if(r=h[1]){if(9===w){if(!(u=e.getElementById(r)))return n;if(u.id===r)return n.push(u),n}else if(y&&(u=y.getElementById(r))&&b(e,u)&&u.id===r)return n.push(u),n}else{if(h[2])return M.apply(n,e.getElementsByTagName(t)),n;if((r=h[3])&&i.getElementsByClassName&&e.getElementsByClassName)return M.apply(n,e.getElementsByClassName(r)),n}if(i.qsa&&!S[t+" "]&&(!m||!m.test(t))&&(1!==w||"object"!==e.nodeName.toLowerCase())){if(v=t,y=e,1===w&&Y.test(t)){for((c=e.getAttribute("id"))?c=c.replace(nt,st):e.setAttribute("id",c=_),a=(f=o(t)).length;a--;)f[a]="#"+c+" "+bt(f[a]);v=f.join(","),y=tt.test(t)&&vt(e.parentNode)||e}try{return M.apply(n,y.querySelectorAll(v)),n}catch(e){S(t,!0)}finally{c===_&&e.removeAttribute("id")}}}return l(t.replace(W,"$1"),e,n,s)}function lt(){var t=[];return function e(i,s){return t.push(i+" ")>n.cacheLength&&delete e[t.shift()],e[i+" "]=s}}function ut(t){return t[_]=!0,t}function ct(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ht(t,e){for(var i=t.split("|"),s=i.length;s--;)n.attrHandle[i[s]]=e}function dt(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ft(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ot(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ut((function(e){return e=+e,ut((function(i,n){for(var s,r=t([],i.length,e),o=r.length;o--;)i[s=r[o]]&&(i[s]=!(n[s]=i[s]))}))}))}function vt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in i=at.support={},r=at.isXML=function(t){var e=t.namespaceURI,i=(t.ownerDocument||t).documentElement;return!X.test(e||i&&i.nodeName||"HTML")},d=at.setDocument=function(t){var e,s,o=t?t.ownerDocument||t:x;return o!==p&&9===o.nodeType&&o.documentElement?(f=(p=o).documentElement,g=!r(p),x!==p&&(s=p.defaultView)&&s.top!==s&&(s.addEventListener?s.addEventListener("unload",rt,!1):s.attachEvent&&s.attachEvent("onunload",rt)),i.attributes=ct((function(t){return t.className="i",!t.getAttribute("className")})),i.getElementsByTagName=ct((function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length})),i.getElementsByClassName=Z.test(p.getElementsByClassName),i.getById=ct((function(t){return f.appendChild(t).id=_,!p.getElementsByName||!p.getElementsByName(_).length})),i.getById?(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){return t.getAttribute("id")===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i=e.getElementById(t);return i?[i]:[]}}):(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){var i=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i,n,s,r=e.getElementById(t);if(r){if((i=r.getAttributeNode("id"))&&i.value===t)return[r];for(s=e.getElementsByName(t),n=0;r=s[n++];)if((i=r.getAttributeNode("id"))&&i.value===t)return[r]}return[]}}),n.find.TAG=i.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):i.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],s=0,r=e.getElementsByTagName(t);if("*"===t){for(;i=r[s++];)1===i.nodeType&&n.push(i);return n}return r},n.find.CLASS=i.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},v=[],m=[],(i.qsa=Z.test(p.querySelectorAll))&&(ct((function(t){f.appendChild(t).innerHTML="<a id='"+_+"'></a><select id='"+_+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+j+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+j+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+_+"-]").length||m.push("~="),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+_+"+*").length||m.push(".#.+[+~]")})),ct((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+j+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),f.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=Z.test(y=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ct((function(t){i.disconnectedMatch=y.call(t,"*"),y.call(t,"[s!='']:x"),v.push("!=",q)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),e=Z.test(f.compareDocumentPosition),b=e||Z.test(f.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},E=e?function(t,e){if(t===e)return h=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!i.sortDetached&&e.compareDocumentPosition(t)===n?t===p||t.ownerDocument===x&&b(x,t)?-1:e===p||e.ownerDocument===x&&b(x,e)?1:c?H(c,t)-H(c,e):0:4&n?-1:1)}:function(t,e){if(t===e)return h=!0,0;var i,n=0,s=t.parentNode,r=e.parentNode,o=[t],a=[e];if(!s||!r)return t===p?-1:e===p?1:s?-1:r?1:c?H(c,t)-H(c,e):0;if(s===r)return dt(t,e);for(i=t;i=i.parentNode;)o.unshift(i);for(i=e;i=i.parentNode;)a.unshift(i);for(;o[n]===a[n];)n++;return n?dt(o[n],a[n]):o[n]===x?-1:a[n]===x?1:0},p):p},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if((t.ownerDocument||t)!==p&&d(t),i.matchesSelector&&g&&!S[e+" "]&&(!v||!v.test(e))&&(!m||!m.test(e)))try{var n=y.call(t,e);if(n||i.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){S(e,!0)}return at(e,p,null,[t]).length>0},at.contains=function(t,e){return(t.ownerDocument||t)!==p&&d(t),b(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!==p&&d(t);var s=n.attrHandle[e.toLowerCase()],r=s&&A.call(n.attrHandle,e.toLowerCase())?s(t,e,!g):void 0;return void 0!==r?r:i.attributes||!g?t.getAttribute(e):(r=t.getAttributeNode(e))&&r.specified?r.value:null},at.escape=function(t){return(t+"").replace(nt,st)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,n=[],s=0,r=0;if(h=!i.detectDuplicates,c=!i.sortStable&&t.slice(0),t.sort(E),h){for(;e=t[r++];)e===t[r]&&(s=n.push(r));for(;s--;)t.splice(n[s],1)}return c=null,t},s=at.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=s(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=s(e);return i},(n=at.selectors={cacheLength:50,createPseudo:ut,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,it),t[3]=(t[3]||t[4]||t[5]||"").replace(et,it),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return K.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&V.test(i)&&(e=o(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,it).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=k[t+" "];return e||(e=new RegExp("(^|"+j+")"+t+"("+j+"|$)"))&&k(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,i){return function(n){var s=at.attr(n,t);return null==s?"!="===e:!e||(s+="","="===e?s===i:"!="===e?s!==i:"^="===e?i&&0===s.indexOf(i):"*="===e?i&&s.indexOf(i)>-1:"$="===e?i&&s.slice(-i.length)===i:"~="===e?(" "+s.replace(F," ")+" ").indexOf(i)>-1:"|="===e&&(s===i||s.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,i,n,s){var r="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var u,c,h,d,p,f,g=r!==o?"nextSibling":"previousSibling",m=e.parentNode,v=a&&e.nodeName.toLowerCase(),y=!l&&!a,b=!1;if(m){if(r){for(;g;){for(d=e;d=d[g];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=g="only"===t&&!f&&"nextSibling"}return!0}if(f=[o?m.firstChild:m.lastChild],o&&y){for(b=(p=(u=(c=(h=(d=m)[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]||[])[0]===w&&u[1])&&u[2],d=p&&m.childNodes[p];d=++p&&d&&d[g]||(b=p=0)||f.pop();)if(1===d.nodeType&&++b&&d===e){c[t]=[w,p,b];break}}else if(y&&(b=p=(u=(c=(h=(d=e)[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]||[])[0]===w&&u[1]),!1===b)for(;(d=++p&&d&&d[g]||(b=p=0)||f.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&((c=(h=d[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]=[w,b]),d!==e)););return(b-=s)===n||b%n==0&&b/n>=0}}},PSEUDO:function(t,e){var i,s=n.pseudos[t]||n.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return s[_]?s(e):s.length>1?(i=[t,t,"",e],n.setFilters.hasOwnProperty(t.toLowerCase())?ut((function(t,i){for(var n,r=s(t,e),o=r.length;o--;)t[n=H(t,r[o])]=!(i[n]=r[o])})):function(t){return s(t,0,i)}):s}},pseudos:{not:ut((function(t){var e=[],i=[],n=a(t.replace(W,"$1"));return n[_]?ut((function(t,e,i,s){for(var r,o=n(t,null,s,[]),a=t.length;a--;)(r=o[a])&&(t[a]=!(e[a]=r))})):function(t,s,r){return e[0]=t,n(e,null,r,i),e[0]=null,!i.pop()}})),has:ut((function(t){return function(e){return at(t,e).length>0}})),contains:ut((function(t){return t=t.replace(et,it),function(e){return(e.textContent||s(e)).indexOf(t)>-1}})),lang:ut((function(t){return U.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(et,it).toLowerCase(),function(e){var i;do{if(i=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(i=i.toLowerCase())===t||0===i.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===f},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!n.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return G.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,i){return[i<0?i+e:i]})),even:mt((function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t})),odd:mt((function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t})),lt:mt((function(t,e,i){for(var n=i<0?i+e:i>e?e:i;--n>=0;)t.push(n);return t})),gt:mt((function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t}))}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})n.pseudos[e]=ft(e);function yt(){}function bt(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function _t(t,e,i){var n=e.dir,s=e.next,r=s||n,o=i&&"parentNode"===r,a=C++;return e.first?function(e,i,s){for(;e=e[n];)if(1===e.nodeType||o)return t(e,i,s);return!1}:function(e,i,l){var u,c,h,d=[w,a];if(l){for(;e=e[n];)if((1===e.nodeType||o)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||o)if(c=(h=e[_]||(e[_]={}))[e.uniqueID]||(h[e.uniqueID]={}),s&&s===e.nodeName.toLowerCase())e=e[n]||e;else{if((u=c[r])&&u[0]===w&&u[1]===a)return d[2]=u[2];if(c[r]=d,d[2]=t(e,i,l))return!0}return!1}}function xt(t){return t.length>1?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function wt(t,e,i,n,s){for(var r,o=[],a=0,l=t.length,u=null!=e;a<l;a++)(r=t[a])&&(i&&!i(r,n,s)||(o.push(r),u&&e.push(a)));return o}function Ct(t,e,i,n,s,r){return n&&!n[_]&&(n=Ct(n)),s&&!s[_]&&(s=Ct(s,r)),ut((function(r,o,a,l){var u,c,h,d=[],p=[],f=o.length,g=r||function(t,e,i){for(var n=0,s=e.length;n<s;n++)at(t,e[n],i);return i}(e||"*",a.nodeType?[a]:a,[]),m=!t||!r&&e?g:wt(g,d,t,a,l),v=i?s||(r?t:f||n)?[]:o:m;if(i&&i(m,v,a,l),n)for(u=wt(v,p),n(u,[],a,l),c=u.length;c--;)(h=u[c])&&(v[p[c]]=!(m[p[c]]=h));if(r){if(s||t){if(s){for(u=[],c=v.length;c--;)(h=v[c])&&u.push(m[c]=h);s(null,v=[],u,l)}for(c=v.length;c--;)(h=v[c])&&(u=s?H(r,h):d[c])>-1&&(r[u]=!(o[u]=h))}}else v=wt(v===o?v.splice(f,v.length):v),s?s(null,o,v,l):M.apply(o,v)}))}function kt(t){for(var e,i,s,r=t.length,o=n.relative[t[0].type],a=o||n.relative[" "],l=o?1:0,c=_t((function(t){return t===e}),a,!0),h=_t((function(t){return H(e,t)>-1}),a,!0),d=[function(t,i,n){var s=!o&&(n||i!==u)||((e=i).nodeType?c(t,i,n):h(t,i,n));return e=null,s}];l<r;l++)if(i=n.relative[t[l].type])d=[_t(xt(d),i)];else{if((i=n.filter[t[l].type].apply(null,t[l].matches))[_]){for(s=++l;s<r&&!n.relative[t[s].type];s++);return Ct(l>1&&xt(d),l>1&&bt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(W,"$1"),i,l<s&&kt(t.slice(l,s)),s<r&&kt(t=t.slice(s)),s<r&&bt(t))}d.push(i)}return xt(d)}return yt.prototype=n.filters=n.pseudos,n.setFilters=new yt,o=at.tokenize=function(t,e){var i,s,r,o,a,l,u,c=T[t+" "];if(c)return e?0:c.slice(0);for(a=t,l=[],u=n.preFilter;a;){for(o in i&&!(s=B.exec(a))||(s&&(a=a.slice(s[0].length)||a),l.push(r=[])),i=!1,(s=$.exec(a))&&(i=s.shift(),r.push({value:i,type:s[0].replace(W," ")}),a=a.slice(i.length)),n.filter)!(s=K[o].exec(a))||u[o]&&!(s=u[o](s))||(i=s.shift(),r.push({value:i,type:o,matches:s}),a=a.slice(i.length));if(!i)break}return e?a.length:a?at.error(t):T(t,l).slice(0)},a=at.compile=function(t,e){var i,s=[],r=[],a=D[t+" "];if(!a){for(e||(e=o(t)),i=e.length;i--;)(a=kt(e[i]))[_]?s.push(a):r.push(a);(a=D(t,function(t,e){var i=e.length>0,s=t.length>0,r=function(r,o,a,l,c){var h,f,m,v=0,y="0",b=r&&[],_=[],x=u,C=r||s&&n.find.TAG("*",c),k=w+=null==x?1:Math.random()||.1,T=C.length;for(c&&(u=o===p||o||c);y!==T&&null!=(h=C[y]);y++){if(s&&h){for(f=0,o||h.ownerDocument===p||(d(h),a=!g);m=t[f++];)if(m(h,o||p,a)){l.push(h);break}c&&(w=k)}i&&((h=!m&&h)&&v--,r&&b.push(h))}if(v+=y,i&&y!==v){for(f=0;m=e[f++];)m(b,_,o,a);if(r){if(v>0)for(;y--;)b[y]||_[y]||(_[y]=I.call(l));_=wt(_)}M.apply(l,_),c&&!r&&_.length>0&&v+e.length>1&&at.uniqueSort(l)}return c&&(w=k,u=x),b};return i?ut(r):r}(r,s))).selector=t}return a},l=at.select=function(t,e,i,s){var r,l,u,c,h,d="function"==typeof t&&t,p=!s&&o(t=d.selector||t);if(i=i||[],1===p.length){if((l=p[0]=p[0].slice(0)).length>2&&"ID"===(u=l[0]).type&&9===e.nodeType&&g&&n.relative[l[1].type]){if(!(e=(n.find.ID(u.matches[0].replace(et,it),e)||[])[0]))return i;d&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(r=K.needsContext.test(t)?0:l.length;r--&&(u=l[r],!n.relative[c=u.type]);)if((h=n.find[c])&&(s=h(u.matches[0].replace(et,it),tt.test(l[0].type)&&vt(e.parentNode)||e))){if(l.splice(r,1),!(t=s.length&&bt(l)))return M.apply(i,s),i;break}}return(d||a(t,p))(s,e,!g,i,!e||tt.test(t)&&vt(e.parentNode)||e),i},i.sortStable=_.split("").sort(E).join("")===_,i.detectDuplicates=!!h,d(),i.sortDetached=ct((function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))})),ct((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ht("type|href|height|width",(function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),i.attributes&&ct((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ht("value",(function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),ct((function(t){return null==t.getAttribute("disabled")}))||ht(L,(function(t,e,i){var n;if(!i)return!0===t[e]?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null})),at}(i);C.find=D,C.expr=D.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=D.uniqueSort,C.text=D.getText,C.isXMLDoc=D.isXML,C.contains=D.contains,C.escapeSelector=D.escape;var S=function(t,e,i){for(var n=[],s=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(s&&C(t).is(i))break;n.push(t)}return n},E=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},A=C.expr.match.needsContext;function P(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var I=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function N(t,e,i){return y(e)?C.grep(t,(function(t,n){return!!e.call(t,n,t)!==i})):e.nodeType?C.grep(t,(function(t){return t===e!==i})):"string"!=typeof e?C.grep(t,(function(t){return h.call(e,t)>-1!==i})):C.filter(e,t,i)}C.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?C.find.matchesSelector(n,t)?[n]:[]:C.find.matches(t,C.grep(e,(function(t){return 1===t.nodeType})))},C.fn.extend({find:function(t){var e,i,n=this.length,s=this;if("string"!=typeof t)return this.pushStack(C(t).filter((function(){for(e=0;e<n;e++)if(C.contains(s[e],this))return!0})));for(i=this.pushStack([]),e=0;e<n;e++)C.find(t,s[e],i);return n>1?C.uniqueSort(i):i},filter:function(t){return this.pushStack(N(this,t||[],!1))},not:function(t){return this.pushStack(N(this,t||[],!0))},is:function(t){return!!N(this,"string"==typeof t&&A.test(t)?C(t):t||[],!1).length}});var M,O=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(t,e,i){var n,s;if(!t)return this;if(i=i||M,"string"==typeof t){if(!(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:O.exec(t))||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof C?e[0]:e,C.merge(this,C.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:o,!0)),I.test(n[1])&&C.isPlainObject(e))for(n in e)y(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return(s=o.getElementById(n[2]))&&(this[0]=s,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):y(t)?void 0!==i.ready?i.ready(t):t(C):C.makeArray(t,this)}).prototype=C.fn,M=C(o);var H=/^(?:parents|prev(?:Until|All))/,L={children:!0,contents:!0,next:!0,prev:!0};function j(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}C.fn.extend({has:function(t){var e=C(t,this),i=e.length;return this.filter((function(){for(var t=0;t<i;t++)if(C.contains(this,e[t]))return!0}))},closest:function(t,e){var i,n=0,s=this.length,r=[],o="string"!=typeof t&&C(t);if(!A.test(t))for(;n<s;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?o.index(i)>-1:1===i.nodeType&&C.find.matchesSelector(i,t))){r.push(i);break}return this.pushStack(r.length>1?C.uniqueSort(r):r)},index:function(t){return t?"string"==typeof t?h.call(C(t),this[0]):h.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),C.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return S(t,"parentNode")},parentsUntil:function(t,e,i){return S(t,"parentNode",i)},next:function(t){return j(t,"nextSibling")},prev:function(t){return j(t,"previousSibling")},nextAll:function(t){return S(t,"nextSibling")},prevAll:function(t){return S(t,"previousSibling")},nextUntil:function(t,e,i){return S(t,"nextSibling",i)},prevUntil:function(t,e,i){return S(t,"previousSibling",i)},siblings:function(t){return E((t.parentNode||{}).firstChild,t)},children:function(t){return E(t.firstChild)},contents:function(t){return void 0!==t.contentDocument?t.contentDocument:(P(t,"template")&&(t=t.content||t),C.merge([],t.childNodes))}},(function(t,e){C.fn[t]=function(i,n){var s=C.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=C.filter(n,s)),this.length>1&&(L[t]||C.uniqueSort(s),H.test(t)&&s.reverse()),this.pushStack(s)}}));var z=/[^\x20\t\r\n\f]+/g;function R(t){return t}function q(t){throw t}function F(t,e,i,n){var s;try{t&&y(s=t.promise)?s.call(t).done(e).fail(i):t&&y(s=t.then)?s.call(t,e,i):e.apply(void 0,[t].slice(n))}catch(t){i.apply(void 0,[t])}}C.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return C.each(t.match(z)||[],(function(t,i){e[i]=!0})),e}(t):C.extend({},t);var e,i,n,s,r=[],o=[],a=-1,l=function(){for(s=s||t.once,n=e=!0;o.length;a=-1)for(i=o.shift();++a<r.length;)!1===r[a].apply(i[0],i[1])&&t.stopOnFalse&&(a=r.length,i=!1);t.memory||(i=!1),e=!1,s&&(r=i?[]:"")},u={add:function(){return r&&(i&&!e&&(a=r.length-1,o.push(i)),function e(i){C.each(i,(function(i,n){y(n)?t.unique&&u.has(n)||r.push(n):n&&n.length&&"string"!==w(n)&&e(n)}))}(arguments),i&&!e&&l()),this},remove:function(){return C.each(arguments,(function(t,e){for(var i;(i=C.inArray(e,r,i))>-1;)r.splice(i,1),i<=a&&a--})),this},has:function(t){return t?C.inArray(t,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return s=o=[],r=i="",this},disabled:function(){return!r},lock:function(){return s=o=[],i||e||(r=i=""),this},locked:function(){return!!s},fireWith:function(t,i){return s||(i=[t,(i=i||[]).slice?i.slice():i],o.push(i),e||l()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!n}};return u},C.extend({Deferred:function(t){var e=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},catch:function(t){return s.then(null,t)},pipe:function(){var t=arguments;return C.Deferred((function(i){C.each(e,(function(e,n){var s=y(t[n[4]])&&t[n[4]];r[n[1]]((function(){var t=s&&s.apply(this,arguments);t&&y(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[n[0]+"With"](this,s?[t]:arguments)}))})),t=null})).promise()},then:function(t,n,s){var r=0;function o(t,e,n,s){return function(){var a=this,l=arguments,u=function(){var i,u;if(!(t<r)){if((i=n.apply(a,l))===e.promise())throw new TypeError("Thenable self-resolution");u=i&&("object"==typeof i||"function"==typeof i)&&i.then,y(u)?s?u.call(i,o(r,e,R,s),o(r,e,q,s)):(r++,u.call(i,o(r,e,R,s),o(r,e,q,s),o(r,e,R,e.notifyWith))):(n!==R&&(a=void 0,l=[i]),(s||e.resolveWith)(a,l))}},c=s?u:function(){try{u()}catch(i){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(i,c.stackTrace),t+1>=r&&(n!==q&&(a=void 0,l=[i]),e.rejectWith(a,l))}};t?c():(C.Deferred.getStackHook&&(c.stackTrace=C.Deferred.getStackHook()),i.setTimeout(c))}}return C.Deferred((function(i){e[0][3].add(o(0,i,y(s)?s:R,i.notifyWith)),e[1][3].add(o(0,i,y(t)?t:R)),e[2][3].add(o(0,i,y(n)?n:q))})).promise()},promise:function(t){return null!=t?C.extend(t,s):s}},r={};return C.each(e,(function(t,i){var o=i[2],a=i[5];s[i[1]]=o.add,a&&o.add((function(){n=a}),e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),o.add(i[3].fire),r[i[0]]=function(){return r[i[0]+"With"](this===r?void 0:this,arguments),this},r[i[0]+"With"]=o.fireWith})),s.promise(r),t&&t.call(r,r),r},when:function(t){var e=arguments.length,i=e,n=Array(i),s=l.call(arguments),r=C.Deferred(),o=function(t){return function(i){n[t]=this,s[t]=arguments.length>1?l.call(arguments):i,--e||r.resolveWith(n,s)}};if(e<=1&&(F(t,r.done(o(i)).resolve,r.reject,!e),"pending"===r.state()||y(s[i]&&s[i].then)))return r.then();for(;i--;)F(s[i],o(i),r.reject);return r.promise()}});var W=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(t,e){i.console&&i.console.warn&&t&&W.test(t.name)&&i.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},C.readyException=function(t){i.setTimeout((function(){throw t}))};var B=C.Deferred();function $(){o.removeEventListener("DOMContentLoaded",$),i.removeEventListener("load",$),C.ready()}C.fn.ready=function(t){return B.then(t).catch((function(t){C.readyException(t)})),this},C.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--C.readyWait:C.isReady)||(C.isReady=!0,!0!==t&&--C.readyWait>0||B.resolveWith(o,[C]))}}),C.ready.then=B.then,"complete"===o.readyState||"loading"!==o.readyState&&!o.documentElement.doScroll?i.setTimeout(C.ready):(o.addEventListener("DOMContentLoaded",$),i.addEventListener("load",$));var Y=function(t,e,i,n,s,r,o){var a=0,l=t.length,u=null==i;if("object"===w(i))for(a in s=!0,i)Y(t,e,a,i[a],!0,r,o);else if(void 0!==n&&(s=!0,y(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(C(t),i)})),e))for(;a<l;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return s?t:u?e.call(t):l?e(t[0],i):r},V=/^-ms-/,U=/-([a-z])/g;function K(t,e){return e.toUpperCase()}function X(t){return t.replace(V,"ms-").replace(U,K)}var G=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Q(){this.expando=C.expando+Q.uid++}Q.uid=1,Q.prototype={cache:function(t){var e=t[this.expando];return e||(e={},G(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,s=this.cache(t);if("string"==typeof e)s[X(e)]=i;else for(n in e)s[X(n)]=e[n];return s},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][X(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){i=(e=Array.isArray(e)?e.map(X):(e=X(e))in n?[e]:e.match(z)||[]).length;for(;i--;)delete n[e[i]]}(void 0===e||C.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!C.isEmptyObject(e)}};var Z=new Q,J=new Q,tt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,et=/[A-Z]/g;function it(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(et,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(n))){try{i=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:tt.test(t)?JSON.parse(t):t)}(i)}catch(t){}J.set(t,e,i)}else i=void 0;return i}C.extend({hasData:function(t){return J.hasData(t)||Z.hasData(t)},data:function(t,e,i){return J.access(t,e,i)},removeData:function(t,e){J.remove(t,e)},_data:function(t,e,i){return Z.access(t,e,i)},_removeData:function(t,e){Z.remove(t,e)}}),C.fn.extend({data:function(t,e){var i,n,s,r=this[0],o=r&&r.attributes;if(void 0===t){if(this.length&&(s=J.get(r),1===r.nodeType&&!Z.get(r,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&0===(n=o[i].name).indexOf("data-")&&(n=X(n.slice(5)),it(r,n,s[n]));Z.set(r,"hasDataAttrs",!0)}return s}return"object"==typeof t?this.each((function(){J.set(this,t)})):Y(this,(function(e){var i;if(r&&void 0===e)return void 0!==(i=J.get(r,t))?i:void 0!==(i=it(r,t))?i:void 0;this.each((function(){J.set(this,t,e)}))}),null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each((function(){J.remove(this,t)}))}}),C.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Z.get(t,e),i&&(!n||Array.isArray(i)?n=Z.access(t,e,C.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=C.queue(t,e),n=i.length,s=i.shift(),r=C._queueHooks(t,e);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===e&&i.unshift("inprogress"),delete r.stop,s.call(t,(function(){C.dequeue(t,e)}),r)),!n&&r&&r.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Z.get(t,i)||Z.access(t,i,{empty:C.Callbacks("once memory").add((function(){Z.remove(t,[e+"queue",i])}))})}}),C.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?C.queue(this[0],t):void 0===e?this:this.each((function(){var i=C.queue(this,t,e);C._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&C.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){C.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,s=C.Deferred(),r=this,o=this.length,a=function(){--n||s.resolveWith(r,[r])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)(i=Z.get(r[o],t+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),s.promise(e)}});var nt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,st=new RegExp("^(?:([+-])=|)("+nt+")([a-z%]*)$","i"),rt=["Top","Right","Bottom","Left"],ot=o.documentElement,at=function(t){return C.contains(t.ownerDocument,t)},lt={composed:!0};ot.getRootNode&&(at=function(t){return C.contains(t.ownerDocument,t)||t.getRootNode(lt)===t.ownerDocument});var ut=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&at(t)&&"none"===C.css(t,"display")},ct=function(t,e,i,n){var s,r,o={};for(r in e)o[r]=t.style[r],t.style[r]=e[r];for(r in s=i.apply(t,n||[]),e)t.style[r]=o[r];return s};function ht(t,e,i,n){var s,r,o=20,a=n?function(){return n.cur()}:function(){return C.css(t,e,"")},l=a(),u=i&&i[3]||(C.cssNumber[e]?"":"px"),c=t.nodeType&&(C.cssNumber[e]||"px"!==u&&+l)&&st.exec(C.css(t,e));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;o--;)C.style(t,e,c+u),(1-r)*(1-(r=a()/l||.5))<=0&&(o=0),c/=r;c*=2,C.style(t,e,c+u),i=i||[]}return i&&(c=+c||+l||0,s=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=c,n.end=s)),s}var dt={};function pt(t){var e,i=t.ownerDocument,n=t.nodeName,s=dt[n];return s||(e=i.body.appendChild(i.createElement(n)),s=C.css(e,"display"),e.parentNode.removeChild(e),"none"===s&&(s="block"),dt[n]=s,s)}function ft(t,e){for(var i,n,s=[],r=0,o=t.length;r<o;r++)(n=t[r]).style&&(i=n.style.display,e?("none"===i&&(s[r]=Z.get(n,"display")||null,s[r]||(n.style.display="")),""===n.style.display&&ut(n)&&(s[r]=pt(n))):"none"!==i&&(s[r]="none",Z.set(n,"display",i)));for(r=0;r<o;r++)null!=s[r]&&(t[r].style.display=s[r]);return t}C.fn.extend({show:function(){return ft(this,!0)},hide:function(){return ft(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){ut(this)?C(this).show():C(this).hide()}))}});var gt=/^(?:checkbox|radio)$/i,mt=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,vt=/^$|^module$|\/(?:java|ecma)script/i,yt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function bt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&P(t,e)?C.merge([t],i):i}function _t(t,e){for(var i=0,n=t.length;i<n;i++)Z.set(t[i],"globalEval",!e||Z.get(e[i],"globalEval"))}yt.optgroup=yt.option,yt.tbody=yt.tfoot=yt.colgroup=yt.caption=yt.thead,yt.th=yt.td;var xt,wt,Ct=/<|&#?\w+;/;function kt(t,e,i,n,s){for(var r,o,a,l,u,c,h=e.createDocumentFragment(),d=[],p=0,f=t.length;p<f;p++)if((r=t[p])||0===r)if("object"===w(r))C.merge(d,r.nodeType?[r]:r);else if(Ct.test(r)){for(o=o||h.appendChild(e.createElement("div")),a=(mt.exec(r)||["",""])[1].toLowerCase(),l=yt[a]||yt._default,o.innerHTML=l[1]+C.htmlPrefilter(r)+l[2],c=l[0];c--;)o=o.lastChild;C.merge(d,o.childNodes),(o=h.firstChild).textContent=""}else d.push(e.createTextNode(r));for(h.textContent="",p=0;r=d[p++];)if(n&&C.inArray(r,n)>-1)s&&s.push(r);else if(u=at(r),o=bt(h.appendChild(r),"script"),u&&_t(o),i)for(c=0;r=o[c++];)vt.test(r.type||"")&&i.push(r);return h}xt=o.createDocumentFragment().appendChild(o.createElement("div")),(wt=o.createElement("input")).setAttribute("type","radio"),wt.setAttribute("checked","checked"),wt.setAttribute("name","t"),xt.appendChild(wt),v.checkClone=xt.cloneNode(!0).cloneNode(!0).lastChild.checked,xt.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!xt.cloneNode(!0).lastChild.defaultValue;var Tt=/^key/,Dt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,St=/^([^.]*)(?:\.(.+)|)/;function Et(){return!0}function At(){return!1}function Pt(t,e){return t===function(){try{return o.activeElement}catch(t){}}()==("focus"===e)}function It(t,e,i,n,s,r){var o,a;if("object"==typeof e){for(a in"string"!=typeof i&&(n=n||i,i=void 0),e)It(t,a,i,n,e[a],r);return t}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=At;else if(!s)return t;return 1===r&&(o=s,(s=function(t){return C().off(t),o.apply(this,arguments)}).guid=o.guid||(o.guid=C.guid++)),t.each((function(){C.event.add(this,e,s,n,i)}))}function Nt(t,e,i){i?(Z.set(t,e,!1),C.event.add(t,e,{namespace:!1,handler:function(t){var n,s,r=Z.get(this,e);if(1&t.isTrigger&&this[e]){if(r.length)(C.event.special[e]||{}).delegateType&&t.stopPropagation();else if(r=l.call(arguments),Z.set(this,e,r),n=i(this,e),this[e](),r!==(s=Z.get(this,e))||n?Z.set(this,e,!1):s={},r!==s)return t.stopImmediatePropagation(),t.preventDefault(),s.value}else r.length&&(Z.set(this,e,{value:C.event.trigger(C.extend(r[0],C.Event.prototype),r.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===Z.get(t,e)&&C.event.add(t,e,Et)}C.event={global:{},add:function(t,e,i,n,s){var r,o,a,l,u,c,h,d,p,f,g,m=Z.get(t);if(m)for(i.handler&&(i=(r=i).handler,s=r.selector),s&&C.find.matchesSelector(ot,s),i.guid||(i.guid=C.guid++),(l=m.events)||(l=m.events={}),(o=m.handle)||(o=m.handle=function(e){return void 0!==C&&C.event.triggered!==e.type?C.event.dispatch.apply(t,arguments):void 0}),u=(e=(e||"").match(z)||[""]).length;u--;)p=g=(a=St.exec(e[u])||[])[1],f=(a[2]||"").split(".").sort(),p&&(h=C.event.special[p]||{},p=(s?h.delegateType:h.bindType)||p,h=C.event.special[p]||{},c=C.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&C.expr.match.needsContext.test(s),namespace:f.join(".")},r),(d=l[p])||((d=l[p]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(t,n,f,o)||t.addEventListener&&t.addEventListener(p,o)),h.add&&(h.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,c):d.push(c),C.event.global[p]=!0)},remove:function(t,e,i,n,s){var r,o,a,l,u,c,h,d,p,f,g,m=Z.hasData(t)&&Z.get(t);if(m&&(l=m.events)){for(u=(e=(e||"").match(z)||[""]).length;u--;)if(p=g=(a=St.exec(e[u])||[])[1],f=(a[2]||"").split(".").sort(),p){for(h=C.event.special[p]||{},d=l[p=(n?h.delegateType:h.bindType)||p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=r=d.length;r--;)c=d[r],!s&&g!==c.origType||i&&i.guid!==c.guid||a&&!a.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(d.splice(r,1),c.selector&&d.delegateCount--,h.remove&&h.remove.call(t,c));o&&!d.length&&(h.teardown&&!1!==h.teardown.call(t,f,m.handle)||C.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)C.event.remove(t,p+e[u],i,n,!0);C.isEmptyObject(l)&&Z.remove(t,"handle events")}},dispatch:function(t){var e,i,n,s,r,o,a=C.event.fix(t),l=new Array(arguments.length),u=(Z.get(this,"events")||{})[a.type]||[],c=C.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,a)){for(o=C.event.handlers.call(this,a,u),e=0;(s=o[e++])&&!a.isPropagationStopped();)for(a.currentTarget=s.elem,i=0;(r=s.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==r.namespace&&!a.rnamespace.test(r.namespace)||(a.handleObj=r,a.data=r.data,void 0!==(n=((C.event.special[r.origType]||{}).handle||r.handler).apply(s.elem,l))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,s,r,o,a=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&t.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||!0!==u.disabled)){for(r=[],o={},i=0;i<l;i++)void 0===o[s=(n=e[i]).selector+" "]&&(o[s]=n.needsContext?C(s,this).index(u)>-1:C.find(s,this,null,[u]).length),o[s]&&r.push(n);r.length&&a.push({elem:u,handlers:r})}return u=this,l<e.length&&a.push({elem:u,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(C.Event.prototype,t,{enumerable:!0,configurable:!0,get:y(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[C.expando]?t:new C.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Nt(e,"click",Et),!1},trigger:function(t){var e=this||t;return gt.test(e.type)&&e.click&&P(e,"input")&&Nt(e,"click"),!0},_default:function(t){var e=t.target;return gt.test(e.type)&&e.click&&P(e,"input")&&Z.get(e,"click")||P(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},C.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},C.Event=function(t,e){if(!(this instanceof C.Event))return new C.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?Et:At,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&C.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:At,isPropagationStopped:At,isImmediatePropagationStopped:At,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=Et,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=Et,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=Et,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Tt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Dt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},C.event.addProp),C.each({focus:"focusin",blur:"focusout"},(function(t,e){C.event.special[t]={setup:function(){return Nt(this,t,Pt),!1},trigger:function(){return Nt(this,t),!0},delegateType:e}})),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){C.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,s=t.relatedTarget,r=t.handleObj;return s&&(s===n||C.contains(n,s))||(t.type=r.origType,i=r.handler.apply(this,arguments),t.type=e),i}}})),C.fn.extend({on:function(t,e,i,n){return It(this,t,e,i,n)},one:function(t,e,i,n){return It(this,t,e,i,n,1)},off:function(t,e,i){var n,s;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,C(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(s in t)this.off(s,e,t[s]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=At),this.each((function(){C.event.remove(this,t,i,e)}))}});var Mt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ot=/<script|<style|<link/i,Ht=/checked\s*(?:[^=]|=\s*.checked.)/i,Lt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function jt(t,e){return P(t,"table")&&P(11!==e.nodeType?e:e.firstChild,"tr")&&C(t).children("tbody")[0]||t}function zt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Rt(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function qt(t,e){var i,n,s,r,o,a,l,u;if(1===e.nodeType){if(Z.hasData(t)&&(r=Z.access(t),o=Z.set(e,r),u=r.events))for(s in delete o.handle,o.events={},u)for(i=0,n=u[s].length;i<n;i++)C.event.add(e,s,u[s][i]);J.hasData(t)&&(a=J.access(t),l=C.extend({},a),J.set(e,l))}}function Ft(t,e){var i=e.nodeName.toLowerCase();"input"===i&&gt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function Wt(t,e,i,n){e=u.apply([],e);var s,r,o,a,l,c,h=0,d=t.length,p=d-1,f=e[0],g=y(f);if(g||d>1&&"string"==typeof f&&!v.checkClone&&Ht.test(f))return t.each((function(s){var r=t.eq(s);g&&(e[0]=f.call(this,s,r.html())),Wt(r,e,i,n)}));if(d&&(r=(s=kt(e,t[0].ownerDocument,!1,t,n)).firstChild,1===s.childNodes.length&&(s=r),r||n)){for(a=(o=C.map(bt(s,"script"),zt)).length;h<d;h++)l=s,h!==p&&(l=C.clone(l,!0,!0),a&&C.merge(o,bt(l,"script"))),i.call(t[h],l,h);if(a)for(c=o[o.length-1].ownerDocument,C.map(o,Rt),h=0;h<a;h++)l=o[h],vt.test(l.type||"")&&!Z.access(l,"globalEval")&&C.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?C._evalUrl&&!l.noModule&&C._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):x(l.textContent.replace(Lt,""),l,c))}return t}function Bt(t,e,i){for(var n,s=e?C.filter(e,t):t,r=0;null!=(n=s[r]);r++)i||1!==n.nodeType||C.cleanData(bt(n)),n.parentNode&&(i&&at(n)&&_t(bt(n,"script")),n.parentNode.removeChild(n));return t}C.extend({htmlPrefilter:function(t){return t.replace(Mt,"<$1></$2>")},clone:function(t,e,i){var n,s,r,o,a=t.cloneNode(!0),l=at(t);if(!(v.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||C.isXMLDoc(t)))for(o=bt(a),n=0,s=(r=bt(t)).length;n<s;n++)Ft(r[n],o[n]);if(e)if(i)for(r=r||bt(t),o=o||bt(a),n=0,s=r.length;n<s;n++)qt(r[n],o[n]);else qt(t,a);return(o=bt(a,"script")).length>0&&_t(o,!l&&bt(t,"script")),a},cleanData:function(t){for(var e,i,n,s=C.event.special,r=0;void 0!==(i=t[r]);r++)if(G(i)){if(e=i[Z.expando]){if(e.events)for(n in e.events)s[n]?C.event.remove(i,n):C.removeEvent(i,n,e.handle);i[Z.expando]=void 0}i[J.expando]&&(i[J.expando]=void 0)}}}),C.fn.extend({detach:function(t){return Bt(this,t,!0)},remove:function(t){return Bt(this,t)},text:function(t){return Y(this,(function(t){return void 0===t?C.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Wt(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||jt(this,t).appendChild(t)}))},prepend:function(){return Wt(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=jt(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Wt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Wt(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(C.cleanData(bt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return C.clone(this,t,e)}))},html:function(t){return Y(this,(function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Ot.test(t)&&!yt[(mt.exec(t)||["",""])[1].toLowerCase()]){t=C.htmlPrefilter(t);try{for(;i<n;i++)1===(e=this[i]||{}).nodeType&&(C.cleanData(bt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Wt(this,arguments,(function(e){var i=this.parentNode;C.inArray(this,t)<0&&(C.cleanData(bt(this)),i&&i.replaceChild(e,this))}),t)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){C.fn[t]=function(t){for(var i,n=[],s=C(t),r=s.length-1,o=0;o<=r;o++)i=o===r?this:this.clone(!0),C(s[o])[e](i),c.apply(n,i.get());return this.pushStack(n)}}));var $t=new RegExp("^("+nt+")(?!px)[a-z%]+$","i"),Yt=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=i),e.getComputedStyle(t)},Vt=new RegExp(rt.join("|"),"i");function Ut(t,e,i){var n,s,r,o,a=t.style;return(i=i||Yt(t))&&(""!==(o=i.getPropertyValue(e)||i[e])||at(t)||(o=C.style(t,e)),!v.pixelBoxStyles()&&$t.test(o)&&Vt.test(e)&&(n=a.width,s=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=s,a.maxWidth=r)),void 0!==o?o+"":o}function Kt(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(c){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ot.appendChild(u).appendChild(c);var t=i.getComputedStyle(c);n="1%"!==t.top,l=12===e(t.marginLeft),c.style.right="60%",a=36===e(t.right),s=36===e(t.width),c.style.position="absolute",r=12===e(c.offsetWidth/3),ot.removeChild(u),c=null}}function e(t){return Math.round(parseFloat(t))}var n,s,r,a,l,u=o.createElement("div"),c=o.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===c.style.backgroundClip,C.extend(v,{boxSizingReliable:function(){return t(),s},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),n},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),r}}))}();var Xt=["Webkit","Moz","ms"],Gt=o.createElement("div").style,Qt={};function Zt(t){var e=C.cssProps[t]||Qt[t];return e||(t in Gt?t:Qt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),i=Xt.length;i--;)if((t=Xt[i]+e)in Gt)return t}(t)||t)}var Jt=/^(none|table(?!-c[ea]).+)/,te=/^--/,ee={position:"absolute",visibility:"hidden",display:"block"},ie={letterSpacing:"0",fontWeight:"400"};function ne(t,e,i){var n=st.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function se(t,e,i,n,s,r){var o="width"===e?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;o<4;o+=2)"margin"===i&&(l+=C.css(t,i+rt[o],!0,s)),n?("content"===i&&(l-=C.css(t,"padding"+rt[o],!0,s)),"margin"!==i&&(l-=C.css(t,"border"+rt[o]+"Width",!0,s))):(l+=C.css(t,"padding"+rt[o],!0,s),"padding"!==i?l+=C.css(t,"border"+rt[o]+"Width",!0,s):a+=C.css(t,"border"+rt[o]+"Width",!0,s));return!n&&r>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-r-l-a-.5))||0),l}function re(t,e,i){var n=Yt(t),s=(!v.boxSizingReliable()||i)&&"border-box"===C.css(t,"boxSizing",!1,n),r=s,o=Ut(t,e,n),a="offset"+e[0].toUpperCase()+e.slice(1);if($t.test(o)){if(!i)return o;o="auto"}return(!v.boxSizingReliable()&&s||"auto"===o||!parseFloat(o)&&"inline"===C.css(t,"display",!1,n))&&t.getClientRects().length&&(s="border-box"===C.css(t,"boxSizing",!1,n),(r=a in t)&&(o=t[a])),(o=parseFloat(o)||0)+se(t,e,i||(s?"border":"content"),r,n,o)+"px"}function oe(t,e,i,n,s){return new oe.prototype.init(t,e,i,n,s)}C.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=Ut(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var s,r,o,a=X(e),l=te.test(e),u=t.style;if(l||(e=Zt(a)),o=C.cssHooks[e]||C.cssHooks[a],void 0===i)return o&&"get"in o&&void 0!==(s=o.get(t,!1,n))?s:u[e];"string"===(r=typeof i)&&(s=st.exec(i))&&s[1]&&(i=ht(t,e,s),r="number"),null!=i&&i==i&&("number"!==r||l||(i+=s&&s[3]||(C.cssNumber[a]?"":"px")),v.clearCloneStyle||""!==i||0!==e.indexOf("background")||(u[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l?u.setProperty(e,i):u[e]=i))}},css:function(t,e,i,n){var s,r,o,a=X(e);return te.test(e)||(e=Zt(a)),(o=C.cssHooks[e]||C.cssHooks[a])&&"get"in o&&(s=o.get(t,!0,i)),void 0===s&&(s=Ut(t,e,n)),"normal"===s&&e in ie&&(s=ie[e]),""===i||i?(r=parseFloat(s),!0===i||isFinite(r)?r||0:s):s}}),C.each(["height","width"],(function(t,e){C.cssHooks[e]={get:function(t,i,n){if(i)return!Jt.test(C.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?re(t,e,n):ct(t,ee,(function(){return re(t,e,n)}))},set:function(t,i,n){var s,r=Yt(t),o=!v.scrollboxSize()&&"absolute"===r.position,a=(o||n)&&"border-box"===C.css(t,"boxSizing",!1,r),l=n?se(t,e,n,a,r):0;return a&&o&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(r[e])-se(t,e,"border",!1,r)-.5)),l&&(s=st.exec(i))&&"px"!==(s[3]||"px")&&(t.style[e]=i,i=C.css(t,e)),ne(0,i,l)}}})),C.cssHooks.marginLeft=Kt(v.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Ut(t,"marginLeft"))||t.getBoundingClientRect().left-ct(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),C.each({margin:"",padding:"",border:"Width"},(function(t,e){C.cssHooks[t+e]={expand:function(i){for(var n=0,s={},r="string"==typeof i?i.split(" "):[i];n<4;n++)s[t+rt[n]+e]=r[n]||r[n-2]||r[0];return s}},"margin"!==t&&(C.cssHooks[t+e].set=ne)})),C.fn.extend({css:function(t,e){return Y(this,(function(t,e,i){var n,s,r={},o=0;if(Array.isArray(e)){for(n=Yt(t),s=e.length;o<s;o++)r[e[o]]=C.css(t,e[o],!1,n);return r}return void 0!==i?C.style(t,e,i):C.css(t,e)}),t,e,arguments.length>1)}}),C.Tween=oe,oe.prototype={constructor:oe,init:function(t,e,i,n,s,r){this.elem=t,this.prop=i,this.easing=s||C.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=r||(C.cssNumber[i]?"":"px")},cur:function(){var t=oe.propHooks[this.prop];return t&&t.get?t.get(this):oe.propHooks._default.get(this)},run:function(t){var e,i=oe.propHooks[this.prop];return this.options.duration?this.pos=e=C.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):oe.propHooks._default.set(this),this}},oe.prototype.init.prototype=oe.prototype,oe.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=C.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){C.fx.step[t.prop]?C.fx.step[t.prop](t):1!==t.elem.nodeType||!C.cssHooks[t.prop]&&null==t.elem.style[Zt(t.prop)]?t.elem[t.prop]=t.now:C.style(t.elem,t.prop,t.now+t.unit)}}},oe.propHooks.scrollTop=oe.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},C.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},C.fx=oe.prototype.init,C.fx.step={};var ae,le,ue=/^(?:toggle|show|hide)$/,ce=/queueHooks$/;function he(){le&&(!1===o.hidden&&i.requestAnimationFrame?i.requestAnimationFrame(he):i.setTimeout(he,C.fx.interval),C.fx.tick())}function de(){return i.setTimeout((function(){ae=void 0})),ae=Date.now()}function pe(t,e){var i,n=0,s={height:t};for(e=e?1:0;n<4;n+=2-e)s["margin"+(i=rt[n])]=s["padding"+i]=t;return e&&(s.opacity=s.width=t),s}function fe(t,e,i){for(var n,s=(ge.tweeners[e]||[]).concat(ge.tweeners["*"]),r=0,o=s.length;r<o;r++)if(n=s[r].call(i,e,t))return n}function ge(t,e,i){var n,s,r=0,o=ge.prefilters.length,a=C.Deferred().always((function(){delete l.elem})),l=function(){if(s)return!1;for(var e=ae||de(),i=Math.max(0,u.startTime+u.duration-e),n=1-(i/u.duration||0),r=0,o=u.tweens.length;r<o;r++)u.tweens[r].run(n);return a.notifyWith(t,[u,n,i]),n<1&&o?i:(o||a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:C.extend({},e),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},i),originalProperties:e,originalOptions:i,startTime:ae||de(),duration:i.duration,tweens:[],createTween:function(e,i){var n=C.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)u.tweens[i].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),c=u.props;for(!function(t,e){var i,n,s,r,o;for(i in t)if(s=e[n=X(i)],r=t[i],Array.isArray(r)&&(s=r[1],r=t[i]=r[0]),i!==n&&(t[n]=r,delete t[i]),(o=C.cssHooks[n])&&"expand"in o)for(i in r=o.expand(r),delete t[n],r)i in t||(t[i]=r[i],e[i]=s);else e[n]=s}(c,u.opts.specialEasing);r<o;r++)if(n=ge.prefilters[r].call(u,t,c,u.opts))return y(n.stop)&&(C._queueHooks(u.elem,u.opts.queue).stop=n.stop.bind(n)),n;return C.map(c,fe,u),y(u.opts.start)&&u.opts.start.call(t,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),C.fx.timer(C.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u}C.Animation=C.extend(ge,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return ht(i.elem,t,st.exec(e),i),i}]},tweener:function(t,e){y(t)?(e=t,t=["*"]):t=t.match(z);for(var i,n=0,s=t.length;n<s;n++)i=t[n],ge.tweeners[i]=ge.tweeners[i]||[],ge.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var n,s,r,o,a,l,u,c,h="width"in e||"height"in e,d=this,p={},f=t.style,g=t.nodeType&&ut(t),m=Z.get(t,"fxshow");for(n in i.queue||(null==(o=C._queueHooks(t,"fx")).unqueued&&(o.unqueued=0,a=o.empty.fire,o.empty.fire=function(){o.unqueued||a()}),o.unqueued++,d.always((function(){d.always((function(){o.unqueued--,C.queue(t,"fx").length||o.empty.fire()}))}))),e)if(s=e[n],ue.test(s)){if(delete e[n],r=r||"toggle"===s,s===(g?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;g=!0}p[n]=m&&m[n]||C.style(t,n)}if((l=!C.isEmptyObject(e))||!C.isEmptyObject(p))for(n in h&&1===t.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(u=m&&m.display)&&(u=Z.get(t,"display")),"none"===(c=C.css(t,"display"))&&(u?c=u:(ft([t],!0),u=t.style.display||u,c=C.css(t,"display"),ft([t]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===C.css(t,"float")&&(l||(d.done((function(){f.display=u})),null==u&&(c=f.display,u="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always((function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}))),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=Z.access(t,"fxshow",{display:u}),r&&(m.hidden=!g),g&&ft([t],!0),d.done((function(){for(n in g||ft([t]),Z.remove(t,"fxshow"),p)C.style(t,n,p[n])}))),l=fe(g?m[n]:0,n,d),n in m||(m[n]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?ge.prefilters.unshift(t):ge.prefilters.push(t)}}),C.speed=function(t,e,i){var n=t&&"object"==typeof t?C.extend({},t):{complete:i||!i&&e||y(t)&&t,duration:t,easing:i&&e||e&&!y(e)&&e};return C.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in C.fx.speeds?n.duration=C.fx.speeds[n.duration]:n.duration=C.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){y(n.old)&&n.old.call(this),n.queue&&C.dequeue(this,n.queue)},n},C.fn.extend({fadeTo:function(t,e,i,n){return this.filter(ut).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=C.isEmptyObject(t),r=C.speed(e,i,n),o=function(){var e=ge(this,C.extend({},t),r);(s||Z.get(this,"finish"))&&e.stop(!0)};return o.finish=o,s||!1===r.queue?this.each(o):this.queue(r.queue,o)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&!1!==t&&this.queue(t||"fx",[]),this.each((function(){var e=!0,s=null!=t&&t+"queueHooks",r=C.timers,o=Z.get(this);if(s)o[s]&&o[s].stop&&n(o[s]);else for(s in o)o[s]&&o[s].stop&&ce.test(s)&&n(o[s]);for(s=r.length;s--;)r[s].elem!==this||null!=t&&r[s].queue!==t||(r[s].anim.stop(i),e=!1,r.splice(s,1));!e&&i||C.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,i=Z.get(this),n=i[t+"queue"],s=i[t+"queueHooks"],r=C.timers,o=n?n.length:0;for(i.finish=!0,C.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===t&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish}))}}),C.each(["toggle","show","hide"],(function(t,e){var i=C.fn[e];C.fn[e]=function(t,n,s){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(pe(e,!0),t,n,s)}})),C.each({slideDown:pe("show"),slideUp:pe("hide"),slideToggle:pe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){C.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}})),C.timers=[],C.fx.tick=function(){var t,e=0,i=C.timers;for(ae=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||C.fx.stop(),ae=void 0},C.fx.timer=function(t){C.timers.push(t),C.fx.start()},C.fx.interval=13,C.fx.start=function(){le||(le=!0,he())},C.fx.stop=function(){le=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(t,e){return t=C.fx&&C.fx.speeds[t]||t,e=e||"fx",this.queue(e,(function(e,n){var s=i.setTimeout(e,t);n.stop=function(){i.clearTimeout(s)}}))},function(){var t=o.createElement("input"),e=o.createElement("select").appendChild(o.createElement("option"));t.type="checkbox",v.checkOn=""!==t.value,v.optSelected=e.selected,(t=o.createElement("input")).value="t",t.type="radio",v.radioValue="t"===t.value}();var me,ve=C.expr.attrHandle;C.fn.extend({attr:function(t,e){return Y(this,C.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each((function(){C.removeAttr(this,t)}))}}),C.extend({attr:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===t.getAttribute?C.prop(t,e,i):(1===r&&C.isXMLDoc(t)||(s=C.attrHooks[e.toLowerCase()]||(C.expr.match.bool.test(e)?me:void 0)),void 0!==i?null===i?void C.removeAttr(t,e):s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:(t.setAttribute(e,i+""),i):s&&"get"in s&&null!==(n=s.get(t,e))?n:null==(n=C.find.attr(t,e))?void 0:n)},attrHooks:{type:{set:function(t,e){if(!v.radioValue&&"radio"===e&&P(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,s=e&&e.match(z);if(s&&1===t.nodeType)for(;i=s[n++];)t.removeAttribute(i)}}),me={set:function(t,e,i){return!1===e?C.removeAttr(t,i):t.setAttribute(i,i),i}},C.each(C.expr.match.bool.source.match(/\w+/g),(function(t,e){var i=ve[e]||C.find.attr;ve[e]=function(t,e,n){var s,r,o=e.toLowerCase();return n||(r=ve[o],ve[o]=s,s=null!=i(t,e,n)?o:null,ve[o]=r),s}}));var ye=/^(?:input|select|textarea|button)$/i,be=/^(?:a|area)$/i;function _e(t){return(t.match(z)||[]).join(" ")}function xe(t){return t.getAttribute&&t.getAttribute("class")||""}function we(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(z)||[]}C.fn.extend({prop:function(t,e){return Y(this,C.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each((function(){delete this[C.propFix[t]||t]}))}}),C.extend({prop:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&C.isXMLDoc(t)||(e=C.propFix[e]||e,s=C.propHooks[e]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:t[e]=i:s&&"get"in s&&null!==(n=s.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=C.find.attr(t,"tabindex");return e?parseInt(e,10):ye.test(t.nodeName)||be.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(C.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){C.propFix[this.toLowerCase()]=this})),C.fn.extend({addClass:function(t){var e,i,n,s,r,o,a,l=0;if(y(t))return this.each((function(e){C(this).addClass(t.call(this,e,xe(this)))}));if((e=we(t)).length)for(;i=this[l++];)if(s=xe(i),n=1===i.nodeType&&" "+_e(s)+" "){for(o=0;r=e[o++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");s!==(a=_e(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,r,o,a,l=0;if(y(t))return this.each((function(e){C(this).removeClass(t.call(this,e,xe(this)))}));if(!arguments.length)return this.attr("class","");if((e=we(t)).length)for(;i=this[l++];)if(s=xe(i),n=1===i.nodeType&&" "+_e(s)+" "){for(o=0;r=e[o++];)for(;n.indexOf(" "+r+" ")>-1;)n=n.replace(" "+r+" "," ");s!==(a=_e(n))&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t,n="string"===i||Array.isArray(t);return"boolean"==typeof e&&n?e?this.addClass(t):this.removeClass(t):y(t)?this.each((function(i){C(this).toggleClass(t.call(this,i,xe(this),e),e)})):this.each((function(){var e,s,r,o;if(n)for(s=0,r=C(this),o=we(t);e=o[s++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||((e=xe(this))&&Z.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":Z.get(this,"__className__")||""))}))},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+_e(xe(i))+" ").indexOf(e)>-1)return!0;return!1}});var Ce=/\r/g;C.fn.extend({val:function(t){var e,i,n,s=this[0];return arguments.length?(n=y(t),this.each((function(i){var s;1===this.nodeType&&(null==(s=n?t.call(this,i,C(this).val()):t)?s="":"number"==typeof s?s+="":Array.isArray(s)&&(s=C.map(s,(function(t){return null==t?"":t+""}))),(e=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,s,"value")||(this.value=s))}))):s?(e=C.valHooks[s.type]||C.valHooks[s.nodeName.toLowerCase()])&&"get"in e&&void 0!==(i=e.get(s,"value"))?i:"string"==typeof(i=s.value)?i.replace(Ce,""):null==i?"":i:void 0}}),C.extend({valHooks:{option:{get:function(t){var e=C.find.attr(t,"value");return null!=e?e:_e(C.text(t))}},select:{get:function(t){var e,i,n,s=t.options,r=t.selectedIndex,o="select-one"===t.type,a=o?null:[],l=o?r+1:s.length;for(n=r<0?l:o?r:0;n<l;n++)if(((i=s[n]).selected||n===r)&&!i.disabled&&(!i.parentNode.disabled||!P(i.parentNode,"optgroup"))){if(e=C(i).val(),o)return e;a.push(e)}return a},set:function(t,e){for(var i,n,s=t.options,r=C.makeArray(e),o=s.length;o--;)((n=s[o]).selected=C.inArray(C.valHooks.option.get(n),r)>-1)&&(i=!0);return i||(t.selectedIndex=-1),r}}}}),C.each(["radio","checkbox"],(function(){C.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=C.inArray(C(t).val(),e)>-1}},v.checkOn||(C.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),v.focusin="onfocusin"in i;var ke=/^(?:focusinfocus|focusoutblur)$/,Te=function(t){t.stopPropagation()};C.extend(C.event,{trigger:function(t,e,n,s){var r,a,l,u,c,h,d,p,g=[n||o],m=f.call(t,"type")?t.type:t,v=f.call(t,"namespace")?t.namespace.split("."):[];if(a=p=l=n=n||o,3!==n.nodeType&&8!==n.nodeType&&!ke.test(m+C.event.triggered)&&(m.indexOf(".")>-1&&(v=m.split("."),m=v.shift(),v.sort()),c=m.indexOf(":")<0&&"on"+m,(t=t[C.expando]?t:new C.Event(m,"object"==typeof t&&t)).isTrigger=s?2:3,t.namespace=v.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+v.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),e=null==e?[t]:C.makeArray(e,[t]),d=C.event.special[m]||{},s||!d.trigger||!1!==d.trigger.apply(n,e))){if(!s&&!d.noBubble&&!b(n)){for(u=d.delegateType||m,ke.test(u+m)||(a=a.parentNode);a;a=a.parentNode)g.push(a),l=a;l===(n.ownerDocument||o)&&g.push(l.defaultView||l.parentWindow||i)}for(r=0;(a=g[r++])&&!t.isPropagationStopped();)p=a,t.type=r>1?u:d.bindType||m,(h=(Z.get(a,"events")||{})[t.type]&&Z.get(a,"handle"))&&h.apply(a,e),(h=c&&a[c])&&h.apply&&G(a)&&(t.result=h.apply(a,e),!1===t.result&&t.preventDefault());return t.type=m,s||t.isDefaultPrevented()||d._default&&!1!==d._default.apply(g.pop(),e)||!G(n)||c&&y(n[m])&&!b(n)&&((l=n[c])&&(n[c]=null),C.event.triggered=m,t.isPropagationStopped()&&p.addEventListener(m,Te),n[m](),t.isPropagationStopped()&&p.removeEventListener(m,Te),C.event.triggered=void 0,l&&(n[c]=l)),t.result}},simulate:function(t,e,i){var n=C.extend(new C.Event,i,{type:t,isSimulated:!0});C.event.trigger(n,null,e)}}),C.fn.extend({trigger:function(t,e){return this.each((function(){C.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var i=this[0];if(i)return C.event.trigger(t,e,i,!0)}}),v.focusin||C.each({focus:"focusin",blur:"focusout"},(function(t,e){var i=function(t){C.event.simulate(e,t.target,C.event.fix(t))};C.event.special[e]={setup:function(){var n=this.ownerDocument||this,s=Z.access(n,e);s||n.addEventListener(t,i,!0),Z.access(n,e,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=Z.access(n,e)-1;s?Z.access(n,e,s):(n.removeEventListener(t,i,!0),Z.remove(n,e))}}}));var De=i.location,Se=Date.now(),Ee=/\?/;C.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new i.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||C.error("Invalid XML: "+t),e};var Ae=/\[\]$/,Pe=/\r?\n/g,Ie=/^(?:submit|button|image|reset|file)$/i,Ne=/^(?:input|select|textarea|keygen)/i;function Me(t,e,i,n){var s;if(Array.isArray(e))C.each(e,(function(e,s){i||Ae.test(t)?n(t,s):Me(t+"["+("object"==typeof s&&null!=s?e:"")+"]",s,i,n)}));else if(i||"object"!==w(e))n(t,e);else for(s in e)Me(t+"["+s+"]",e[s],i,n)}C.param=function(t,e){var i,n=[],s=function(t,e){var i=y(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!C.isPlainObject(t))C.each(t,(function(){s(this.name,this.value)}));else for(i in t)Me(i,t[i],e,s);return n.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=C.prop(this,"elements");return t?C.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!C(this).is(":disabled")&&Ne.test(this.nodeName)&&!Ie.test(t)&&(this.checked||!gt.test(t))})).map((function(t,e){var i=C(this).val();return null==i?null:Array.isArray(i)?C.map(i,(function(t){return{name:e.name,value:t.replace(Pe,"\r\n")}})):{name:e.name,value:i.replace(Pe,"\r\n")}})).get()}});var Oe=/%20/g,He=/#.*$/,Le=/([?&])_=[^&]*/,je=/^(.*?):[ \t]*([^\r\n]*)$/gm,ze=/^(?:GET|HEAD)$/,Re=/^\/\//,qe={},Fe={},We="*/".concat("*"),Be=o.createElement("a");function $e(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,s=0,r=e.toLowerCase().match(z)||[];if(y(i))for(;n=r[s++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function Ye(t,e,i,n){var s={},r=t===Fe;function o(a){var l;return s[a]=!0,C.each(t[a]||[],(function(t,a){var u=a(e,i,n);return"string"!=typeof u||r||s[u]?r?!(l=u):void 0:(e.dataTypes.unshift(u),o(u),!1)})),l}return o(e.dataTypes[0])||!s["*"]&&o("*")}function Ve(t,e){var i,n,s=C.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((s[i]?t:n||(n={}))[i]=e[i]);return n&&C.extend(!0,t,n),t}Be.href=De.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:De.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(De.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":We,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Ve(Ve(t,C.ajaxSettings),e):Ve(C.ajaxSettings,t)},ajaxPrefilter:$e(qe),ajaxTransport:$e(Fe),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var n,s,r,a,l,u,c,h,d,p,f=C.ajaxSetup({},e),g=f.context||f,m=f.context&&(g.nodeType||g.jquery)?C(g):C.event,v=C.Deferred(),y=C.Callbacks("once memory"),b=f.statusCode||{},_={},x={},w="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(c){if(!a)for(a={};e=je.exec(r);)a[e[1].toLowerCase()+" "]=(a[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=a[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?r:null},setRequestHeader:function(t,e){return null==c&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,_[t]=e),this},overrideMimeType:function(t){return null==c&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)k.always(t[k.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||w;return n&&n.abort(e),T(0,e),this}};if(v.promise(k),f.url=((t||f.url||De.href)+"").replace(Re,De.protocol+"//"),f.type=e.method||e.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(z)||[""],null==f.crossDomain){u=o.createElement("a");try{u.href=f.url,u.href=u.href,f.crossDomain=Be.protocol+"//"+Be.host!=u.protocol+"//"+u.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=C.param(f.data,f.traditional)),Ye(qe,f,e,k),c)return k;for(d in(h=C.event&&f.global)&&0==C.active++&&C.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!ze.test(f.type),s=f.url.replace(He,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(Oe,"+")):(p=f.url.slice(s.length),f.data&&(f.processData||"string"==typeof f.data)&&(s+=(Ee.test(s)?"&":"?")+f.data,delete f.data),!1===f.cache&&(s=s.replace(Le,"$1"),p=(Ee.test(s)?"&":"?")+"_="+Se+++p),f.url=s+p),f.ifModified&&(C.lastModified[s]&&k.setRequestHeader("If-Modified-Since",C.lastModified[s]),C.etag[s]&&k.setRequestHeader("If-None-Match",C.etag[s])),(f.data&&f.hasContent&&!1!==f.contentType||e.contentType)&&k.setRequestHeader("Content-Type",f.contentType),k.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+We+"; q=0.01":""):f.accepts["*"]),f.headers)k.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(!1===f.beforeSend.call(g,k,f)||c))return k.abort();if(w="abort",y.add(f.complete),k.done(f.success),k.fail(f.error),n=Ye(Fe,f,e,k)){if(k.readyState=1,h&&m.trigger("ajaxSend",[k,f]),c)return k;f.async&&f.timeout>0&&(l=i.setTimeout((function(){k.abort("timeout")}),f.timeout));try{c=!1,n.send(_,T)}catch(t){if(c)throw t;T(-1,t)}}else T(-1,"No Transport");function T(t,e,o,a){var u,d,p,_,x,w=e;c||(c=!0,l&&i.clearTimeout(l),n=void 0,r=a||"",k.readyState=t>0?4:0,u=t>=200&&t<300||304===t,o&&(_=function(t,e,i){for(var n,s,r,o,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){r=s;break}o||(o=s)}r=r||o}if(r)return r!==l[0]&&l.unshift(r),i[r]}(f,k,o)),_=function(t,e,i,n){var s,r,o,a,l,u={},c=t.dataTypes.slice();if(c[1])for(o in t.converters)u[o.toLowerCase()]=t.converters[o];for(r=c.shift();r;)if(t.responseFields[r]&&(i[t.responseFields[r]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=r,r=c.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(o=u[l+" "+r]||u["* "+r]))for(s in u)if((a=s.split(" "))[1]===r&&(o=u[l+" "+a[0]]||u["* "+a[0]])){!0===o?o=u[s]:!0!==u[s]&&(r=a[0],c.unshift(a[1]));break}if(!0!==o)if(o&&t.throws)e=o(e);else try{e=o(e)}catch(t){return{state:"parsererror",error:o?t:"No conversion from "+l+" to "+r}}}return{state:"success",data:e}}(f,_,k,u),u?(f.ifModified&&((x=k.getResponseHeader("Last-Modified"))&&(C.lastModified[s]=x),(x=k.getResponseHeader("etag"))&&(C.etag[s]=x)),204===t||"HEAD"===f.type?w="nocontent":304===t?w="notmodified":(w=_.state,d=_.data,u=!(p=_.error))):(p=w,!t&&w||(w="error",t<0&&(t=0))),k.status=t,k.statusText=(e||w)+"",u?v.resolveWith(g,[d,w,k]):v.rejectWith(g,[k,w,p]),k.statusCode(b),b=void 0,h&&m.trigger(u?"ajaxSuccess":"ajaxError",[k,f,u?d:p]),y.fireWith(g,[k,w]),h&&(m.trigger("ajaxComplete",[k,f]),--C.active||C.event.trigger("ajaxStop")))}return k},getJSON:function(t,e,i){return C.get(t,e,i,"json")},getScript:function(t,e){return C.get(t,void 0,e,"script")}}),C.each(["get","post"],(function(t,e){C[e]=function(t,i,n,s){return y(i)&&(s=s||n,n=i,i=void 0),C.ajax(C.extend({url:t,type:e,dataType:s,data:i,success:n},C.isPlainObject(t)&&t))}})),C._evalUrl=function(t,e){return C.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){C.globalEval(t,e)}})},C.fn.extend({wrapAll:function(t){var e;return this[0]&&(y(t)&&(t=t.call(this[0])),e=C(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return y(t)?this.each((function(e){C(this).wrapInner(t.call(this,e))})):this.each((function(){var e=C(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)}))},wrap:function(t){var e=y(t);return this.each((function(i){C(this).wrapAll(e?t.call(this,i):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){C(this).replaceWith(this.childNodes)})),this}}),C.expr.pseudos.hidden=function(t){return!C.expr.pseudos.visible(t)},C.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new i.XMLHttpRequest}catch(t){}};var Ue={0:200,1223:204},Ke=C.ajaxSettings.xhr();v.cors=!!Ke&&"withCredentials"in Ke,v.ajax=Ke=!!Ke,C.ajaxTransport((function(t){var e,n;if(v.cors||Ke&&!t.crossDomain)return{send:function(s,r){var o,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(o in t.xhrFields)a[o]=t.xhrFields[o];for(o in t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest"),s)a.setRequestHeader(o,s[o]);e=function(t){return function(){e&&(e=n=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?r(0,"error"):r(a.status,a.statusText):r(Ue[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=e(),n=a.onerror=a.ontimeout=e("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&i.setTimeout((function(){e&&n()}))},e=e("abort");try{a.send(t.hasContent&&t.data||null)}catch(t){if(e)throw t}},abort:function(){e&&e()}}})),C.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return C.globalEval(t),t}}}),C.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),C.ajaxTransport("script",(function(t){var e,i;if(t.crossDomain||t.scriptAttrs)return{send:function(n,s){e=C("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&s("error"===t.type?404:200,t.type)}),o.head.appendChild(e[0])},abort:function(){i&&i()}}}));var Xe,Ge=[],Qe=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ge.pop()||C.expando+"_"+Se++;return this[t]=!0,t}}),C.ajaxPrefilter("json jsonp",(function(t,e,n){var s,r,o,a=!1!==t.jsonp&&(Qe.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qe.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return s=t.jsonpCallback=y(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Qe,"$1"+s):!1!==t.jsonp&&(t.url+=(Ee.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return o||C.error(s+" was not called"),o[0]},t.dataTypes[0]="json",r=i[s],i[s]=function(){o=arguments},n.always((function(){void 0===r?C(i).removeProp(s):i[s]=r,t[s]&&(t.jsonpCallback=e.jsonpCallback,Ge.push(s)),o&&y(r)&&r(o[0]),o=r=void 0})),"script"})),v.createHTMLDocument=((Xe=o.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Xe.childNodes.length),C.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(v.createHTMLDocument?((n=(e=o.implementation.createHTMLDocument("")).createElement("base")).href=o.location.href,e.head.appendChild(n)):e=o),r=!i&&[],(s=I.exec(t))?[e.createElement(s[1])]:(s=kt([t],e,r),r&&r.length&&C(r).remove(),C.merge([],s.childNodes)));var n,s,r},C.fn.load=function(t,e,i){var n,s,r,o=this,a=t.indexOf(" ");return a>-1&&(n=_e(t.slice(a)),t=t.slice(0,a)),y(e)?(i=e,e=void 0):e&&"object"==typeof e&&(s="POST"),o.length>0&&C.ajax({url:t,type:s||"GET",dataType:"html",data:e}).done((function(t){r=arguments,o.html(n?C("<div>").append(C.parseHTML(t)).find(n):t)})).always(i&&function(t,e){o.each((function(){i.apply(this,r||[t.responseText,e,t])}))}),this},C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){C.fn[e]=function(t){return this.on(e,t)}})),C.expr.pseudos.animated=function(t){return C.grep(C.timers,(function(e){return t===e.elem})).length},C.offset={setOffset:function(t,e,i){var n,s,r,o,a,l,u=C.css(t,"position"),c=C(t),h={};"static"===u&&(t.style.position="relative"),a=c.offset(),r=C.css(t,"top"),l=C.css(t,"left"),("absolute"===u||"fixed"===u)&&(r+l).indexOf("auto")>-1?(o=(n=c.position()).top,s=n.left):(o=parseFloat(r)||0,s=parseFloat(l)||0),y(e)&&(e=e.call(t,i,C.extend({},a))),null!=e.top&&(h.top=e.top-a.top+o),null!=e.left&&(h.left=e.left-a.left+s),"using"in e?e.using.call(t,h):c.css(h)}},C.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){C.offset.setOffset(this,t,e)}));var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,n=this[0],s={top:0,left:0};if("fixed"===C.css(n,"position"))e=n.getBoundingClientRect();else{for(e=this.offset(),i=n.ownerDocument,t=n.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===C.css(t,"position");)t=t.parentNode;t&&t!==n&&1===t.nodeType&&((s=C(t).offset()).top+=C.css(t,"borderTopWidth",!0),s.left+=C.css(t,"borderLeftWidth",!0))}return{top:e.top-s.top-C.css(n,"marginTop",!0),left:e.left-s.left-C.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===C.css(t,"position");)t=t.offsetParent;return t||ot}))}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var i="pageYOffset"===e;C.fn[t]=function(n){return Y(this,(function(t,n,s){var r;if(b(t)?r=t:9===t.nodeType&&(r=t.defaultView),void 0===s)return r?r[e]:t[n];r?r.scrollTo(i?r.pageXOffset:s,i?s:r.pageYOffset):t[n]=s}),t,n,arguments.length)}})),C.each(["top","left"],(function(t,e){C.cssHooks[e]=Kt(v.pixelPosition,(function(t,i){if(i)return i=Ut(t,e),$t.test(i)?C(t).position()[e]+"px":i}))})),C.each({Height:"height",Width:"width"},(function(t,e){C.each({padding:"inner"+t,content:e,"":"outer"+t},(function(i,n){C.fn[n]=function(s,r){var o=arguments.length&&(i||"boolean"!=typeof s),a=i||(!0===s||!0===r?"margin":"border");return Y(this,(function(e,i,s){var r;return b(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===s?C.css(e,i,a):C.style(e,i,s,a)}),e,o?s:void 0,o)}}))})),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){C.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}})),C.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),C.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),C.proxy=function(t,e){var i,n,s;if("string"==typeof e&&(i=t[e],e=t,t=i),y(t))return n=l.call(arguments,2),(s=function(){return t.apply(e||this,n.concat(l.call(arguments)))}).guid=t.guid=t.guid||C.guid++,s},C.holdReady=function(t){t?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=P,C.isFunction=y,C.isWindow=b,C.camelCase=X,C.type=w,C.now=Date.now,C.isNumeric=function(t){var e=C.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},void 0===(n=function(){return C}.apply(e,[]))||(t.exports=n);var Ze=i.jQuery,Je=i.$;return C.noConflict=function(t){return i.$===C&&(i.$=Je),t&&i.jQuery===C&&(i.jQuery=Ze),C},s||(i.jQuery=i.$=C),C}))},function(t,e,i){(function(e){var n,s=i(6),r=i(21),o=i(23),a=Array.prototype.slice,l={};n=void 0!==e&&e.console?e.console:"undefined"!=typeof window&&window.console?window.console:{};for(var u=[[function(){},"log"],[function(){n.log.apply(n,arguments)},"info"],[function(){n.log.apply(n,arguments)},"warn"],[function(){n.warn.apply(n,arguments)},"error"],[function(t){l[t]=o()},"time"],[function(t){var e=l[t];if(!e)throw new Error("No such label: "+t);var i=o()-e;n.log(t+": "+i+"ms")},"timeEnd"],[function(){var t=new Error;t.name="Trace",t.message=s.format.apply(null,arguments),n.error(t.stack)},"trace"],[function(t){n.log(s.inspect(t)+"\n")},"dir"],[function(t){if(!t){var e=a.call(arguments,1);r.ok(!1,s.format.apply(null,e))}},"assert"]],c=0;c<u.length;c++){var h=u[c],d=h[0],p=h[1];n[p]||(n[p]=d)}t.exports=n}).call(this,i(2))},function(t,e){var i;i=function(){return this}();try{i=i||new Function("return this")()}catch(t){"object"==typeof window&&(i=window)}t.exports=i},function(t,e,i){var n;!function(e,i){"use strict";"object"==typeof t.exports?t.exports=e.document?i(e,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return i(t)}:i(e)}("undefined"!=typeof window?window:this,(function(i,s){"use strict";var r=[],o=i.document,a=Object.getPrototypeOf,l=r.slice,u=r.concat,c=r.push,h=r.indexOf,d={},p=d.toString,f=d.hasOwnProperty,g=f.toString,m=g.call(Object),v={},y=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},b=function(t){return null!=t&&t===t.window},_={type:!0,src:!0,nonce:!0,noModule:!0};function x(t,e,i){var n,s,r=(i=i||o).createElement("script");if(r.text=t,e)for(n in _)(s=e[n]||e.getAttribute&&e.getAttribute(n))&&r.setAttribute(n,s);i.head.appendChild(r).parentNode.removeChild(r)}function w(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?d[p.call(t)]||"object":typeof t}var C="3.4.1",k=function(t,e){return new k.fn.init(t,e)},T=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function D(t){var e=!!t&&"length"in t&&t.length,i=w(t);return!y(t)&&!b(t)&&("array"===i||0===e||"number"==typeof e&&0<e&&e-1 in t)}k.fn=k.prototype={jquery:C,constructor:k,length:0,toArray:function(){return l.call(this)},get:function(t){return null==t?l.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=k.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return k.each(this,t)},map:function(t){return this.pushStack(k.map(this,(function(e,i){return t.call(e,i,e)})))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(0<=i&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:r.sort,splice:r.splice},k.extend=k.fn.extend=function(){var t,e,i,n,s,r,o=arguments[0]||{},a=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[a]||{},a++),"object"==typeof o||y(o)||(o={}),a===l&&(o=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)n=t[e],"__proto__"!==e&&o!==n&&(u&&n&&(k.isPlainObject(n)||(s=Array.isArray(n)))?(i=o[e],r=s&&!Array.isArray(i)?[]:s||k.isPlainObject(i)?i:{},s=!1,o[e]=k.extend(u,r,n)):void 0!==n&&(o[e]=n));return o},k.extend({expando:"jQuery"+(C+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==p.call(t)||(e=a(t))&&("function"!=typeof(i=f.call(e,"constructor")&&e.constructor)||g.call(i)!==m))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t,e){x(t,{nonce:e&&e.nonce})},each:function(t,e){var i,n=0;if(D(t))for(i=t.length;n<i&&!1!==e.call(t[n],n,t[n]);n++);else for(n in t)if(!1===e.call(t[n],n,t[n]))break;return t},trim:function(t){return null==t?"":(t+"").replace(T,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(D(Object(t))?k.merge(i,"string"==typeof t?[t]:t):c.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:h.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,s=t.length;n<i;n++)t[s++]=e[n];return t.length=s,t},grep:function(t,e,i){for(var n=[],s=0,r=t.length,o=!i;s<r;s++)!e(t[s],s)!==o&&n.push(t[s]);return n},map:function(t,e,i){var n,s,r=0,o=[];if(D(t))for(n=t.length;r<n;r++)null!=(s=e(t[r],r,i))&&o.push(s);else for(r in t)null!=(s=e(t[r],r,i))&&o.push(s);return u.apply([],o)},guid:1,support:v}),"function"==typeof Symbol&&(k.fn[Symbol.iterator]=r[Symbol.iterator]),k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(t,e){d["[object "+e+"]"]=e.toLowerCase()}));var S=function(t){var e,i,n,s,r,o,a,l,u,c,h,d,p,f,g,m,v,y,b,_="sizzle"+1*new Date,x=t.document,w=0,C=0,k=lt(),T=lt(),D=lt(),S=lt(),E=function(t,e){return t===e&&(h=!0),0},A={}.hasOwnProperty,P=[],I=P.pop,N=P.push,M=P.push,O=P.slice,H=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",j="[\\x20\\t\\r\\n\\f]",z="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",R="\\["+j+"*("+z+")(?:"+j+"*([*^$|!~]?=)"+j+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+z+"))|)"+j+"*\\]",q=":("+z+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+R+")*)|.*)\\)|)",F=new RegExp(j+"+","g"),W=new RegExp("^"+j+"+|((?:^|[^\\\\])(?:\\\\.)*)"+j+"+$","g"),B=new RegExp("^"+j+"*,"+j+"*"),$=new RegExp("^"+j+"*([>+~]|"+j+")"+j+"*"),Y=new RegExp(j+"|>"),V=new RegExp(q),U=new RegExp("^"+z+"$"),K={ID:new RegExp("^#("+z+")"),CLASS:new RegExp("^\\.("+z+")"),TAG:new RegExp("^("+z+"|[*])"),ATTR:new RegExp("^"+R),PSEUDO:new RegExp("^"+q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+j+"*(even|odd|(([+-]|)(\\d*)n|)"+j+"*(?:([+-]|)"+j+"*(\\d+)|))"+j+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+j+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+j+"*((?:-\\d)?\\d*)"+j+"*\\)|)(?=[^-]|$)","i")},X=/HTML$/i,G=/^(?:input|select|textarea|button)$/i,Q=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,J=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,tt=/[+~]/,et=new RegExp("\\\\([\\da-f]{1,6}"+j+"?|("+j+")|.)","ig"),it=function(t,e,i){var n="0x"+e-65536;return n!=n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},nt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,st=function(t,e){return e?"\0"===t?"ï¿½":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},rt=function(){d()},ot=_t((function(t){return!0===t.disabled&&"fieldset"===t.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{M.apply(P=O.call(x.childNodes),x.childNodes),P[x.childNodes.length].nodeType}catch(e){M={apply:P.length?function(t,e){N.apply(t,O.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}function at(t,e,n,s){var r,a,u,c,h,f,v,y=e&&e.ownerDocument,w=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==w&&9!==w&&11!==w)return n;if(!s&&((e?e.ownerDocument||e:x)!==p&&d(e),e=e||p,g)){if(11!==w&&(h=J.exec(t)))if(r=h[1]){if(9===w){if(!(u=e.getElementById(r)))return n;if(u.id===r)return n.push(u),n}else if(y&&(u=y.getElementById(r))&&b(e,u)&&u.id===r)return n.push(u),n}else{if(h[2])return M.apply(n,e.getElementsByTagName(t)),n;if((r=h[3])&&i.getElementsByClassName&&e.getElementsByClassName)return M.apply(n,e.getElementsByClassName(r)),n}if(i.qsa&&!S[t+" "]&&(!m||!m.test(t))&&(1!==w||"object"!==e.nodeName.toLowerCase())){if(v=t,y=e,1===w&&Y.test(t)){for((c=e.getAttribute("id"))?c=c.replace(nt,st):e.setAttribute("id",c=_),a=(f=o(t)).length;a--;)f[a]="#"+c+" "+bt(f[a]);v=f.join(","),y=tt.test(t)&&vt(e.parentNode)||e}try{return M.apply(n,y.querySelectorAll(v)),n}catch(e){S(t,!0)}finally{c===_&&e.removeAttribute("id")}}}return l(t.replace(W,"$1"),e,n,s)}function lt(){var t=[];return function e(i,s){return t.push(i+" ")>n.cacheLength&&delete e[t.shift()],e[i+" "]=s}}function ut(t){return t[_]=!0,t}function ct(t){var e=p.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function ht(t,e){for(var i=t.split("|"),s=i.length;s--;)n.attrHandle[i[s]]=e}function dt(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function pt(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function ft(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function gt(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ot(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function mt(t){return ut((function(e){return e=+e,ut((function(i,n){for(var s,r=t([],i.length,e),o=r.length;o--;)i[s=r[o]]&&(i[s]=!(n[s]=i[s]))}))}))}function vt(t){return t&&void 0!==t.getElementsByTagName&&t}for(e in i=at.support={},r=at.isXML=function(t){var e=t.namespaceURI,i=(t.ownerDocument||t).documentElement;return!X.test(e||i&&i.nodeName||"HTML")},d=at.setDocument=function(t){var e,s,o=t?t.ownerDocument||t:x;return o!==p&&9===o.nodeType&&o.documentElement&&(f=(p=o).documentElement,g=!r(p),x!==p&&(s=p.defaultView)&&s.top!==s&&(s.addEventListener?s.addEventListener("unload",rt,!1):s.attachEvent&&s.attachEvent("onunload",rt)),i.attributes=ct((function(t){return t.className="i",!t.getAttribute("className")})),i.getElementsByTagName=ct((function(t){return t.appendChild(p.createComment("")),!t.getElementsByTagName("*").length})),i.getElementsByClassName=Z.test(p.getElementsByClassName),i.getById=ct((function(t){return f.appendChild(t).id=_,!p.getElementsByName||!p.getElementsByName(_).length})),i.getById?(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){return t.getAttribute("id")===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i=e.getElementById(t);return i?[i]:[]}}):(n.filter.ID=function(t){var e=t.replace(et,it);return function(t){var i=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},n.find.ID=function(t,e){if(void 0!==e.getElementById&&g){var i,n,s,r=e.getElementById(t);if(r){if((i=r.getAttributeNode("id"))&&i.value===t)return[r];for(s=e.getElementsByName(t),n=0;r=s[n++];)if((i=r.getAttributeNode("id"))&&i.value===t)return[r]}return[]}}),n.find.TAG=i.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):i.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],s=0,r=e.getElementsByTagName(t);if("*"===t){for(;i=r[s++];)1===i.nodeType&&n.push(i);return n}return r},n.find.CLASS=i.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&g)return e.getElementsByClassName(t)},v=[],m=[],(i.qsa=Z.test(p.querySelectorAll))&&(ct((function(t){f.appendChild(t).innerHTML="<a id='"+_+"'></a><select id='"+_+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&m.push("[*^$]="+j+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||m.push("\\["+j+"*(?:value|"+L+")"),t.querySelectorAll("[id~="+_+"-]").length||m.push("~="),t.querySelectorAll(":checked").length||m.push(":checked"),t.querySelectorAll("a#"+_+"+*").length||m.push(".#.+[+~]")})),ct((function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=p.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&m.push("name"+j+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&m.push(":enabled",":disabled"),f.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&m.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),m.push(",.*:")}))),(i.matchesSelector=Z.test(y=f.matches||f.webkitMatchesSelector||f.mozMatchesSelector||f.oMatchesSelector||f.msMatchesSelector))&&ct((function(t){i.disconnectedMatch=y.call(t,"*"),y.call(t,"[s!='']:x"),v.push("!=",q)})),m=m.length&&new RegExp(m.join("|")),v=v.length&&new RegExp(v.join("|")),e=Z.test(f.compareDocumentPosition),b=e||Z.test(f.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},E=e?function(t,e){if(t===e)return h=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!i.sortDetached&&e.compareDocumentPosition(t)===n?t===p||t.ownerDocument===x&&b(x,t)?-1:e===p||e.ownerDocument===x&&b(x,e)?1:c?H(c,t)-H(c,e):0:4&n?-1:1)}:function(t,e){if(t===e)return h=!0,0;var i,n=0,s=t.parentNode,r=e.parentNode,o=[t],a=[e];if(!s||!r)return t===p?-1:e===p?1:s?-1:r?1:c?H(c,t)-H(c,e):0;if(s===r)return dt(t,e);for(i=t;i=i.parentNode;)o.unshift(i);for(i=e;i=i.parentNode;)a.unshift(i);for(;o[n]===a[n];)n++;return n?dt(o[n],a[n]):o[n]===x?-1:a[n]===x?1:0}),p},at.matches=function(t,e){return at(t,null,null,e)},at.matchesSelector=function(t,e){if((t.ownerDocument||t)!==p&&d(t),i.matchesSelector&&g&&!S[e+" "]&&(!v||!v.test(e))&&(!m||!m.test(e)))try{var n=y.call(t,e);if(n||i.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(t){S(e,!0)}return 0<at(e,p,null,[t]).length},at.contains=function(t,e){return(t.ownerDocument||t)!==p&&d(t),b(t,e)},at.attr=function(t,e){(t.ownerDocument||t)!==p&&d(t);var s=n.attrHandle[e.toLowerCase()],r=s&&A.call(n.attrHandle,e.toLowerCase())?s(t,e,!g):void 0;return void 0!==r?r:i.attributes||!g?t.getAttribute(e):(r=t.getAttributeNode(e))&&r.specified?r.value:null},at.escape=function(t){return(t+"").replace(nt,st)},at.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},at.uniqueSort=function(t){var e,n=[],s=0,r=0;if(h=!i.detectDuplicates,c=!i.sortStable&&t.slice(0),t.sort(E),h){for(;e=t[r++];)e===t[r]&&(s=n.push(r));for(;s--;)t.splice(n[s],1)}return c=null,t},s=at.getText=function(t){var e,i="",n=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=s(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[n++];)i+=s(e);return i},(n=at.selectors={cacheLength:50,createPseudo:ut,match:K,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(et,it),t[3]=(t[3]||t[4]||t[5]||"").replace(et,it),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||at.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&at.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return K.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&V.test(i)&&(e=o(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(et,it).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=k[t+" "];return e||(e=new RegExp("(^|"+j+")"+t+"("+j+"|$)"))&&k(t,(function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")}))},ATTR:function(t,e,i){return function(n){var s=at.attr(n,t);return null==s?"!="===e:!e||(s+="","="===e?s===i:"!="===e?s!==i:"^="===e?i&&0===s.indexOf(i):"*="===e?i&&-1<s.indexOf(i):"$="===e?i&&s.slice(-i.length)===i:"~="===e?-1<(" "+s.replace(F," ")+" ").indexOf(i):"|="===e&&(s===i||s.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,i,n,s){var r="nth"!==t.slice(0,3),o="last"!==t.slice(-4),a="of-type"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var u,c,h,d,p,f,g=r!==o?"nextSibling":"previousSibling",m=e.parentNode,v=a&&e.nodeName.toLowerCase(),y=!l&&!a,b=!1;if(m){if(r){for(;g;){for(d=e;d=d[g];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=g="only"===t&&!f&&"nextSibling"}return!0}if(f=[o?m.firstChild:m.lastChild],o&&y){for(b=(p=(u=(c=(h=(d=m)[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]||[])[0]===w&&u[1])&&u[2],d=p&&m.childNodes[p];d=++p&&d&&d[g]||(b=p=0)||f.pop();)if(1===d.nodeType&&++b&&d===e){c[t]=[w,p,b];break}}else if(y&&(b=p=(u=(c=(h=(d=e)[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]||[])[0]===w&&u[1]),!1===b)for(;(d=++p&&d&&d[g]||(b=p=0)||f.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&((c=(h=d[_]||(d[_]={}))[d.uniqueID]||(h[d.uniqueID]={}))[t]=[w,b]),d!==e)););return(b-=s)===n||b%n==0&&0<=b/n}}},PSEUDO:function(t,e){var i,s=n.pseudos[t]||n.setFilters[t.toLowerCase()]||at.error("unsupported pseudo: "+t);return s[_]?s(e):1<s.length?(i=[t,t,"",e],n.setFilters.hasOwnProperty(t.toLowerCase())?ut((function(t,i){for(var n,r=s(t,e),o=r.length;o--;)t[n=H(t,r[o])]=!(i[n]=r[o])})):function(t){return s(t,0,i)}):s}},pseudos:{not:ut((function(t){var e=[],i=[],n=a(t.replace(W,"$1"));return n[_]?ut((function(t,e,i,s){for(var r,o=n(t,null,s,[]),a=t.length;a--;)(r=o[a])&&(t[a]=!(e[a]=r))})):function(t,s,r){return e[0]=t,n(e,null,r,i),e[0]=null,!i.pop()}})),has:ut((function(t){return function(e){return 0<at(t,e).length}})),contains:ut((function(t){return t=t.replace(et,it),function(e){return-1<(e.textContent||s(e)).indexOf(t)}})),lang:ut((function(t){return U.test(t||"")||at.error("unsupported lang: "+t),t=t.replace(et,it).toLowerCase(),function(e){var i;do{if(i=g?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(i=i.toLowerCase())===t||0===i.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}})),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===f},focus:function(t){return t===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:gt(!1),disabled:gt(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!n.pseudos.empty(t)},header:function(t){return Q.test(t.nodeName)},input:function(t){return G.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:mt((function(){return[0]})),last:mt((function(t,e){return[e-1]})),eq:mt((function(t,e,i){return[i<0?i+e:i]})),even:mt((function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t})),odd:mt((function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t})),lt:mt((function(t,e,i){for(var n=i<0?i+e:e<i?e:i;0<=--n;)t.push(n);return t})),gt:mt((function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t}))}}).pseudos.nth=n.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})n.pseudos[e]=pt(e);for(e in{submit:!0,reset:!0})n.pseudos[e]=ft(e);function yt(){}function bt(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function _t(t,e,i){var n=e.dir,s=e.next,r=s||n,o=i&&"parentNode"===r,a=C++;return e.first?function(e,i,s){for(;e=e[n];)if(1===e.nodeType||o)return t(e,i,s);return!1}:function(e,i,l){var u,c,h,d=[w,a];if(l){for(;e=e[n];)if((1===e.nodeType||o)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||o)if(c=(h=e[_]||(e[_]={}))[e.uniqueID]||(h[e.uniqueID]={}),s&&s===e.nodeName.toLowerCase())e=e[n]||e;else{if((u=c[r])&&u[0]===w&&u[1]===a)return d[2]=u[2];if((c[r]=d)[2]=t(e,i,l))return!0}return!1}}function xt(t){return 1<t.length?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function wt(t,e,i,n,s){for(var r,o=[],a=0,l=t.length,u=null!=e;a<l;a++)(r=t[a])&&(i&&!i(r,n,s)||(o.push(r),u&&e.push(a)));return o}function Ct(t,e,i,n,s,r){return n&&!n[_]&&(n=Ct(n)),s&&!s[_]&&(s=Ct(s,r)),ut((function(r,o,a,l){var u,c,h,d=[],p=[],f=o.length,g=r||function(t,e,i){for(var n=0,s=e.length;n<s;n++)at(t,e[n],i);return i}(e||"*",a.nodeType?[a]:a,[]),m=!t||!r&&e?g:wt(g,d,t,a,l),v=i?s||(r?t:f||n)?[]:o:m;if(i&&i(m,v,a,l),n)for(u=wt(v,p),n(u,[],a,l),c=u.length;c--;)(h=u[c])&&(v[p[c]]=!(m[p[c]]=h));if(r){if(s||t){if(s){for(u=[],c=v.length;c--;)(h=v[c])&&u.push(m[c]=h);s(null,v=[],u,l)}for(c=v.length;c--;)(h=v[c])&&-1<(u=s?H(r,h):d[c])&&(r[u]=!(o[u]=h))}}else v=wt(v===o?v.splice(f,v.length):v),s?s(null,o,v,l):M.apply(o,v)}))}function kt(t){for(var e,i,s,r=t.length,o=n.relative[t[0].type],a=o||n.relative[" "],l=o?1:0,c=_t((function(t){return t===e}),a,!0),h=_t((function(t){return-1<H(e,t)}),a,!0),d=[function(t,i,n){var s=!o&&(n||i!==u)||((e=i).nodeType?c(t,i,n):h(t,i,n));return e=null,s}];l<r;l++)if(i=n.relative[t[l].type])d=[_t(xt(d),i)];else{if((i=n.filter[t[l].type].apply(null,t[l].matches))[_]){for(s=++l;s<r&&!n.relative[t[s].type];s++);return Ct(1<l&&xt(d),1<l&&bt(t.slice(0,l-1).concat({value:" "===t[l-2].type?"*":""})).replace(W,"$1"),i,l<s&&kt(t.slice(l,s)),s<r&&kt(t=t.slice(s)),s<r&&bt(t))}d.push(i)}return xt(d)}return yt.prototype=n.filters=n.pseudos,n.setFilters=new yt,o=at.tokenize=function(t,e){var i,s,r,o,a,l,u,c=T[t+" "];if(c)return e?0:c.slice(0);for(a=t,l=[],u=n.preFilter;a;){for(o in i&&!(s=B.exec(a))||(s&&(a=a.slice(s[0].length)||a),l.push(r=[])),i=!1,(s=$.exec(a))&&(i=s.shift(),r.push({value:i,type:s[0].replace(W," ")}),a=a.slice(i.length)),n.filter)!(s=K[o].exec(a))||u[o]&&!(s=u[o](s))||(i=s.shift(),r.push({value:i,type:o,matches:s}),a=a.slice(i.length));if(!i)break}return e?a.length:a?at.error(t):T(t,l).slice(0)},a=at.compile=function(t,e){var i,s,r,a,l,c,h=[],f=[],m=D[t+" "];if(!m){for(e||(e=o(t)),i=e.length;i--;)(m=kt(e[i]))[_]?h.push(m):f.push(m);(m=D(t,(s=f,a=0<(r=h).length,l=0<s.length,c=function(t,e,i,o,c){var h,f,m,v=0,y="0",b=t&&[],_=[],x=u,C=t||l&&n.find.TAG("*",c),k=w+=null==x?1:Math.random()||.1,T=C.length;for(c&&(u=e===p||e||c);y!==T&&null!=(h=C[y]);y++){if(l&&h){for(f=0,e||h.ownerDocument===p||(d(h),i=!g);m=s[f++];)if(m(h,e||p,i)){o.push(h);break}c&&(w=k)}a&&((h=!m&&h)&&v--,t&&b.push(h))}if(v+=y,a&&y!==v){for(f=0;m=r[f++];)m(b,_,e,i);if(t){if(0<v)for(;y--;)b[y]||_[y]||(_[y]=I.call(o));_=wt(_)}M.apply(o,_),c&&!t&&0<_.length&&1<v+r.length&&at.uniqueSort(o)}return c&&(w=k,u=x),b},a?ut(c):c))).selector=t}return m},l=at.select=function(t,e,i,s){var r,l,u,c,h,d="function"==typeof t&&t,p=!s&&o(t=d.selector||t);if(i=i||[],1===p.length){if(2<(l=p[0]=p[0].slice(0)).length&&"ID"===(u=l[0]).type&&9===e.nodeType&&g&&n.relative[l[1].type]){if(!(e=(n.find.ID(u.matches[0].replace(et,it),e)||[])[0]))return i;d&&(e=e.parentNode),t=t.slice(l.shift().value.length)}for(r=K.needsContext.test(t)?0:l.length;r--&&(u=l[r],!n.relative[c=u.type]);)if((h=n.find[c])&&(s=h(u.matches[0].replace(et,it),tt.test(l[0].type)&&vt(e.parentNode)||e))){if(l.splice(r,1),!(t=s.length&&bt(l)))return M.apply(i,s),i;break}}return(d||a(t,p))(s,e,!g,i,!e||tt.test(t)&&vt(e.parentNode)||e),i},i.sortStable=_.split("").sort(E).join("")===_,i.detectDuplicates=!!h,d(),i.sortDetached=ct((function(t){return 1&t.compareDocumentPosition(p.createElement("fieldset"))})),ct((function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")}))||ht("type|href|height|width",(function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)})),i.attributes&&ct((function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")}))||ht("value",(function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue})),ct((function(t){return null==t.getAttribute("disabled")}))||ht(L,(function(t,e,i){var n;if(!i)return!0===t[e]?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null})),at}(i);k.find=S,k.expr=S.selectors,k.expr[":"]=k.expr.pseudos,k.uniqueSort=k.unique=S.uniqueSort,k.text=S.getText,k.isXMLDoc=S.isXML,k.contains=S.contains,k.escapeSelector=S.escape;var E=function(t,e,i){for(var n=[],s=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(s&&k(t).is(i))break;n.push(t)}return n},A=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},P=k.expr.match.needsContext;function I(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}var N=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function M(t,e,i){return y(e)?k.grep(t,(function(t,n){return!!e.call(t,n,t)!==i})):e.nodeType?k.grep(t,(function(t){return t===e!==i})):"string"!=typeof e?k.grep(t,(function(t){return-1<h.call(e,t)!==i})):k.filter(e,t,i)}k.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?k.find.matchesSelector(n,t)?[n]:[]:k.find.matches(t,k.grep(e,(function(t){return 1===t.nodeType})))},k.fn.extend({find:function(t){var e,i,n=this.length,s=this;if("string"!=typeof t)return this.pushStack(k(t).filter((function(){for(e=0;e<n;e++)if(k.contains(s[e],this))return!0})));for(i=this.pushStack([]),e=0;e<n;e++)k.find(t,s[e],i);return 1<n?k.uniqueSort(i):i},filter:function(t){return this.pushStack(M(this,t||[],!1))},not:function(t){return this.pushStack(M(this,t||[],!0))},is:function(t){return!!M(this,"string"==typeof t&&P.test(t)?k(t):t||[],!1).length}});var O,H=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(k.fn.init=function(t,e,i){var n,s;if(!t)return this;if(i=i||O,"string"==typeof t){if(!(n="<"===t[0]&&">"===t[t.length-1]&&3<=t.length?[null,t,null]:H.exec(t))||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof k?e[0]:e,k.merge(this,k.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:o,!0)),N.test(n[1])&&k.isPlainObject(e))for(n in e)y(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return(s=o.getElementById(n[2]))&&(this[0]=s,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):y(t)?void 0!==i.ready?i.ready(t):t(k):k.makeArray(t,this)}).prototype=k.fn,O=k(o);var L=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function z(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}k.fn.extend({has:function(t){var e=k(t,this),i=e.length;return this.filter((function(){for(var t=0;t<i;t++)if(k.contains(this,e[t]))return!0}))},closest:function(t,e){var i,n=0,s=this.length,r=[],o="string"!=typeof t&&k(t);if(!P.test(t))for(;n<s;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(o?-1<o.index(i):1===i.nodeType&&k.find.matchesSelector(i,t))){r.push(i);break}return this.pushStack(1<r.length?k.uniqueSort(r):r)},index:function(t){return t?"string"==typeof t?h.call(k(t),this[0]):h.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),k.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return E(t,"parentNode")},parentsUntil:function(t,e,i){return E(t,"parentNode",i)},next:function(t){return z(t,"nextSibling")},prev:function(t){return z(t,"previousSibling")},nextAll:function(t){return E(t,"nextSibling")},prevAll:function(t){return E(t,"previousSibling")},nextUntil:function(t,e,i){return E(t,"nextSibling",i)},prevUntil:function(t,e,i){return E(t,"previousSibling",i)},siblings:function(t){return A((t.parentNode||{}).firstChild,t)},children:function(t){return A(t.firstChild)},contents:function(t){return void 0!==t.contentDocument?t.contentDocument:(I(t,"template")&&(t=t.content||t),k.merge([],t.childNodes))}},(function(t,e){k.fn[t]=function(i,n){var s=k.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=k.filter(n,s)),1<this.length&&(j[t]||k.uniqueSort(s),L.test(t)&&s.reverse()),this.pushStack(s)}}));var R=/[^\x20\t\r\n\f]+/g;function q(t){return t}function F(t){throw t}function W(t,e,i,n){var s;try{t&&y(s=t.promise)?s.call(t).done(e).fail(i):t&&y(s=t.then)?s.call(t,e,i):e.apply(void 0,[t].slice(n))}catch(t){i.apply(void 0,[t])}}k.Callbacks=function(t){var e,i;t="string"==typeof t?(e=t,i={},k.each(e.match(R)||[],(function(t,e){i[e]=!0})),i):k.extend({},t);var n,s,r,o,a=[],l=[],u=-1,c=function(){for(o=o||t.once,r=n=!0;l.length;u=-1)for(s=l.shift();++u<a.length;)!1===a[u].apply(s[0],s[1])&&t.stopOnFalse&&(u=a.length,s=!1);t.memory||(s=!1),n=!1,o&&(a=s?[]:"")},h={add:function(){return a&&(s&&!n&&(u=a.length-1,l.push(s)),function e(i){k.each(i,(function(i,n){y(n)?t.unique&&h.has(n)||a.push(n):n&&n.length&&"string"!==w(n)&&e(n)}))}(arguments),s&&!n&&c()),this},remove:function(){return k.each(arguments,(function(t,e){for(var i;-1<(i=k.inArray(e,a,i));)a.splice(i,1),i<=u&&u--})),this},has:function(t){return t?-1<k.inArray(t,a):0<a.length},empty:function(){return a&&(a=[]),this},disable:function(){return o=l=[],a=s="",this},disabled:function(){return!a},lock:function(){return o=l=[],s||n||(a=s=""),this},locked:function(){return!!o},fireWith:function(t,e){return o||(e=[t,(e=e||[]).slice?e.slice():e],l.push(e),n||c()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!r}};return h},k.extend({Deferred:function(t){var e=[["notify","progress",k.Callbacks("memory"),k.Callbacks("memory"),2],["resolve","done",k.Callbacks("once memory"),k.Callbacks("once memory"),0,"resolved"],["reject","fail",k.Callbacks("once memory"),k.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return r.done(arguments).fail(arguments),this},catch:function(t){return s.then(null,t)},pipe:function(){var t=arguments;return k.Deferred((function(i){k.each(e,(function(e,n){var s=y(t[n[4]])&&t[n[4]];r[n[1]]((function(){var t=s&&s.apply(this,arguments);t&&y(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[n[0]+"With"](this,s?[t]:arguments)}))})),t=null})).promise()},then:function(t,n,s){var r=0;function o(t,e,n,s){return function(){var a=this,l=arguments,u=function(){var i,u;if(!(t<r)){if((i=n.apply(a,l))===e.promise())throw new TypeError("Thenable self-resolution");u=i&&("object"==typeof i||"function"==typeof i)&&i.then,y(u)?s?u.call(i,o(r,e,q,s),o(r,e,F,s)):(r++,u.call(i,o(r,e,q,s),o(r,e,F,s),o(r,e,q,e.notifyWith))):(n!==q&&(a=void 0,l=[i]),(s||e.resolveWith)(a,l))}},c=s?u:function(){try{u()}catch(i){k.Deferred.exceptionHook&&k.Deferred.exceptionHook(i,c.stackTrace),r<=t+1&&(n!==F&&(a=void 0,l=[i]),e.rejectWith(a,l))}};t?c():(k.Deferred.getStackHook&&(c.stackTrace=k.Deferred.getStackHook()),i.setTimeout(c))}}return k.Deferred((function(i){e[0][3].add(o(0,i,y(s)?s:q,i.notifyWith)),e[1][3].add(o(0,i,y(t)?t:q)),e[2][3].add(o(0,i,y(n)?n:F))})).promise()},promise:function(t){return null!=t?k.extend(t,s):s}},r={};return k.each(e,(function(t,i){var o=i[2],a=i[5];s[i[1]]=o.add,a&&o.add((function(){n=a}),e[3-t][2].disable,e[3-t][3].disable,e[0][2].lock,e[0][3].lock),o.add(i[3].fire),r[i[0]]=function(){return r[i[0]+"With"](this===r?void 0:this,arguments),this},r[i[0]+"With"]=o.fireWith})),s.promise(r),t&&t.call(r,r),r},when:function(t){var e=arguments.length,i=e,n=Array(i),s=l.call(arguments),r=k.Deferred(),o=function(t){return function(i){n[t]=this,s[t]=1<arguments.length?l.call(arguments):i,--e||r.resolveWith(n,s)}};if(e<=1&&(W(t,r.done(o(i)).resolve,r.reject,!e),"pending"===r.state()||y(s[i]&&s[i].then)))return r.then();for(;i--;)W(s[i],o(i),r.reject);return r.promise()}});var B=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;k.Deferred.exceptionHook=function(t,e){i.console&&i.console.warn&&t&&B.test(t.name)&&i.console.warn("jQuery.Deferred exception: "+t.message,t.stack,e)},k.readyException=function(t){i.setTimeout((function(){throw t}))};var $=k.Deferred();function Y(){o.removeEventListener("DOMContentLoaded",Y),i.removeEventListener("load",Y),k.ready()}k.fn.ready=function(t){return $.then(t).catch((function(t){k.readyException(t)})),this},k.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--k.readyWait:k.isReady)||(k.isReady=!0)!==t&&0<--k.readyWait||$.resolveWith(o,[k])}}),k.ready.then=$.then,"complete"===o.readyState||"loading"!==o.readyState&&!o.documentElement.doScroll?i.setTimeout(k.ready):(o.addEventListener("DOMContentLoaded",Y),i.addEventListener("load",Y));var V=function(t,e,i,n,s,r,o){var a=0,l=t.length,u=null==i;if("object"===w(i))for(a in s=!0,i)V(t,e,a,i[a],!0,r,o);else if(void 0!==n&&(s=!0,y(n)||(o=!0),u&&(o?(e.call(t,n),e=null):(u=e,e=function(t,e,i){return u.call(k(t),i)})),e))for(;a<l;a++)e(t[a],i,o?n:n.call(t[a],a,e(t[a],i)));return s?t:u?e.call(t):l?e(t[0],i):r},U=/^-ms-/,K=/-([a-z])/g;function X(t,e){return e.toUpperCase()}function G(t){return t.replace(U,"ms-").replace(K,X)}var Q=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};function Z(){this.expando=k.expando+Z.uid++}Z.uid=1,Z.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Q(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,s=this.cache(t);if("string"==typeof e)s[G(e)]=i;else for(n in e)s[G(n)]=e[n];return s},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][G(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){i=(e=Array.isArray(e)?e.map(G):(e=G(e))in n?[e]:e.match(R)||[]).length;for(;i--;)delete n[e[i]]}(void 0===e||k.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!k.isEmptyObject(e)}};var J=new Z,tt=new Z,et=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,it=/[A-Z]/g;function nt(t,e,i){var n,s;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(it,"-$&").toLowerCase(),"string"==typeof(i=t.getAttribute(n))){try{i="true"===(s=i)||"false"!==s&&("null"===s?null:s===+s+""?+s:et.test(s)?JSON.parse(s):s)}catch(t){}tt.set(t,e,i)}else i=void 0;return i}k.extend({hasData:function(t){return tt.hasData(t)||J.hasData(t)},data:function(t,e,i){return tt.access(t,e,i)},removeData:function(t,e){tt.remove(t,e)},_data:function(t,e,i){return J.access(t,e,i)},_removeData:function(t,e){J.remove(t,e)}}),k.fn.extend({data:function(t,e){var i,n,s,r=this[0],o=r&&r.attributes;if(void 0===t){if(this.length&&(s=tt.get(r),1===r.nodeType&&!J.get(r,"hasDataAttrs"))){for(i=o.length;i--;)o[i]&&0===(n=o[i].name).indexOf("data-")&&(n=G(n.slice(5)),nt(r,n,s[n]));J.set(r,"hasDataAttrs",!0)}return s}return"object"==typeof t?this.each((function(){tt.set(this,t)})):V(this,(function(e){var i;if(r&&void 0===e)return void 0!==(i=tt.get(r,t))?i:void 0!==(i=nt(r,t))?i:void 0;this.each((function(){tt.set(this,t,e)}))}),null,e,1<arguments.length,null,!0)},removeData:function(t){return this.each((function(){tt.remove(this,t)}))}}),k.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=J.get(t,e),i&&(!n||Array.isArray(i)?n=J.access(t,e,k.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=k.queue(t,e),n=i.length,s=i.shift(),r=k._queueHooks(t,e);"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===e&&i.unshift("inprogress"),delete r.stop,s.call(t,(function(){k.dequeue(t,e)}),r)),!n&&r&&r.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return J.get(t,i)||J.access(t,i,{empty:k.Callbacks("once memory").add((function(){J.remove(t,[e+"queue",i])}))})}}),k.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?k.queue(this[0],t):void 0===e?this:this.each((function(){var i=k.queue(this,t,e);k._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&k.dequeue(this,t)}))},dequeue:function(t){return this.each((function(){k.dequeue(this,t)}))},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,s=k.Deferred(),r=this,o=this.length,a=function(){--n||s.resolveWith(r,[r])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";o--;)(i=J.get(r[o],t+"queueHooks"))&&i.empty&&(n++,i.empty.add(a));return a(),s.promise(e)}});var st=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,rt=new RegExp("^(?:([+-])=|)("+st+")([a-z%]*)$","i"),ot=["Top","Right","Bottom","Left"],at=o.documentElement,lt=function(t){return k.contains(t.ownerDocument,t)},ut={composed:!0};at.getRootNode&&(lt=function(t){return k.contains(t.ownerDocument,t)||t.getRootNode(ut)===t.ownerDocument});var ct=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&lt(t)&&"none"===k.css(t,"display")},ht=function(t,e,i,n){var s,r,o={};for(r in e)o[r]=t.style[r],t.style[r]=e[r];for(r in s=i.apply(t,n||[]),e)t.style[r]=o[r];return s};function dt(t,e,i,n){var s,r,o=20,a=n?function(){return n.cur()}:function(){return k.css(t,e,"")},l=a(),u=i&&i[3]||(k.cssNumber[e]?"":"px"),c=t.nodeType&&(k.cssNumber[e]||"px"!==u&&+l)&&rt.exec(k.css(t,e));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;o--;)k.style(t,e,c+u),(1-r)*(1-(r=a()/l||.5))<=0&&(o=0),c/=r;c*=2,k.style(t,e,c+u),i=i||[]}return i&&(c=+c||+l||0,s=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=u,n.start=c,n.end=s)),s}var pt={};function ft(t,e){for(var i,n,s,r,o,a,l,u=[],c=0,h=t.length;c<h;c++)(n=t[c]).style&&(i=n.style.display,e?("none"===i&&(u[c]=J.get(n,"display")||null,u[c]||(n.style.display="")),""===n.style.display&&ct(n)&&(u[c]=(l=o=r=void 0,o=(s=n).ownerDocument,a=s.nodeName,(l=pt[a])||(r=o.body.appendChild(o.createElement(a)),l=k.css(r,"display"),r.parentNode.removeChild(r),"none"===l&&(l="block"),pt[a]=l)))):"none"!==i&&(u[c]="none",J.set(n,"display",i)));for(c=0;c<h;c++)null!=u[c]&&(t[c].style.display=u[c]);return t}k.fn.extend({show:function(){return ft(this,!0)},hide:function(){return ft(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each((function(){ct(this)?k(this).show():k(this).hide()}))}});var gt=/^(?:checkbox|radio)$/i,mt=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,vt=/^$|^module$|\/(?:java|ecma)script/i,yt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function bt(t,e){var i;return i=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&I(t,e)?k.merge([t],i):i}function _t(t,e){for(var i=0,n=t.length;i<n;i++)J.set(t[i],"globalEval",!e||J.get(e[i],"globalEval"))}yt.optgroup=yt.option,yt.tbody=yt.tfoot=yt.colgroup=yt.caption=yt.thead,yt.th=yt.td;var xt,wt,Ct=/<|&#?\w+;/;function kt(t,e,i,n,s){for(var r,o,a,l,u,c,h=e.createDocumentFragment(),d=[],p=0,f=t.length;p<f;p++)if((r=t[p])||0===r)if("object"===w(r))k.merge(d,r.nodeType?[r]:r);else if(Ct.test(r)){for(o=o||h.appendChild(e.createElement("div")),a=(mt.exec(r)||["",""])[1].toLowerCase(),l=yt[a]||yt._default,o.innerHTML=l[1]+k.htmlPrefilter(r)+l[2],c=l[0];c--;)o=o.lastChild;k.merge(d,o.childNodes),(o=h.firstChild).textContent=""}else d.push(e.createTextNode(r));for(h.textContent="",p=0;r=d[p++];)if(n&&-1<k.inArray(r,n))s&&s.push(r);else if(u=lt(r),o=bt(h.appendChild(r),"script"),u&&_t(o),i)for(c=0;r=o[c++];)vt.test(r.type||"")&&i.push(r);return h}xt=o.createDocumentFragment().appendChild(o.createElement("div")),(wt=o.createElement("input")).setAttribute("type","radio"),wt.setAttribute("checked","checked"),wt.setAttribute("name","t"),xt.appendChild(wt),v.checkClone=xt.cloneNode(!0).cloneNode(!0).lastChild.checked,xt.innerHTML="<textarea>x</textarea>",v.noCloneChecked=!!xt.cloneNode(!0).lastChild.defaultValue;var Tt=/^key/,Dt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,St=/^([^.]*)(?:\.(.+)|)/;function Et(){return!0}function At(){return!1}function Pt(t,e){return t===function(){try{return o.activeElement}catch(t){}}()==("focus"===e)}function It(t,e,i,n,s,r){var o,a;if("object"==typeof e){for(a in"string"!=typeof i&&(n=n||i,i=void 0),e)It(t,a,i,n,e[a],r);return t}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),!1===s)s=At;else if(!s)return t;return 1===r&&(o=s,(s=function(t){return k().off(t),o.apply(this,arguments)}).guid=o.guid||(o.guid=k.guid++)),t.each((function(){k.event.add(this,e,s,n,i)}))}function Nt(t,e,i){i?(J.set(t,e,!1),k.event.add(t,e,{namespace:!1,handler:function(t){var n,s,r=J.get(this,e);if(1&t.isTrigger&&this[e]){if(r.length)(k.event.special[e]||{}).delegateType&&t.stopPropagation();else if(r=l.call(arguments),J.set(this,e,r),n=i(this,e),this[e](),r!==(s=J.get(this,e))||n?J.set(this,e,!1):s={},r!==s)return t.stopImmediatePropagation(),t.preventDefault(),s.value}else r.length&&(J.set(this,e,{value:k.event.trigger(k.extend(r[0],k.Event.prototype),r.slice(1),this)}),t.stopImmediatePropagation())}})):void 0===J.get(t,e)&&k.event.add(t,e,Et)}k.event={global:{},add:function(t,e,i,n,s){var r,o,a,l,u,c,h,d,p,f,g,m=J.get(t);if(m)for(i.handler&&(i=(r=i).handler,s=r.selector),s&&k.find.matchesSelector(at,s),i.guid||(i.guid=k.guid++),(l=m.events)||(l=m.events={}),(o=m.handle)||(o=m.handle=function(e){return void 0!==k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),u=(e=(e||"").match(R)||[""]).length;u--;)p=g=(a=St.exec(e[u])||[])[1],f=(a[2]||"").split(".").sort(),p&&(h=k.event.special[p]||{},p=(s?h.delegateType:h.bindType)||p,h=k.event.special[p]||{},c=k.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&k.expr.match.needsContext.test(s),namespace:f.join(".")},r),(d=l[p])||((d=l[p]=[]).delegateCount=0,h.setup&&!1!==h.setup.call(t,n,f,o)||t.addEventListener&&t.addEventListener(p,o)),h.add&&(h.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,c):d.push(c),k.event.global[p]=!0)},remove:function(t,e,i,n,s){var r,o,a,l,u,c,h,d,p,f,g,m=J.hasData(t)&&J.get(t);if(m&&(l=m.events)){for(u=(e=(e||"").match(R)||[""]).length;u--;)if(p=g=(a=St.exec(e[u])||[])[1],f=(a[2]||"").split(".").sort(),p){for(h=k.event.special[p]||{},d=l[p=(n?h.delegateType:h.bindType)||p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=r=d.length;r--;)c=d[r],!s&&g!==c.origType||i&&i.guid!==c.guid||a&&!a.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(d.splice(r,1),c.selector&&d.delegateCount--,h.remove&&h.remove.call(t,c));o&&!d.length&&(h.teardown&&!1!==h.teardown.call(t,f,m.handle)||k.removeEvent(t,p,m.handle),delete l[p])}else for(p in l)k.event.remove(t,p+e[u],i,n,!0);k.isEmptyObject(l)&&J.remove(t,"handle events")}},dispatch:function(t){var e,i,n,s,r,o,a=k.event.fix(t),l=new Array(arguments.length),u=(J.get(this,"events")||{})[a.type]||[],c=k.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,a)){for(o=k.event.handlers.call(this,a,u),e=0;(s=o[e++])&&!a.isPropagationStopped();)for(a.currentTarget=s.elem,i=0;(r=s.handlers[i++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!1!==r.namespace&&!a.rnamespace.test(r.namespace)||(a.handleObj=r,a.data=r.data,void 0!==(n=((k.event.special[r.origType]||{}).handle||r.handler).apply(s.elem,l))&&!1===(a.result=n)&&(a.preventDefault(),a.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,a),a.result}},handlers:function(t,e){var i,n,s,r,o,a=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&1<=t.button))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||!0!==u.disabled)){for(r=[],o={},i=0;i<l;i++)void 0===o[s=(n=e[i]).selector+" "]&&(o[s]=n.needsContext?-1<k(s,this).index(u):k.find(s,this,null,[u]).length),o[s]&&r.push(n);r.length&&a.push({elem:u,handlers:r})}return u=this,l<e.length&&a.push({elem:u,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(k.Event.prototype,t,{enumerable:!0,configurable:!0,get:y(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[k.expando]?t:new k.Event(t)},special:{load:{noBubble:!0},click:{setup:function(t){var e=this||t;return gt.test(e.type)&&e.click&&I(e,"input")&&Nt(e,"click",Et),!1},trigger:function(t){var e=this||t;return gt.test(e.type)&&e.click&&I(e,"input")&&Nt(e,"click"),!0},_default:function(t){var e=t.target;return gt.test(e.type)&&e.click&&I(e,"input")&&J.get(e,"click")||I(e,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},k.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},k.Event=function(t,e){if(!(this instanceof k.Event))return new k.Event(t,e);t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?Et:At,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&k.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:At,isPropagationStopped:At,isImmediatePropagationStopped:At,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=Et,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=Et,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=Et,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},k.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Tt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Dt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},k.event.addProp),k.each({focus:"focusin",blur:"focusout"},(function(t,e){k.event.special[t]={setup:function(){return Nt(this,t,Pt),!1},trigger:function(){return Nt(this,t),!0},delegateType:e}})),k.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(t,e){k.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=t.relatedTarget,s=t.handleObj;return n&&(n===this||k.contains(this,n))||(t.type=s.origType,i=s.handler.apply(this,arguments),t.type=e),i}}})),k.fn.extend({on:function(t,e,i,n){return It(this,t,e,i,n)},one:function(t,e,i,n){return It(this,t,e,i,n,1)},off:function(t,e,i){var n,s;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,k(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(s in t)this.off(s,e,t[s]);return this}return!1!==e&&"function"!=typeof e||(i=e,e=void 0),!1===i&&(i=At),this.each((function(){k.event.remove(this,t,i,e)}))}});var Mt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Ot=/<script|<style|<link/i,Ht=/checked\s*(?:[^=]|=\s*.checked.)/i,Lt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function jt(t,e){return I(t,"table")&&I(11!==e.nodeType?e:e.firstChild,"tr")&&k(t).children("tbody")[0]||t}function zt(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function Rt(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function qt(t,e){var i,n,s,r,o,a,l,u;if(1===e.nodeType){if(J.hasData(t)&&(r=J.access(t),o=J.set(e,r),u=r.events))for(s in delete o.handle,o.events={},u)for(i=0,n=u[s].length;i<n;i++)k.event.add(e,s,u[s][i]);tt.hasData(t)&&(a=tt.access(t),l=k.extend({},a),tt.set(e,l))}}function Ft(t,e,i,n){e=u.apply([],e);var s,r,o,a,l,c,h=0,d=t.length,p=d-1,f=e[0],g=y(f);if(g||1<d&&"string"==typeof f&&!v.checkClone&&Ht.test(f))return t.each((function(s){var r=t.eq(s);g&&(e[0]=f.call(this,s,r.html())),Ft(r,e,i,n)}));if(d&&(r=(s=kt(e,t[0].ownerDocument,!1,t,n)).firstChild,1===s.childNodes.length&&(s=r),r||n)){for(a=(o=k.map(bt(s,"script"),zt)).length;h<d;h++)l=s,h!==p&&(l=k.clone(l,!0,!0),a&&k.merge(o,bt(l,"script"))),i.call(t[h],l,h);if(a)for(c=o[o.length-1].ownerDocument,k.map(o,Rt),h=0;h<a;h++)l=o[h],vt.test(l.type||"")&&!J.access(l,"globalEval")&&k.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?k._evalUrl&&!l.noModule&&k._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):x(l.textContent.replace(Lt,""),l,c))}return t}function Wt(t,e,i){for(var n,s=e?k.filter(e,t):t,r=0;null!=(n=s[r]);r++)i||1!==n.nodeType||k.cleanData(bt(n)),n.parentNode&&(i&&lt(n)&&_t(bt(n,"script")),n.parentNode.removeChild(n));return t}k.extend({htmlPrefilter:function(t){return t.replace(Mt,"<$1></$2>")},clone:function(t,e,i){var n,s,r,o,a,l,u,c=t.cloneNode(!0),h=lt(t);if(!(v.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||k.isXMLDoc(t)))for(o=bt(c),n=0,s=(r=bt(t)).length;n<s;n++)a=r[n],"input"===(u=(l=o[n]).nodeName.toLowerCase())&&gt.test(a.type)?l.checked=a.checked:"input"!==u&&"textarea"!==u||(l.defaultValue=a.defaultValue);if(e)if(i)for(r=r||bt(t),o=o||bt(c),n=0,s=r.length;n<s;n++)qt(r[n],o[n]);else qt(t,c);return 0<(o=bt(c,"script")).length&&_t(o,!h&&bt(t,"script")),c},cleanData:function(t){for(var e,i,n,s=k.event.special,r=0;void 0!==(i=t[r]);r++)if(Q(i)){if(e=i[J.expando]){if(e.events)for(n in e.events)s[n]?k.event.remove(i,n):k.removeEvent(i,n,e.handle);i[J.expando]=void 0}i[tt.expando]&&(i[tt.expando]=void 0)}}}),k.fn.extend({detach:function(t){return Wt(this,t,!0)},remove:function(t){return Wt(this,t)},text:function(t){return V(this,(function(t){return void 0===t?k.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)}))}),null,t,arguments.length)},append:function(){return Ft(this,arguments,(function(t){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||jt(this,t).appendChild(t)}))},prepend:function(){return Ft(this,arguments,(function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=jt(this,t);e.insertBefore(t,e.firstChild)}}))},before:function(){return Ft(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this)}))},after:function(){return Ft(this,arguments,(function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)}))},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(k.cleanData(bt(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map((function(){return k.clone(this,t,e)}))},html:function(t){return V(this,(function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Ot.test(t)&&!yt[(mt.exec(t)||["",""])[1].toLowerCase()]){t=k.htmlPrefilter(t);try{for(;i<n;i++)1===(e=this[i]||{}).nodeType&&(k.cleanData(bt(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)}),null,t,arguments.length)},replaceWith:function(){var t=[];return Ft(this,arguments,(function(e){var i=this.parentNode;k.inArray(this,t)<0&&(k.cleanData(bt(this)),i&&i.replaceChild(e,this))}),t)}}),k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(t,e){k.fn[t]=function(t){for(var i,n=[],s=k(t),r=s.length-1,o=0;o<=r;o++)i=o===r?this:this.clone(!0),k(s[o])[e](i),c.apply(n,i.get());return this.pushStack(n)}}));var Bt=new RegExp("^("+st+")(?!px)[a-z%]+$","i"),$t=function(t){var e=t.ownerDocument.defaultView;return e&&e.opener||(e=i),e.getComputedStyle(t)},Yt=new RegExp(ot.join("|"),"i");function Vt(t,e,i){var n,s,r,o,a=t.style;return(i=i||$t(t))&&(""!==(o=i.getPropertyValue(e)||i[e])||lt(t)||(o=k.style(t,e)),!v.pixelBoxStyles()&&Bt.test(o)&&Yt.test(e)&&(n=a.width,s=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=o,o=i.width,a.width=n,a.minWidth=s,a.maxWidth=r)),void 0!==o?o+"":o}function Ut(t,e){return{get:function(){if(!t())return(this.get=e).apply(this,arguments);delete this.get}}}!function(){function t(){if(c){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",at.appendChild(u).appendChild(c);var t=i.getComputedStyle(c);n="1%"!==t.top,l=12===e(t.marginLeft),c.style.right="60%",a=36===e(t.right),s=36===e(t.width),c.style.position="absolute",r=12===e(c.offsetWidth/3),at.removeChild(u),c=null}}function e(t){return Math.round(parseFloat(t))}var n,s,r,a,l,u=o.createElement("div"),c=o.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",v.clearCloneStyle="content-box"===c.style.backgroundClip,k.extend(v,{boxSizingReliable:function(){return t(),s},pixelBoxStyles:function(){return t(),a},pixelPosition:function(){return t(),n},reliableMarginLeft:function(){return t(),l},scrollboxSize:function(){return t(),r}}))}();var Kt=["Webkit","Moz","ms"],Xt=o.createElement("div").style,Gt={};function Qt(t){return k.cssProps[t]||Gt[t]||(t in Xt?t:Gt[t]=function(t){for(var e=t[0].toUpperCase()+t.slice(1),i=Kt.length;i--;)if((t=Kt[i]+e)in Xt)return t}(t)||t)}var Zt=/^(none|table(?!-c[ea]).+)/,Jt=/^--/,te={position:"absolute",visibility:"hidden",display:"block"},ee={letterSpacing:"0",fontWeight:"400"};function ie(t,e,i){var n=rt.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function ne(t,e,i,n,s,r){var o="width"===e?1:0,a=0,l=0;if(i===(n?"border":"content"))return 0;for(;o<4;o+=2)"margin"===i&&(l+=k.css(t,i+ot[o],!0,s)),n?("content"===i&&(l-=k.css(t,"padding"+ot[o],!0,s)),"margin"!==i&&(l-=k.css(t,"border"+ot[o]+"Width",!0,s))):(l+=k.css(t,"padding"+ot[o],!0,s),"padding"!==i?l+=k.css(t,"border"+ot[o]+"Width",!0,s):a+=k.css(t,"border"+ot[o]+"Width",!0,s));return!n&&0<=r&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-r-l-a-.5))||0),l}function se(t,e,i){var n=$t(t),s=(!v.boxSizingReliable()||i)&&"border-box"===k.css(t,"boxSizing",!1,n),r=s,o=Vt(t,e,n),a="offset"+e[0].toUpperCase()+e.slice(1);if(Bt.test(o)){if(!i)return o;o="auto"}return(!v.boxSizingReliable()&&s||"auto"===o||!parseFloat(o)&&"inline"===k.css(t,"display",!1,n))&&t.getClientRects().length&&(s="border-box"===k.css(t,"boxSizing",!1,n),(r=a in t)&&(o=t[a])),(o=parseFloat(o)||0)+ne(t,e,i||(s?"border":"content"),r,n,o)+"px"}function re(t,e,i,n,s){return new re.prototype.init(t,e,i,n,s)}k.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=Vt(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var s,r,o,a=G(e),l=Jt.test(e),u=t.style;if(l||(e=Qt(a)),o=k.cssHooks[e]||k.cssHooks[a],void 0===i)return o&&"get"in o&&void 0!==(s=o.get(t,!1,n))?s:u[e];"string"==(r=typeof i)&&(s=rt.exec(i))&&s[1]&&(i=dt(t,e,s),r="number"),null!=i&&i==i&&("number"!==r||l||(i+=s&&s[3]||(k.cssNumber[a]?"":"px")),v.clearCloneStyle||""!==i||0!==e.indexOf("background")||(u[e]="inherit"),o&&"set"in o&&void 0===(i=o.set(t,i,n))||(l?u.setProperty(e,i):u[e]=i))}},css:function(t,e,i,n){var s,r,o,a=G(e);return Jt.test(e)||(e=Qt(a)),(o=k.cssHooks[e]||k.cssHooks[a])&&"get"in o&&(s=o.get(t,!0,i)),void 0===s&&(s=Vt(t,e,n)),"normal"===s&&e in ee&&(s=ee[e]),""===i||i?(r=parseFloat(s),!0===i||isFinite(r)?r||0:s):s}}),k.each(["height","width"],(function(t,e){k.cssHooks[e]={get:function(t,i,n){if(i)return!Zt.test(k.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?se(t,e,n):ht(t,te,(function(){return se(t,e,n)}))},set:function(t,i,n){var s,r=$t(t),o=!v.scrollboxSize()&&"absolute"===r.position,a=(o||n)&&"border-box"===k.css(t,"boxSizing",!1,r),l=n?ne(t,e,n,a,r):0;return a&&o&&(l-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(r[e])-ne(t,e,"border",!1,r)-.5)),l&&(s=rt.exec(i))&&"px"!==(s[3]||"px")&&(t.style[e]=i,i=k.css(t,e)),ie(0,i,l)}}})),k.cssHooks.marginLeft=Ut(v.reliableMarginLeft,(function(t,e){if(e)return(parseFloat(Vt(t,"marginLeft"))||t.getBoundingClientRect().left-ht(t,{marginLeft:0},(function(){return t.getBoundingClientRect().left})))+"px"})),k.each({margin:"",padding:"",border:"Width"},(function(t,e){k.cssHooks[t+e]={expand:function(i){for(var n=0,s={},r="string"==typeof i?i.split(" "):[i];n<4;n++)s[t+ot[n]+e]=r[n]||r[n-2]||r[0];return s}},"margin"!==t&&(k.cssHooks[t+e].set=ie)})),k.fn.extend({css:function(t,e){return V(this,(function(t,e,i){var n,s,r={},o=0;if(Array.isArray(e)){for(n=$t(t),s=e.length;o<s;o++)r[e[o]]=k.css(t,e[o],!1,n);return r}return void 0!==i?k.style(t,e,i):k.css(t,e)}),t,e,1<arguments.length)}}),((k.Tween=re).prototype={constructor:re,init:function(t,e,i,n,s,r){this.elem=t,this.prop=i,this.easing=s||k.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=r||(k.cssNumber[i]?"":"px")},cur:function(){var t=re.propHooks[this.prop];return t&&t.get?t.get(this):re.propHooks._default.get(this)},run:function(t){var e,i=re.propHooks[this.prop];return this.options.duration?this.pos=e=k.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):re.propHooks._default.set(this),this}}).init.prototype=re.prototype,(re.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=k.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){k.fx.step[t.prop]?k.fx.step[t.prop](t):1!==t.elem.nodeType||!k.cssHooks[t.prop]&&null==t.elem.style[Qt(t.prop)]?t.elem[t.prop]=t.now:k.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=re.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},k.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},k.fx=re.prototype.init,k.fx.step={};var oe,ae,le,ue,ce=/^(?:toggle|show|hide)$/,he=/queueHooks$/;function de(){ae&&(!1===o.hidden&&i.requestAnimationFrame?i.requestAnimationFrame(de):i.setTimeout(de,k.fx.interval),k.fx.tick())}function pe(){return i.setTimeout((function(){oe=void 0})),oe=Date.now()}function fe(t,e){var i,n=0,s={height:t};for(e=e?1:0;n<4;n+=2-e)s["margin"+(i=ot[n])]=s["padding"+i]=t;return e&&(s.opacity=s.width=t),s}function ge(t,e,i){for(var n,s=(me.tweeners[e]||[]).concat(me.tweeners["*"]),r=0,o=s.length;r<o;r++)if(n=s[r].call(i,e,t))return n}function me(t,e,i){var n,s,r=0,o=me.prefilters.length,a=k.Deferred().always((function(){delete l.elem})),l=function(){if(s)return!1;for(var e=oe||pe(),i=Math.max(0,u.startTime+u.duration-e),n=1-(i/u.duration||0),r=0,o=u.tweens.length;r<o;r++)u.tweens[r].run(n);return a.notifyWith(t,[u,n,i]),n<1&&o?i:(o||a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u]),!1)},u=a.promise({elem:t,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},i),originalProperties:e,originalOptions:i,startTime:oe||pe(),duration:i.duration,tweens:[],createTween:function(e,i){var n=k.Tween(t,u.opts,e,i,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(n),n},stop:function(e){var i=0,n=e?u.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)u.tweens[i].run(1);return e?(a.notifyWith(t,[u,1,0]),a.resolveWith(t,[u,e])):a.rejectWith(t,[u,e]),this}}),c=u.props;for(function(t,e){var i,n,s,r,o;for(i in t)if(s=e[n=G(i)],r=t[i],Array.isArray(r)&&(s=r[1],r=t[i]=r[0]),i!==n&&(t[n]=r,delete t[i]),(o=k.cssHooks[n])&&"expand"in o)for(i in r=o.expand(r),delete t[n],r)i in t||(t[i]=r[i],e[i]=s);else e[n]=s}(c,u.opts.specialEasing);r<o;r++)if(n=me.prefilters[r].call(u,t,c,u.opts))return y(n.stop)&&(k._queueHooks(u.elem,u.opts.queue).stop=n.stop.bind(n)),n;return k.map(c,ge,u),y(u.opts.start)&&u.opts.start.call(t,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),k.fx.timer(k.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u}k.Animation=k.extend(me,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return dt(i.elem,t,rt.exec(e),i),i}]},tweener:function(t,e){y(t)?(e=t,t=["*"]):t=t.match(R);for(var i,n=0,s=t.length;n<s;n++)i=t[n],me.tweeners[i]=me.tweeners[i]||[],me.tweeners[i].unshift(e)},prefilters:[function(t,e,i){var n,s,r,o,a,l,u,c,h="width"in e||"height"in e,d=this,p={},f=t.style,g=t.nodeType&&ct(t),m=J.get(t,"fxshow");for(n in i.queue||(null==(o=k._queueHooks(t,"fx")).unqueued&&(o.unqueued=0,a=o.empty.fire,o.empty.fire=function(){o.unqueued||a()}),o.unqueued++,d.always((function(){d.always((function(){o.unqueued--,k.queue(t,"fx").length||o.empty.fire()}))}))),e)if(s=e[n],ce.test(s)){if(delete e[n],r=r||"toggle"===s,s===(g?"hide":"show")){if("show"!==s||!m||void 0===m[n])continue;g=!0}p[n]=m&&m[n]||k.style(t,n)}if((l=!k.isEmptyObject(e))||!k.isEmptyObject(p))for(n in h&&1===t.nodeType&&(i.overflow=[f.overflow,f.overflowX,f.overflowY],null==(u=m&&m.display)&&(u=J.get(t,"display")),"none"===(c=k.css(t,"display"))&&(u?c=u:(ft([t],!0),u=t.style.display||u,c=k.css(t,"display"),ft([t]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===k.css(t,"float")&&(l||(d.done((function(){f.display=u})),null==u&&(c=f.display,u="none"===c?"":c)),f.display="inline-block")),i.overflow&&(f.overflow="hidden",d.always((function(){f.overflow=i.overflow[0],f.overflowX=i.overflow[1],f.overflowY=i.overflow[2]}))),l=!1,p)l||(m?"hidden"in m&&(g=m.hidden):m=J.access(t,"fxshow",{display:u}),r&&(m.hidden=!g),g&&ft([t],!0),d.done((function(){for(n in g||ft([t]),J.remove(t,"fxshow"),p)k.style(t,n,p[n])}))),l=ge(g?m[n]:0,n,d),n in m||(m[n]=l.start,g&&(l.end=l.start,l.start=0))}],prefilter:function(t,e){e?me.prefilters.unshift(t):me.prefilters.push(t)}}),k.speed=function(t,e,i){var n=t&&"object"==typeof t?k.extend({},t):{complete:i||!i&&e||y(t)&&t,duration:t,easing:i&&e||e&&!y(e)&&e};return k.fx.off?n.duration=0:"number"!=typeof n.duration&&(n.duration in k.fx.speeds?n.duration=k.fx.speeds[n.duration]:n.duration=k.fx.speeds._default),null!=n.queue&&!0!==n.queue||(n.queue="fx"),n.old=n.complete,n.complete=function(){y(n.old)&&n.old.call(this),n.queue&&k.dequeue(this,n.queue)},n},k.fn.extend({fadeTo:function(t,e,i,n){return this.filter(ct).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=k.isEmptyObject(t),r=k.speed(e,i,n),o=function(){var e=me(this,k.extend({},t),r);(s||J.get(this,"finish"))&&e.stop(!0)};return o.finish=o,s||!1===r.queue?this.each(o):this.queue(r.queue,o)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&!1!==t&&this.queue(t||"fx",[]),this.each((function(){var e=!0,s=null!=t&&t+"queueHooks",r=k.timers,o=J.get(this);if(s)o[s]&&o[s].stop&&n(o[s]);else for(s in o)o[s]&&o[s].stop&&he.test(s)&&n(o[s]);for(s=r.length;s--;)r[s].elem!==this||null!=t&&r[s].queue!==t||(r[s].anim.stop(i),e=!1,r.splice(s,1));!e&&i||k.dequeue(this,t)}))},finish:function(t){return!1!==t&&(t=t||"fx"),this.each((function(){var e,i=J.get(this),n=i[t+"queue"],s=i[t+"queueHooks"],r=k.timers,o=n?n.length:0;for(i.finish=!0,k.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===t&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish}))}}),k.each(["toggle","show","hide"],(function(t,e){var i=k.fn[e];k.fn[e]=function(t,n,s){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(fe(e,!0),t,n,s)}})),k.each({slideDown:fe("show"),slideUp:fe("hide"),slideToggle:fe("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(t,e){k.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}})),k.timers=[],k.fx.tick=function(){var t,e=0,i=k.timers;for(oe=Date.now();e<i.length;e++)(t=i[e])()||i[e]!==t||i.splice(e--,1);i.length||k.fx.stop(),oe=void 0},k.fx.timer=function(t){k.timers.push(t),k.fx.start()},k.fx.interval=13,k.fx.start=function(){ae||(ae=!0,de())},k.fx.stop=function(){ae=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(t,e){return t=k.fx&&k.fx.speeds[t]||t,e=e||"fx",this.queue(e,(function(e,n){var s=i.setTimeout(e,t);n.stop=function(){i.clearTimeout(s)}}))},le=o.createElement("input"),ue=o.createElement("select").appendChild(o.createElement("option")),le.type="checkbox",v.checkOn=""!==le.value,v.optSelected=ue.selected,(le=o.createElement("input")).value="t",le.type="radio",v.radioValue="t"===le.value;var ve,ye=k.expr.attrHandle;k.fn.extend({attr:function(t,e){return V(this,k.attr,t,e,1<arguments.length)},removeAttr:function(t){return this.each((function(){k.removeAttr(this,t)}))}}),k.extend({attr:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===t.getAttribute?k.prop(t,e,i):(1===r&&k.isXMLDoc(t)||(s=k.attrHooks[e.toLowerCase()]||(k.expr.match.bool.test(e)?ve:void 0)),void 0!==i?null===i?void k.removeAttr(t,e):s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:(t.setAttribute(e,i+""),i):s&&"get"in s&&null!==(n=s.get(t,e))?n:null==(n=k.find.attr(t,e))?void 0:n)},attrHooks:{type:{set:function(t,e){if(!v.radioValue&&"radio"===e&&I(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,s=e&&e.match(R);if(s&&1===t.nodeType)for(;i=s[n++];)t.removeAttribute(i)}}),ve={set:function(t,e,i){return!1===e?k.removeAttr(t,i):t.setAttribute(i,i),i}},k.each(k.expr.match.bool.source.match(/\w+/g),(function(t,e){var i=ye[e]||k.find.attr;ye[e]=function(t,e,n){var s,r,o=e.toLowerCase();return n||(r=ye[o],ye[o]=s,s=null!=i(t,e,n)?o:null,ye[o]=r),s}}));var be=/^(?:input|select|textarea|button)$/i,_e=/^(?:a|area)$/i;function xe(t){return(t.match(R)||[]).join(" ")}function we(t){return t.getAttribute&&t.getAttribute("class")||""}function Ce(t){return Array.isArray(t)?t:"string"==typeof t&&t.match(R)||[]}k.fn.extend({prop:function(t,e){return V(this,k.prop,t,e,1<arguments.length)},removeProp:function(t){return this.each((function(){delete this[k.propFix[t]||t]}))}}),k.extend({prop:function(t,e,i){var n,s,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&k.isXMLDoc(t)||(e=k.propFix[e]||e,s=k.propHooks[e]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:t[e]=i:s&&"get"in s&&null!==(n=s.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=k.find.attr(t,"tabindex");return e?parseInt(e,10):be.test(t.nodeName)||_e.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),v.optSelected||(k.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),k.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){k.propFix[this.toLowerCase()]=this})),k.fn.extend({addClass:function(t){var e,i,n,s,r,o,a,l=0;if(y(t))return this.each((function(e){k(this).addClass(t.call(this,e,we(this)))}));if((e=Ce(t)).length)for(;i=this[l++];)if(s=we(i),n=1===i.nodeType&&" "+xe(s)+" "){for(o=0;r=e[o++];)n.indexOf(" "+r+" ")<0&&(n+=r+" ");s!==(a=xe(n))&&i.setAttribute("class",a)}return this},removeClass:function(t){var e,i,n,s,r,o,a,l=0;if(y(t))return this.each((function(e){k(this).removeClass(t.call(this,e,we(this)))}));if(!arguments.length)return this.attr("class","");if((e=Ce(t)).length)for(;i=this[l++];)if(s=we(i),n=1===i.nodeType&&" "+xe(s)+" "){for(o=0;r=e[o++];)for(;-1<n.indexOf(" "+r+" ");)n=n.replace(" "+r+" "," ");s!==(a=xe(n))&&i.setAttribute("class",a)}return this},toggleClass:function(t,e){var i=typeof t,n="string"===i||Array.isArray(t);return"boolean"==typeof e&&n?e?this.addClass(t):this.removeClass(t):y(t)?this.each((function(i){k(this).toggleClass(t.call(this,i,we(this),e),e)})):this.each((function(){var e,s,r,o;if(n)for(s=0,r=k(this),o=Ce(t);e=o[s++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==i||((e=we(this))&&J.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":J.get(this,"__className__")||""))}))},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&-1<(" "+xe(we(i))+" ").indexOf(e))return!0;return!1}});var ke=/\r/g;k.fn.extend({val:function(t){var e,i,n,s=this[0];return arguments.length?(n=y(t),this.each((function(i){var s;1===this.nodeType&&(null==(s=n?t.call(this,i,k(this).val()):t)?s="":"number"==typeof s?s+="":Array.isArray(s)&&(s=k.map(s,(function(t){return null==t?"":t+""}))),(e=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,s,"value")||(this.value=s))}))):s?(e=k.valHooks[s.type]||k.valHooks[s.nodeName.toLowerCase()])&&"get"in e&&void 0!==(i=e.get(s,"value"))?i:"string"==typeof(i=s.value)?i.replace(ke,""):null==i?"":i:void 0}}),k.extend({valHooks:{option:{get:function(t){var e=k.find.attr(t,"value");return null!=e?e:xe(k.text(t))}},select:{get:function(t){var e,i,n,s=t.options,r=t.selectedIndex,o="select-one"===t.type,a=o?null:[],l=o?r+1:s.length;for(n=r<0?l:o?r:0;n<l;n++)if(((i=s[n]).selected||n===r)&&!i.disabled&&(!i.parentNode.disabled||!I(i.parentNode,"optgroup"))){if(e=k(i).val(),o)return e;a.push(e)}return a},set:function(t,e){for(var i,n,s=t.options,r=k.makeArray(e),o=s.length;o--;)((n=s[o]).selected=-1<k.inArray(k.valHooks.option.get(n),r))&&(i=!0);return i||(t.selectedIndex=-1),r}}}}),k.each(["radio","checkbox"],(function(){k.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=-1<k.inArray(k(t).val(),e)}},v.checkOn||(k.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})})),v.focusin="onfocusin"in i;var Te=/^(?:focusinfocus|focusoutblur)$/,De=function(t){t.stopPropagation()};k.extend(k.event,{trigger:function(t,e,n,s){var r,a,l,u,c,h,d,p,g=[n||o],m=f.call(t,"type")?t.type:t,v=f.call(t,"namespace")?t.namespace.split("."):[];if(a=p=l=n=n||o,3!==n.nodeType&&8!==n.nodeType&&!Te.test(m+k.event.triggered)&&(-1<m.indexOf(".")&&(m=(v=m.split(".")).shift(),v.sort()),c=m.indexOf(":")<0&&"on"+m,(t=t[k.expando]?t:new k.Event(m,"object"==typeof t&&t)).isTrigger=s?2:3,t.namespace=v.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+v.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),e=null==e?[t]:k.makeArray(e,[t]),d=k.event.special[m]||{},s||!d.trigger||!1!==d.trigger.apply(n,e))){if(!s&&!d.noBubble&&!b(n)){for(u=d.delegateType||m,Te.test(u+m)||(a=a.parentNode);a;a=a.parentNode)g.push(a),l=a;l===(n.ownerDocument||o)&&g.push(l.defaultView||l.parentWindow||i)}for(r=0;(a=g[r++])&&!t.isPropagationStopped();)p=a,t.type=1<r?u:d.bindType||m,(h=(J.get(a,"events")||{})[t.type]&&J.get(a,"handle"))&&h.apply(a,e),(h=c&&a[c])&&h.apply&&Q(a)&&(t.result=h.apply(a,e),!1===t.result&&t.preventDefault());return t.type=m,s||t.isDefaultPrevented()||d._default&&!1!==d._default.apply(g.pop(),e)||!Q(n)||c&&y(n[m])&&!b(n)&&((l=n[c])&&(n[c]=null),k.event.triggered=m,t.isPropagationStopped()&&p.addEventListener(m,De),n[m](),t.isPropagationStopped()&&p.removeEventListener(m,De),k.event.triggered=void 0,l&&(n[c]=l)),t.result}},simulate:function(t,e,i){var n=k.extend(new k.Event,i,{type:t,isSimulated:!0});k.event.trigger(n,null,e)}}),k.fn.extend({trigger:function(t,e){return this.each((function(){k.event.trigger(t,e,this)}))},triggerHandler:function(t,e){var i=this[0];if(i)return k.event.trigger(t,e,i,!0)}}),v.focusin||k.each({focus:"focusin",blur:"focusout"},(function(t,e){var i=function(t){k.event.simulate(e,t.target,k.event.fix(t))};k.event.special[e]={setup:function(){var n=this.ownerDocument||this,s=J.access(n,e);s||n.addEventListener(t,i,!0),J.access(n,e,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=J.access(n,e)-1;s?J.access(n,e,s):(n.removeEventListener(t,i,!0),J.remove(n,e))}}}));var Se=i.location,Ee=Date.now(),Ae=/\?/;k.parseXML=function(t){var e;if(!t||"string"!=typeof t)return null;try{e=(new i.DOMParser).parseFromString(t,"text/xml")}catch(t){e=void 0}return e&&!e.getElementsByTagName("parsererror").length||k.error("Invalid XML: "+t),e};var Pe=/\[\]$/,Ie=/\r?\n/g,Ne=/^(?:submit|button|image|reset|file)$/i,Me=/^(?:input|select|textarea|keygen)/i;function Oe(t,e,i,n){var s;if(Array.isArray(e))k.each(e,(function(e,s){i||Pe.test(t)?n(t,s):Oe(t+"["+("object"==typeof s&&null!=s?e:"")+"]",s,i,n)}));else if(i||"object"!==w(e))n(t,e);else for(s in e)Oe(t+"["+s+"]",e[s],i,n)}k.param=function(t,e){var i,n=[],s=function(t,e){var i=y(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(null==t)return"";if(Array.isArray(t)||t.jquery&&!k.isPlainObject(t))k.each(t,(function(){s(this.name,this.value)}));else for(i in t)Oe(i,t[i],e,s);return n.join("&")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var t=k.prop(this,"elements");return t?k.makeArray(t):this})).filter((function(){var t=this.type;return this.name&&!k(this).is(":disabled")&&Me.test(this.nodeName)&&!Ne.test(t)&&(this.checked||!gt.test(t))})).map((function(t,e){var i=k(this).val();return null==i?null:Array.isArray(i)?k.map(i,(function(t){return{name:e.name,value:t.replace(Ie,"\r\n")}})):{name:e.name,value:i.replace(Ie,"\r\n")}})).get()}});var He=/%20/g,Le=/#.*$/,je=/([?&])_=[^&]*/,ze=/^(.*?):[ \t]*([^\r\n]*)$/gm,Re=/^(?:GET|HEAD)$/,qe=/^\/\//,Fe={},We={},Be="*/".concat("*"),$e=o.createElement("a");function Ye(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,s=0,r=e.toLowerCase().match(R)||[];if(y(i))for(;n=r[s++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function Ve(t,e,i,n){var s={},r=t===We;function o(a){var l;return s[a]=!0,k.each(t[a]||[],(function(t,a){var u=a(e,i,n);return"string"!=typeof u||r||s[u]?r?!(l=u):void 0:(e.dataTypes.unshift(u),o(u),!1)})),l}return o(e.dataTypes[0])||!s["*"]&&o("*")}function Ue(t,e){var i,n,s=k.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((s[i]?t:n||(n={}))[i]=e[i]);return n&&k.extend(!0,t,n),t}$e.href=Se.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Se.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Se.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Be,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Ue(Ue(t,k.ajaxSettings),e):Ue(k.ajaxSettings,t)},ajaxPrefilter:Ye(Fe),ajaxTransport:Ye(We),ajax:function(t,e){"object"==typeof t&&(e=t,t=void 0),e=e||{};var n,s,r,a,l,u,c,h,d,p,f=k.ajaxSetup({},e),g=f.context||f,m=f.context&&(g.nodeType||g.jquery)?k(g):k.event,v=k.Deferred(),y=k.Callbacks("once memory"),b=f.statusCode||{},_={},x={},w="canceled",C={readyState:0,getResponseHeader:function(t){var e;if(c){if(!a)for(a={};e=ze.exec(r);)a[e[1].toLowerCase()+" "]=(a[e[1].toLowerCase()+" "]||[]).concat(e[2]);e=a[t.toLowerCase()+" "]}return null==e?null:e.join(", ")},getAllResponseHeaders:function(){return c?r:null},setRequestHeader:function(t,e){return null==c&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,_[t]=e),this},overrideMimeType:function(t){return null==c&&(f.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)C.always(t[C.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||w;return n&&n.abort(e),T(0,e),this}};if(v.promise(C),f.url=((t||f.url||Se.href)+"").replace(qe,Se.protocol+"//"),f.type=e.method||e.type||f.method||f.type,f.dataTypes=(f.dataType||"*").toLowerCase().match(R)||[""],null==f.crossDomain){u=o.createElement("a");try{u.href=f.url,u.href=u.href,f.crossDomain=$e.protocol+"//"+$e.host!=u.protocol+"//"+u.host}catch(t){f.crossDomain=!0}}if(f.data&&f.processData&&"string"!=typeof f.data&&(f.data=k.param(f.data,f.traditional)),Ve(Fe,f,e,C),c)return C;for(d in(h=k.event&&f.global)&&0==k.active++&&k.event.trigger("ajaxStart"),f.type=f.type.toUpperCase(),f.hasContent=!Re.test(f.type),s=f.url.replace(Le,""),f.hasContent?f.data&&f.processData&&0===(f.contentType||"").indexOf("application/x-www-form-urlencoded")&&(f.data=f.data.replace(He,"+")):(p=f.url.slice(s.length),f.data&&(f.processData||"string"==typeof f.data)&&(s+=(Ae.test(s)?"&":"?")+f.data,delete f.data),!1===f.cache&&(s=s.replace(je,"$1"),p=(Ae.test(s)?"&":"?")+"_="+Ee+++p),f.url=s+p),f.ifModified&&(k.lastModified[s]&&C.setRequestHeader("If-Modified-Since",k.lastModified[s]),k.etag[s]&&C.setRequestHeader("If-None-Match",k.etag[s])),(f.data&&f.hasContent&&!1!==f.contentType||e.contentType)&&C.setRequestHeader("Content-Type",f.contentType),C.setRequestHeader("Accept",f.dataTypes[0]&&f.accepts[f.dataTypes[0]]?f.accepts[f.dataTypes[0]]+("*"!==f.dataTypes[0]?", "+Be+"; q=0.01":""):f.accepts["*"]),f.headers)C.setRequestHeader(d,f.headers[d]);if(f.beforeSend&&(!1===f.beforeSend.call(g,C,f)||c))return C.abort();if(w="abort",y.add(f.complete),C.done(f.success),C.fail(f.error),n=Ve(We,f,e,C)){if(C.readyState=1,h&&m.trigger("ajaxSend",[C,f]),c)return C;f.async&&0<f.timeout&&(l=i.setTimeout((function(){C.abort("timeout")}),f.timeout));try{c=!1,n.send(_,T)}catch(t){if(c)throw t;T(-1,t)}}else T(-1,"No Transport");function T(t,e,o,a){var u,d,p,_,x,w=e;c||(c=!0,l&&i.clearTimeout(l),n=void 0,r=a||"",C.readyState=0<t?4:0,u=200<=t&&t<300||304===t,o&&(_=function(t,e,i){for(var n,s,r,o,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){r=s;break}o||(o=s)}r=r||o}if(r)return r!==l[0]&&l.unshift(r),i[r]}(f,C,o)),_=function(t,e,i,n){var s,r,o,a,l,u={},c=t.dataTypes.slice();if(c[1])for(o in t.converters)u[o.toLowerCase()]=t.converters[o];for(r=c.shift();r;)if(t.responseFields[r]&&(i[t.responseFields[r]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=r,r=c.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(o=u[l+" "+r]||u["* "+r]))for(s in u)if((a=s.split(" "))[1]===r&&(o=u[l+" "+a[0]]||u["* "+a[0]])){!0===o?o=u[s]:!0!==u[s]&&(r=a[0],c.unshift(a[1]));break}if(!0!==o)if(o&&t.throws)e=o(e);else try{e=o(e)}catch(t){return{state:"parsererror",error:o?t:"No conversion from "+l+" to "+r}}}return{state:"success",data:e}}(f,_,C,u),u?(f.ifModified&&((x=C.getResponseHeader("Last-Modified"))&&(k.lastModified[s]=x),(x=C.getResponseHeader("etag"))&&(k.etag[s]=x)),204===t||"HEAD"===f.type?w="nocontent":304===t?w="notmodified":(w=_.state,d=_.data,u=!(p=_.error))):(p=w,!t&&w||(w="error",t<0&&(t=0))),C.status=t,C.statusText=(e||w)+"",u?v.resolveWith(g,[d,w,C]):v.rejectWith(g,[C,w,p]),C.statusCode(b),b=void 0,h&&m.trigger(u?"ajaxSuccess":"ajaxError",[C,f,u?d:p]),y.fireWith(g,[C,w]),h&&(m.trigger("ajaxComplete",[C,f]),--k.active||k.event.trigger("ajaxStop")))}return C},getJSON:function(t,e,i){return k.get(t,e,i,"json")},getScript:function(t,e){return k.get(t,void 0,e,"script")}}),k.each(["get","post"],(function(t,e){k[e]=function(t,i,n,s){return y(i)&&(s=s||n,n=i,i=void 0),k.ajax(k.extend({url:t,type:e,dataType:s,data:i,success:n},k.isPlainObject(t)&&t))}})),k._evalUrl=function(t,e){return k.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(t){k.globalEval(t,e)}})},k.fn.extend({wrapAll:function(t){var e;return this[0]&&(y(t)&&(t=t.call(this[0])),e=k(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map((function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t})).append(this)),this},wrapInner:function(t){return y(t)?this.each((function(e){k(this).wrapInner(t.call(this,e))})):this.each((function(){var e=k(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)}))},wrap:function(t){var e=y(t);return this.each((function(i){k(this).wrapAll(e?t.call(this,i):t)}))},unwrap:function(t){return this.parent(t).not("body").each((function(){k(this).replaceWith(this.childNodes)})),this}}),k.expr.pseudos.hidden=function(t){return!k.expr.pseudos.visible(t)},k.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},k.ajaxSettings.xhr=function(){try{return new i.XMLHttpRequest}catch(t){}};var Ke={0:200,1223:204},Xe=k.ajaxSettings.xhr();v.cors=!!Xe&&"withCredentials"in Xe,v.ajax=Xe=!!Xe,k.ajaxTransport((function(t){var e,n;if(v.cors||Xe&&!t.crossDomain)return{send:function(s,r){var o,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(o in t.xhrFields)a[o]=t.xhrFields[o];for(o in t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest"),s)a.setRequestHeader(o,s[o]);e=function(t){return function(){e&&(e=n=a.onload=a.onerror=a.onabort=a.ontimeout=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?r(0,"error"):r(a.status,a.statusText):r(Ke[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=e(),n=a.onerror=a.ontimeout=e("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&i.setTimeout((function(){e&&n()}))},e=e("abort");try{a.send(t.hasContent&&t.data||null)}catch(s){if(e)throw s}},abort:function(){e&&e()}}})),k.ajaxPrefilter((function(t){t.crossDomain&&(t.contents.script=!1)})),k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return k.globalEval(t),t}}}),k.ajaxPrefilter("script",(function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")})),k.ajaxTransport("script",(function(t){var e,i;if(t.crossDomain||t.scriptAttrs)return{send:function(n,s){e=k("<script>").attr(t.scriptAttrs||{}).prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&s("error"===t.type?404:200,t.type)}),o.head.appendChild(e[0])},abort:function(){i&&i()}}}));var Ge,Qe=[],Ze=/(=)\?(?=&|$)|\?\?/;k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Qe.pop()||k.expando+"_"+Ee++;return this[t]=!0,t}}),k.ajaxPrefilter("json jsonp",(function(t,e,n){var s,r,o,a=!1!==t.jsonp&&(Ze.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ze.test(t.data)&&"data");if(a||"jsonp"===t.dataTypes[0])return s=t.jsonpCallback=y(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Ze,"$1"+s):!1!==t.jsonp&&(t.url+=(Ae.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return o||k.error(s+" was not called"),o[0]},t.dataTypes[0]="json",r=i[s],i[s]=function(){o=arguments},n.always((function(){void 0===r?k(i).removeProp(s):i[s]=r,t[s]&&(t.jsonpCallback=e.jsonpCallback,Qe.push(s)),o&&y(r)&&r(o[0]),o=r=void 0})),"script"})),v.createHTMLDocument=((Ge=o.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Ge.childNodes.length),k.parseHTML=function(t,e,i){return"string"!=typeof t?[]:("boolean"==typeof e&&(i=e,e=!1),e||(v.createHTMLDocument?((n=(e=o.implementation.createHTMLDocument("")).createElement("base")).href=o.location.href,e.head.appendChild(n)):e=o),r=!i&&[],(s=N.exec(t))?[e.createElement(s[1])]:(s=kt([t],e,r),r&&r.length&&k(r).remove(),k.merge([],s.childNodes)));var n,s,r},k.fn.load=function(t,e,i){var n,s,r,o=this,a=t.indexOf(" ");return-1<a&&(n=xe(t.slice(a)),t=t.slice(0,a)),y(e)?(i=e,e=void 0):e&&"object"==typeof e&&(s="POST"),0<o.length&&k.ajax({url:t,type:s||"GET",dataType:"html",data:e}).done((function(t){r=arguments,o.html(n?k("<div>").append(k.parseHTML(t)).find(n):t)})).always(i&&function(t,e){o.each((function(){i.apply(this,r||[t.responseText,e,t])}))}),this},k.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(t,e){k.fn[e]=function(t){return this.on(e,t)}})),k.expr.pseudos.animated=function(t){return k.grep(k.timers,(function(e){return t===e.elem})).length},k.offset={setOffset:function(t,e,i){var n,s,r,o,a,l,u=k.css(t,"position"),c=k(t),h={};"static"===u&&(t.style.position="relative"),a=c.offset(),r=k.css(t,"top"),l=k.css(t,"left"),("absolute"===u||"fixed"===u)&&-1<(r+l).indexOf("auto")?(o=(n=c.position()).top,s=n.left):(o=parseFloat(r)||0,s=parseFloat(l)||0),y(e)&&(e=e.call(t,i,k.extend({},a))),null!=e.top&&(h.top=e.top-a.top+o),null!=e.left&&(h.left=e.left-a.left+s),"using"in e?e.using.call(t,h):c.css(h)}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each((function(e){k.offset.setOffset(this,t,e)}));var e,i,n=this[0];return n?n.getClientRects().length?(e=n.getBoundingClientRect(),i=n.ownerDocument.defaultView,{top:e.top+i.pageYOffset,left:e.left+i.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,i,n=this[0],s={top:0,left:0};if("fixed"===k.css(n,"position"))e=n.getBoundingClientRect();else{for(e=this.offset(),i=n.ownerDocument,t=n.offsetParent||i.documentElement;t&&(t===i.body||t===i.documentElement)&&"static"===k.css(t,"position");)t=t.parentNode;t&&t!==n&&1===t.nodeType&&((s=k(t).offset()).top+=k.css(t,"borderTopWidth",!0),s.left+=k.css(t,"borderLeftWidth",!0))}return{top:e.top-s.top-k.css(n,"marginTop",!0),left:e.left-s.left-k.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var t=this.offsetParent;t&&"static"===k.css(t,"position");)t=t.offsetParent;return t||at}))}}),k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(t,e){var i="pageYOffset"===e;k.fn[t]=function(n){return V(this,(function(t,n,s){var r;if(b(t)?r=t:9===t.nodeType&&(r=t.defaultView),void 0===s)return r?r[e]:t[n];r?r.scrollTo(i?r.pageXOffset:s,i?s:r.pageYOffset):t[n]=s}),t,n,arguments.length)}})),k.each(["top","left"],(function(t,e){k.cssHooks[e]=Ut(v.pixelPosition,(function(t,i){if(i)return i=Vt(t,e),Bt.test(i)?k(t).position()[e]+"px":i}))})),k.each({Height:"height",Width:"width"},(function(t,e){k.each({padding:"inner"+t,content:e,"":"outer"+t},(function(i,n){k.fn[n]=function(s,r){var o=arguments.length&&(i||"boolean"!=typeof s),a=i||(!0===s||!0===r?"margin":"border");return V(this,(function(e,i,s){var r;return b(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+t],r["scroll"+t],e.body["offset"+t],r["offset"+t],r["client"+t])):void 0===s?k.css(e,i,a):k.style(e,i,s,a)}),e,o?s:void 0,o)}}))})),k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(t,e){k.fn[e]=function(t,i){return 0<arguments.length?this.on(e,null,t,i):this.trigger(e)}})),k.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),k.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),k.proxy=function(t,e){var i,n,s;if("string"==typeof e&&(i=t[e],e=t,t=i),y(t))return n=l.call(arguments,2),(s=function(){return t.apply(e||this,n.concat(l.call(arguments)))}).guid=t.guid=t.guid||k.guid++,s},k.holdReady=function(t){t?k.readyWait++:k.ready(!0)},k.isArray=Array.isArray,k.parseJSON=JSON.parse,k.nodeName=I,k.isFunction=y,k.isWindow=b,k.camelCase=G,k.type=w,k.now=Date.now,k.isNumeric=function(t){var e=k.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},void 0===(n=function(){return k}.apply(e,[]))||(t.exports=n);var Je=i.jQuery,ti=i.$;return k.noConflict=function(t){return i.$===k&&(i.$=ti),t&&i.jQuery===k&&(i.jQuery=Je),k},s||(i.jQuery=i.$=k),k}))},function(t,e,i){(function(t,e){var n=i(0);i(3);t.jQuery=i(0);var s=n("#user_state"),r=n("#shipping_user_state");n((function(){e.log("Attempting to GET states..."),n.ajax({url:"/states",type:"GET",success:function(t){e.log(t),e.log(t.states.length),e.log(t.states[0].name),function(t){for(var e=0;e<t.length;e+=1)s.append(n("<option></option>").val(e+1).html(t[e].name)),r.append(n("<option></option>").val(e+1).html(t[e].name))}(t.states)},error:function(t,i){e.log(i,t)}})}))}).call(this,i(2),i(1))},function(t,e,i){"use strict";i.r(e),function(t,e,n){i(3),i(25),i(26),i(27),i(28),i(29);var s=i(7),r=i.n(s),o=i(4),a=i.n(o),l=i(8),u=i.n(l),c=i(9),h=i.n(c),d=i(10),p=i.n(d),f=i(11),g=i.n(f),m=i(12),v=i.n(m),y=i(13),b=i(14),_=i.n(b),x=i(15),w=i.n(x),C=i(16),k=i.n(C),T=i(17),D=i.n(T);i(30),i(31);t.log(a.a),i(33),i(36);var S=i(3);e.jQuery=i(0),S((function(){r()(),a()(),u()(),h()(),p()(),g()(),v()(),Object(y.default)(),w()(),_()(),k()(),D()()})),n.exports=S.fn.isValid=function(){return this[0].checkValidity()}}.call(this,i(1),i(2),i(24)(t))},function(t,e,i){(function(t,n){var s=Object.getOwnPropertyDescriptors||function(t){for(var e=Object.keys(t),i={},n=0;n<e.length;n++)i[e[n]]=Object.getOwnPropertyDescriptor(t,e[n]);return i},r=/%[sdj%]/g;e.format=function(t){if(!y(t)){for(var e=[],i=0;i<arguments.length;i++)e.push(l(arguments[i]));return e.join(" ")}i=1;for(var n=arguments,s=n.length,o=String(t).replace(r,(function(t){if("%%"===t)return"%";if(i>=s)return t;switch(t){case"%s":return String(n[i++]);case"%d":return Number(n[i++]);case"%j":try{return JSON.stringify(n[i++])}catch(t){return"[Circular]"}default:return t}})),a=n[i];i<s;a=n[++i])m(a)||!x(a)?o+=" "+a:o+=" "+l(a);return o},e.deprecate=function(i,s){if(void 0!==t&&!0===t.noDeprecation)return i;if(void 0===t)return function(){return e.deprecate(i,s).apply(this,arguments)};var r=!1;return function(){if(!r){if(t.throwDeprecation)throw new Error(s);t.traceDeprecation?n.trace(s):n.error(s),r=!0}return i.apply(this,arguments)}};var o,a={};function l(t,i){var n={seen:[],stylize:c};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),g(i)?n.showHidden=i:i&&e._extend(n,i),b(n.showHidden)&&(n.showHidden=!1),b(n.depth)&&(n.depth=2),b(n.colors)&&(n.colors=!1),b(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=u),h(n,t,n.depth)}function u(t,e){var i=l.styles[e];return i?"["+l.colors[i][0]+"m"+t+"["+l.colors[i][1]+"m":t}function c(t,e){return t}function h(t,i,n){if(t.customInspect&&i&&k(i.inspect)&&i.inspect!==e.inspect&&(!i.constructor||i.constructor.prototype!==i)){var s=i.inspect(n,t);return y(s)||(s=h(t,s,n)),s}var r=function(t,e){if(b(e))return t.stylize("undefined","undefined");if(y(e)){var i="'"+JSON.stringify(e).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return t.stylize(i,"string")}if(v(e))return t.stylize(""+e,"number");if(g(e))return t.stylize(""+e,"boolean");if(m(e))return t.stylize("null","null")}(t,i);if(r)return r;var o=Object.keys(i),a=function(t){var e={};return t.forEach((function(t,i){e[t]=!0})),e}(o);if(t.showHidden&&(o=Object.getOwnPropertyNames(i)),C(i)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return d(i);if(0===o.length){if(k(i)){var l=i.name?": "+i.name:"";return t.stylize("[Function"+l+"]","special")}if(_(i))return t.stylize(RegExp.prototype.toString.call(i),"regexp");if(w(i))return t.stylize(Date.prototype.toString.call(i),"date");if(C(i))return d(i)}var u,c="",x=!1,T=["{","}"];(f(i)&&(x=!0,T=["[","]"]),k(i))&&(c=" [Function"+(i.name?": "+i.name:"")+"]");return _(i)&&(c=" "+RegExp.prototype.toString.call(i)),w(i)&&(c=" "+Date.prototype.toUTCString.call(i)),C(i)&&(c=" "+d(i)),0!==o.length||x&&0!=i.length?n<0?_(i)?t.stylize(RegExp.prototype.toString.call(i),"regexp"):t.stylize("[Object]","special"):(t.seen.push(i),u=x?function(t,e,i,n,s){for(var r=[],o=0,a=e.length;o<a;++o)A(e,String(o))?r.push(p(t,e,i,n,String(o),!0)):r.push("");return s.forEach((function(s){s.match(/^\d+$/)||r.push(p(t,e,i,n,s,!0))})),r}(t,i,n,a,o):o.map((function(e){return p(t,i,n,a,e,x)})),t.seen.pop(),function(t,e,i){if(t.reduce((function(t,e){return e.indexOf("\n")>=0&&0,t+e.replace(/\u001b\[\d\d?m/g,"").length+1}),0)>60)return i[0]+(""===e?"":e+"\n ")+" "+t.join(",\n  ")+" "+i[1];return i[0]+e+" "+t.join(", ")+" "+i[1]}(u,c,T)):T[0]+c+T[1]}function d(t){return"["+Error.prototype.toString.call(t)+"]"}function p(t,e,i,n,s,r){var o,a,l;if((l=Object.getOwnPropertyDescriptor(e,s)||{value:e[s]}).get?a=l.set?t.stylize("[Getter/Setter]","special"):t.stylize("[Getter]","special"):l.set&&(a=t.stylize("[Setter]","special")),A(n,s)||(o="["+s+"]"),a||(t.seen.indexOf(l.value)<0?(a=m(i)?h(t,l.value,null):h(t,l.value,i-1)).indexOf("\n")>-1&&(a=r?a.split("\n").map((function(t){return"  "+t})).join("\n").substr(2):"\n"+a.split("\n").map((function(t){return"   "+t})).join("\n")):a=t.stylize("[Circular]","special")),b(o)){if(r&&s.match(/^\d+$/))return a;(o=JSON.stringify(""+s)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=t.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=t.stylize(o,"string"))}return o+": "+a}function f(t){return Array.isArray(t)}function g(t){return"boolean"==typeof t}function m(t){return null===t}function v(t){return"number"==typeof t}function y(t){return"string"==typeof t}function b(t){return void 0===t}function _(t){return x(t)&&"[object RegExp]"===T(t)}function x(t){return"object"==typeof t&&null!==t}function w(t){return x(t)&&"[object Date]"===T(t)}function C(t){return x(t)&&("[object Error]"===T(t)||t instanceof Error)}function k(t){return"function"==typeof t}function T(t){return Object.prototype.toString.call(t)}function D(t){return t<10?"0"+t.toString(10):t.toString(10)}e.debuglog=function(i){if(b(o)&&(o=Object({NODE_ENV:"production"}).NODE_DEBUG||""),i=i.toUpperCase(),!a[i])if(new RegExp("\\b"+i+"\\b","i").test(o)){var s=t.pid;a[i]=function(){var t=e.format.apply(e,arguments);n.error("%s %d: %s",i,s,t)}}else a[i]=function(){};return a[i]},e.inspect=l,l.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},l.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},e.isArray=f,e.isBoolean=g,e.isNull=m,e.isNullOrUndefined=function(t){return null==t},e.isNumber=v,e.isString=y,e.isSymbol=function(t){return"symbol"==typeof t},e.isUndefined=b,e.isRegExp=_,e.isObject=x,e.isDate=w,e.isError=C,e.isFunction=k,e.isPrimitive=function(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t||"symbol"==typeof t||void 0===t},e.isBuffer=i(19);var S=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function E(){var t=new Date,e=[D(t.getHours()),D(t.getMinutes()),D(t.getSeconds())].join(":");return[t.getDate(),S[t.getMonth()],e].join(" ")}function A(t,e){return Object.prototype.hasOwnProperty.call(t,e)}e.log=function(){n.log("%s - %s",E(),e.format.apply(e,arguments))},e.inherits=i(20),e._extend=function(t,e){if(!e||!x(e))return t;for(var i=Object.keys(e),n=i.length;n--;)t[i[n]]=e[i[n]];return t};var P="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function I(t,e){if(!t){var i=new Error("Promise was rejected with a falsy value");i.reason=t,t=i}return e(t)}e.promisify=function(t){if("function"!=typeof t)throw new TypeError('The "original" argument must be of type Function');if(P&&t[P]){var e;if("function"!=typeof(e=t[P]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),e}function e(){for(var e,i,n=new Promise((function(t,n){e=t,i=n})),s=[],r=0;r<arguments.length;r++)s.push(arguments[r]);s.push((function(t,n){t?i(t):e(n)}));try{t.apply(this,s)}catch(t){i(t)}return n}return Object.setPrototypeOf(e,Object.getPrototypeOf(t)),P&&Object.defineProperty(e,P,{value:e,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(e,s(t))},e.promisify.custom=P,e.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function i(){for(var i=[],n=0;n<arguments.length;n++)i.push(arguments[n]);var s=i.pop();if("function"!=typeof s)throw new TypeError("The last argument must be of type Function");var r=this,o=function(){return s.apply(r,arguments)};e.apply(this,i).then((function(e){t.nextTick(o,null,e)}),(function(e){t.nextTick(I,e,o)}))}return Object.setPrototypeOf(i,Object.getPrototypeOf(e)),Object.defineProperties(i,s(e)),i}}).call(this,i(18),i(1))},function(t,e,i){(function(t,e){var n=i(0);t.jQuery=i(0);var s=n("#list-products"),r=n("#hidden-item-table > tbody");n((function(){var t=!1;s.on("click",(function(){!1===t&&n.get("/products/get_products",(function(t){var i;e.log("This is the JSON response:"),e.log(t),i=t.products,n.each(i,(function(t,e){s.append(n("<option></option>").val(e.productID).html("<strong>".concat(e.name,"</strong> \n            &nbsp; <em>").concat(e.description,"</em> &nbsp; <b>$").concat(e.unitPrice,"</b>")))})),function(t){n.each(t,(function(t,e){r.append("<tr class=\"store-single-item\">\n                    <td class='store-item-ID'>".concat(e.productID,"</td>\n                    <td class='store-item-name'>").concat(e.name,"</td>\n                    <td class='store-item-description'>").concat(e.description,"</td>\n                    <td class='store-item-unit-price'>").concat(e.unitPrice,"</td>\n                  </tr>"))}))}(t.products)})).done(e.log("GET /products/get_products Request is done"),t=!0)}))}))}).call(this,i(2),i(1))},function(t,e,i){(function(t){var e=i(0);t.jQuery=i(0),e("a.back-to-top").on("click",(function(){return e(window).scrollTop(0),!1})),window.openTab=function(t){var e,i=document.getElementById(t),n=document.getElementsByClassName("container tab");for(e=0;e<n.length;e+=1)n[e].style.display="none";i.style.display="inline-flex";var s=document.getElementsByClassName("nav-link"),r=document.getElementById("".concat(t,"-link"));for(e=0;e<s.length;e+=1)s[e].className=s[e].className.replace(" active","");r.className+=" active"}}).call(this,i(2))},function(t,e,i){(function(t,e){var n=i(0);function s(){e.log("Attempting to save New Billing Information");var t,i=(t=[],n(".product-order").each((function(i,s){var r={};r.itemID=n(".productID").eq(i).text(),r.quantity=n(".productUnits").eq(i).text(),e.log("An item's ID from the order:",r.itemID),e.log("An item's Name from the order:",r.name),t.push(r)})),e.log("This is the user's order: ",t),t),s=n("#checkout-total-value").text().slice(1),r=n(".name-value").text();if(r){var o={userName:"Trevor McDougald",items:i,totalPrice:s};e.log("users/sign_up POST Request:\n",JSON.stringify(o,null,2)),n.post("/orders/new_order",{userName:r,items:i,totalPrice:s},(function(t){alert(t)})).then((function(t){return e.log("POST /orders/new_order is Over! ")}))}else alert("Make an Account Before Completing a Purchase")}t.jQuery=i(0),n((function(){n("#submit-order-information-btn").on("click",(function(t){n(".product-order").length>0?(t.preventDefault(),s()):alert("Add an Item to Your Cart Before Checking Out")}))}))}).call(this,i(2),i(1))},function(t,e,i){(function(t){var e=i(0);function n(){t.log("Attempting to save New Billing Information");var i={paymentMethod:e("#payment-method-types option:selected").text(),paymentCardName:e("#payment-card-name").val(),paymentCardNumber:e("#payment-card-number").val(),paymentCardExpirationDate:e("#payment-expiration-date").val(),paymentCardVerificationCode:e("#payment-card-verification").val(),userName:e(".name-value").text()},n={cardType:i.paymentMethod,cardNumber:i.paymentCardNumber,expDate:i.paymentCardExpirationDate,CVV:i.paymentCardVerificationCode,cardName:i.paymentCardName,userFullName:i.userName};e.post("/users/billing_info",n,(function(t){alert(t)})).then((function(e){return t.log("The billing AJAX is over")}))}e((function(){e("#submit-payment-information-btn").on("click",(function(t){t.preventDefault(),n()}))}))}).call(this,i(1))},function(t,e,i){(function(t){function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var i=[],n=!0,s=!1,r=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done)&&(i.push(o.value),!e||i.length!==e);n=!0);}catch(t){s=!0,r=t}finally{try{n||null==a.return||a.return()}finally{if(s)throw r}}return i}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var n=i(0);function s(){return[n("#shipping_address_1"),n("#shipping_address_2"),n("#shipping_city"),n("#shipping_user_state option:selected"),n("#shipping_zipcode")]}function r(){return[n(".address-1-value"),n(".address-2-value"),n(".city-value"),n(".state-value"),n(".zip-code-value")]}function o(){var t=e(s(),5),i=t[0],n=t[1],r=t[2],o=t[3],a=t[4];i.val(""),n.val(""),r.val(""),o.val("selected"),a.val("")}function a(){var t,i,a,l,u,c,h,d,p,f,g,m,v=e(r(),5),y=v[0],b=v[2],_=v[3],x=v[4];y.text()&&b.text()&&_.text()&&x.text()&&"none"!==n("section.account-information").css("display")?(n("#billing-address-error-message").hide(),t=e(s(),5),i=t[0],a=t[1],l=t[2],t[3],u=t[4],c=e(r(),5),h=c[0],d=c[1],p=c[2],f=c[3],g=c[4],m=f.text(),i.val(h.text()),a.val(d.text()),l.val(p.text()),n("#shipping_user_state option:contains(".concat(m,")")).attr("selected",!0),u.val(g.text())):(n("#billing-address-error-message").show(),o())}n((function(){n("#billing-address-error-message").hide();var i=n("#use-billing-address-for-shipping");n("#shipping-info-submit-btn").on("click",(function(i){i.preventDefault(),"none"===n("section.account-information").css("display")?(alert("Make an Account Before Registering a Shipping Address!"),o()):function(){t.log("Attempting to POST a new shipping address...");var i=e(s(),5),r=i[0],o=i[1],a=i[2],l=i[3],u=i[4],c=n(".name-value").text();n.post("/users/shipping_info",{shipping_address1:r.val(),shipping_address2:o.val(),shipping_city:a.val(),shipping_state:l.text(),shipping_zipcode:u.val(),userFullName:c},(function(e){t.log("POST /users/shipping_info Response: ".concat(e)),alert(e)})).done(t.log("POST shipping information is complete"))}()})),i.on("change keyup",(function(){n("#use-billing-address-for-shipping").is(":checked")?a():(o(),n("#billing-address-error-message").hide())}))}))}).call(this,i(1))},function(t,e,i){(function(t){function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var i=[],n=!0,s=!1,r=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done)&&(i.push(o.value),!e||i.length!==e);n=!0);}catch(t){s=!0,r=t}finally{try{n||null==a.return||a.return()}finally{if(s)throw r}}return i}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var n=i(0);function s(){return[n("#user_first_name").val(),n("#user_last_name").val(),n("#user_phone").val(),n("#user_email").val(),n("#user_address_1").val(),n("#user_address_2").val(),n("#user_state option:selected").text(),n("#user_city").val(),n("#user_zipcode").val()]}function r(){t.log("Attempting to POST a new user...");var i=e(s(),9),r=i[0],o=i[1],a=i[2],l=i[3],u=i[4],c=i[5],h=i[6],d=i[7],p=i[8],f={fullname:"".concat(r," ").concat(o),user_phone:a,user_email:l,user_address1:u,user_address2:c,user_city:d,user_state:h,user_zipcode:p};n("section.account-information").css("display","block"),n.post("/users/sign_up",f,(function(t){alert(t)})).done(function(){var t=e(s(),9),i=t[0],r=t[1],o=t[2],a=t[3],l=t[4],u=t[5],c=t[6],h=t[7],d=t[8];n(".name-value").text("".concat(i," ").concat(r)),n(".address-1-value").text(l),""!==u?n(".address-2-value").text(u):(n(".address-2-value").css("display","none"),n(".address-2-label").css("display","none"),n(".address-2-label:parent").css("display","none")),n(".city-value").text(h),n(".state-value").text(c),n(".zip-code-value").text(d),n(".phone-value").text(o),n(".email-value").text(a)}())}n((function(){n("section.account-information").css("display","none"),n("#register-user-btn").on("click",(function(t){t.preventDefault(),r(),n("section.register-account").css("display","none")}))}))}).call(this,i(1))},function(t,e,i){"use strict";(function(t){function e(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)))return;var i=[],n=!0,s=!1,r=void 0;try{for(var o,a=t[Symbol.iterator]();!(n=(o=a.next()).done)&&(i.push(o.value),!e||i.length!==e);n=!0);}catch(t){s=!0,r=t}finally{try{n||null==a.return||a.return()}finally{if(s)throw r}}return i}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var n=i(0);n((function(){var i,s=n("#list-products"),r=[];function o(){var t=s.find("option:selected").text(),e=t.substr(t.indexOf("$")+1);return Number(e)}function a(t){document.getElementById("unit-price").value=Number.isNaN(t)?0:t}function l(t){return n(t).val()}function u(){return l("#item-units")*o()}function c(){n("#cart-subtotal-number").text("$".concat(i))}function h(t){r.push(t),i=r.length>1?r.reduce((function(t,e){return t+e}),0):r}n("#item-units").on("change",(function(){a(u())})),s.on("change",(function(){a(u())})),n("#add-item-to-cart-button").on("click",(function(){if(0!==u()&&!Number.isNaN(o())){var e=(a=s.find("option:selected").text().split(" "),"".concat(a[0],"-").concat(a[1])),i=s.find("option:selected").val(),r=u();!function(e,i,s,r){var o="td#".concat(e);if(t.log(n(o).length),1===n(o).length){var a=n("#units-".concat(e)),l=n("#total-cost-of-".concat(e)),u=a.html(),c=l.html(),h=c.substr(c.indexOf("$")+1),d=Number(i)+Number(u),p=Number(s)+Number(h);a.html(d),l.html("$".concat(p))}else n("#cart-list > tbody").append("<tr class=\"product-order\">\n                    <td class='productID' hidden>".concat(r,"</td>\n                    <td id='").concat(e,'\' class="productName">').concat(e,"</td>\n                    <td id='units-").concat(e,'\' class="productUnits">').concat(i,"</td>\n                    // eslint-disable-next-line max-len\n                    <td id='total-cost-of-").concat(e,'\' class="productCost">$').concat(s,"</td>\n                  </tr>"))}(e,l("#item-units"),r,i),h(r),c()}var a})),n("#clear-cart-button").on("click",(function(){for(var t=1;t<r.length+1;t+=1)document.getElementById("cart-list").deleteRow(-1);r.splice(0,r.length),i=0,c()}));var d={getOrderTaxes:function(){return.08*this.orderSubtotal},getOrderShipping:function(){return.03*this.orderSubtotal},getOrderTotalCost:function(){return+this.orderSubtotal+ +this.orderTaxes+ +this.orderShipping},setOrderValues:function(t){this.orderSubtotal=t,this.orderTaxes=this.getOrderTaxes(),this.orderShipping=this.getOrderShipping(),this.orderTotalCost=this.getOrderTotalCost()},getOrderValues:function(){return[+this.orderSubtotal,+this.orderTaxes,+this.orderShipping,+this.orderTotalCost]}};n("#send-cart-to-checkout-button").on("click",(function(){d.setOrderValues(i);var t=e(d.getOrderValues(),4),s=t[0],r=t[1],o=t[2],a=t[3];n("#checkout-subtotal-value").text("$".concat(Number(s).toFixed(2))),n("#checkout-taxes-value").text("$".concat(Number(r).toFixed(2))),n("#checkout-shipping-value").text("$".concat(Number(o).toFixed(2))),n("#checkout-total-value").text("$".concat(Number(a).toFixed(2)))}))}))}).call(this,i(1))},function(t,e,i){var n=i(0),s=!0,r=!0,o=!0,a=!0,l=!0,u=!0,c=!0,h=!0;function d(){var t=n("#user_first_name"),e=n("#user-first-name-error-message");e.hide();var i=t.val();/^(?=.{1,50}$)[a-z]+(?:['_.\s][a-z]+)*$/i.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid First Name"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),s=!1)}function p(){var t=n("#user_last_name"),e=n("#user-last-name-error-message");e.hide();var i=t.val();/^(?=.{1,50}$)[a-z]+(?:['_.\s][a-z]+)*$/i.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Last Name"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),r=!1)}function f(){var t=n("#user_phone"),e=n("#user-phone-error-message");e.hide();var i=t.val();/^[+]?[(]?[0-9]{3}[)]?[-\s.]?[0-9]{3}[-\s.]?[0-9]{4,6}$/im.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Phone"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),o=!1)}function g(){var t=n("#user_email"),e=n("#user-email-error-message");e.hide();var i=t.val();/\S+@\S+\.\S+/.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Email"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),a=!1)}function m(){var t=n("#user_address_1"),e=n("#user-address-1-error-message");e.hide();var i=t.val();/^\s*\S+(?:\s+\S+){2}/.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Address"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),l=!1)}function v(){var t=n("#user_address_2"),e=n("#user-address-2-error-message");e.hide();var i=t.val();/^[a-zA-Z0-9\s,.'-]{3,}$/.test(i)||""===i?(e.hide(),t.css("border","2px solid #151a2f"),t.css("box-shadow","0 0 8px 2px rgba(63, 63, 63, 0.75)")):(e.html("Invalid Address"),e.css("color","#b00808"),e.show(),t.css("border-bottom","2px solid #151a2f"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),!1)}function y(){var t=n("#user_city"),e=n("#user-city-error-message");e.hide();var i=t.val();/^([a-zA-Z\u0080-\u024F]+(?:. |-| |'))*[a-zA-Z\u0080-\u024F]*$/.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid City"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),c=!1)}function b(){var t=n("#user_zipcode"),e=n("#user-zip-error-message");e.hide();var i=t.val();/(^\d{5}$)|(^\d{5}-\d{4}$)/.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Zip Code"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),h=!1)}function _(){var t=n("#register-user-btn");l=!0,!0,c=!0,h=!0,u=!0,a=!0,o=!0,r=!0,s=!0,d(),p(),f(),g(),m(),v(),y(),b(),u&&h&&c&&l&&s&&r&&o&&!0===a?(n(".register-user-form").removeAttr("disabled"),t.removeAttr("disabled"),t.removeClass("disabled-button")):(n(".register-user-form").attr("disabled","disabled"),t.addClass("disabled-button"))}n((function(){var t=n("#user_first_name"),e=n("#user_last_name"),i=n("#user_phone"),s=n("#user_email"),r=n("#user_address_1"),o=n("#user_address_2"),a=n("#user_state"),l=n("#user_city"),c=n("#user_zipcode");t.on("change keyup",(function(){d(),_()})),e.on("change keyup",(function(){p(),_()})),i.on("change keyup",(function(){f(),_()})),s.on("change keyup",(function(){g(),_()})),r.on("change keyup",(function(){m(),_()})),o.on("change keyup",(function(){v()})),a.on("change keyup",(function(){!function(){var t=n("#user_state"),e=n("#user-state-error-message");e.hide(),t.val()?(e.hide(),t.css("border","1px solid #34F458"),t.css("box-shadow","0 0 8px 2px rgba(152, 251, 152, 0.75)")):(e.html("Select a State"),e.css("color","#b00808"),e.show(),t.css("border","1px solid #F90A0A"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),u=!1)}(),_()})),l.on("change keyup",(function(){y(),_()})),c.on("change keyup",(function(){b(),_()}))}))},function(t,e,i){var n=i(0),s=(i(5).isValid,!0),r=!0,o=!0,a=!0,l=!0,u=!1;function c(){var t=n("#payment-card-name"),e=n("#checkout-card-name-error-message");e.hide();var i=t.val();t.isValid()&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Name"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),r=!1)}function h(){var t=n("#payment-method-types"),e=n("#payment-card-number"),i=n("#checkout-card-number-error-message");i.hide();var s=/^(?:4[0-9]{12}(?:[0-9]{3})?)$/,r=/^(?:5[1-5][0-9]{14})$/,a=/^3[47][0-9]{13}$/,l=e.val();s.test(l)&&t.prop("selectedIndex",1),r.test(l)&&t.prop("selectedIndex",2),a.test(l)&&t.prop("selectedIndex",3),(s.test(l)||r.test(l)||a.test(l))&&""!==l?(i.hide(),e.addClass("field-is-valid"),e.hasClass("field-is-invalid")&&e.removeClass("field-is-invalid")):(i.html("Invalid Card Number"),i.css("color","#b00808"),i.show(),e.addClass("field-is-invalid"),e.hasClass("field-is-valid")&&e.removeClass("field-is-valid"),o=!1)}function d(){var t=n("#payment-method-types"),e=n("#checkout-pay-method-error-message");e.hide(),t.val()?(e.hide(),t.css("border","1px solid #34F458"),t.css("box-shadow","0 0 8px 2px rgba(152, 251, 152, 0.75)")):(e.html("Choose a Card Type"),e.css("color","#b00808"),e.show(),t.css("border","1px solid #F90A0A"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),s=!1)}function p(){var t=n("#payment-expiration-date"),e=n("#checkout-card-expire-error-message");e.hide();var i=t.val();/^\d{2}\/\d{2}$/.test(i)&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Expiration Date"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),a=!1)}function f(){var t=n("#payment-card-verification"),e=n("#checkout-card-cvv-error-message");e.hide();var i=t.val();/^[0-9]{3,4}$/.test(i)&&""!==i?(e.hide(),t.css("border","2px solid lightgreen"),t.css("box-shadow","0 0 8px 2px rgba(152, 251, 152, 0.75)")):(e.html("Invalid CVV Code"),e.css("color","#b00808"),e.show(),t.css("border","2px solid salmon"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),l=!1)}function g(){var t=n("#pay-agreement");u=t.is(":checked")}function m(){var t=n("#submit-payment-information-btn");s=!0,r=!0,o=!0,a=!0,l=!0,u=!1,c(),h(),p(),f(),d(),g(),o&&l&&a&&s&&r&&!0===u?(n(".checkout-payment-form").removeAttr("disabled"),t.removeAttr("disabled"),t.removeClass("disabled-button")):(n(".checkout-payment-form").attr("disabled","disabled"),t.addClass("disabled-button"))}n((function(){var t=n("#payment-card-name"),e=n("#payment-card-number"),i=n("#payment-method-types"),s=n("#payment-expiration-date"),r=n("#payment-card-verification"),o=n("#pay-agreement");t.on("change keyup",(function(){c(),m()})),e.on("change keyup",(function(){h(),m()})),i.on("change keyup",(function(){d(),m()})),s.on("change keyup",(function(){p(),m()})),r.on("change keyup",(function(){f(),m()})),o.on("change keyup",(function(){g(),m()}))}))},function(t,e,i){var n=i(0),s=!0,r=!0,o=!0,a=!0;function l(){var t=n("#shipping_address_1"),e=n("#address-1-error-message");e.hide();var i=t.val();t.isValid()&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Address"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),s=!1)}function u(){var t=n("#shipping_address_2"),e=n("#address-2-error-message");e.hide();var i=t.val();t.isValid()||""===i?(e.hide(),t.css("border","2px solid #151a2f"),t.css("box-shadow","0 0 8px 2px rgba(63, 63, 63, 0.75)")):(e.html("Invalid Address"),e.css("color","#b00808"),e.show(),t.css("border-bottom","2px solid #151a2f"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),!1)}function c(){var t=n("#shipping_city"),e=n("#city-shipping-error-message");e.hide();var i=t.val();t.isValid()&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid City"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),o=!1)}function h(){var t=n("#shipping_zipcode"),e=n("#shipping-zip-error-message");e.hide();var i=t.val();t.isValid()&&""!==i?(e.hide(),t.addClass("field-is-valid"),t.hasClass("field-is-invalid")&&t.removeClass("field-is-invalid")):(e.html("Invalid Zip Code"),e.css("color","#b00808"),e.show(),t.addClass("field-is-invalid"),t.hasClass("field-is-valid")&&t.removeClass("field-is-valid"),a=!1)}function d(){var t=n("#shipping-info-submit-btn");s=!0,r=!0,!0,o=!0,a=!0,l(),u(),c(),h(),r&&a&&o&&!0===s?(n(".shipping-info-form").removeAttr("disabled"),t.removeAttr("disabled"),t.removeClass("disabled-button")):(n(".shipping-info-form").attr("disabled","disabled"),t.addClass("disabled-button"))}n.fn.isValid=function(){return this[0].checkValidity()};var p=function(){l(),d()},f=function(){u(),d()},g=function(){c(),d()},m=function(){!function(){var t=n("#shipping_user_state"),e=n("#shipping-state-error-message");e.hide(),t.val()?(e.hide(),t.css("border","1px solid lightgreen"),t.css("box-shadow","0 0 8px 2px rgba(152, 251, 152, 0.75)")):(e.html("Select a State"),e.css("color","#b00808"),e.show(),t.css("border","1px solid salmon"),t.css("box-shadow","0 0 8px 2px rgba(250, 128, 114, 0.75)"),r=!1)}(),d()},v=function(){h(),d()};n((function(){var t=n("#shipping_address_1"),e=n("#shipping_address_2"),i=n("#shipping_user_state"),s=n("#shipping_city"),r=n("#shipping_zipcode");t.on("change keyup",(function(){p()})),e.on("change keyup",(function(){f()})),i.on("change keyup",(function(){m()})),s.on("change keyup",(function(){g()})),r.on("change keyup",(function(){v()}))}))},function(t,e,i){(function(t){i(0)(window).on("unload",(function(){t.warn("Page is being closed");navigator.sendBeacon("/closing")}))}).call(this,i(1))},function(t,e){var i,n,s=t.exports={};function r(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(t){if(i===setTimeout)return setTimeout(t,0);if((i===r||!i)&&setTimeout)return i=setTimeout,setTimeout(t,0);try{return i(t,0)}catch(e){try{return i.call(null,t,0)}catch(e){return i.call(this,t,0)}}}!function(){try{i="function"==typeof setTimeout?setTimeout:r}catch(t){i=r}try{n="function"==typeof clearTimeout?clearTimeout:o}catch(t){n=o}}();var l,u=[],c=!1,h=-1;function d(){c&&l&&(c=!1,l.length?u=l.concat(u):h=-1,u.length&&p())}function p(){if(!c){var t=a(d);c=!0;for(var e=u.length;e;){for(l=u,u=[];++h<e;)l&&l[h].run();h=-1,e=u.length}l=null,c=!1,function(t){if(n===clearTimeout)return clearTimeout(t);if((n===o||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(t);try{n(t)}catch(e){try{return n.call(null,t)}catch(e){return n.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function g(){}s.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)e[i-1]=arguments[i];u.push(new f(t,e)),1!==u.length||c||a(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.prependListener=g,s.prependOnceListener=g,s.listeners=function(t){return[]},s.binding=function(t){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(t){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(t,e){t.exports=function(t){return t&&"object"==typeof t&&"function"==typeof t.copy&&"function"==typeof t.fill&&"function"==typeof t.readUInt8}},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(t,e){t.super_=e;var i=function(){};i.prototype=e.prototype,t.prototype=new i,t.prototype.constructor=t}},function(t,e,i){"use strict";(function(e){var n=i(22);function s(t,e){if(t===e)return 0;for(var i=t.length,n=e.length,s=0,r=Math.min(i,n);s<r;++s)if(t[s]!==e[s]){i=t[s],n=e[s];break}return i<n?-1:n<i?1:0}function r(t){return e.Buffer&&"function"==typeof e.Buffer.isBuffer?e.Buffer.isBuffer(t):!(null==t||!t._isBuffer)}var o=i(6),a=Object.prototype.hasOwnProperty,l=Array.prototype.slice,u="foo"===function(){}.name;function c(t){return Object.prototype.toString.call(t)}function h(t){return!r(t)&&("function"==typeof e.ArrayBuffer&&("function"==typeof ArrayBuffer.isView?ArrayBuffer.isView(t):!!t&&(t instanceof DataView||!!(t.buffer&&t.buffer instanceof ArrayBuffer))))}var d=t.exports=y,p=/\s*function\s+([^\(\s]*)\s*/;function f(t){if(o.isFunction(t)){if(u)return t.name;var e=t.toString().match(p);return e&&e[1]}}function g(t,e){return"string"==typeof t?t.length<e?t:t.slice(0,e):t}function m(t){if(u||!o.isFunction(t))return o.inspect(t);var e=f(t);return"[Function"+(e?": "+e:"")+"]"}function v(t,e,i,n,s){throw new d.AssertionError({message:i,actual:t,expected:e,operator:n,stackStartFunction:s})}function y(t,e){t||v(t,!0,e,"==",d.ok)}function b(t,e,i,n){if(t===e)return!0;if(r(t)&&r(e))return 0===s(t,e);if(o.isDate(t)&&o.isDate(e))return t.getTime()===e.getTime();if(o.isRegExp(t)&&o.isRegExp(e))return t.source===e.source&&t.global===e.global&&t.multiline===e.multiline&&t.lastIndex===e.lastIndex&&t.ignoreCase===e.ignoreCase;if(null!==t&&"object"==typeof t||null!==e&&"object"==typeof e){if(h(t)&&h(e)&&c(t)===c(e)&&!(t instanceof Float32Array||t instanceof Float64Array))return 0===s(new Uint8Array(t.buffer),new Uint8Array(e.buffer));if(r(t)!==r(e))return!1;var a=(n=n||{actual:[],expected:[]}).actual.indexOf(t);return-1!==a&&a===n.expected.indexOf(e)||(n.actual.push(t),n.expected.push(e),function(t,e,i,n){if(null==t||null==e)return!1;if(o.isPrimitive(t)||o.isPrimitive(e))return t===e;if(i&&Object.getPrototypeOf(t)!==Object.getPrototypeOf(e))return!1;var s=_(t),r=_(e);if(s&&!r||!s&&r)return!1;if(s)return t=l.call(t),e=l.call(e),b(t,e,i);var a,u,c=C(t),h=C(e);if(c.length!==h.length)return!1;for(c.sort(),h.sort(),u=c.length-1;u>=0;u--)if(c[u]!==h[u])return!1;for(u=c.length-1;u>=0;u--)if(a=c[u],!b(t[a],e[a],i,n))return!1;return!0}(t,e,i,n))}return i?t===e:t==e}function _(t){return"[object Arguments]"==Object.prototype.toString.call(t)}function x(t,e){if(!t||!e)return!1;if("[object RegExp]"==Object.prototype.toString.call(e))return e.test(t);try{if(t instanceof e)return!0}catch(t){}return!Error.isPrototypeOf(e)&&!0===e.call({},t)}function w(t,e,i,n){var s;if("function"!=typeof e)throw new TypeError('"block" argument must be a function');"string"==typeof i&&(n=i,i=null),s=function(t){var e;try{t()}catch(t){e=t}return e}(e),n=(i&&i.name?" ("+i.name+").":".")+(n?" "+n:"."),t&&!s&&v(s,i,"Missing expected exception"+n);var r="string"==typeof n,a=!t&&s&&!i;if((!t&&o.isError(s)&&r&&x(s,i)||a)&&v(s,i,"Got unwanted exception"+n),t&&s&&i&&!x(s,i)||!t&&s)throw s}d.AssertionError=function(t){var e;this.name="AssertionError",this.actual=t.actual,this.expected=t.expected,this.operator=t.operator,t.message?(this.message=t.message,this.generatedMessage=!1):(this.message=g(m((e=this).actual),128)+" "+e.operator+" "+g(m(e.expected),128),this.generatedMessage=!0);var i=t.stackStartFunction||v;if(Error.captureStackTrace)Error.captureStackTrace(this,i);else{var n=new Error;if(n.stack){var s=n.stack,r=f(i),o=s.indexOf("\n"+r);if(o>=0){var a=s.indexOf("\n",o+1);s=s.substring(a+1)}this.stack=s}}},o.inherits(d.AssertionError,Error),d.fail=v,d.ok=y,d.equal=function(t,e,i){t!=e&&v(t,e,i,"==",d.equal)},d.notEqual=function(t,e,i){t==e&&v(t,e,i,"!=",d.notEqual)},d.deepEqual=function(t,e,i){b(t,e,!1)||v(t,e,i,"deepEqual",d.deepEqual)},d.deepStrictEqual=function(t,e,i){b(t,e,!0)||v(t,e,i,"deepStrictEqual",d.deepStrictEqual)},d.notDeepEqual=function(t,e,i){b(t,e,!1)&&v(t,e,i,"notDeepEqual",d.notDeepEqual)},d.notDeepStrictEqual=function t(e,i,n){b(e,i,!0)&&v(e,i,n,"notDeepStrictEqual",t)},d.strictEqual=function(t,e,i){t!==e&&v(t,e,i,"===",d.strictEqual)},d.notStrictEqual=function(t,e,i){t===e&&v(t,e,i,"!==",d.notStrictEqual)},d.throws=function(t,e,i){w(!0,t,e,i)},d.doesNotThrow=function(t,e,i){w(!1,t,e,i)},d.ifError=function(t){if(t)throw t},d.strict=n((function t(e,i){e||v(e,!0,i,"==",t)}),d,{equal:d.strictEqual,deepEqual:d.deepStrictEqual,notEqual:d.notStrictEqual,notDeepEqual:d.notDeepStrictEqual}),d.strict.strict=d.strict;var C=Object.keys||function(t){var e=[];for(var i in t)a.call(t,i)&&e.push(i);return e}}).call(this,i(2))},function(t,e,i){"use strict";var n=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(t){if(null==t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},i=0;i<10;i++)e["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(t){n[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(t){return!1}}()?Object.assign:function(t,e){for(var i,a,l=o(t),u=1;u<arguments.length;u++){for(var c in i=Object(arguments[u]))s.call(i,c)&&(l[c]=i[c]);if(n){a=n(i);for(var h=0;h<a.length;h++)r.call(i,a[h])&&(l[a[h]]=i[a[h]])}}return l}},function(t,e){t.exports=function(){return(new Date).getTime()}},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,i){var n,s,r;s=[i(0)],void 0===(r="function"==typeof(n=function(t){function e(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=i(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function i(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.on("mouseout",i,(function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")})).on("mouseover",i,n)}function n(){t.datepicker._isDisabledDatepicker(d.inline?d.dpDiv.parent()[0]:d.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function s(e,i){for(var n in t.extend(e,i),i)null==i[n]&&(e[n]=i[n]);return e}function r(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.ui=t.ui||{},t.ui.version="1.12.1";var o=0,a=Array.prototype.slice;t.cleanData=function(e){return function(i){var n,s,r;for(r=0;null!=(s=i[r]);r++)try{(n=t._data(s,"events"))&&n.remove&&t(s).triggerHandler("remove")}catch(t){}e(i)}}(t.cleanData),t.widget=function(e,i,n){var s,r,o,a={},l=e.split(".")[0],u=l+"-"+(e=e.split(".")[1]);return n||(n=i,i=t.Widget),t.isArray(n)&&(n=t.extend.apply(null,[{}].concat(n))),t.expr[":"][u.toLowerCase()]=function(e){return!!t.data(e,u)},t[l]=t[l]||{},s=t[l][e],r=t[l][e]=function(t,e){return this._createWidget?void(arguments.length&&this._createWidget(t,e)):new r(t,e)},t.extend(r,s,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),(o=new i).options=t.widget.extend({},o.options),t.each(n,(function(e,n){return t.isFunction(n)?void(a[e]=function(){function t(){return i.prototype[e].apply(this,arguments)}function s(t){return i.prototype[e].apply(this,t)}return function(){var e,i=this._super,r=this._superApply;return this._super=t,this._superApply=s,e=n.apply(this,arguments),this._super=i,this._superApply=r,e}}()):void(a[e]=n)})),r.prototype=t.widget.extend(o,{widgetEventPrefix:s&&o.widgetEventPrefix||e},a,{constructor:r,namespace:l,widgetName:e,widgetFullName:u}),s?(t.each(s._childConstructors,(function(e,i){var n=i.prototype;t.widget(n.namespace+"."+n.widgetName,r,i._proto)})),delete s._childConstructors):i._childConstructors.push(r),t.widget.bridge(e,r),r},t.widget.extend=function(e){for(var i,n,s=a.call(arguments,1),r=0,o=s.length;o>r;r++)for(i in s[r])n=s[r][i],s[r].hasOwnProperty(i)&&void 0!==n&&(e[i]=t.isPlainObject(n)?t.isPlainObject(e[i])?t.widget.extend({},e[i],n):t.widget.extend({},n):n);return e},t.widget.bridge=function(e,i){var n=i.prototype.widgetFullName||e;t.fn[e]=function(s){var r="string"==typeof s,o=a.call(arguments,1),l=this;return r?this.length||"instance"!==s?this.each((function(){var i,r=t.data(this,n);return"instance"===s?(l=r,!1):r?t.isFunction(r[s])&&"_"!==s.charAt(0)?(i=r[s].apply(r,o))!==r&&void 0!==i?(l=i&&i.jquery?l.pushStack(i.get()):i,!1):void 0:t.error("no such method '"+s+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+s+"'")})):l=void 0:(o.length&&(s=t.widget.extend.apply(null,[s].concat(o))),this.each((function(){var e=t.data(this,n);e?(e.option(s||{}),e._init&&e._init()):t.data(this,n,new i(s,this))}))),l}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{classes:{},disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=o++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),this.classesElementLookup={},i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this.options.disabled&&this._setOptionDisabled(this.options.disabled),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:function(){return{}},_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){var e=this;this._destroy(),t.each(this.classesElementLookup,(function(t,i){e._removeClass(i,t)})),this.element.off(this.eventNamespace).removeData(this.widgetFullName),this.widget().off(this.eventNamespace).removeAttr("aria-disabled"),this.bindings.off(this.eventNamespace)},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var n,s,r,o=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(o={},n=e.split("."),e=n.shift(),n.length){for(s=o[e]=t.widget.extend({},this.options[e]),r=0;n.length-1>r;r++)s[n[r]]=s[n[r]]||{},s=s[n[r]];if(e=n.pop(),1===arguments.length)return void 0===s[e]?null:s[e];s[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];o[e]=i}return this._setOptions(o),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return"classes"===t&&this._setOptionClasses(e),this.options[t]=e,"disabled"===t&&this._setOptionDisabled(e),this},_setOptionClasses:function(e){var i,n,s;for(i in e)s=this.classesElementLookup[i],e[i]!==this.options.classes[i]&&s&&s.length&&(n=t(s.get()),this._removeClass(s,i),n.addClass(this._classes({element:n,keys:i,classes:e,add:!0})))},_setOptionDisabled:function(t){this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!!t),t&&(this._removeClass(this.hoverable,null,"ui-state-hover"),this._removeClass(this.focusable,null,"ui-state-focus"))},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_classes:function(e){function i(i,r){var o,a;for(a=0;i.length>a;a++)o=s.classesElementLookup[i[a]]||t(),o=e.add?t(t.unique(o.get().concat(e.element.get()))):t(o.not(e.element).get()),s.classesElementLookup[i[a]]=o,n.push(i[a]),r&&e.classes[i[a]]&&n.push(e.classes[i[a]])}var n=[],s=this;return e=t.extend({element:this.element,classes:this.options.classes||{}},e),this._on(e.element,{remove:"_untrackClassesElement"}),e.keys&&i(e.keys.match(/\S+/g)||[],!0),e.extra&&i(e.extra.match(/\S+/g)||[]),n.join(" ")},_untrackClassesElement:function(e){var i=this;t.each(i.classesElementLookup,(function(n,s){-1!==t.inArray(e.target,s)&&(i.classesElementLookup[n]=t(s.not(e.target).get()))}))},_removeClass:function(t,e,i){return this._toggleClass(t,e,i,!1)},_addClass:function(t,e,i){return this._toggleClass(t,e,i,!0)},_toggleClass:function(t,e,i,n){n="boolean"==typeof n?n:i;var s="string"==typeof t||null===t,r={extra:s?e:i,keys:s?t:e,element:s?this.element:t,add:n};return r.element.toggleClass(this._classes(r),n),this},_on:function(e,i,n){var s,r=this;"boolean"!=typeof e&&(n=i,i=e,e=!1),n?(i=s=t(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),t.each(n,(function(n,o){function a(){return e||!0!==r.options.disabled&&!t(this).hasClass("ui-state-disabled")?("string"==typeof o?r[o]:o).apply(r,arguments):void 0}"string"!=typeof o&&(a.guid=o.guid=o.guid||a.guid||t.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),u=l[1]+r.eventNamespace,c=l[2];c?s.on(u,c,a):i.on(u,a)}))},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.off(i).off(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){var i=this;return setTimeout((function(){return("string"==typeof t?i[t]:t).apply(i,arguments)}),e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){this._addClass(t(e.currentTarget),null,"ui-state-hover")},mouseleave:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){this._addClass(t(e.currentTarget),null,"ui-state-focus")},focusout:function(e){this._removeClass(t(e.currentTarget),null,"ui-state-focus")}})},_trigger:function(e,i,n){var s,r,o=this.options[e];if(n=n||{},(i=t.Event(i)).type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],r=i.originalEvent)for(s in r)s in i||(i[s]=r[s]);return this.element.trigger(i,n),!(t.isFunction(o)&&!1===o.apply(this.element[0],[i].concat(n))||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},(function(e,i){t.Widget.prototype["_"+e]=function(n,s,r){"string"==typeof s&&(s={effect:s});var o,a=s?!0===s||"number"==typeof s?i:s.effect||i:e;"number"==typeof(s=s||{})&&(s={duration:s}),o=!t.isEmptyObject(s),s.complete=r,s.delay&&n.delay(s.delay),o&&t.effects&&t.effects.effect[a]?n[e](s):a!==e&&n[a]?n[a](s.duration,s.easing,r):n.queue((function(i){t(this)[e](),r&&r.call(n[0]),i()}))}})),t.widget,function(){function e(t,e,i){return[parseFloat(t[0])*(h.test(t[0])?e/100:1),parseFloat(t[1])*(h.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}var s,r=Math.max,o=Math.abs,a=/left|center|right/,l=/top|center|bottom/,u=/[\+\-]\d+(\.[\d]+)?%?/,c=/^\w+/,h=/%$/,d=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==s)return s;var e,i,n=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),r=n.children()[0];return t("body").append(n),e=r.offsetWidth,n.css("overflow","scroll"),e===(i=r.offsetWidth)&&(i=n[0].clientWidth),n.remove(),s=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),n=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),s="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth;return{width:"scroll"===n||"auto"===n&&e.height<e.element[0].scrollHeight?t.position.scrollbarWidth():0,height:s?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),n=t.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:n||s?{left:0,top:0}:t(e).offset(),scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:i.outerWidth(),height:i.outerHeight()}}},t.fn.position=function(s){if(!s||!s.of)return d.apply(this,arguments);s=t.extend({},s);var h,p,f,g,m,v,y=t(s.of),b=t.position.getWithinInfo(s.within),_=t.position.getScrollInfo(b),x=(s.collision||"flip").split(" "),w={};return v=n(y),y[0].preventDefault&&(s.at="left top"),p=v.width,f=v.height,g=v.offset,m=t.extend({},g),t.each(["my","at"],(function(){var t,e,i=(s[this]||"").split(" ");1===i.length&&(i=a.test(i[0])?i.concat(["center"]):l.test(i[0])?["center"].concat(i):["center","center"]),i[0]=a.test(i[0])?i[0]:"center",i[1]=l.test(i[1])?i[1]:"center",t=u.exec(i[0]),e=u.exec(i[1]),w[this]=[t?t[0]:0,e?e[0]:0],s[this]=[c.exec(i[0])[0],c.exec(i[1])[0]]})),1===x.length&&(x[1]=x[0]),"right"===s.at[0]?m.left+=p:"center"===s.at[0]&&(m.left+=p/2),"bottom"===s.at[1]?m.top+=f:"center"===s.at[1]&&(m.top+=f/2),h=e(w.at,p,f),m.left+=h[0],m.top+=h[1],this.each((function(){var n,a,l=t(this),u=l.outerWidth(),c=l.outerHeight(),d=i(this,"marginLeft"),v=i(this,"marginTop"),C=u+d+i(this,"marginRight")+_.width,k=c+v+i(this,"marginBottom")+_.height,T=t.extend({},m),D=e(w.my,l.outerWidth(),l.outerHeight());"right"===s.my[0]?T.left-=u:"center"===s.my[0]&&(T.left-=u/2),"bottom"===s.my[1]?T.top-=c:"center"===s.my[1]&&(T.top-=c/2),T.left+=D[0],T.top+=D[1],n={marginLeft:d,marginTop:v},t.each(["left","top"],(function(e,i){t.ui.position[x[e]]&&t.ui.position[x[e]][i](T,{targetWidth:p,targetHeight:f,elemWidth:u,elemHeight:c,collisionPosition:n,collisionWidth:C,collisionHeight:k,offset:[h[0]+D[0],h[1]+D[1]],my:s.my,at:s.at,within:b,elem:l})})),s.using&&(a=function(t){var e=g.left-T.left,i=e+p-u,n=g.top-T.top,a=n+f-c,h={target:{element:y,left:g.left,top:g.top,width:p,height:f},element:{element:l,left:T.left,top:T.top,width:u,height:c},horizontal:0>i?"left":e>0?"right":"center",vertical:0>a?"top":n>0?"bottom":"middle"};u>p&&p>o(e+i)&&(h.horizontal="center"),c>f&&f>o(n+a)&&(h.vertical="middle"),h.important=r(o(e),o(i))>r(o(n),o(a))?"horizontal":"vertical",s.using.call(this,t,h)}),l.offset(t.extend(T,{using:a}))}))},t.ui.position={fit:{left:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollLeft:n.offset.left,o=n.width,a=t.left-e.collisionPosition.marginLeft,l=s-a,u=a+e.collisionWidth-o-s;e.collisionWidth>o?l>0&&0>=u?(i=t.left+l+e.collisionWidth-o-s,t.left+=l-i):t.left=u>0&&0>=l?s:l>u?s+o-e.collisionWidth:s:l>0?t.left+=l:u>0?t.left-=u:t.left=r(t.left-a,t.left)},top:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollTop:n.offset.top,o=e.within.height,a=t.top-e.collisionPosition.marginTop,l=s-a,u=a+e.collisionHeight-o-s;e.collisionHeight>o?l>0&&0>=u?(i=t.top+l+e.collisionHeight-o-s,t.top+=l-i):t.top=u>0&&0>=l?s:l>u?s+o-e.collisionHeight:s:l>0?t.top+=l:u>0?t.top-=u:t.top=r(t.top-a,t.top)}},flip:{left:function(t,e){var i,n,s=e.within,r=s.offset.left+s.scrollLeft,a=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,u=t.left-e.collisionPosition.marginLeft,c=u-l,h=u+e.collisionWidth-a-l,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,p="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>c?(0>(i=t.left+d+p+f+e.collisionWidth-a-r)||o(c)>i)&&(t.left+=d+p+f):h>0&&((n=t.left-e.collisionPosition.marginLeft+d+p+f-l)>0||h>o(n))&&(t.left+=d+p+f)},top:function(t,e){var i,n,s=e.within,r=s.offset.top+s.scrollTop,a=s.height,l=s.isWindow?s.scrollTop:s.offset.top,u=t.top-e.collisionPosition.marginTop,c=u-l,h=u+e.collisionHeight-a-l,d="top"===e.my[1]?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,p="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,f=-2*e.offset[1];0>c?(0>(n=t.top+d+p+f+e.collisionHeight-a-r)||o(c)>n)&&(t.top+=d+p+f):h>0&&((i=t.top-e.collisionPosition.marginTop+d+p+f-l)>0||h>o(i))&&(t.top+=d+p+f)}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}}}(),t.ui.position,t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo((function(e){return function(i){return!!t.data(i,e)}})):function(e,i,n){return!!t.data(e,n[3])}}),t.fn.extend({disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.on(t+".ui-disableSelection",(function(t){t.preventDefault()}))}}(),enableSelection:function(){return this.off(".ui-disableSelection")}});var l="ui-effects-",u="ui-effects-style",c="ui-effects-animated",h=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var n=c[e.type]||{};return null==t?i||!e.def?null:e.def:(t=n.floor?~~t:parseFloat(t),isNaN(t)?e.def:n.mod?(t+n.mod)%n.mod:0>t?0:t>n.max?n.max:t)}function n(i){var n=l(),s=n._rgba=[];return i=i.toLowerCase(),p(a,(function(t,r){var o,a=r.re.exec(i),l=a&&r.parse(a),c=r.space||"rgba";return l?(o=n[c](l),n[u[c].cache]=o[u[c].cache],s=n._rgba=o._rgba,!1):e})),s.length?("0,0,0,0"===s.join()&&t.extend(s,r.transparent),n):r[i]}function s(t,e,i){return 1>6*(i=(i+1)%1)?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var r,o=/^([\-+])=\s*(\d+\.?\d*)/,a=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],l=t.Color=function(e,i,n,s){return new t.Color.fn.parse(e,i,n,s)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},c={byte:{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},h=l.support={},d=t("<p>")[0],p=t.each;d.style.cssText="background-color:rgba(1,1,1,.5)",h.rgba=d.style.backgroundColor.indexOf("rgba")>-1,p(u,(function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}})),l.fn=t.extend(l.prototype,{parse:function(s,o,a,c){if(s===e)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=t(s).css(o),o=e);var h=this,d=t.type(s),f=this._rgba=[];return o!==e&&(s=[s,o,a,c],d="array"),"string"===d?this.parse(n(s)||r._default):"array"===d?(p(u.rgba.props,(function(t,e){f[e.idx]=i(s[e.idx],e)})),this):"object"===d?(p(u,s instanceof l?function(t,e){s[e.cache]&&(h[e.cache]=s[e.cache].slice())}:function(e,n){var r=n.cache;p(n.props,(function(t,e){if(!h[r]&&n.to){if("alpha"===t||null==s[t])return;h[r]=n.to(h._rgba)}h[r][e.idx]=i(s[t],e,!0)})),h[r]&&0>t.inArray(null,h[r].slice(0,3))&&(h[r][3]=1,n.from&&(h._rgba=n.from(h[r])))}),this):e},is:function(t){var i=l(t),n=!0,s=this;return p(u,(function(t,r){var o,a=i[r.cache];return a&&(o=s[r.cache]||r.to&&r.to(s._rgba)||[],p(r.props,(function(t,i){return null!=a[i.idx]?n=a[i.idx]===o[i.idx]:e}))),n})),n},_space:function(){var t=[],e=this;return p(u,(function(i,n){e[n.cache]&&t.push(i)})),t.pop()},transition:function(t,e){var n=l(t),s=n._space(),r=u[s],o=0===this.alpha()?l("transparent"):this,a=o[r.cache]||r.to(o._rgba),h=a.slice();return n=n[r.cache],p(r.props,(function(t,s){var r=s.idx,o=a[r],l=n[r],u=c[s.type]||{};null!==l&&(null===o?h[r]=l:(u.mod&&(l-o>u.mod/2?o+=u.mod:o-l>u.mod/2&&(o-=u.mod)),h[r]=i((l-o)*e+o,s)))})),this[s](h)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=l(e)._rgba;return l(t.map(i,(function(t,e){return(1-n)*s[e]+n*t})))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,(function(t,e){return null==t?e>2?1:0:t}));return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),(function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t}));return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),n=i.pop();return e&&i.push(~~(255*n)),"#"+t.map(i,(function(t){return 1===(t=(t||0).toString(16)).length?"0"+t:t})).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),l.fn.parse.prototype=l.fn,u.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,n=t[0]/255,s=t[1]/255,r=t[2]/255,o=t[3],a=Math.max(n,s,r),l=Math.min(n,s,r),u=a-l,c=a+l,h=.5*c;return e=l===a?0:n===a?60*(s-r)/u+360:s===a?60*(r-n)/u+120:60*(n-s)/u+240,i=0===u?0:.5>=h?u/c:u/(2-c),[Math.round(e)%360,i,h,null==o?1:o]},u.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],n=t[2],r=t[3],o=.5>=n?n*(1+i):n+i-n*i,a=2*n-o;return[Math.round(255*s(a,o,e+1/3)),Math.round(255*s(a,o,e)),Math.round(255*s(a,o,e-1/3)),r]},p(u,(function(n,s){var r=s.props,a=s.cache,u=s.to,c=s.from;l.fn[n]=function(n){if(u&&!this[a]&&(this[a]=u(this._rgba)),n===e)return this[a].slice();var s,o=t.type(n),h="array"===o||"object"===o?n:arguments,d=this[a].slice();return p(r,(function(t,e){var n=h["object"===o?t:e.idx];null==n&&(n=d[e.idx]),d[e.idx]=i(n,e)})),c?((s=l(c(d)))[a]=d,s):l(d)},p(r,(function(e,i){l.fn[e]||(l.fn[e]=function(s){var r,a=t.type(s),l="alpha"===e?this._hsla?"hsla":"rgba":n,u=this[l](),c=u[i.idx];return"undefined"===a?c:("function"===a&&(s=s.call(this,c),a=t.type(s)),null==s&&i.empty?this:("string"===a&&(r=o.exec(s))&&(s=c+parseFloat(r[2])*("+"===r[1]?1:-1)),u[i.idx]=s,this[l](u)))})}))})),l.hook=function(e){var i=e.split(" ");p(i,(function(e,i){t.cssHooks[i]={set:function(e,s){var r,o,a="";if("transparent"!==s&&("string"!==t.type(s)||(r=n(s)))){if(s=l(r||s),!h.rgba&&1!==s._rgba[3]){for(o="backgroundColor"===i?e.parentNode:e;(""===a||"transparent"===a)&&o&&o.style;)try{a=t.css(o,"backgroundColor"),o=o.parentNode}catch(t){}s=s.blend(a&&"transparent"!==a?a:"_default")}s=s.toRgbaString()}try{e.style[i]=s}catch(t){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=l(e.elem,i),e.end=l(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}}))},l.hook("backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor"),t.cssHooks.borderColor={expand:function(t){var e={};return p(["Top","Right","Bottom","Left"],(function(i,n){e["border"+n+"Color"]=t})),e}},r=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(h),function(){function e(e){var i,n,s=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,r={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)"string"==typeof s[i=s[n]]&&(r[t.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(r[i]=s[i]);return r}function i(e,i){var n,r,o={};for(n in i)r=i[n],e[n]!==r&&(s[n]||(t.fx.step[n]||!isNaN(parseFloat(r)))&&(o[n]=r));return o}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],(function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(h.style(t.elem,i,t.end),t.setAttr=!0)}})),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(s,r,o,a){var l=t.speed(r,o,a);return this.queue((function(){var r,o=t(this),a=o.attr("class")||"",u=l.children?o.find("*").addBack():o;u=u.map((function(){return{el:t(this),start:e(this)}})),(r=function(){t.each(n,(function(t,e){s[e]&&o[e+"Class"](s[e])}))})(),u=u.map((function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this})),o.attr("class",a),u=u.map((function(){var e=this,i=t.Deferred(),n=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,n),i.promise()})),t.when.apply(t,u.get()).done((function(){r(),t.each(arguments,(function(){var e=this.el;t.each(this.diff,(function(t){e.css(t,"")}))})),l.complete.call(o[0])}))}))},t.fn.extend({addClass:function(e){return function(i,n,s,r){return n?t.effects.animateClass.call(this,{add:i},n,s,r):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,n,s,r){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},n,s,r):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,n,s,r,o){return"boolean"==typeof n||void 0===n?s?t.effects.animateClass.call(this,n?{add:i}:{remove:i},s,r,o):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},n,s,r)}}(t.fn.toggleClass),switchClass:function(e,i,n,s,r){return t.effects.animateClass.call(this,{add:i,remove:e},n,s,r)}})}(),function(){function e(e,i,n,s){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(s=n,n=i,i={}),t.isFunction(n)&&(s=n,n=null),i&&t.extend(e,i),n=n||i.duration,e.duration=t.fx.off?0:"number"==typeof n?n:n in t.fx.speeds?t.fx.speeds[n]:t.fx.speeds._default,e.complete=s||i.complete,e}function i(e){return!(e&&"number"!=typeof e&&!t.fx.speeds[e])||"string"==typeof e&&!t.effects.effect[e]||!!t.isFunction(e)||"object"==typeof e&&!e.effect}function n(t,e){var i=e.outerWidth(),n=e.outerHeight(),s=/^rect\((-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto),?\s*(-?\d*\.?\d*px|-?\d+%|auto)\)$/.exec(t)||["",0,i,n,0];return{top:parseFloat(s[1])||0,right:"auto"===s[2]?i:parseFloat(s[2]),bottom:"auto"===s[3]?n:parseFloat(s[3]),left:parseFloat(s[4])||0}}t.expr&&t.expr.filters&&t.expr.filters.animated&&(t.expr.filters.animated=function(e){return function(i){return!!t(i).data(c)||e(i)}}(t.expr.filters.animated)),!1!==t.uiBackCompat&&t.extend(t.effects,{save:function(t,e){for(var i=0,n=e.length;n>i;i++)null!==e[i]&&t.data(l+e[i],t[0].style[e[i]])},restore:function(t,e){for(var i,n=0,s=e.length;s>n;n++)null!==e[n]&&(i=t.data(l+e[n]),t.css(e[n],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),float:e.css("float")},n=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:e.width(),height:e.height()},r=document.activeElement;try{r.id}catch(t){r=document.body}return e.wrap(n),(e[0]===r||t.contains(e[0],r))&&t(r).trigger("focus"),n=e.parent(),"static"===e.css("position")?(n.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],(function(t,n){i[n]=e.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")})),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(s),n.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).trigger("focus")),e}}),t.extend(t.effects,{version:"1.12.1",define:function(e,i,n){return n||(n=i,i="effect"),t.effects.effect[e]=n,t.effects.effect[e].mode=i,n},scaledDimensions:function(t,e,i){if(0===e)return{height:0,width:0,outerHeight:0,outerWidth:0};var n="horizontal"!==i?(e||100)/100:1,s="vertical"!==i?(e||100)/100:1;return{height:t.height()*s,width:t.width()*n,outerHeight:t.outerHeight()*s,outerWidth:t.outerWidth()*n}},clipToBox:function(t){return{width:t.clip.right-t.clip.left,height:t.clip.bottom-t.clip.top,left:t.clip.left,top:t.clip.top}},unshift:function(t,e,i){var n=t.queue();e>1&&n.splice.apply(n,[1,0].concat(n.splice(e,i))),t.dequeue()},saveStyle:function(t){t.data(u,t[0].style.cssText)},restoreStyle:function(t){t[0].style.cssText=t.data(u)||"",t.removeData(u)},mode:function(t,e){var i=t.is(":hidden");return"toggle"===e&&(e=i?"show":"hide"),(i?"hide"===e:"show"===e)&&(e="none"),e},getBaseline:function(t,e){var i,n;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=t[1]/e.width}return{x:n,y:i}},createPlaceholder:function(e){var i,n=e.css("position"),s=e.position();return e.css({marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()),/^(static|relative)/.test(n)&&(n="absolute",i=t("<"+e[0].nodeName+">").insertAfter(e).css({display:/^(inline|ruby)/.test(e.css("display"))?"inline-block":"block",visibility:"hidden",marginTop:e.css("marginTop"),marginBottom:e.css("marginBottom"),marginLeft:e.css("marginLeft"),marginRight:e.css("marginRight"),float:e.css("float")}).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).addClass("ui-effects-placeholder"),e.data(l+"placeholder",i)),e.css({position:n,left:s.left,top:s.top}),i},removePlaceholder:function(t){var e=l+"placeholder",i=t.data(e);i&&(i.remove(),t.removeData(e))},cleanUp:function(e){t.effects.restoreStyle(e),t.effects.removePlaceholder(e)},setTransition:function(e,i,n,s){return s=s||{},t.each(i,(function(t,i){var r=e.cssUnit(i);r[0]>0&&(s[i]=r[0]*n+r[1])})),s}}),t.fn.extend({effect:function(){function i(e){function i(){t.isFunction(l)&&l.call(o[0]),t.isFunction(e)&&e()}var o=t(this);n.mode=h.shift(),!1===t.uiBackCompat||r?"none"===n.mode?(o[u](),i()):s.call(o[0],n,(function(){o.removeData(c),t.effects.cleanUp(o),"hide"===n.mode&&o.hide(),i()})):(o.is(":hidden")?"hide"===u:"show"===u)?(o[u](),i()):s.call(o[0],n,i)}var n=e.apply(this,arguments),s=t.effects.effect[n.effect],r=s.mode,o=n.queue,a=o||"fx",l=n.complete,u=n.mode,h=[],d=function(e){var i=t(this),n=t.effects.mode(i,u)||r;i.data(c,!0),h.push(n),r&&("show"===n||n===r&&"hide"===n)&&i.show(),r&&"none"===n||t.effects.saveStyle(i),t.isFunction(e)&&e()};return t.fx.off||!s?u?this[u](n.duration,l):this.each((function(){l&&l.call(this)})):!1===o?this.each(d).each(i):this.queue(a,d).queue(a,i)},show:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(t.fn.show),hide:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(t.fn.hide),toggle:function(t){return function(n){if(i(n)||"boolean"==typeof n)return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),n=[];return t.each(["em","px","%","pt"],(function(t,e){i.indexOf(e)>0&&(n=[parseFloat(i),e])})),n},cssClip:function(t){return t?this.css("clip","rect("+t.top+"px "+t.right+"px "+t.bottom+"px "+t.left+"px)"):n(this.css("clip"),this)},transfer:function(e,i){var n=t(this),s=t(e.to),r="fixed"===s.css("position"),o=t("body"),a=r?o.scrollTop():0,l=r?o.scrollLeft():0,u=s.offset(),c={top:u.top-a,left:u.left-l,height:s.innerHeight(),width:s.innerWidth()},h=n.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo("body").addClass(e.className).css({top:h.top-a,left:h.left-l,height:n.innerHeight(),width:n.innerWidth(),position:r?"fixed":"absolute"}).animate(c,e.duration,e.easing,(function(){d.remove(),t.isFunction(i)&&i()}))}}),t.fx.step.clip=function(e){e.clipInit||(e.start=t(e.elem).cssClip(),"string"==typeof e.end&&(e.end=n(e.end,e.elem)),e.clipInit=!0),t(e.elem).cssClip({top:e.pos*(e.end.top-e.start.top)+e.start.top,right:e.pos*(e.end.right-e.start.right)+e.start.right,bottom:e.pos*(e.end.bottom-e.start.bottom)+e.start.bottom,left:e.pos*(e.end.left-e.start.left)+e.start.left})}}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],(function(t,i){e[i]=function(e){return Math.pow(e,t+2)}})),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,(function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}}))}(),t.effects,t.effects.define("blind","hide",(function(e,i){var n={up:["bottom","top"],vertical:["bottom","top"],down:["top","bottom"],left:["right","left"],horizontal:["right","left"],right:["left","right"]},s=t(this),r=e.direction||"up",o=s.cssClip(),a={clip:t.extend({},o)},l=t.effects.createPlaceholder(s);a.clip[n[r][0]]=a.clip[n[r][1]],"show"===e.mode&&(s.cssClip(a.clip),l&&l.css(t.effects.clipToBox(a)),a.clip=o),l&&l.animate(t.effects.clipToBox(a),e.duration,e.easing),s.animate(a,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("bounce",(function(e,i){var n,s,r,o=t(this),a=e.mode,l="hide"===a,u="show"===a,c=e.direction||"up",h=e.distance,d=e.times||5,p=2*d+(u||l?1:0),f=e.duration/p,g=e.easing,m="up"===c||"down"===c?"top":"left",v="up"===c||"left"===c,y=0,b=o.queue().length;for(t.effects.createPlaceholder(o),r=o.css(m),h||(h=o["top"===m?"outerHeight":"outerWidth"]()/3),u&&((s={opacity:1})[m]=r,o.css("opacity",0).css(m,v?2*-h:2*h).animate(s,f,g)),l&&(h/=Math.pow(2,d-1)),(s={})[m]=r;d>y;y++)(n={})[m]=(v?"-=":"+=")+h,o.animate(n,f,g).animate(s,f,g),h=l?2*h:h/2;l&&((n={opacity:0})[m]=(v?"-=":"+=")+h,o.animate(n,f,g)),o.queue(i),t.effects.unshift(o,b,p+1)})),t.effects.define("clip","hide",(function(e,i){var n,s={},r=t(this),o=e.direction||"vertical",a="both"===o,l=a||"horizontal"===o,u=a||"vertical"===o;n=r.cssClip(),s.clip={top:u?(n.bottom-n.top)/2:n.top,right:l?(n.right-n.left)/2:n.right,bottom:u?(n.bottom-n.top)/2:n.bottom,left:l?(n.right-n.left)/2:n.left},t.effects.createPlaceholder(r),"show"===e.mode&&(r.cssClip(s.clip),s.clip=n),r.animate(s,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("drop","hide",(function(e,i){var n,s=t(this),r="show"===e.mode,o=e.direction||"left",a="up"===o||"down"===o?"top":"left",l="up"===o||"left"===o?"-=":"+=",u="+="===l?"-=":"+=",c={opacity:0};t.effects.createPlaceholder(s),n=e.distance||s["top"===a?"outerHeight":"outerWidth"](!0)/2,c[a]=l+n,r&&(s.css(c),c[a]=u+n,c.opacity=1),s.animate(c,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("explode","hide",(function(e,i){function n(){v.push(this),v.length===c*h&&(d.css({visibility:"visible"}),t(v).remove(),i())}var s,r,o,a,l,u,c=e.pieces?Math.round(Math.sqrt(e.pieces)):3,h=c,d=t(this),p="show"===e.mode,f=d.show().css("visibility","hidden").offset(),g=Math.ceil(d.outerWidth()/h),m=Math.ceil(d.outerHeight()/c),v=[];for(s=0;c>s;s++)for(a=f.top+s*m,u=s-(c-1)/2,r=0;h>r;r++)o=f.left+r*g,l=r-(h-1)/2,d.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-r*g,top:-s*m}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:g,height:m,left:o+(p?l*g:0),top:a+(p?u*m:0),opacity:p?0:1}).animate({left:o+(p?0:l*g),top:a+(p?0:u*m),opacity:p?1:0},e.duration||500,e.easing,n)})),t.effects.define("fade","toggle",(function(e,i){var n="show"===e.mode;t(this).css("opacity",n?0:1).animate({opacity:n?1:0},{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("fold","hide",(function(e,i){var n=t(this),s=e.mode,r="show"===s,o="hide"===s,a=e.size||15,l=/([0-9]+)%/.exec(a),u=e.horizFirst?["right","bottom"]:["bottom","right"],c=e.duration/2,h=t.effects.createPlaceholder(n),d=n.cssClip(),p={clip:t.extend({},d)},f={clip:t.extend({},d)},g=[d[u[0]],d[u[1]]],m=n.queue().length;l&&(a=parseInt(l[1],10)/100*g[o?0:1]),p.clip[u[0]]=a,f.clip[u[0]]=a,f.clip[u[1]]=0,r&&(n.cssClip(f.clip),h&&h.css(t.effects.clipToBox(f)),f.clip=d),n.queue((function(i){h&&h.animate(t.effects.clipToBox(p),c,e.easing).animate(t.effects.clipToBox(f),c,e.easing),i()})).animate(p,c,e.easing).animate(f,c,e.easing).queue(i),t.effects.unshift(n,m,4)})),t.effects.define("highlight","show",(function(e,i){var n=t(this),s={backgroundColor:n.css("backgroundColor")};"hide"===e.mode&&(s.opacity=0),t.effects.saveStyle(n),n.css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(s,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),t.effects.define("size",(function(e,i){var n,s,r,o=t(this),a=["fontSize"],l=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],u=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],c=e.mode,h="effect"!==c,d=e.scale||"both",p=e.origin||["middle","center"],f=o.css("position"),g=o.position(),m=t.effects.scaledDimensions(o),v=e.from||m,y=e.to||t.effects.scaledDimensions(o,0);t.effects.createPlaceholder(o),"show"===c&&(r=v,v=y,y=r),s={from:{y:v.height/m.height,x:v.width/m.width},to:{y:y.height/m.height,x:y.width/m.width}},("box"===d||"both"===d)&&(s.from.y!==s.to.y&&(v=t.effects.setTransition(o,l,s.from.y,v),y=t.effects.setTransition(o,l,s.to.y,y)),s.from.x!==s.to.x&&(v=t.effects.setTransition(o,u,s.from.x,v),y=t.effects.setTransition(o,u,s.to.x,y))),("content"===d||"both"===d)&&s.from.y!==s.to.y&&(v=t.effects.setTransition(o,a,s.from.y,v),y=t.effects.setTransition(o,a,s.to.y,y)),p&&(n=t.effects.getBaseline(p,m),v.top=(m.outerHeight-v.outerHeight)*n.y+g.top,v.left=(m.outerWidth-v.outerWidth)*n.x+g.left,y.top=(m.outerHeight-y.outerHeight)*n.y+g.top,y.left=(m.outerWidth-y.outerWidth)*n.x+g.left),o.css(v),("content"===d||"both"===d)&&(l=l.concat(["marginTop","marginBottom"]).concat(a),u=u.concat(["marginLeft","marginRight"]),o.find("*[width]").each((function(){var i=t(this),n=t.effects.scaledDimensions(i),r={height:n.height*s.from.y,width:n.width*s.from.x,outerHeight:n.outerHeight*s.from.y,outerWidth:n.outerWidth*s.from.x},o={height:n.height*s.to.y,width:n.width*s.to.x,outerHeight:n.height*s.to.y,outerWidth:n.width*s.to.x};s.from.y!==s.to.y&&(r=t.effects.setTransition(i,l,s.from.y,r),o=t.effects.setTransition(i,l,s.to.y,o)),s.from.x!==s.to.x&&(r=t.effects.setTransition(i,u,s.from.x,r),o=t.effects.setTransition(i,u,s.to.x,o)),h&&t.effects.saveStyle(i),i.css(r),i.animate(o,e.duration,e.easing,(function(){h&&t.effects.restoreStyle(i)}))}))),o.animate(y,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){var e=o.offset();0===y.opacity&&o.css("opacity",v.opacity),h||(o.css("position","static"===f?"relative":f).offset(e),t.effects.saveStyle(o)),i()}})})),t.effects.define("scale",(function(e,i){var n=t(this),s=e.mode,r=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"effect"!==s?0:100),o=t.extend(!0,{from:t.effects.scaledDimensions(n),to:t.effects.scaledDimensions(n,r,e.direction||"both"),origin:e.origin||["middle","center"]},e);e.fade&&(o.from.opacity=1,o.to.opacity=0),t.effects.effect.size.call(this,o,i)})),t.effects.define("puff","hide",(function(e,i){var n=t.extend(!0,{},e,{fade:!0,percent:parseInt(e.percent,10)||150});t.effects.effect.scale.call(this,n,i)})),t.effects.define("pulsate","show",(function(e,i){var n=t(this),s=e.mode,r="show"===s,o=r||"hide"===s,a=2*(e.times||5)+(o?1:0),l=e.duration/a,u=0,c=1,h=n.queue().length;for((r||!n.is(":visible"))&&(n.css("opacity",0).show(),u=1);a>c;c++)n.animate({opacity:u},l,e.easing),u=1-u;n.animate({opacity:u},l,e.easing),n.queue(i),t.effects.unshift(n,h,a+1)})),t.effects.define("shake",(function(e,i){var n=1,s=t(this),r=e.direction||"left",o=e.distance||20,a=e.times||3,l=2*a+1,u=Math.round(e.duration/l),c="up"===r||"down"===r?"top":"left",h="up"===r||"left"===r,d={},p={},f={},g=s.queue().length;for(t.effects.createPlaceholder(s),d[c]=(h?"-=":"+=")+o,p[c]=(h?"+=":"-=")+2*o,f[c]=(h?"-=":"+=")+2*o,s.animate(d,u,e.easing);a>n;n++)s.animate(p,u,e.easing).animate(f,u,e.easing);s.animate(p,u,e.easing).animate(d,u/2,e.easing).queue(i),t.effects.unshift(s,g,l+1)})),t.effects.define("slide","show",(function(e,i){var n,s,r=t(this),o={up:["bottom","top"],down:["top","bottom"],left:["right","left"],right:["left","right"]},a=e.mode,l=e.direction||"left",u="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l,h=e.distance||r["top"===u?"outerHeight":"outerWidth"](!0),d={};t.effects.createPlaceholder(r),n=r.cssClip(),s=r.position()[u],d[u]=(c?-1:1)*h+s,d.clip=r.cssClip(),d.clip[o[l][1]]=d.clip[o[l][0]],"show"===a&&(r.cssClip(d.clip),r.css(u,d[u]),d.clip=n,d[u]=s),r.animate(d,{queue:!1,duration:e.duration,easing:e.easing,complete:i})})),!1!==t.uiBackCompat&&t.effects.define("transfer",(function(e,i){t(this).transfer(e,i)})),t.ui.focusable=function(e,i){var n,s,r,o,a,l=e.nodeName.toLowerCase();return"area"===l?(s=(n=e.parentNode).name,!(!e.href||!s||"map"!==n.nodeName.toLowerCase())&&(r=t("img[usemap='#"+s+"']")).length>0&&r.is(":visible")):(/^(input|select|textarea|button|object)$/.test(l)?(o=!e.disabled)&&(a=t(e).closest("fieldset")[0])&&(o=!a.disabled):o="a"===l&&e.href||i,o&&t(e).is(":visible")&&function(t){for(var e=t.css("visibility");"inherit"===e;)e=(t=t.parent()).css("visibility");return"hidden"!==e}(t(e)))},t.extend(t.expr[":"],{focusable:function(e){return t.ui.focusable(e,null!=t.attr(e,"tabindex"))}}),t.ui.focusable,t.fn.form=function(){return"string"==typeof this[0].form?this.closest("form"):t(this[0].form)},t.ui.formResetMixin={_formResetHandler:function(){var e=t(this);setTimeout((function(){var i=e.data("ui-form-reset-instances");t.each(i,(function(){this.refresh()}))}))},_bindFormResetHandler:function(){if(this.form=this.element.form(),this.form.length){var t=this.form.data("ui-form-reset-instances")||[];t.length||this.form.on("reset.ui-form-reset",this._formResetHandler),t.push(this),this.form.data("ui-form-reset-instances",t)}},_unbindFormResetHandler:function(){if(this.form.length){var e=this.form.data("ui-form-reset-instances");e.splice(t.inArray(this,e),1),e.length?this.form.data("ui-form-reset-instances",e):this.form.removeData("ui-form-reset-instances").off("reset.ui-form-reset")}}},"1.7"===t.fn.jquery.substring(0,3)&&(t.each(["Width","Height"],(function(e,i){function n(e,i,n,r){return t.each(s,(function(){i-=parseFloat(t.css(e,"padding"+this))||0,n&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),r&&(i-=parseFloat(t.css(e,"margin"+this))||0)})),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],r=i.toLowerCase(),o={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?o["inner"+i].call(this):this.each((function(){t(this).css(r,n(this,e)+"px")}))},t.fn["outer"+i]=function(e,s){return"number"!=typeof e?o["outer"+i].call(this,e):this.each((function(){t(this).css(r,n(this,e,!0,s)+"px")}))}})),t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.ui.keyCode={BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38},t.ui.escapeSelector=function(){var t=/([!"#$%&'()*+,.\/:;<=>?@[\]^`{|}~])/g;return function(e){return e.replace(t,"\\$1")}}(),t.fn.labels=function(){var e,i,n,s,r;return this[0].labels&&this[0].labels.length?this.pushStack(this[0].labels):(s=this.eq(0).parents("label"),(n=this.attr("id"))&&(r=(e=this.eq(0).parents().last()).add(e.length?e.siblings():this.siblings()),i="label[for='"+t.ui.escapeSelector(n)+"']",s=s.add(r.find(i).addBack(i))),this.pushStack(s))},t.fn.scrollParent=function(e){var i=this.css("position"),n="absolute"===i,s=e?/(auto|scroll|hidden)/:/(auto|scroll)/,r=this.parents().filter((function(){var e=t(this);return(!n||"static"!==e.css("position"))&&s.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))})).eq(0);return"fixed"!==i&&r.length?r:t(this[0].ownerDocument||document)},t.extend(t.expr[":"],{tabbable:function(e){var i=t.attr(e,"tabindex"),n=null!=i;return(!n||i>=0)&&t.ui.focusable(e,n)}}),t.fn.extend({uniqueId:function(){var t=0;return function(){return this.each((function(){this.id||(this.id="ui-id-"+ ++t)}))}}(),removeUniqueId:function(){return this.each((function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")}))}}),t.widget("ui.accordion",{version:"1.12.1",options:{active:0,animate:{},classes:{"ui-accordion-header":"ui-corner-top","ui-accordion-header-collapsed":"ui-corner-all","ui-accordion-content":"ui-corner-bottom"},collapsible:!1,event:"click",header:"> li > :first-child, > :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this._addClass("ui-accordion","ui-widget ui-helper-reset"),this.element.attr("role","tablist"),e.collapsible||!1!==e.active&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e,i,n=this.options.icons;n&&(e=t("<span>"),this._addClass(e,"ui-accordion-header-icon","ui-icon "+n.header),e.prependTo(this.headers),i=this.active.children(".ui-accordion-header-icon"),this._removeClass(i,n.header)._addClass(i,null,n.activeHeader)._addClass(this.headers,"ui-accordion-icons"))},_destroyIcons:function(){this._removeClass(this.headers,"ui-accordion-icons"),this.headers.children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeAttr("role"),this.headers.removeAttr("role aria-expanded aria-selected aria-controls tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().css("display","").removeAttr("role aria-hidden aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){return"active"===t?void this._activate(e):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||!1!==this.options.active||this._activate(0),void("icons"===t&&(this._destroyIcons(),e&&this._createIcons())))},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t),this._toggleClass(this.headers.add(this.headers.next()),null,"ui-state-disabled",!!t)},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,n=this.headers.length,s=this.headers.index(e.target),r=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:r=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:r=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:r=this.headers[0];break;case i.END:r=this.headers[n-1]}r&&(t(e.target).attr("tabIndex",-1),t(r).attr("tabIndex",0),t(r).trigger("focus"),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().trigger("focus")},refresh:function(){var e=this.options;this._processPanels(),!1===e.active&&!0===e.collapsible||!this.headers.length?(e.active=!1,this.active=t()):!1===e.active?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header),this._addClass(this.headers,"ui-accordion-header ui-accordion-header-collapsed","ui-state-default"),this.panels=this.headers.next().filter(":not(.ui-accordion-content-active)").hide(),this._addClass(this.panels,"ui-accordion-content","ui-helper-reset ui-widget-content"),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active),this._addClass(this.active,"ui-accordion-header-active","ui-state-active")._removeClass(this.active,"ui-accordion-header-collapsed"),this._addClass(this.active.next(),"ui-accordion-content-active"),this.active.next().show(),this.headers.attr("role","tab").each((function(){var e=t(this),i=e.uniqueId().attr("id"),n=e.next(),s=n.uniqueId().attr("id");e.attr("aria-controls",s),n.attr("aria-labelledby",i)})).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===n?(e=s.height(),this.element.siblings(":visible").each((function(){var i=t(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(e-=i.outerHeight(!0))})),this.headers.each((function(){e-=t(this).outerHeight(!0)})),this.headers.next().each((function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))})).css("overflow","auto")):"auto"===n&&(e=0,this.headers.next().each((function(){var i=t(this).is(":visible");i||t(this).show(),e=Math.max(e,t(this).css("height","").height()),i||t(this).hide()})).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),(function(t,e){i[e]="_eventHandler"})),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i,n,s=this.options,r=this.active,o=t(e.currentTarget),a=o[0]===r[0],l=a&&s.collapsible,u=l?t():o.next(),c=r.next(),h={oldHeader:r,oldPanel:c,newHeader:l?t():o,newPanel:u};e.preventDefault(),a&&!s.collapsible||!1===this._trigger("beforeActivate",e,h)||(s.active=!l&&this.headers.index(o),this.active=a?t():o,this._toggle(h),this._removeClass(r,"ui-accordion-header-active","ui-state-active"),s.icons&&(i=r.children(".ui-accordion-header-icon"),this._removeClass(i,null,s.icons.activeHeader)._addClass(i,null,s.icons.header)),a||(this._removeClass(o,"ui-accordion-header-collapsed")._addClass(o,"ui-accordion-header-active","ui-state-active"),s.icons&&(n=o.children(".ui-accordion-header-icon"),this._removeClass(n,null,s.icons.header)._addClass(n,null,s.icons.activeHeader)),this._addClass(o.next(),"ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,n=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,e):(n.hide(),i.show(),this._toggleComplete(e)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter((function(){return 0===parseInt(t(this).attr("tabIndex"),10)})).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var n,s,r,o=this,a=0,l=t.css("box-sizing"),u=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},h=u&&c.down||c,d=function(){o._toggleComplete(i)};return"number"==typeof h&&(r=h),"string"==typeof h&&(s=h),s=s||h.easing||c.easing,r=r||h.duration||c.duration,e.length?t.length?(n=t.show().outerHeight(),e.animate(this.hideProps,{duration:r,easing:s,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(this.showProps,{duration:r,easing:s,complete:d,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===l&&(a+=i.now):"content"!==o.options.heightStyle&&(i.now=Math.round(n-e.outerHeight()-a),a=0)}})):e.animate(this.hideProps,r,s,d):t.animate(this.showProps,r,s,d)},_toggleComplete:function(t){var e=t.oldPanel,i=e.prev();this._removeClass(e,"ui-accordion-content-active"),this._removeClass(i,"ui-accordion-header-active")._addClass(i,"ui-accordion-header-collapsed"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.ui.safeActiveElement=function(t){var e;try{e=t.activeElement}catch(i){e=t.body}return e||(e=t.body),e.nodeName||(e=t.body),e},t.widget("ui.menu",{version:"1.12.1",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-caret-1-e"},items:"> *",menus:"ul",position:{my:"left top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().attr({role:this.options.role,tabIndex:0}),this._addClass("ui-menu","ui-widget ui-widget-content"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(e){var i=t(e.target),n=t(t.ui.safeActiveElement(this.document[0]));!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&n.closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){if(!this.previousFilter){var i=t(e.target).closest(".ui-menu-item"),n=t(e.currentTarget);i[0]===n[0]&&(this._removeClass(n.siblings().children(".ui-state-active"),null,"ui-state-active"),this.focus(e,n))}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay((function(){!t.contains(this.element[0],t.ui.safeActiveElement(this.document[0]))&&this.collapseAll(e)}))},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){var e=this.element.find(".ui-menu-item").removeAttr("role aria-disabled").children(".ui-menu-item-wrapper").removeUniqueId().removeAttr("tabIndex role aria-haspopup");this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeAttr("role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex").removeUniqueId().show(),e.children().each((function(){var e=t(this);e.data("ui-menu-submenu-caret")&&e.remove()}))},_keydown:function(e){var i,n,s,r,o=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:o=!1,n=this.previousFilter||"",r=!1,s=e.keyCode>=96&&105>=e.keyCode?""+(e.keyCode-96):String.fromCharCode(e.keyCode),clearTimeout(this.filterTimer),s===n?r=!0:s=n+s,i=this._filterMenuItems(s),(i=r&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i).length||(s=String.fromCharCode(e.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(e,i),this.previousFilter=s,this.filterTimer=this._delay((function(){delete this.previousFilter}),1e3)):delete this.previousFilter}o&&e.preventDefault()},_activate:function(t){this.active&&!this.active.is(".ui-state-disabled")&&(this.active.children("[aria-haspopup='true']").length?this.expand(t):this.select(t))},refresh:function(){var e,i,n,s,r=this,o=this.options.icons.submenu,a=this.element.find(this.options.menus);this._toggleClass("ui-menu-icons",null,!!this.element.find(".ui-icon").length),i=a.filter(":not(.ui-menu)").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each((function(){var e=t(this),i=e.prev(),n=t("<span>").data("ui-menu-submenu-caret",!0);r._addClass(n,"ui-menu-icon","ui-icon "+o),i.attr("aria-haspopup","true").prepend(n),e.attr("aria-labelledby",i.attr("id"))})),this._addClass(i,"ui-menu","ui-widget ui-widget-content ui-front"),(e=a.add(this.element).find(this.options.items)).not(".ui-menu-item").each((function(){var e=t(this);r._isDivider(e)&&r._addClass(e,"ui-menu-divider","ui-widget-content")})),s=(n=e.not(".ui-menu-item, .ui-menu-divider")).children().not(".ui-menu").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),this._addClass(n,"ui-menu-item")._addClass(s,"ui-menu-item-wrapper"),e.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){if("icons"===t){var i=this.element.find(".ui-menu-icon");this._removeClass(i,null,this.options.icons.submenu)._addClass(i,null,e.submenu)}this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t+""),this._toggleClass(null,"ui-state-disabled",!!t)},focus:function(t,e){var i,n,s;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),n=this.active.children(".ui-menu-item-wrapper"),this._addClass(n,null,"ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),s=this.active.parent().closest(".ui-menu-item").children(".ui-menu-item-wrapper"),this._addClass(s,null,"ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay((function(){this._close()}),this.delay),(i=e.children(".ui-menu")).length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,n,s,r,o,a;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,s=e.offset().top-this.activeMenu.offset().top-i-n,r=this.activeMenu.scrollTop(),o=this.activeMenu.height(),a=e.outerHeight(),0>s?this.activeMenu.scrollTop(r+s):s+a>o&&this.activeMenu.scrollTop(r+s-o+a))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this._removeClass(this.active.children(".ui-menu-item-wrapper"),null,"ui-state-active"),this._trigger("blur",t,{item:this.active}),this.active=null)},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay((function(){this._close(),this._open(t)}),this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay((function(){var n=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(e),this._removeClass(n.find(".ui-state-active"),null,"ui-state-active"),this.activeMenu=n}),this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay((function(){this.focus(t,e)})))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var n;this.active&&(n="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[e]()),this.focus(i,n)},nextPage:function(e){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each((function(){return 0>(i=t(this)).offset().top-n-s})),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(e)},previousPage:function(e){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each((function(){return(i=t(this)).offset().top-n+s>0})),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first()))):void this.next(e)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter((function(){return n.test(t.trim(t(this).children(".ui-menu-item-wrapper").text()))}))}}),t.widget("ui.autocomplete",{version:"1.12.1",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,n,s=this.element[0].nodeName.toLowerCase(),r="textarea"===s,o="input"===s;this.isMultiLine=r||!o&&this._isContentEditable(this.element),this.valueMethod=this.element[r||o?"val":"text"],this.isNewMenu=!0,this._addClass("ui-autocomplete-input"),this.element.attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return e=!0,n=!0,void(i=!0);e=!1,n=!1,i=!1;var r=t.ui.keyCode;switch(s.keyCode){case r.PAGE_UP:e=!0,this._move("previousPage",s);break;case r.PAGE_DOWN:e=!0,this._move("nextPage",s);break;case r.UP:e=!0,this._keyEvent("previous",s);break;case r.DOWN:e=!0,this._keyEvent("next",s);break;case r.ENTER:this.menu.active&&(e=!0,s.preventDefault(),this.menu.select(s));break;case r.TAB:this.menu.active&&this.menu.select(s);break;case r.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(e)return e=!1,void((!this.isMultiLine||this.menu.element.is(":visible"))&&n.preventDefault());if(!i){var s=t.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(t){return n?(n=!1,void t.preventDefault()):void this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(t),void this._change(t))}}),this._initSource(),this.menu=t("<ul>").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._addClass(this.menu.element,"ui-autocomplete","ui-front"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay((function(){delete this.cancelBlur,this.element[0]!==t.ui.safeActiveElement(this.document[0])&&this.element.trigger("focus")}))},menufocus:function(e,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",(function(){t(e.target).trigger(e.originalEvent)}))):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:s})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(s.value),void((n=i.item.attr("aria-label")||s.value)&&t.trim(n).length&&(this.liveRegion.children().hide(),t("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(e,i){var n=i.item.data("ui-autocomplete-item"),s=this.previous;this.element[0]!==t.ui.safeActiveElement(this.document[0])&&(this.element.trigger("focus"),this.previous=s,this._delay((function(){this.previous=s,this.selectedItem=n}))),!1!==this._trigger("select",e,{item:n})&&this._value(n.value),this.term=this._value(),this.close(e),this.selectedItem=n}}),this.liveRegion=t("<div>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_isEventTargetInWidget:function(e){var i=this.menu.element[0];return e.target===this.element[0]||e.target===i||t.contains(i,e.target)},_closeOnClickOutside:function(t){this._isEventTargetInWidget(t)||this.close()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,n=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,n){n(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,s){n.xhr&&n.xhr.abort(),n.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){s(t)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay((function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),n=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!n)&&(this.selectedItem=null,this.search(null,t))}),this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):!1!==this._trigger("search",e)?this._search(t):void 0},_search:function(t){this.pending++,this._addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy((function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this._removeClass("ui-autocomplete-loading")}),this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this._off(this.document,"mousedown"),this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,(function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})}))},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next(),this._on(this.document,{mousedown:"_closeOnClickOutside"})},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var n=this;t.each(i,(function(t,i){n._renderItemData(e,i)}))},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").append(t("<div>").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e):void this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault())},_isContentEditable:function(t){if(!t.length)return!1;var e=t.prop("contentEditable");return"inherit"===e?this._isContentEditable(t.parent()):"true"===e}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var n=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,(function(t){return n.test(t.label||t.value||t)}))}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion))}}),t.ui.autocomplete;var d,p=/ui-corner-([a-z]){2,6}/g;t.widget("ui.controlgroup",{version:"1.12.1",defaultElement:"<div>",options:{direction:"horizontal",disabled:null,onlyVisible:!0,items:{button:"input[type=button], input[type=submit], input[type=reset], button, a",controlgroupLabel:".ui-controlgroup-label",checkboxradio:"input[type='checkbox'], input[type='radio']",selectmenu:"select",spinner:".ui-spinner-input"}},_create:function(){this._enhance()},_enhance:function(){this.element.attr("role","toolbar"),this.refresh()},_destroy:function(){this._callChildMethod("destroy"),this.childWidgets.removeData("ui-controlgroup-data"),this.element.removeAttr("role"),this.options.items.controlgroupLabel&&this.element.find(this.options.items.controlgroupLabel).find(".ui-controlgroup-label-contents").contents().unwrap()},_initWidgets:function(){var e=this,i=[];t.each(this.options.items,(function(n,s){var r,o={};return s?"controlgroupLabel"===n?((r=e.element.find(s)).each((function(){var e=t(this);e.children(".ui-controlgroup-label-contents").length||e.contents().wrapAll("<span class='ui-controlgroup-label-contents'></span>")})),e._addClass(r,null,"ui-widget ui-widget-content ui-state-default"),void(i=i.concat(r.get()))):void(t.fn[n]&&(o=e["_"+n+"Options"]?e["_"+n+"Options"]("middle"):{classes:{}},e.element.find(s).each((function(){var s=t(this),r=s[n]("instance"),a=t.widget.extend({},o);if("button"!==n||!s.parent(".ui-spinner").length){r||(r=s[n]()[n]("instance")),r&&(a.classes=e._resolveClassesValues(a.classes,r)),s[n](a);var l=s[n]("widget");t.data(l[0],"ui-controlgroup-data",r||s[n]("instance")),i.push(l[0])}})))):void 0})),this.childWidgets=t(t.unique(i)),this._addClass(this.childWidgets,"ui-controlgroup-item")},_callChildMethod:function(e){this.childWidgets.each((function(){var i=t(this).data("ui-controlgroup-data");i&&i[e]&&i[e]()}))},_updateCornerClass:function(t,e){var i=this._buildSimpleOptions(e,"label").classes.label;this._removeClass(t,null,"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all"),this._addClass(t,null,i)},_buildSimpleOptions:function(t,e){var i="vertical"===this.options.direction,n={classes:{}};return n.classes[e]={middle:"",first:"ui-corner-"+(i?"top":"left"),last:"ui-corner-"+(i?"bottom":"right"),only:"ui-corner-all"}[t],n},_spinnerOptions:function(t){var e=this._buildSimpleOptions(t,"ui-spinner");return e.classes["ui-spinner-up"]="",e.classes["ui-spinner-down"]="",e},_buttonOptions:function(t){return this._buildSimpleOptions(t,"ui-button")},_checkboxradioOptions:function(t){return this._buildSimpleOptions(t,"ui-checkboxradio-label")},_selectmenuOptions:function(t){var e="vertical"===this.options.direction;return{width:!!e&&"auto",classes:{middle:{"ui-selectmenu-button-open":"","ui-selectmenu-button-closed":""},first:{"ui-selectmenu-button-open":"ui-corner-"+(e?"top":"tl"),"ui-selectmenu-button-closed":"ui-corner-"+(e?"top":"left")},last:{"ui-selectmenu-button-open":e?"":"ui-corner-tr","ui-selectmenu-button-closed":"ui-corner-"+(e?"bottom":"right")},only:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"}}[t]}},_resolveClassesValues:function(e,i){var n={};return t.each(e,(function(s){var r=i.options.classes[s]||"";r=t.trim(r.replace(p,"")),n[s]=(r+" "+e[s]).replace(/\s+/g," ")})),n},_setOption:function(t,e){return"direction"===t&&this._removeClass("ui-controlgroup-"+this.options.direction),this._super(t,e),"disabled"===t?void this._callChildMethod(e?"disable":"enable"):void this.refresh()},refresh:function(){var e,i=this;this._addClass("ui-controlgroup ui-controlgroup-"+this.options.direction),"horizontal"===this.options.direction&&this._addClass(null,"ui-helper-clearfix"),this._initWidgets(),e=this.childWidgets,this.options.onlyVisible&&(e=e.filter(":visible")),e.length&&(t.each(["first","last"],(function(t,n){var s=e[n]().data("ui-controlgroup-data");if(s&&i["_"+s.widgetName+"Options"]){var r=i["_"+s.widgetName+"Options"](1===e.length?"only":n);r.classes=i._resolveClassesValues(r.classes,s),s.element[s.widgetName](r)}else i._updateCornerClass(e[n](),n)})),this._callChildMethod("refresh"))}}),t.widget("ui.checkboxradio",[t.ui.formResetMixin,{version:"1.12.1",options:{disabled:null,label:null,icon:!0,classes:{"ui-checkboxradio-label":"ui-corner-all","ui-checkboxradio-icon":"ui-corner-all"}},_getCreateOptions:function(){var e,i,n=this,s=this._super()||{};return this._readType(),i=this.element.labels(),this.label=t(i[i.length-1]),this.label.length||t.error("No label found for checkboxradio widget"),this.originalLabel="",this.label.contents().not(this.element[0]).each((function(){n.originalLabel+=3===this.nodeType?t(this).text():this.outerHTML})),this.originalLabel&&(s.label=this.originalLabel),null!=(e=this.element[0].disabled)&&(s.disabled=e),s},_create:function(){var t=this.element[0].checked;this._bindFormResetHandler(),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled),this._setOption("disabled",this.options.disabled),this._addClass("ui-checkboxradio","ui-helper-hidden-accessible"),this._addClass(this.label,"ui-checkboxradio-label","ui-button ui-widget"),"radio"===this.type&&this._addClass(this.label,"ui-checkboxradio-radio-label"),this.options.label&&this.options.label!==this.originalLabel?this._updateLabel():this.originalLabel&&(this.options.label=this.originalLabel),this._enhance(),t&&(this._addClass(this.label,"ui-checkboxradio-checked","ui-state-active"),this.icon&&this._addClass(this.icon,null,"ui-state-hover")),this._on({change:"_toggleClasses",focus:function(){this._addClass(this.label,null,"ui-state-focus ui-visual-focus")},blur:function(){this._removeClass(this.label,null,"ui-state-focus ui-visual-focus")}})},_readType:function(){var e=this.element[0].nodeName.toLowerCase();this.type=this.element[0].type,"input"===e&&/radio|checkbox/.test(this.type)||t.error("Can't create checkboxradio on element.nodeName="+e+" and element.type="+this.type)},_enhance:function(){this._updateIcon(this.element[0].checked)},widget:function(){return this.label},_getRadioGroup:function(){var e=this.element[0].name,i="input[name='"+t.ui.escapeSelector(e)+"']";return e?(this.form.length?t(this.form[0].elements).filter(i):t(i).filter((function(){return 0===t(this).form().length}))).not(this.element):t([])},_toggleClasses:function(){var e=this.element[0].checked;this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",e),this.options.icon&&"checkbox"===this.type&&this._toggleClass(this.icon,null,"ui-icon-check ui-state-checked",e)._toggleClass(this.icon,null,"ui-icon-blank",!e),"radio"===this.type&&this._getRadioGroup().each((function(){var e=t(this).checkboxradio("instance");e&&e._removeClass(e.label,"ui-checkboxradio-checked","ui-state-active")}))},_destroy:function(){this._unbindFormResetHandler(),this.icon&&(this.icon.remove(),this.iconSpace.remove())},_setOption:function(t,e){return"label"!==t||e?(this._super(t,e),"disabled"===t?(this._toggleClass(this.label,null,"ui-state-disabled",e),void(this.element[0].disabled=e)):void this.refresh()):void 0},_updateIcon:function(e){var i="ui-icon ui-icon-background ";this.options.icon?(this.icon||(this.icon=t("<span>"),this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-checkboxradio-icon-space")),"checkbox"===this.type?(i+=e?"ui-icon-check ui-state-checked":"ui-icon-blank",this._removeClass(this.icon,null,e?"ui-icon-blank":"ui-icon-check")):i+="ui-icon-blank",this._addClass(this.icon,"ui-checkboxradio-icon",i),e||this._removeClass(this.icon,null,"ui-icon-check ui-state-checked"),this.icon.prependTo(this.label).after(this.iconSpace)):void 0!==this.icon&&(this.icon.remove(),this.iconSpace.remove(),delete this.icon)},_updateLabel:function(){var t=this.label.contents().not(this.element[0]);this.icon&&(t=t.not(this.icon[0])),this.iconSpace&&(t=t.not(this.iconSpace[0])),t.remove(),this.label.append(this.options.label)},refresh:function(){var t=this.element[0].checked,e=this.element[0].disabled;this._updateIcon(t),this._toggleClass(this.label,"ui-checkboxradio-checked","ui-state-active",t),null!==this.options.label&&this._updateLabel(),e!==this.options.disabled&&this._setOptions({disabled:e})}}]),t.ui.checkboxradio,t.widget("ui.button",{version:"1.12.1",defaultElement:"<button>",options:{classes:{"ui-button":"ui-corner-all"},disabled:null,icon:null,iconPosition:"beginning",label:null,showLabel:!0},_getCreateOptions:function(){var t,e=this._super()||{};return this.isInput=this.element.is("input"),null!=(t=this.element[0].disabled)&&(e.disabled=t),this.originalLabel=this.isInput?this.element.val():this.element.html(),this.originalLabel&&(e.label=this.originalLabel),e},_create:function(){!this.option.showLabel&!this.options.icon&&(this.options.showLabel=!0),null==this.options.disabled&&(this.options.disabled=this.element[0].disabled||!1),this.hasTitle=!!this.element.attr("title"),this.options.label&&this.options.label!==this.originalLabel&&(this.isInput?this.element.val(this.options.label):this.element.html(this.options.label)),this._addClass("ui-button","ui-widget"),this._setOption("disabled",this.options.disabled),this._enhance(),this.element.is("a")&&this._on({keyup:function(e){e.keyCode===t.ui.keyCode.SPACE&&(e.preventDefault(),this.element[0].click?this.element[0].click():this.element.trigger("click"))}})},_enhance:function(){this.element.is("button")||this.element.attr("role","button"),this.options.icon&&(this._updateIcon("icon",this.options.icon),this._updateTooltip())},_updateTooltip:function(){this.title=this.element.attr("title"),this.options.showLabel||this.title||this.element.attr("title",this.options.label)},_updateIcon:function(e,i){var n="iconPosition"!==e,s=n?this.options.iconPosition:i,r="top"===s||"bottom"===s;this.icon?n&&this._removeClass(this.icon,null,this.options.icon):(this.icon=t("<span>"),this._addClass(this.icon,"ui-button-icon","ui-icon"),this.options.showLabel||this._addClass("ui-button-icon-only")),n&&this._addClass(this.icon,null,i),this._attachIcon(s),r?(this._addClass(this.icon,null,"ui-widget-icon-block"),this.iconSpace&&this.iconSpace.remove()):(this.iconSpace||(this.iconSpace=t("<span> </span>"),this._addClass(this.iconSpace,"ui-button-icon-space")),this._removeClass(this.icon,null,"ui-wiget-icon-block"),this._attachIconSpace(s))},_destroy:function(){this.element.removeAttr("role"),this.icon&&this.icon.remove(),this.iconSpace&&this.iconSpace.remove(),this.hasTitle||this.element.removeAttr("title")},_attachIconSpace:function(t){this.icon[/^(?:end|bottom)/.test(t)?"before":"after"](this.iconSpace)},_attachIcon:function(t){this.element[/^(?:end|bottom)/.test(t)?"append":"prepend"](this.icon)},_setOptions:function(t){var e=void 0===t.showLabel?this.options.showLabel:t.showLabel,i=void 0===t.icon?this.options.icon:t.icon;e||i||(t.showLabel=!0),this._super(t)},_setOption:function(t,e){"icon"===t&&(e?this._updateIcon(t,e):this.icon&&(this.icon.remove(),this.iconSpace&&this.iconSpace.remove())),"iconPosition"===t&&this._updateIcon(t,e),"showLabel"===t&&(this._toggleClass("ui-button-icon-only",null,!e),this._updateTooltip()),"label"===t&&(this.isInput?this.element.val(e):(this.element.html(e),this.icon&&(this._attachIcon(this.options.iconPosition),this._attachIconSpace(this.options.iconPosition)))),this._super(t,e),"disabled"===t&&(this._toggleClass(null,"ui-state-disabled",e),this.element[0].disabled=e,e&&this.element.blur())},refresh:function(){var t=this.element.is("input, button")?this.element[0].disabled:this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOptions({disabled:t}),this._updateTooltip()}}),!1!==t.uiBackCompat&&(t.widget("ui.button",t.ui.button,{options:{text:!0,icons:{primary:null,secondary:null}},_create:function(){this.options.showLabel&&!this.options.text&&(this.options.showLabel=this.options.text),!this.options.showLabel&&this.options.text&&(this.options.text=this.options.showLabel),this.options.icon||!this.options.icons.primary&&!this.options.icons.secondary?this.options.icon&&(this.options.icons.primary=this.options.icon):this.options.icons.primary?this.options.icon=this.options.icons.primary:(this.options.icon=this.options.icons.secondary,this.options.iconPosition="end"),this._super()},_setOption:function(t,e){return"text"===t?void this._super("showLabel",e):("showLabel"===t&&(this.options.text=e),"icon"===t&&(this.options.icons.primary=e),"icons"===t&&(e.primary?(this._super("icon",e.primary),this._super("iconPosition","beginning")):e.secondary&&(this._super("icon",e.secondary),this._super("iconPosition","end"))),void this._superApply(arguments))}}),t.fn.button=function(e){return function(){return!this.length||this.length&&"INPUT"!==this[0].tagName||this.length&&"INPUT"===this[0].tagName&&"checkbox"!==this.attr("type")&&"radio"!==this.attr("type")?e.apply(this,arguments):(t.ui.checkboxradio||t.error("Checkboxradio widget missing"),0===arguments.length?this.checkboxradio({icon:!1}):this.checkboxradio.apply(this,arguments))}}(t.fn.button),t.fn.buttonset=function(){return t.ui.controlgroup||t.error("Controlgroup widget missing"),"option"===arguments[0]&&"items"===arguments[1]&&arguments[2]?this.controlgroup.apply(this,[arguments[0],"items.button",arguments[2]]):"option"===arguments[0]&&"items"===arguments[1]?this.controlgroup.apply(this,[arguments[0],"items.button"]):("object"==typeof arguments[0]&&arguments[0].items&&(arguments[0].items={button:arguments[0].items}),this.controlgroup.apply(this,arguments))}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.12.1"}}),t.extend(e.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return s(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var n,s,r;s="div"===(n=e.nodeName.toLowerCase())||"span"===n,e.id||(this.uuid+=1,e.id="dp"+this.uuid),(r=this._newInst(t(e),s)).settings=t.extend({},i||{}),"input"===n?this._connectDatepicker(e,r):s&&this._inlineDatepicker(e,r)},_newInst:function(e,n){return{id:e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1"),input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:n,dpDiv:n?i(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var n=t(e);i.append=t([]),i.trigger=t([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).on("keydown",this._doKeyDown).on("keypress",this._doKeyPress).on("keyup",this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var n,s,r,o=this._get(i,"appendText"),a=this._get(i,"isRTL");i.append&&i.append.remove(),o&&(i.append=t("<span class='"+this._appendClass+"'>"+o+"</span>"),e[a?"before":"after"](i.append)),e.off("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),("focus"===(n=this._get(i,"showOn"))||"both"===n)&&e.on("focus",this._showDatepicker),("button"===n||"both"===n)&&(s=this._get(i,"buttonText"),r=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:r,alt:s,title:s}):t("<button type='button'></button>").addClass(this._triggerClass).html(r?t("<img/>").attr({src:r,alt:s,title:s}):s)),e[a?"before":"after"](i.trigger),i.trigger.on("click",(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1})))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,n,s,r=new Date(2009,11,20),o=this._get(t,"dateFormat");o.match(/[DM]/)&&(e=function(t){for(i=0,n=0,s=0;t.length>s;s++)t[s].length>i&&(i=t[s].length,n=s);return n},r.setMonth(e(this._get(t,o.match(/MM/)?"monthNames":"monthNamesShort"))),r.setDate(e(this._get(t,o.match(/DD/)?"dayNames":"dayNamesShort"))+20-r.getDay())),t.input.attr("size",this._formatDate(t,r).length)}},_inlineDatepicker:function(e,i){var n=t(e);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,n,r,o){var a,l,u,c,h,d=this._dialogInst;return d||(this.uuid+=1,a="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+a+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.on("keydown",this._doKeyDown),t("body").append(this._dialogInput),(d=this._dialogInst=this._newInst(this._dialogInput,!1)).settings={},t.data(this._dialogInput[0],"datepicker",d)),s(d.settings,r||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(l=document.documentElement.clientWidth,u=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,h=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+c,u/2-150+h]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,n=t(e),s=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).off("focus",this._showDatepicker).off("keydown",this._doKeyDown).off("keypress",this._doKeyPress).off("keyup",this._doKeyUp)):("div"===i||"span"===i)&&n.removeClass(this.markerClassName).empty(),d===s&&(d=null))},_enableDatepicker:function(e){var i,n,s=t(e),r=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=e.nodeName.toLowerCase())?(e.disabled=!1,r.trigger.filter("button").each((function(){this.disabled=!1})).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&((n=s.children("."+this._inlineClass)).children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,(function(t){return t===e?null:t})))},_disableDatepicker:function(e){var i,n,s=t(e),r=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&("input"===(i=e.nodeName.toLowerCase())?(e.disabled=!0,r.trigger.filter("button").each((function(){this.disabled=!0})).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&((n=s.children("."+this._inlineClass)).children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,(function(t){return t===e?null:t})),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(t){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,n){var r,o,a,l,u=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):u?"all"===i?t.extend({},u.settings):this._get(u,i):null:(r=i||{},"string"==typeof i&&((r={})[i]=n),void(u&&(this._curInst===u&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),a=this._getMinMaxDate(u,"min"),l=this._getMinMaxDate(u,"max"),s(u.settings,r),null!==a&&void 0!==r.dateFormat&&void 0===r.minDate&&(u.settings.minDate=this._formatDate(u,a)),null!==l&&void 0!==r.dateFormat&&void 0===r.maxDate&&(u.settings.maxDate=this._formatDate(u,l)),"disabled"in r&&(r.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),u),this._autoSize(u),this._setDate(u,o),this._updateAlternate(u),this._updateDatepicker(u))))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,n,s,r=t.datepicker._getInst(e.target),o=!0,a=r.dpDiv.is(".ui-datepicker-rtl");if(r._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),o=!1;break;case 13:return(s=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",r.dpDiv))[0]&&t.datepicker._selectDay(e.target,r.selectedMonth,r.selectedYear,s[0]),(i=t.datepicker._get(r,"onSelect"))?(n=t.datepicker._formatDate(r),i.apply(r.input?r.input[0]:null,[n,r])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(r,"stepBigMonths"):-t.datepicker._get(r,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(r,"stepBigMonths"):+t.datepicker._get(r,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),o=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),o=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?1:-1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(r,"stepBigMonths"):-t.datepicker._get(r,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),o=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,a?-1:1,"D"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(r,"stepBigMonths"):+t.datepicker._get(r,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),o=e.ctrlKey||e.metaKey;break;default:o=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):o=!1;o&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,n,s=t.datepicker._getInst(e.target);return t.datepicker._get(s,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(s,"dateFormat")),n=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(e){var i=t.datepicker._getInst(e.target);if(i.input.val()!==i.lastVal)try{t.datepicker.parseDate(t.datepicker._get(i,"dateFormat"),i.input?i.input.val():null,t.datepicker._getFormatConfig(i))&&(t.datepicker._setDateFromField(i),t.datepicker._updateAlternate(i),t.datepicker._updateDatepicker(i))}catch(t){}return!0},_showDatepicker:function(e){var i,n,r,o,a,l,u;"input"!==(e=e.target||e).nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),t.datepicker._isDisabledDatepicker(e)||t.datepicker._lastInput===e||(i=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==i&&(t.datepicker._curInst.dpDiv.stop(!0,!0),i&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),!1!==(r=(n=t.datepicker._get(i,"beforeShow"))?n.apply(e,[e,i]):{})&&(s(i.settings,r),i.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(i),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),o=!1,t(e).parents().each((function(){return!(o|="fixed"===t(this).css("position"))})),a={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(i),a=t.datepicker._checkOffset(i,a,o),i.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":o?"fixed":"absolute",display:"none",left:a.left+"px",top:a.top+"px"}),i.inline||(l=t.datepicker._get(i,"showAnim"),u=t.datepicker._get(i,"duration"),i.dpDiv.css("z-index",function(t){for(var e,i;t.length&&t[0]!==document;){if(("absolute"===(e=t.css("position"))||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[l]?i.dpDiv.show(l,t.datepicker._get(i,"showOptions"),u):i.dpDiv[l||"show"](l?u:null),t.datepicker._shouldFocusInput(i)&&i.input.trigger("focus"),t.datepicker._curInst=i)))},_updateDatepicker:function(e){this.maxRows=4,d=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,s=this._getNumberOfMonths(e),r=s[1],o=e.dpDiv.find("."+this._dayOverClass+" a");o.length>0&&n.apply(o.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),r>1&&e.dpDiv.addClass("ui-datepicker-multi-"+r).css("width",17*r+"em"),e.dpDiv[(1!==s[0]||1!==s[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.trigger("focus"),e.yearshtml&&(i=e.yearshtml,setTimeout((function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null}),0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,n){var s=e.dpDiv.outerWidth(),r=e.dpDiv.outerHeight(),o=e.input?e.input.outerWidth():0,a=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:t(document).scrollLeft()),u=document.documentElement.clientHeight+(n?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?s-o:0,i.left-=n&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=n&&i.top===e.input.offset().top+a?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+r>u&&u>r?Math.abs(r+a):0),i},_findPos:function(e){for(var i,n=this._getInst(e),s=this._get(n,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[s?"previousSibling":"nextSibling"];return[(i=t(e).offset()).left,i.top]},_hideDatepicker:function(e){var i,n,s,r,o=this._curInst;!o||e&&o!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(o,"showAnim"),n=this._get(o,"duration"),s=function(){t.datepicker._tidyDialog(o)},t.effects&&(t.effects.effect[i]||t.effects[i])?o.dpDiv.hide(i,t.datepicker._get(o,"showOptions"),n,s):o.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,(r=this._get(o,"onClose"))&&r.apply(o.input?o.input[0]:null,[o.input?o.input.val():"",o]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).off(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),n=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==n)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,n){var s=t(e),r=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(r,i+("M"===n?this._get(r,"showCurrentAtPos"):0),n),this._updateDatepicker(r))},_gotoToday:function(e){var i,n=t(e),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(e,i,n){var s=t(e),r=this._getInst(s[0]);r["selected"+("M"===n?"Month":"Year")]=r["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(r),this._adjustDate(s)},_selectDay:function(e,i,n,s){var r,o=t(e);t(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||((r=this._getInst(o[0])).selectedDay=r.currentDay=t("a",s).html(),r.selectedMonth=r.currentMonth=i,r.selectedYear=r.currentYear=n,this._selectDate(e,this._formatDate(r,r.currentDay,r.currentMonth,r.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var n,s=t(e),r=this._getInst(s[0]);i=null!=i?i:this._formatDate(r),r.input&&r.input.val(i),this._updateAlternate(r),(n=this._get(r,"onSelect"))?n.apply(r.input?r.input[0]:null,[i,r]):r.input&&r.input.trigger("change"),r.inline?this._updateDatepicker(r):(this._hideDatepicker(),this._lastInput=r.input[0],"object"!=typeof r.input[0]&&r.input.trigger("focus"),this._lastInput=null)},_updateAlternate:function(e){var i,n,s,r=this._get(e,"altField");r&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),n=this._getDate(e),s=this.formatDate(i,n,this._getFormatConfig(e)),t(r).val(s))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,n){if(null==e||null==i)throw"Invalid arguments";if(""==(i="object"==typeof i?""+i:i+""))return null;var s,r,o,a,l=0,u=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,c="string"!=typeof u?u:(new Date).getFullYear()%100+parseInt(u,10),h=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,p=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,f=(n?n.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,v=-1,y=-1,b=!1,_=function(t){var i=e.length>s+1&&e.charAt(s+1)===t;return i&&s++,i},x=function(t){var e=_(t),n="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,s=RegExp("^\\d{"+("y"===t?n:1)+","+n+"}"),r=i.substring(l).match(s);if(!r)throw"Missing number at position "+l;return l+=r[0].length,parseInt(r[0],10)},w=function(e,n,s){var r=-1,o=t.map(_(e)?s:n,(function(t,e){return[[e,t]]})).sort((function(t,e){return-(t[1].length-e[1].length)}));if(t.each(o,(function(t,e){var n=e[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(r=e[0],l+=n.length,!1):void 0})),-1!==r)return r+1;throw"Unknown name at position "+l},C=function(){if(i.charAt(l)!==e.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;e.length>s;s++)if(b)"'"!==e.charAt(s)||_("'")?C():b=!1;else switch(e.charAt(s)){case"d":v=x("d");break;case"D":w("D",h,d);break;case"o":y=x("o");break;case"m":m=x("m");break;case"M":m=w("M",p,f);break;case"y":g=x("y");break;case"@":g=(a=new Date(x("@"))).getFullYear(),m=a.getMonth()+1,v=a.getDate();break;case"!":g=(a=new Date((x("!")-this._ticksTo1970)/1e4)).getFullYear(),m=a.getMonth()+1,v=a.getDate();break;case"'":_("'")?C():b=!0;break;default:C()}if(i.length>l&&(o=i.substr(l),!/^\s+/.test(o)))throw"Extra/unparsed characters found in date: "+o;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=g?0:-100)),y>-1)for(m=1,v=y;!((r=this._getDaysInMonth(g,m-1))>=v);)m++,v-=r;if((a=this._daylightSavingAdjust(new Date(g,m-1,v))).getFullYear()!==g||a.getMonth()+1!==m||a.getDate()!==v)throw"Invalid date";return a},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,r=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,a=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=t.length>n+1&&t.charAt(n+1)===e;return i&&n++,i},u=function(t,e,i){var n=""+e;if(l(t))for(;i>n.length;)n="0"+n;return n},c=function(t,e,i,n){return l(t)?n[e]:i[e]},h="",d=!1;if(e)for(n=0;t.length>n;n++)if(d)"'"!==t.charAt(n)||l("'")?h+=t.charAt(n):d=!1;else switch(t.charAt(n)){case"d":h+=u("d",e.getDate(),2);break;case"D":h+=c("D",e.getDay(),s,r);break;case"o":h+=u("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":h+=u("m",e.getMonth()+1,2);break;case"M":h+=c("M",e.getMonth(),o,a);break;case"y":h+=l("y")?e.getFullYear():(10>e.getFullYear()%100?"0":"")+e.getFullYear()%100;break;case"@":h+=e.getTime();break;case"!":h+=1e4*e.getTime()+this._ticksTo1970;break;case"'":l("'")?h+="'":d=!0;break;default:h+=t.charAt(n)}return h},_possibleChars:function(t){var e,i="",n=!1,s=function(i){var n=t.length>e+1&&t.charAt(e+1)===i;return n&&e++,n};for(e=0;t.length>e;e++)if(n)"'"!==t.charAt(e)||s("'")?i+=t.charAt(e):n=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),n=t.lastVal=t.input?t.input.val():null,s=this._getDefaultDate(t),r=s,o=this._getFormatConfig(t);try{r=this.parseDate(i,n,o)||s}catch(t){n=e?"":n}t.selectedDay=r.getDate(),t.drawMonth=t.selectedMonth=r.getMonth(),t.drawYear=t.selectedYear=r.getFullYear(),t.currentDay=n?r.getDate():0,t.currentMonth=n?r.getMonth():0,t.currentYear=n?r.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,n){var s=null==i||""===i?n:"string"==typeof i?function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(t){}for(var n=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,s=n.getFullYear(),r=n.getMonth(),o=n.getDate(),a=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,l=a.exec(i);l;){switch(l[2]||"d"){case"d":case"D":o+=parseInt(l[1],10);break;case"w":case"W":o+=7*parseInt(l[1],10);break;case"m":case"M":r+=parseInt(l[1],10),o=Math.min(o,t.datepicker._getDaysInMonth(s,r));break;case"y":case"Y":s+=parseInt(l[1],10),o=Math.min(o,t.datepicker._getDaysInMonth(s,r))}l=a.exec(i)}return new Date(s,r,o)}(i):"number"==typeof i?isNaN(i)?n:function(t){var e=new Date;return e.setDate(e.getDate()+t),e}(i):new Date(i.getTime());return(s=s&&"Invalid Date"==""+s?n:s)&&(s.setHours(0),s.setMinutes(0),s.setSeconds(0),s.setMilliseconds(0)),this._daylightSavingAdjust(s)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var n=!e,s=t.selectedMonth,r=t.selectedYear,o=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=o.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=o.getMonth(),t.drawYear=t.selectedYear=t.currentYear=o.getFullYear(),s===t.selectedMonth&&r===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(n?"":this._formatDate(t))},_getDate:function(t){return!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay))},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map((function(){var e={prev:function(){t.datepicker._adjustDate(n,-i,"M")},next:function(){t.datepicker._adjustDate(n,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(n)},selectDay:function(){return t.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(n,this,"Y"),!1}};t(this).on(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])}))},_generateHTML:function(t){var e,i,n,s,r,o,a,l,u,c,h,d,p,f,g,m,v,y,b,_,x,w,C,k,T,D,S,E,A,P,I,N,M,O,H,L,j,z,R,q=new Date,F=this._daylightSavingAdjust(new Date(q.getFullYear(),q.getMonth(),q.getDate())),W=this._get(t,"isRTL"),B=this._get(t,"showButtonPanel"),$=this._get(t,"hideIfNoPrevNext"),Y=this._get(t,"navigationAsDateFormat"),V=this._getNumberOfMonths(t),U=this._get(t,"showCurrentAtPos"),K=this._get(t,"stepMonths"),X=1!==V[0]||1!==V[1],G=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),Q=this._getMinMaxDate(t,"min"),Z=this._getMinMaxDate(t,"max"),J=t.drawMonth-U,tt=t.drawYear;if(0>J&&(J+=12,tt--),Z)for(e=this._daylightSavingAdjust(new Date(Z.getFullYear(),Z.getMonth()-V[0]*V[1]+1,Z.getDate())),e=Q&&Q>e?Q:e;this._daylightSavingAdjust(new Date(tt,J,1))>e;)0>--J&&(J=11,tt--);for(t.drawMonth=J,t.drawYear=tt,i=this._get(t,"prevText"),i=Y?this.formatDate(i,this._daylightSavingAdjust(new Date(tt,J-K,1)),this._getFormatConfig(t)):i,n=this._canAdjustMonth(t,-1,tt,J)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+i+"</span></a>":$?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"e":"w")+"'>"+i+"</span></a>",s=this._get(t,"nextText"),s=Y?this.formatDate(s,this._daylightSavingAdjust(new Date(tt,J+K,1)),this._getFormatConfig(t)):s,r=this._canAdjustMonth(t,1,tt,J)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+s+"</span></a>":$?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(W?"w":"e")+"'>"+s+"</span></a>",o=this._get(t,"currentText"),a=this._get(t,"gotoCurrent")&&t.currentDay?G:F,o=Y?this.formatDate(o,a,this._getFormatConfig(t)):o,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",u=B?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(W?l:"")+(this._isInRange(t,a)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+o+"</button>":"")+(W?"":l)+"</div>":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,h=this._get(t,"showWeek"),d=this._get(t,"dayNames"),p=this._get(t,"dayNamesMin"),f=this._get(t,"monthNames"),g=this._get(t,"monthNamesShort"),m=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),y=this._get(t,"selectOtherMonths"),b=this._getDefaultDate(t),_="",w=0;V[0]>w;w++){for(C="",this.maxRows=4,k=0;V[1]>k;k++){if(T=this._daylightSavingAdjust(new Date(tt,J,t.selectedDay)),D=" ui-corner-all",S="",X){if(S+="<div class='ui-datepicker-group",V[1]>1)switch(k){case 0:S+=" ui-datepicker-group-first",D=" ui-corner-"+(W?"right":"left");break;case V[1]-1:S+=" ui-datepicker-group-last",D=" ui-corner-"+(W?"left":"right");break;default:S+=" ui-datepicker-group-middle",D=""}S+="'>"}for(S+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+D+"'>"+(/all|left/.test(D)&&0===w?W?r:n:"")+(/all|right/.test(D)&&0===w?W?n:r:"")+this._generateMonthYearHeader(t,J,tt,Q,Z,w>0||k>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead><tr>",E=h?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",x=0;7>x;x++)E+="<th scope='col'"+((x+c+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[A=(x+c)%7]+"'>"+p[A]+"</span></th>";for(S+=E+"</tr></thead><tbody>",P=this._getDaysInMonth(tt,J),tt===t.selectedYear&&J===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,P)),I=(this._getFirstDayOfMonth(tt,J)-c+7)%7,N=Math.ceil((I+P)/7),M=X&&this.maxRows>N?this.maxRows:N,this.maxRows=M,O=this._daylightSavingAdjust(new Date(tt,J,1-I)),H=0;M>H;H++){for(S+="<tr>",L=h?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(O)+"</td>":"",x=0;7>x;x++)j=m?m.apply(t.input?t.input[0]:null,[O]):[!0,""],R=(z=O.getMonth()!==J)&&!y||!j[0]||Q&&Q>O||Z&&O>Z,L+="<td class='"+((x+c+6)%7>=5?" ui-datepicker-week-end":"")+(z?" ui-datepicker-other-month":"")+(O.getTime()===T.getTime()&&J===t.selectedMonth&&t._keyEvent||b.getTime()===O.getTime()&&b.getTime()===T.getTime()?" "+this._dayOverClass:"")+(R?" "+this._unselectableClass+" ui-state-disabled":"")+(z&&!v?"":" "+j[1]+(O.getTime()===G.getTime()?" "+this._currentClass:"")+(O.getTime()===F.getTime()?" ui-datepicker-today":""))+"'"+(z&&!v||!j[2]?"":" title='"+j[2].replace(/'/g,"&#39;")+"'")+(R?"":" data-handler='selectDay' data-event='click' data-month='"+O.getMonth()+"' data-year='"+O.getFullYear()+"'")+">"+(z&&!v?"&#xa0;":R?"<span class='ui-state-default'>"+O.getDate()+"</span>":"<a class='ui-state-default"+(O.getTime()===F.getTime()?" ui-state-highlight":"")+(O.getTime()===G.getTime()?" ui-state-active":"")+(z?" ui-priority-secondary":"")+"' href='#'>"+O.getDate()+"</a>")+"</td>",O.setDate(O.getDate()+1),O=this._daylightSavingAdjust(O);S+=L+"</tr>"}++J>11&&(J=0,tt++),C+=S+="</tbody></table>"+(X?"</div>"+(V[0]>0&&k===V[1]-1?"<div class='ui-datepicker-row-break'></div>":""):"")}_+=C}return _+=u,t._keyEvent=!1,_},_generateMonthYearHeader:function(t,e,i,n,s,r,o,a){var l,u,c,h,d,p,f,g,m=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),y=this._get(t,"showMonthAfterYear"),b="<div class='ui-datepicker-title'>",_="";if(r||!m)_+="<span class='ui-datepicker-month'>"+o[e]+"</span>";else{for(l=n&&n.getFullYear()===i,u=s&&s.getFullYear()===i,_+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",c=0;12>c;c++)(!l||c>=n.getMonth())&&(!u||s.getMonth()>=c)&&(_+="<option value='"+c+"'"+(c===e?" selected='selected'":"")+">"+a[c]+"</option>");_+="</select>"}if(y||(b+=_+(!r&&m&&v?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",r||!v)b+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(h=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),f=(p=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e})(h[0]),g=Math.max(f,p(h[1]||"")),f=n?Math.max(f,n.getFullYear()):f,g=s?Math.min(g,s.getFullYear()):g,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++)t.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";t.yearshtml+="</select>",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,"yearSuffix"),y&&(b+=(!r&&m&&v?"":"&#xa0;")+_),b+"</div>"},_adjustInstDate:function(t,e,i){var n=t.selectedYear+("Y"===i?e:0),s=t.selectedMonth+("M"===i?e:0),r=Math.min(t.selectedDay,this._getDaysInMonth(n,s))+("D"===i?e:0),o=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(n,s,r)));t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),n=this._getMinMaxDate(t,"max"),s=i&&i>e?i:e;return n&&s>n?n:s},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,n){var s=this._getNumberOfMonths(t),r=this._daylightSavingAdjust(new Date(i,n+(0>e?e:s[0]*s[1]),1));return 0>e&&r.setDate(this._getDaysInMonth(r.getFullYear(),r.getMonth())),this._isInRange(t,r)},_isInRange:function(t,e){var i,n,s=this._getMinMaxDate(t,"min"),r=this._getMinMaxDate(t,"max"),o=null,a=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),o=parseInt(i[0],10),a=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(o+=n),i[1].match(/[+\-].*/)&&(a+=n)),(!s||e.getTime()>=s.getTime())&&(!r||e.getTime()<=r.getTime())&&(!o||e.getFullYear()>=o)&&(!a||a>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return{shortYearCutoff:e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,n){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var s=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(n,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),s,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).on("mousedown",t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each((function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)})):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new e,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.12.1",t.datepicker,t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase());var f=!1;t(document).on("mouseup",(function(){f=!1})),t.widget("ui.mouse",{version:"1.12.1",options:{cancel:"input, textarea, button, select, option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.on("mousedown."+this.widgetName,(function(t){return e._mouseDown(t)})).on("click."+this.widgetName,(function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0})),this.started=!1},_mouseDestroy:function(){this.element.off("."+this.widgetName),this._mouseMoveDelegate&&this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!f){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,n=1===e.which,s=!("string"!=typeof this.options.cancel||!e.target.nodeName)&&t(e.target).closest(this.options.cancel).length;return!(n&&!s&&this._mouseCapture(e)&&(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout((function(){i.mouseDelayMet=!0}),this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=!1!==this._mouseStart(e),!this._mouseStarted)?(e.preventDefault(),0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.on("mousemove."+this.widgetName,this._mouseMoveDelegate).on("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),f=!0,0)))}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)if(e.originalEvent.altKey||e.originalEvent.ctrlKey||e.originalEvent.metaKey||e.originalEvent.shiftKey)this.ignoreMissingWhich=!0;else if(!this.ignoreMissingWhich)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=!1!==this._mouseStart(this._mouseDownEvent,e),this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){this.document.off("mousemove."+this.widgetName,this._mouseMoveDelegate).off("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),this._mouseDelayTimer&&(clearTimeout(this._mouseDelayTimer),delete this._mouseDelayTimer),this.ignoreMissingWhich=!1,f=!1,e.preventDefault()},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),t.ui.plugin={add:function(e,i,n){var s,r=t.ui[e].prototype;for(s in n)r.plugins[s]=r.plugins[s]||[],r.plugins[s].push([i,n[s]])},call:function(t,e,i,n){var s,r=t.plugins[e];if(r&&(n||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(s=0;r.length>s;s++)t.options[r[s][0]]&&r[s][1].apply(t.element,i)}},t.ui.safeBlur=function(e){e&&"body"!==e.nodeName.toLowerCase()&&t(e).trigger("blur")},t.widget("ui.draggable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this._addClass("ui-draggable"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(e){var i=this.options;return!(this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0||(this.handle=this._getHandle(e),!this.handle||(this._blurActiveElement(e),this._blockFrames(!0===i.iframeFix?"iframe":i.iframeFix),0)))},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map((function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=t.ui.safeActiveElement(this.document[0]);t(e.target).closest(i).length||t.ui.safeBlur(i)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this._addClass(this.helper,"ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter((function(){return"fixed"===t(this).css("position")})).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),!1===this._trigger("start",e)?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(!1===this._trigger("drag",e,n))return this._mouseUp(new t.Event("mouseup",e)),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,n=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(n=t.ui.ddmanager.drop(this,e)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||!0===this.options.revert||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),(function(){!1!==i._trigger("stop",e)&&i._clear()})):!1!==this._trigger("stop",e)&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.trigger("focus"),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp(new t.Event("mouseup",{target:this.element[0]})):this._clear(),this},_getHandle:function(e){return!this.options.handle||!!t(e.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this._addClass(this.handleElement,"ui-draggable-handle")},_removeHandleClassName:function(){this._removeClass(this.handleElement,"ui-draggable-handle")},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper),s=n?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options,r=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||r.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,t(r).width()-this.helperProportions.width-this.margins.left,(t(r).height()||r.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),void((n=(i=t(s.containment))[0])&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,n,s,r,o=this.options,a=this._isRootNode(this.scrollParent[0]),l=t.pageX,u=t.pageY;return a&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(u=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(u=i[3]+this.offset.click.top)),o.grid&&(s=o.grid[1]?this.originalPageY+Math.round((u-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,u=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-o.grid[1]:s+o.grid[1]:s,r=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?r-this.offset.click.left>=i[0]||r-this.offset.click.left>i[2]?r:r-this.offset.click.left>=i[0]?r-o.grid[0]:r+o.grid[0]:r),"y"===o.axis&&(l=this.originalPageX),"x"===o.axis&&(u=this.originalPageY)),{top:u-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:a?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:a?0:this.offset.scroll.left)}},_clear:function(){this._removeClass(this.helper,"ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_trigger:function(e,i,n){return n=n||this._uiHash(),t.ui.plugin.call(this,e,[i,n,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,n){var s=t.extend({},i,{item:n.element});n.sortables=[],t(n.options.connectToSortable).each((function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,s))}))},stop:function(e,i,n){var s=t.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,t.each(n.sortables,(function(){var t=this;t.isOver?(t.isOver=0,n.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,s))}))},drag:function(e,i,n){t.each(n.sortables,(function(){var s=!1,r=this;r.positionAbs=n.positionAbs,r.helperProportions=n.helperProportions,r.offset.click=n.offset.click,r._intersectsWith(r.containerCache)&&(s=!0,t.each(n.sortables,(function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==r&&this._intersectsWith(this.containerCache)&&t.contains(r.element[0],this.element[0])&&(s=!1),s}))),s?(r.isOver||(r.isOver=1,n._parent=i.helper.parent(),r.currentItem=i.helper.appendTo(r.element).data("ui-sortable-item",!0),r.options._helper=r.options.helper,r.options.helper=function(){return i.helper[0]},e.target=r.currentItem[0],r._mouseCapture(e,!0),r._mouseStart(e,!0,!0),r.offset.click.top=n.offset.click.top,r.offset.click.left=n.offset.click.left,r.offset.parent.left-=n.offset.parent.left-r.offset.parent.left,r.offset.parent.top-=n.offset.parent.top-r.offset.parent.top,n._trigger("toSortable",e),n.dropped=r.element,t.each(n.sortables,(function(){this.refreshPositions()})),n.currentItem=n.element,r.fromOutside=n),r.currentItem&&(r._mouseDrag(e),i.position=r.position)):r.isOver&&(r.isOver=0,r.cancelHelperRemoval=!0,r.options._revert=r.options.revert,r.options.revert=!1,r._trigger("out",e,r._uiHash(r)),r._mouseStop(e,!0),r.options.revert=r.options._revert,r.options.helper=r.options._helper,r.placeholder&&r.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(e),i.position=n._generatePosition(e,!0),n._trigger("fromSortable",e),n.dropped=!1,t.each(n.sortables,(function(){this.refreshPositions()})))}))}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,n){var s=t("body"),r=n.options;s.css("cursor")&&(r._cursor=s.css("cursor")),s.css("cursor",r.cursor)},stop:function(e,i,n){var s=n.options;s._cursor&&t("body").css("cursor",s._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,n){var s=t(i.helper),r=n.options;s.css("opacity")&&(r._opacity=s.css("opacity")),s.css("opacity",r.opacity)},stop:function(e,i,n){var s=n.options;s._opacity&&t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,n){var s=n.options,r=!1,o=n.scrollParentNotHidden[0],a=n.document[0];o!==a&&"HTML"!==o.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+o.offsetHeight-e.pageY<s.scrollSensitivity?o.scrollTop=r=o.scrollTop+s.scrollSpeed:e.pageY-n.overflowOffset.top<s.scrollSensitivity&&(o.scrollTop=r=o.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+o.offsetWidth-e.pageX<s.scrollSensitivity?o.scrollLeft=r=o.scrollLeft+s.scrollSpeed:e.pageX-n.overflowOffset.left<s.scrollSensitivity&&(o.scrollLeft=r=o.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(e.pageY-t(a).scrollTop()<s.scrollSensitivity?r=t(a).scrollTop(t(a).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(a).scrollTop())<s.scrollSensitivity&&(r=t(a).scrollTop(t(a).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(e.pageX-t(a).scrollLeft()<s.scrollSensitivity?r=t(a).scrollLeft(t(a).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(a).scrollLeft())<s.scrollSensitivity&&(r=t(a).scrollLeft(t(a).scrollLeft()+s.scrollSpeed)))),!1!==r&&t.ui.ddmanager&&!s.dropBehaviour&&t.ui.ddmanager.prepareOffsets(n,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,n){var s=n.options;n.snapElements=[],t(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each((function(){var e=t(this),i=e.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})}))},drag:function(e,i,n){var s,r,o,a,l,u,c,h,d,p,f=n.options,g=f.snapTolerance,m=i.offset.left,v=m+n.helperProportions.width,y=i.offset.top,b=y+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)u=(l=n.snapElements[d].left-n.margins.left)+n.snapElements[d].width,h=(c=n.snapElements[d].top-n.margins.top)+n.snapElements[d].height,l-g>v||m>u+g||c-g>b||y>h+g||!t.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(s=g>=Math.abs(c-b),r=g>=Math.abs(h-y),o=g>=Math.abs(l-v),a=g>=Math.abs(u-m),s&&(i.position.top=n._convertPositionTo("relative",{top:c-n.helperProportions.height,left:0}).top),r&&(i.position.top=n._convertPositionTo("relative",{top:h,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:u}).left)),p=s||r||o||a,"outer"!==f.snapMode&&(s=g>=Math.abs(c-y),r=g>=Math.abs(h-b),o=g>=Math.abs(l-m),a=g>=Math.abs(u-v),s&&(i.position.top=n._convertPositionTo("relative",{top:c,left:0}).top),r&&(i.position.top=n._convertPositionTo("relative",{top:h-n.helperProportions.height,left:0}).top),o&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:u-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||r||o||a||p)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||r||o||a||p)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,n){var s,r=n.options,o=t.makeArray(t(r.stack)).sort((function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)}));o.length&&(s=parseInt(t(o[0]).css("zIndex"),10)||0,t(o).each((function(e){t(this).css("zIndex",s+e)})),this.css("zIndex",s+o.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,n){var s=t(i.helper),r=n.options;s.css("zIndex")&&(r._zIndex=s.css("zIndex")),s.css("zIndex",r.zIndex)},stop:function(e,i,n){var s=n.options;s._zIndex&&t(i.helper).css("zIndex",s._zIndex)}}),t.ui.draggable,t.widget("ui.resizable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,classes:{"ui-resizable-se":"ui-icon ui-icon-gripsmall-diagonal-se"},containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseFloat(t)||0},_isNumber:function(t){return!isNaN(parseFloat(t))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return e[n]>0||(e[n]=1,s=e[n]>0,e[n]=0,s)},_create:function(){var e,i=this.options,n=this;this._addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!i.aspectRatio,aspectRatio:i.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:i.helper||i.ghost||i.animate?i.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,e={marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom"),marginLeft:this.originalElement.css("marginLeft")},this.element.css(e),this.originalElement.css("margin",0),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css(e),this._proportionallyResize()),this._setupHandles(),i.autoHide&&t(this.element).on("mouseenter",(function(){i.disabled||(n._removeClass("ui-resizable-autohide"),n._handles.show())})).on("mouseleave",(function(){i.disabled||n.resizing||(n._addClass("ui-resizable-autohide"),n._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeData("resizable").removeData("ui-resizable").off(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_setOption:function(t,e){switch(this._super(t,e),t){case"handles":this._removeHandles(),this._setupHandles()}},_setupHandles:function(){var e,i,n,s,r,o=this.options,a=this;if(this.handles=o.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),n=this.handles.split(","),this.handles={},i=0;n.length>i;i++)s="ui-resizable-"+(e=t.trim(n[i])),r=t("<div>"),this._addClass(r,"ui-resizable-handle "+s),r.css({zIndex:o.zIndex}),this.handles[e]=".ui-resizable-"+e,this.element.append(r);this._renderAxis=function(e){var i,n,s,r;for(i in e=e||this.element,this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:a._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=t(this.handles[i],this.element),r=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(s,r),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.on("mouseover",(function(){a.resizing||(this.className&&(r=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),a.axis=r&&r[1]?r[1]:"se")})),o.autoHide&&(this._handles.hide(),this._addClass("ui-resizable-autohide"))},_removeHandles:function(){this._handles.remove()},_mouseCapture:function(e){var i,n,s=!1;for(i in this.handles)((n=t(this.handles[i])[0])===e.target||t.contains(n,e.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(e){var i,n,s,r=this.options,o=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),r.containment&&(i+=t(r.containment).scrollLeft()||0,n+=t(r.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:o.width(),height:o.height()},this.originalSize=this._helper?{width:o.outerWidth(),height:o.outerHeight()}:{width:o.width(),height:o.height()},this.sizeDiff={width:o.outerWidth()-o.width(),height:o.outerHeight()-o.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof r.aspectRatio?r.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===s?this.axis+"-resize":s),this._addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i,n,s=this.originalMousePosition,r=this.axis,o=e.pageX-s.left||0,a=e.pageY-s.top||0,l=this._change[r];return this._updatePrevProperties(),!!l&&(i=l.apply(this,[e,o,a]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1)},_mouseStop:function(e){this.resizing=!1;var i,n,s,r,o,a,l,u=this.options,c=this;return this._helper&&(s=(n=(i=this._proportionallyResizeElements).length&&/textarea/i.test(i[0].nodeName))&&this._hasScroll(i[0],"left")?0:c.sizeDiff.height,r=n?0:c.sizeDiff.width,o={width:c.helper.width()-r,height:c.helper.height()-s},a=parseFloat(c.element.css("left"))+(c.position.left-c.originalPosition.left)||null,l=parseFloat(c.element.css("top"))+(c.position.top-c.originalPosition.top)||null,u.animate||this.element.css(t.extend(o,{top:l,left:a})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!u.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this._removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,n,s,r,o=this.options;r={minWidth:this._isNumber(o.minWidth)?o.minWidth:0,maxWidth:this._isNumber(o.maxWidth)?o.maxWidth:1/0,minHeight:this._isNumber(o.minHeight)?o.minHeight:0,maxHeight:this._isNumber(o.maxHeight)?o.maxHeight:1/0},(this._aspectRatio||t)&&(e=r.minHeight*this.aspectRatio,n=r.minWidth/this.aspectRatio,i=r.maxHeight*this.aspectRatio,s=r.maxWidth/this.aspectRatio,e>r.minWidth&&(r.minWidth=e),n>r.minHeight&&(r.minHeight=n),r.maxWidth>i&&(r.maxWidth=i),r.maxHeight>s&&(r.maxHeight=s)),this._vBoundaries=r},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,n=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===n&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===n&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,n=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,s=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,r=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,o=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,a=this.originalPosition.left+this.originalSize.width,l=this.originalPosition.top+this.originalSize.height,u=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return r&&(t.width=e.minWidth),o&&(t.height=e.minHeight),n&&(t.width=e.maxWidth),s&&(t.height=e.maxHeight),r&&u&&(t.left=a-e.minWidth),n&&u&&(t.left=a-e.maxWidth),o&&c&&(t.top=l-e.minHeight),s&&c&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],n=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],s=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++)i[e]=parseFloat(n[e])||0,i[e]+=parseFloat(s[e])||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this._addClass(this.helper,this._helper),this.helper.css({width:this.element.outerWidth(),height:this.element.outerHeight(),position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize;return{left:this.originalPosition.left+e,width:i.width-e}},n:function(t,e,i){var n=this.originalSize;return{top:this.originalPosition.top+i,height:n.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},sw:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,n]))},ne:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},nw:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,n]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,r=s.length&&/textarea/i.test(s[0].nodeName),o=r&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,a=r?0:i.sizeDiff.width,l={width:i.size.width-a,height:i.size.height-o},u=parseFloat(i.element.css("left"))+(i.position.left-i.originalPosition.left)||null,c=parseFloat(i.element.css("top"))+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,c&&u?{top:c,left:u}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseFloat(i.element.css("width")),height:parseFloat(i.element.css("height")),top:parseFloat(i.element.css("top")),left:parseFloat(i.element.css("left"))};s&&s.length&&t(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,n,s,r,o,a,l=t(this).resizable("instance"),u=l.options,c=l.element,h=u.containment,d=h instanceof t?h.get(0):/parent/.test(h)?c.parent().get(0):h;d&&(l.containerElement=t(d),/document/.test(h)||h===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each((function(t,n){i[t]=l._num(e.css("padding"+n))})),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,r=l.containerSize.width,o=l._hasScroll(d,"left")?d.scrollWidth:r,a=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:o,height:a}))},resize:function(e){var i,n,s,r,o=t(this).resizable("instance"),a=o.options,l=o.containerOffset,u=o.position,c=o._aspectRatio||e.shiftKey,h={top:0,left:0},d=o.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(h=l),u.left<(o._helper?l.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-l.left:o.position.left-h.left),c&&(o.size.height=o.size.width/o.aspectRatio,p=!1),o.position.left=a.helper?l.left:0),u.top<(o._helper?l.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-l.top:o.position.top),c&&(o.size.width=o.size.height*o.aspectRatio,p=!1),o.position.top=o._helper?l.top:0),s=o.containerElement.get(0)===o.element.parent().get(0),r=/relative|absolute/.test(o.containerElement.css("position")),s&&r?(o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top):(o.offset.left=o.element.offset().left,o.offset.top=o.element.offset().top),i=Math.abs(o.sizeDiff.width+(o._helper?o.offset.left-h.left:o.offset.left-l.left)),n=Math.abs(o.sizeDiff.height+(o._helper?o.offset.top-h.top:o.offset.top-l.top)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,c&&(o.size.height=o.size.width/o.aspectRatio,p=!1)),n+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-n,c&&(o.size.width=o.size.height*o.aspectRatio,p=!1)),p||(o.position.left=o.prevPosition.left,o.position.top=o.prevPosition.top,o.size.width=o.prevSize.width,o.size.height=o.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,n=e.containerOffset,s=e.containerPosition,r=e.containerElement,o=t(e.helper),a=o.offset(),l=o.outerWidth()-e.sizeDiff.width,u=o.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(r.css("position"))&&t(this).css({left:a.left-s.left-n.left,width:l,height:u}),e._helper&&!i.animate&&/static/.test(r.css("position"))&&t(this).css({left:a.left-s.left-n.left,width:l,height:u})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance").options;t(e.alsoResize).each((function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseFloat(e.width()),height:parseFloat(e.height()),left:parseFloat(e.css("left")),top:parseFloat(e.css("top"))})}))},resize:function(e,i){var n=t(this).resizable("instance"),s=n.options,r=n.originalSize,o=n.originalPosition,a={height:n.size.height-r.height||0,width:n.size.width-r.width||0,top:n.position.top-o.top||0,left:n.position.left-o.left||0};t(s.alsoResize).each((function(){var e=t(this),n=t(this).data("ui-resizable-alsoresize"),s={},r=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(r,(function(t,e){var i=(n[e]||0)+(a[e]||0);i&&i>=0&&(s[e]=i||null)})),e.css(s)}))},stop:function(){t(this).removeData("ui-resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:i.height,width:i.width,margin:0,left:0,top:0}),e._addClass(e.ghost,"ui-resizable-ghost"),!1!==t.uiBackCompat&&"string"==typeof e.options.ghost&&e.ghost.addClass(this.options.ghost),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),n=i.options,s=i.size,r=i.originalSize,o=i.originalPosition,a=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,u=l[0]||1,c=l[1]||1,h=Math.round((s.width-r.width)/u)*u,d=Math.round((s.height-r.height)/c)*c,p=r.width+h,f=r.height+d,g=n.maxWidth&&p>n.maxWidth,m=n.maxHeight&&f>n.maxHeight,v=n.minWidth&&n.minWidth>p,y=n.minHeight&&n.minHeight>f;n.grid=l,v&&(p+=u),y&&(f+=c),g&&(p-=u),m&&(f-=c),/^(se|s|e)$/.test(a)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(a)?(i.size.width=p,i.size.height=f,i.position.top=o.top-d):/^(sw)$/.test(a)?(i.size.width=p,i.size.height=f,i.position.left=o.left-h):((0>=f-c||0>=p-u)&&(e=i._getPaddingPlusBorderDimensions(this)),f-c>0?(i.size.height=f,i.position.top=o.top-d):(f=c-e.height,i.size.height=f,i.position.top=o.top+r.height-f),p-u>0?(i.size.width=p,i.position.left=o.left-h):(p=u-e.width,i.size.width=p,i.position.left=o.left+r.width-p))}}),t.ui.resizable,t.widget("ui.dialog",{version:"1.12.1",options:{appendTo:"body",autoOpen:!0,buttons:[],classes:{"ui-dialog":"ui-corner-all","ui-dialog-titlebar":"ui-corner-all"},closeOnEscape:!0,closeText:"Close",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),null==this.options.title&&null!=this.originalTitle&&(this.options.title=this.originalTitle),this.options.disabled&&(this.options.disabled=!1),this._createWrapper(),this.element.show().removeAttr("title").appendTo(this.uiDialog),this._addClass("ui-dialog-content","ui-widget-content"),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().css(this.originalCss).detach(),this.uiDialog.remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),(t=e.parent.children().eq(e.index)).length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i=this;this._isOpen&&!1!==this._trigger("beforeClose",e)&&(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),this.opener.filter(":focusable").trigger("focus").length||t.ui.safeBlur(t.ui.safeActiveElement(this.document[0])),this._hide(this.uiDialog,this.options.hide,(function(){i._trigger("close",e)})))},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map((function(){return+t(this).css("z-index")})).get(),r=Math.max.apply(null,s);return r>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",r+1),n=!0),n&&!i&&this._trigger("focus",e),n},open:function(){var e=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=t(t.ui.safeActiveElement(this.document[0])),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,(function(){e._focusTabbable(),e._trigger("focus")})),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).trigger("focus")},_keepFocus:function(e){function i(){var e=t.ui.safeActiveElement(this.document[0]);this.uiDialog[0]===e||t.contains(this.uiDialog[0],e)||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("<div>").hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._addClass(this.uiDialog,"ui-dialog","ui-widget ui-widget-content ui-front"),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),void this.close(e);if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");e.target!==s[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==n[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay((function(){s.trigger("focus")})),e.preventDefault()):(this._delay((function(){n.trigger("focus")})),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>"),this._addClass(this.uiDialogTitlebar,"ui-dialog-titlebar","ui-widget-header ui-helper-clearfix"),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.trigger("focus")}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:t("<a>").text(this.options.closeText).html(),icon:"ui-icon-closethick",showLabel:!1}).appendTo(this.uiDialogTitlebar),this._addClass(this.uiDialogTitlebarClose,"ui-dialog-titlebar-close"),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().prependTo(this.uiDialogTitlebar),this._addClass(e,"ui-dialog-title"),this._title(e),this.uiDialogTitlebar.prependTo(this.uiDialog),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title?t.text(this.options.title):t.html("&#160;")},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>"),this._addClass(this.uiDialogButtonPane,"ui-dialog-buttonpane","ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").appendTo(this.uiDialogButtonPane),this._addClass(this.uiButtonSet,"ui-dialog-buttonset"),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?void this._removeClass(this.uiDialog,"ui-dialog-buttons"):(t.each(i,(function(i,n){var s,r;n=t.isFunction(n)?{click:n,text:i}:n,n=t.extend({type:"button"},n),s=n.click,r={icon:n.icon,iconPosition:n.iconPosition,showLabel:n.showLabel,icons:n.icons,text:n.text},delete n.click,delete n.icon,delete n.iconPosition,delete n.showLabel,delete n.icons,"boolean"==typeof n.text&&delete n.text,t("<button></button>",n).button(r).appendTo(e.uiButtonSet).on("click",(function(){s.apply(e.element[0],arguments)}))})),this._addClass(this.uiDialog,"ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){i._addClass(t(this),"ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,e(s))},drag:function(t,n){i._trigger("drag",t,e(n))},stop:function(s,r){var o=r.offset.left-i.document.scrollLeft(),a=r.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(o>=0?"+":"")+o+" top"+(a>=0?"+":"")+a,of:i.window},i._removeClass(t(this),"ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,e(r))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,n=this.options,s=n.resizable,r=this.uiDialog.css("position"),o="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:o,start:function(n,s){i._addClass(t(this),"ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,e(s))},resize:function(t,n){i._trigger("resize",t,e(n))},stop:function(s,r){var o=i.uiDialog.offset(),a=o.left-i.document.scrollLeft(),l=o.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" top"+(l>=0?"+":"")+l,of:i.window},i._removeClass(t(this),"ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,e(r))}}).css("position",r)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,n=!1,s={};t.each(e,(function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(n=!0),t in i.resizableRelatedOptions&&(s[t]=e)})),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(e,i){var n,s,r=this.uiDialog;"disabled"!==e&&(this._super(e,i),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:t("<a>").text(""+this.options.closeText).html()}),"draggable"===e&&((n=r.is(":data(ui-draggable)"))&&!i&&r.draggable("destroy"),!n&&i&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&((s=r.is(":data(ui-resizable)"))&&!i&&r.resizable("destroy"),s&&"string"==typeof i&&r.resizable("option","handles",i),s||!1===i||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),e=Math.max(0,n.minHeight-t),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-t):"none","auto"===n.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map((function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]}))},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return!!t(e.target).closest(".ui-dialog").length||!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay((function(){e=!1})),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t("<div>").appendTo(this._appendTo()),this._addClass(this.overlay,null,"ui-widget-overlay ui-front"),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):(this._off(this.document,"focusin"),this.document.removeData("ui-dialog-overlays")),this.overlay.remove(),this.overlay=null}}}),!1!==t.uiBackCompat&&t.widget("ui.dialog",t.ui.dialog,{options:{dialogClass:""},_createWrapper:function(){this._super(),this.uiDialog.addClass(this.options.dialogClass)},_setOption:function(t,e){"dialogClass"===t&&this.uiDialog.removeClass(this.options.dialogClass).addClass(e),this._superApply(arguments)}}),t.ui.dialog,t.widget("ui.droppable",{version:"1.12.1",widgetEventPrefix:"drop",options:{accept:"*",addClasses:!0,greedy:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(n)?n:function(t){return t.is(n)},this.proportions=function(){return arguments.length?void(e=arguments[0]):e||(e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight})},this._addToManager(i.scope),i.addClasses&&this._addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;t.length>e;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e)},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var n=t.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this._addActiveClass(),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this._removeActiveClass(),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._addHoverClass(),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this._removeHoverClass(),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var n=i||t.ui.ddmanager.current,s=!1;return!(!n||(n.currentItem||n.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each((function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&g(n,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(s=!0,!1):void 0})),!s&&!!this.accept.call(this.element[0],n.currentItem||n.element)&&(this._removeActiveClass(),this._removeHoverClass(),this._trigger("drop",e,this.ui(n)),this.element))},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}},_addHoverClass:function(){this._addClass("ui-droppable-hover")},_removeHoverClass:function(){this._removeClass("ui-droppable-hover")},_addActiveClass:function(){this._addClass("ui-droppable-active")},_removeActiveClass:function(){this._removeClass("ui-droppable-active")}});var g=t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,n,s){if(!i.offset)return!1;var r=(e.positionAbs||e.position.absolute).left+e.margins.left,o=(e.positionAbs||e.position.absolute).top+e.margins.top,a=r+e.helperProportions.width,l=o+e.helperProportions.height,u=i.offset.left,c=i.offset.top,h=u+i.proportions().width,d=c+i.proportions().height;switch(n){case"fit":return r>=u&&h>=a&&o>=c&&d>=l;case"intersect":return r+e.helperProportions.width/2>u&&h>a-e.helperProportions.width/2&&o+e.helperProportions.height/2>c&&d>l-e.helperProportions.height/2;case"pointer":return t(s.pageY,c,i.proportions().height)&&t(s.pageX,u,i.proportions().width);case"touch":return(o>=c&&d>=o||l>=c&&d>=l||c>o&&l>d)&&(r>=u&&h>=r||a>=u&&h>=a||u>r&&a>h);default:return!1}}}();t.ui.ddmanager={current:null,droppables:{default:[]},prepareOffsets:function(e,i){var n,s,r=t.ui.ddmanager.droppables[e.options.scope]||[],o=i?i.type:null,a=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(n=0;r.length>n;n++)if(!(r[n].options.disabled||e&&!r[n].accept.call(r[n].element[0],e.currentItem||e.element))){for(s=0;a.length>s;s++)if(a[s]===r[n].element[0]){r[n].proportions().height=0;continue t}r[n].visible="none"!==r[n].element.css("display"),r[n].visible&&("mousedown"===o&&r[n]._activate.call(r[n],i),r[n].offset=r[n].element.offset(),r[n].proportions({width:r[n].element[0].offsetWidth,height:r[n].element[0].offsetHeight}))}},drop:function(e,i){var n=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),(function(){this.options&&(!this.options.disabled&&this.visible&&g(e,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))})),n},dragStart:function(e,i){e.element.parentsUntil("body").on("scroll.droppable",(function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}))},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],(function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,r,o=g(e,this,this.options.tolerance,i),a=!o&&this.isover?"isout":o&&!this.isover?"isover":null;a&&(this.options.greedy&&(s=this.options.scope,(r=this.element.parents(":data(ui-droppable)").filter((function(){return t(this).droppable("instance").options.scope===s}))).length&&((n=t(r[0]).droppable("instance")).greedyChild="isover"===a)),n&&"isover"===a&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[a]=!0,this["isout"===a?"isover":"isout"]=!1,this["isover"===a?"_over":"_out"].call(this,i),n&&"isout"===a&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}}))},dragStop:function(e,i){e.element.parentsUntil("body").off("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},!1!==t.uiBackCompat&&t.widget("ui.droppable",t.ui.droppable,{options:{hoverClass:!1,activeClass:!1},_addActiveClass:function(){this._super(),this.options.activeClass&&this.element.addClass(this.options.activeClass)},_removeActiveClass:function(){this._super(),this.options.activeClass&&this.element.removeClass(this.options.activeClass)},_addHoverClass:function(){this._super(),this.options.hoverClass&&this.element.addClass(this.options.hoverClass)},_removeHoverClass:function(){this._super(),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass)}}),t.ui.droppable,t.widget("ui.progressbar",{version:"1.12.1",options:{classes:{"ui-progressbar":"ui-corner-all","ui-progressbar-value":"ui-corner-left","ui-progressbar-complete":"ui-corner-right"},max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.attr({role:"progressbar","aria-valuemin":this.min}),this._addClass("ui-progressbar","ui-widget ui-widget-content"),this.valueDiv=t("<div>").appendTo(this.element),this._addClass(this.valueDiv,"ui-progressbar-value","ui-widget-header"),this._refreshValue()},_destroy:function(){this.element.removeAttr("role aria-valuemin aria-valuemax aria-valuenow"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),void this._refreshValue())},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=!1===t,"number"!=typeof t&&(t=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){"max"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_setOptionDisabled:function(t){this._super(t),this.element.attr("aria-disabled",t),this._toggleClass(null,"ui-state-disabled",!!t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).width(i.toFixed(0)+"%"),this._toggleClass(this.valueDiv,"ui-progressbar-complete",null,e===this.options.max)._toggleClass("ui-progressbar-indeterminate",null,this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div>").appendTo(this.valueDiv),this._addClass(this.overlayDiv,"ui-progressbar-overlay"))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectable",t.ui.mouse,{version:"1.12.1",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e=this;this._addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e.elementPos=t(e.element[0]).offset(),e.selectees=t(e.options.filter,e.element[0]),e._addClass(e.selectees,"ui-selectee"),e.selectees.each((function(){var i=t(this),n=i.offset(),s={left:n.left-e.elementPos.left,top:n.top-e.elementPos.top};t.data(this,"selectable-item",{element:this,$element:i,left:s.left,top:s.top,right:s.left+i.outerWidth(),bottom:s.top+i.outerHeight(),startselected:!1,selected:i.hasClass("ui-selected"),selecting:i.hasClass("ui-selecting"),unselecting:i.hasClass("ui-unselecting")})}))},this.refresh(),this._mouseInit(),this.helper=t("<div>"),this._addClass(this.helper,"ui-selectable-helper")},_destroy:function(){this.selectees.removeData("selectable-item"),this._mouseDestroy()},_mouseStart:function(e){var i=this,n=this.options;this.opos=[e.pageX,e.pageY],this.elementPos=t(this.element[0]).offset(),this.options.disabled||(this.selectees=t(n.filter,this.element[0]),this._trigger("start",e),t(n.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each((function(){var n=t.data(this,"selectable-item");n.startselected=!0,e.metaKey||e.ctrlKey||(i._removeClass(n.$element,"ui-selected"),n.selected=!1,i._addClass(n.$element,"ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",e,{unselecting:n.element}))})),t(e.target).parents().addBack().each((function(){var n,s=t.data(this,"selectable-item");return s?(n=!e.metaKey&&!e.ctrlKey||!s.$element.hasClass("ui-selected"),i._removeClass(s.$element,n?"ui-unselecting":"ui-selected")._addClass(s.$element,n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",e,{selecting:s.element}):i._trigger("unselecting",e,{unselecting:s.element}),!1):void 0})))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,r=this.opos[0],o=this.opos[1],a=e.pageX,l=e.pageY;return r>a&&(i=a,a=r,r=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:r,top:o,width:a-r,height:l-o}),this.selectees.each((function(){var i=t.data(this,"selectable-item"),u=!1,c={};i&&i.element!==n.element[0]&&(c.left=i.left+n.elementPos.left,c.right=i.right+n.elementPos.left,c.top=i.top+n.elementPos.top,c.bottom=i.bottom+n.elementPos.top,"touch"===s.tolerance?u=!(c.left>a||r>c.right||c.top>l||o>c.bottom):"fit"===s.tolerance&&(u=c.left>r&&a>c.right&&c.top>o&&l>c.bottom),u?(i.selected&&(n._removeClass(i.$element,"ui-selected"),i.selected=!1),i.unselecting&&(n._removeClass(i.$element,"ui-unselecting"),i.unselecting=!1),i.selecting||(n._addClass(i.$element,"ui-selecting"),i.selecting=!0,n._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,n._addClass(i.$element,"ui-selected"),i.selected=!0):(n._removeClass(i.$element,"ui-selecting"),i.selecting=!1,i.startselected&&(n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(n._removeClass(i.$element,"ui-selected"),i.selected=!1,n._addClass(i.$element,"ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",e,{unselecting:i.element})))))})),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each((function(){var n=t.data(this,"selectable-item");i._removeClass(n.$element,"ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",e,{unselected:n.element})})),t(".ui-selecting",this.element[0]).each((function(){var n=t.data(this,"selectable-item");i._removeClass(n.$element,"ui-selecting")._addClass(n.$element,"ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",e,{selected:n.element})})),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.selectmenu",[t.ui.formResetMixin,{version:"1.12.1",defaultElement:"<select>",options:{appendTo:null,classes:{"ui-selectmenu-button-open":"ui-corner-top","ui-selectmenu-button-closed":"ui-corner-all"},disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:!1,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this._bindFormResetHandler(),this._rendered=!1,this.menuItems=t()},_drawButton:function(){var e,i=this,n=this._parseOption(this.element.find("option:selected"),this.element[0].selectedIndex);this.labels=this.element.labels().attr("for",this.ids.button),this._on(this.labels,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true",title:this.element.attr("title")}).insertAfter(this.element),this._addClass(this.button,"ui-selectmenu-button ui-selectmenu-button-closed","ui-button ui-widget"),e=t("<span>").appendTo(this.button),this._addClass(e,"ui-selectmenu-icon","ui-icon "+this.options.icons.button),this.buttonItem=this._renderButtonItem(n).appendTo(this.button),!1!==this.options.width&&this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",(function(){i._rendered||i._refreshMenu()}))},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>").append(this.menu),this._addClass(this.menuWrap,"ui-selectmenu-menu","ui-front"),this.menuWrap.appendTo(this._appendTo()),this.menuInstance=this.menu.menu({classes:{"ui-menu":"ui-corner-bottom"},role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){var n=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&n.index!==e.focusIndex&&(e._trigger("focus",t,{item:n}),e.isOpen||e._select(n,t)),e.focusIndex=n.index,e.button.attr("aria-activedescendant",e.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(this._getSelectedItem().data("ui-selectmenu-item")||{})),null===this.options.width&&this._resizeButton()},_refreshMenu:function(){var t,e=this.element.find("option");this.menu.empty(),this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup").find(".ui-menu-item-wrapper"),this._rendered=!0,e.length&&(t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this._rendered?(this._removeClass(this.menu.find(".ui-state-active"),null,"ui-state-active"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.menuItems.length&&(this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t)))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderButtonItem:function(e){var i=t("<span>");return this._setText(i,e.label),this._addClass(i,"ui-selectmenu-text"),i},_renderMenu:function(e,i){var n=this,s="";t.each(i,(function(i,r){var o;r.optgroup!==s&&(o=t("<li>",{text:r.optgroup}),n._addClass(o,"ui-selectmenu-optgroup","ui-menu-divider"+(r.element.parent("optgroup").prop("disabled")?" ui-state-disabled":"")),o.appendTo(e),s=r.optgroup),n._renderItemData(e,r)}))},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var n=t("<li>"),s=t("<div>",{title:i.element.attr("title")});return i.disabled&&this._addClass(n,null,"ui-state-disabled"),this._setText(s,i.label),n.append(s).appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex).parent("li"):(i=this.menuItems.eq(this.element[0].selectedIndex).parent("li"),s+=":not(.ui-state-disabled)"),(n="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](s).eq(-1):i[t+"All"](s).eq(0)).length&&this.menuInstance.focus(e,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex).parent("li")},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?((t=window.getSelection()).removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+t.ui.escapeSelector(this.ids.button)).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection()).rangeCount&&(this.range=t.getRangeAt(0)):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex).parent("li");e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this.buttonItem.replaceWith(this.buttonItem=this._renderButtonItem(t)),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){if("icons"===t){var i=this.button.find("span.ui-icon");this._removeClass(i,null,this.options.icons.button)._addClass(i,null,e.button)}this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"width"===t&&this._resizeButton()},_setOptionDisabled:function(t){this._super(t),this.menuInstance.option("disabled",t),this.button.attr("aria-disabled",t),this._toggleClass(this.button,null,"ui-state-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front, dialog")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.attr("aria-expanded",this.isOpen),this._removeClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"closed":"open"))._addClass(this.button,"ui-selectmenu-button-"+(this.isOpen?"open":"closed"))._toggleClass(this.menuWrap,"ui-selectmenu-open",null,this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;return!1===t?void this.button.css("width",""):(null===t&&(t=this.element.show().outerWidth(),this.element.hide()),void this.button.outerWidth(t))},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){var t=this._super();return t.disabled=this.element.prop("disabled"),t},_parseOptions:function(e){var i=this,n=[];e.each((function(e,s){n.push(i._parseOption(t(s),e))})),this.items=n},_parseOption:function(t,e){var i=t.parent("optgroup");return{element:t,index:e,value:t.val(),label:t.text(),optgroup:i.attr("label")||"",disabled:i.prop("disabled")||t.prop("disabled")}},_destroy:function(){this._unbindFormResetHandler(),this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.labels.attr("for",this.ids.element)}}]),t.widget("ui.slider",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"slide",options:{animate:!1,classes:{"ui-slider":"ui-corner-all","ui-slider-handle":"ui-corner-all","ui-slider-range":"ui-corner-all ui-widget-header"},distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this._addClass("ui-slider ui-slider-"+this.orientation,"ui-widget ui-widget-content"),this._refresh(),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,n=this.options,s=this.element.find(".ui-slider-handle"),r=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),e=s.length;i>e;e++)r.push("<span tabindex='0'></span>");this.handles=s.add(t(r.join("")).appendTo(this.element)),this._addClass(this.handles,"ui-slider-handle","ui-state-default"),this.handle=this.handles.eq(0),this.handles.each((function(e){t(this).data("ui-slider-handle-index",e).attr("tabIndex",0)}))},_createRange:function(){var e=this.options;e.range?(!0===e.range&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?(this._removeClass(this.range,"ui-slider-range-min ui-slider-range-max"),this.range.css({left:"",bottom:""})):(this.range=t("<div>").appendTo(this.element),this._addClass(this.range,"ui-slider-range")),("min"===e.range||"max"===e.range)&&this._addClass(this.range,"ui-slider-range-"+e.range)):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this._mouseDestroy()},_mouseCapture:function(e){var i,n,s,r,o,a,l,u=this,c=this.options;return!c.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each((function(e){var i=Math.abs(n-u.values(e));(s>i||s===i&&(e===u._lastChangedValue||u.values(e)===c.min))&&(s=i,r=t(this),o=e)})),!1!==this._start(e,o)&&(this._mouseSliding=!0,this._handleIndex=o,this._addClass(r,null,"ui-state-active"),r.trigger("focus"),a=r.offset(),l=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=l?{left:0,top:0}:{left:e.pageX-a.left-r.width()/2,top:e.pageY-a.top-r.height()/2-(parseInt(r.css("borderTopWidth"),10)||0)-(parseInt(r.css("borderBottomWidth"),10)||0)+(parseInt(r.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,o,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this._removeClass(this.handles,null,"ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,n,s,r;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),(n=i/e)>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),r=this._valueMin()+n*s,this._trimAlignValue(r)},_uiHash:function(t,e,i){var n={handle:this.handles[t],handleIndex:t,value:void 0!==e?e:this.value()};return this._hasMultipleValues()&&(n.value=void 0!==e?e:this.values(t),n.values=i||this.values()),n},_hasMultipleValues:function(){return this.options.values&&this.options.values.length},_start:function(t,e){return this._trigger("start",t,this._uiHash(e))},_slide:function(t,e,i){var n,s=this.value(),r=this.values();this._hasMultipleValues()&&(n=this.values(e?0:1),s=this.values(e),2===this.options.values.length&&!0===this.options.range&&(i=0===e?Math.min(n,i):Math.max(n,i)),r[e]=i),i!==s&&!1!==this._trigger("slide",t,this._uiHash(e,i,r))&&(this._hasMultipleValues()?this.values(e,i):this.value(i))},_stop:function(t,e){this._trigger("stop",t,this._uiHash(e))},_change:function(t,e){this._keySliding||this._mouseSliding||(this._lastChangedValue=e,this._trigger("change",t,this._uiHash(e)))},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(e,i){var n,s,r;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,e);if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this._hasMultipleValues()?this._values(e):this.value();for(n=this.options.values,s=arguments[0],r=0;n.length>r;r+=1)n[r]=this._trimAlignValue(s[r]),this._change(null,r);this._refreshValue()},_setOption:function(e,i){var n,s=0;switch("range"===e&&!0===this.options.range&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(s=this.options.values.length),this._super(e,i),e){case"orientation":this._detectOrientation(),this._removeClass("ui-slider-horizontal ui-slider-vertical")._addClass("ui-slider-"+this.orientation),this._refreshValue(),this.options.range&&this._refreshRange(i),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=s-1;n>=0;n--)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_setOptionDisabled:function(t){this._super(t),this._toggleClass(null,"ui-state-disabled",!!t)},_value:function(){var t=this.options.value;return this._trimAlignValue(t)},_values:function(t){var e,i,n;if(arguments.length)return e=this.options.values[t],this._trimAlignValue(e);if(this._hasMultipleValues()){for(i=this.options.values.slice(),n=0;i.length>n;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,n=t-i;return 2*Math.abs(i)>=e&&(n+=i>0?e:-e),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step;(t=Math.round((t-e)/i)*i+e)>this.options.max&&(t-=i),this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshRange:function(t){"vertical"===t&&this.range.css({width:"",left:""}),"horizontal"===t&&this.range.css({height:"",bottom:""})},_refreshValue:function(){var e,i,n,s,r,o=this.options.range,a=this.options,l=this,u=!this._animateOff&&a.animate,c={};this._hasMultipleValues()?this.handles.each((function(n){i=(l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())*100,c["horizontal"===l.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[u?"animate":"css"](c,a.animate),!0===l.options.range&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[u?"animate":"css"]({left:i+"%"},a.animate),1===n&&l.range[u?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:a.animate})):(0===n&&l.range.stop(1,1)[u?"animate":"css"]({bottom:i+"%"},a.animate),1===n&&l.range[u?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:a.animate}))),e=i})):(n=this.value(),s=this._valueMin(),r=this._valueMax(),i=r!==s?(n-s)/(r-s)*100:0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[u?"animate":"css"](c,a.animate),"min"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({width:i+"%"},a.animate),"max"===o&&"horizontal"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({width:100-i+"%"},a.animate),"min"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({height:i+"%"},a.animate),"max"===o&&"vertical"===this.orientation&&this.range.stop(1,1)[u?"animate":"css"]({height:100-i+"%"},a.animate))},_handleEvents:{keydown:function(e){var i,n,s,r=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,this._addClass(t(e.target),null,"ui-state-active"),!1===this._start(e,r)))return}switch(s=this.options.step,i=n=this._hasMultipleValues()?this.values(r):this.value(),e.keyCode){case t.ui.keyCode.HOME:n=this._valueMin();break;case t.ui.keyCode.END:n=this._valueMax();break;case t.ui.keyCode.PAGE_UP:n=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:n=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(i===this._valueMax())return;n=this._trimAlignValue(i+s);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i===this._valueMin())return;n=this._trimAlignValue(i-s)}this._slide(e,r,n)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),this._removeClass(t(e.target),null,"ui-state-active"))}}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.12.1",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this._addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){var e=this;this._removeClass(this.element.find(".ui-sortable-handle"),"ui-sortable-handle"),t.each(this.items,(function(){e._addClass(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item,"ui-sortable-handle")}))},_destroy:function(){this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var n=null,s=!1,r=this;return!(this.reverting||this.options.disabled||"static"===this.options.type||(this._refreshItems(e),t(e.target).parents().each((function(){return t.data(this,r.widgetName+"-item")===r?(n=t(this),!1):void 0})),t.data(e.target,r.widgetName+"-item")===r&&(n=t(e.target)),!n||this.options.handle&&!i&&(t(this.options.handle,n).find("*").addBack().each((function(){this===e.target&&(s=!0)})),!s)||(this.currentItem=n,this._removeCurrentsFromItems(),0)))},_mouseStart:function(e,i,n){var s,r,o=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&"auto"!==o.cursor&&(r=this.document.find("body"),this.storedCursor=r.css("cursor"),r.css("cursor",o.cursor),this.storedStylesheet=t("<style>*{ cursor: "+o.cursor+" !important; }</style>").appendTo(r)),o.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",o.opacity)),o.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",o.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this._addClass(this.helper,"ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,n,s,r,o=this.options,a=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop+o.scrollSpeed:e.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft+o.scrollSpeed:e.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(e.pageY-this.document.scrollTop()<o.scrollSensitivity?a=this.document.scrollTop(this.document.scrollTop()-o.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<o.scrollSensitivity&&(a=this.document.scrollTop(this.document.scrollTop()+o.scrollSpeed)),e.pageX-this.document.scrollLeft()<o.scrollSensitivity?a=this.document.scrollLeft(this.document.scrollLeft()-o.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<o.scrollSensitivity&&(a=this.document.scrollLeft(this.document.scrollLeft()+o.scrollSpeed))),!1!==a&&t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(s=(n=this.items[i]).item[0],(r=this._intersectsWithPointer(n))&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===r?"next":"prev"]()[0]!==s&&!t.contains(this.placeholder[0],s)&&("semi-dynamic"!==this.options.type||!t.contains(this.element[0],s))){if(this.direction=1===r?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(e,n),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var n=this,s=this.placeholder.offset(),r=this.options.axis,o={};r&&"x"!==r||(o.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),r&&"y"!==r||(o.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(o,parseInt(this.options.revert,10)||500,(function(){n._clear(e)}))}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp(new t.Event("mouseup",{target:null})),"original"===this.options.helper?(this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},t(i).each((function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&n.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))})),!n.length&&e.key&&n.push(e.key+"="),n.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},i.each((function(){n.push(t(e.item||this).attr(e.attribute||"id")||"")})),n},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,r=t.left,o=r+t.width,a=t.top,l=a+t.height,u=this.offset.click.top,c=this.offset.click.left,h="x"===this.options.axis||n+u>a&&l>n+u,d="y"===this.options.axis||e+c>r&&o>e+c,p=h&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?p:e+this.helperProportions.width/2>r&&o>i-this.helperProportions.width/2&&n+this.helperProportions.height/2>a&&l>s-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e,i,n="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),s="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width);return!(!n||!s)&&(e=this._getDragVerticalDirection(),i=this._getDragHorizontalDirection(),this.floating?"right"===i||"down"===e?2:1:e&&("down"===e?2:1))},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&e||"up"===n&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){a.push(this)}var n,s,r,o,a=[],l=[],u=this._connectWith();if(u&&e)for(n=u.length-1;n>=0;n--)for(s=(r=t(u[n],this.document[0])).length-1;s>=0;s--)(o=t.data(r[s],this.widgetFullName))&&o!==this&&!o.options.disabled&&l.push([t.isFunction(o.options.items)?o.options.items.call(o.element):t(o.options.items,o.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),o]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return t(a)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,(function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0}))},_refreshItems:function(e){this.items=[],this.containers=[this];var i,n,s,r,o,a,l,u,c=this.items,h=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(n=(s=t(d[i],this.document[0])).length-1;n>=0;n--)(r=t.data(s[n],this.widgetFullName))&&r!==this&&!r.options.disabled&&(h.push([t.isFunction(r.options.items)?r.options.items.call(r.element[0],e,{item:this.currentItem}):t(r.options.items,r.element),r]),this.containers.push(r));for(i=h.length-1;i>=0;i--)for(o=h[i][1],n=0,u=(a=h[i][0]).length;u>n;n++)(l=t(a[n])).data(this.widgetName+"-item",o),c.push({item:l,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(e){var i,n,s,r;for(this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset()),i=this.items.length-1;i>=0;i--)(n=this.items[i]).instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?t(this.options.toleranceElement,n.item):n.item,e||(n.width=s.outerWidth(),n.height=s.outerHeight()),r=s.offset(),n.left=r.left,n.top=r.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)r=this.containers[i].element.offset(),this.containers[i].containerCache.left=r.left,this.containers[i].containerCache.top=r.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){var i,n=(e=e||this).options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=e.currentItem[0].nodeName.toLowerCase(),s=t("<"+n+">",e.document[0]);return e._addClass(s,"ui-sortable-placeholder",i||e.currentItem[0].className)._removeClass(s,"ui-sortable-helper"),"tbody"===n?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(s)):"tr"===n?e._createTrPlaceholder(e.currentItem,s):"img"===n&&s.attr("src",e.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(t,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var n=this;e.children().each((function(){t("<td>&#160;</td>",n.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)}))},_contactContainers:function(e){var i,n,s,r,o,a,l,u,c,h,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(s=1e4,r=null,o=(c=d.floating||this._isFloating(this.currentItem))?"left":"top",a=c?"width":"height",h=c?"pageX":"pageY",n=this.items.length-1;n>=0;n--)t.contains(this.containers[p].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[o],u=!1,e[h]-l>this.items[n][a]/2&&(u=!0),s>Math.abs(e[h]-l)&&(s=Math.abs(e[h]-l),r=this.items[n],this.direction=u?"up":"down"));if(!r&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return void(this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1));r?this._rearrange(e,r,null,!0):this._rearrange(e,null,this.containers[p].element,!0),this._trigger("change",e,this._uiHash()),this.containers[p]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",e,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),("document"===s.containment||"window"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.height()||document.body.parentNode.scrollHeight:this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(e=t(s.containment)[0],i=t(s.containment).offset(),n="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var n="absolute"===e?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,r=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():r?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():r?0:s.scrollLeft())*n}},_generatePosition:function(e){var i,n,s=this.options,r=e.pageX,o=e.pageY,a="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(a[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(r=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(r=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((o-this.originalPageY)/s.grid[1])*s.grid[1],o=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((r-this.originalPageX)/s.grid[0])*s.grid[0],r=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:a.scrollTop()),left:r-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:a.scrollLeft())}},_rearrange:function(t,e,i,n){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay((function(){s===this.counter&&this.refreshPositions(!n)}))},_clear:function(t,e){function i(t,e,i){return function(n){i._trigger(t,n,e._uiHash(e))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)("auto"===this._storedCSS[n]||"static"===this._storedCSS[n])&&(this._storedCSS[n]="");this.currentItem.css(this._storedCSS),this._removeClass(this.currentItem,"ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&s.push((function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))})),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push((function(t){this._trigger("update",t,this._uiHash())})),this!==this.currentContainer&&(e||(s.push((function(t){this._trigger("remove",t,this._uiHash())})),s.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)e||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(n=0;s.length>n;n++)s[n].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){!1===t.Widget.prototype._trigger.apply(this,arguments)&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.spinner",{version:"1.12.1",defaultElement:"<input>",widgetEventPrefix:"spin",options:{classes:{"ui-spinner":"ui-corner-all","ui-spinner-down":"ui-corner-br","ui-spinner-up":"ui-corner-tr"},culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e=this._super(),i=this.element;return t.each(["min","max","step"],(function(t,n){var s=i.attr(n);null!=s&&s.length&&(e[n]=s)})),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",t)))},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay((function(){this.spinning&&this._stop(t)}),100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){this.element[0]===t.ui.safeActiveElement(this.document[0])||(this.element.trigger("focus"),this.previous=n,this._delay((function(){this.previous=n})))}var n;n=this.element[0]===t.ui.safeActiveElement(this.document[0])?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay((function(){delete this.cancelBlur,i.call(this)})),!1!==this._start(e)&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?!1!==this._start(e)&&void this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e):void 0},"mouseleave .ui-spinner-button":"_stop"},_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap("<span>").parent().append("<a></a><a></a>")},_draw:function(){this._enhance(),this._addClass(this.uiSpinner,"ui-spinner","ui-widget ui-widget-content"),this._addClass("ui-spinner-input"),this.element.attr("role","spinbutton"),this.buttons=this.uiSpinner.children("a").attr("tabIndex",-1).attr("aria-hidden",!0).button({classes:{"ui-button":""}}),this._removeClass(this.buttons,"ui-corner-all"),this._addClass(this.buttons.first(),"ui-spinner-button ui-spinner-up"),this._addClass(this.buttons.last(),"ui-spinner-button ui-spinner-down"),this.buttons.first().button({icon:this.options.icons.up,showLabel:!1}),this.buttons.last().button({icon:this.options.icons.down,showLabel:!1}),this.buttons.height()>Math.ceil(.5*this.uiSpinner.height())&&this.uiSpinner.height()>0&&this.uiSpinner.height(this.uiSpinner.height())},_keydown:function(e){var i=this.options,n=t.ui.keyCode;switch(e.keyCode){case n.UP:return this._repeat(null,1,e),!0;case n.DOWN:return this._repeat(null,-1,e),!0;case n.PAGE_UP:return this._repeat(null,i.page,e),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_start:function(t){return!(!this.spinning&&!1===this._trigger("start",t)||(this.counter||(this.counter=1),this.spinning=!0,0))},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay((function(){this._repeat(40,e,i)}),t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&!1===this._trigger("spin",e,{value:i})||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,n=this.options;return i=t-(e=null!==n.min?n.min:0),t=e+(i=Math.round(i/n.step)*n.step),t=parseFloat(t.toFixed(this._precision())),null!==n.max&&t>n.max?n.max:null!==n.min&&n.min>t?n.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){var i,n,s;return"culture"===t||"numberFormat"===t?(i=this._parse(this.element.val()),this.options[t]=e,void this.element.val(this._format(i))):(("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(n=this.buttons.first().find(".ui-icon"),this._removeClass(n,null,this.options.icons.up),this._addClass(n,null,e.up),s=this.buttons.last().find(".ui-icon"),this._removeClass(s,null,this.options.icons.down),this._addClass(s,null,e.down)),void this._super(t,e))},_setOptionDisabled:function(t){this._super(t),this._toggleClass(this.uiSpinner,null,"ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable")},_setOptions:r((function(t){this._super(t)})),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null!==t&&t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&null!==(i=this._parse(t))&&(e||(i=this._adjustValue(i)),t=this._format(i)),this.element.val(t),this._refresh()},_destroy:function(){this.element.prop("disabled",!1).removeAttr("autocomplete role aria-valuemin aria-valuemax aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:r((function(t){this._stepUp(t)})),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:r((function(t){this._stepDown(t)})),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:r((function(t){this._stepUp((t||1)*this.options.page)})),pageDown:r((function(t){this._stepDown((t||1)*this.options.page)})),value:function(t){return arguments.length?void r(this._value).call(this,t):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),!1!==t.uiBackCompat&&t.widget("ui.spinner",t.ui.spinner,{_enhance:function(){this.uiSpinner=this.element.attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml())},_uiSpinnerHtml:function(){return"<span>"},_buttonHtml:function(){return"<a></a><a></a>"}}),t.ui.spinner,t.widget("ui.tabs",{version:"1.12.1",delay:300,options:{active:null,classes:{"ui-tabs":"ui-corner-all","ui-tabs-nav":"ui-corner-all","ui-tabs-panel":"ui-corner-bottom","ui-tabs-tab":"ui-corner-top"},collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,n;i=e.href.replace(t,""),n=location.href.replace(t,"");try{i=decodeURIComponent(i)}catch(t){}try{n=decodeURIComponent(n)}catch(t){}return e.hash.length>1&&i===n}}(),_create:function(){var e=this,i=this.options;this.running=!1,this._addClass("ui-tabs","ui-widget ui-widget-content"),this._toggleClass("ui-tabs-collapsible",null,i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),(function(t){return e.tabs.index(t)})))).sort()),this.active=!1!==this.options.active&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===e&&(n&&this.tabs.each((function(i,s){return t(s).attr("aria-controls")===n?(e=i,!1):void 0})),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=!!this.tabs.length&&0)),!1!==e&&-1===(e=this.tabs.index(this.tabs.eq(e)))&&(e=!i&&0),!i&&!1===e&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(t.ui.safeActiveElement(this.document[0])).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:n++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:s=!1,n--;break;case t.ui.keyCode.END:n=this.anchors.length-1;break;case t.ui.keyCode.HOME:n=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n);case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n!==this.options.active&&n);default:return}e.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay((function(){this.option("active",n)}),this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.trigger("focus"))},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){for(var n=this.tabs.length-1;-1!==t.inArray((e>n&&(e=0),0>e&&(e=n),e),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).trigger("focus"),t},_setOption:function(t,e){return"active"===t?void this._activate(e):(this._super(t,e),"collapsible"===t&&(this._toggleClass("ui-tabs-collapsible",null,e),e||!1!==this.options.active||this._activate(0)),"event"===t&&this._setupEvents(e),void("heightStyle"===t&&this._setupHeightStyle(e)))},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),(function(t){return i.index(t)})),this._processTabs(),!1!==e.active&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setOptionDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._addClass(this.active,"ui-tabs-active","ui-state-active"),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().attr("role","tablist"),this._addClass(this.tablist,"ui-tabs-nav","ui-helper-reset ui-helper-clearfix ui-widget-header"),this.tablist.on("mousedown"+this.eventNamespace,"> li",(function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()})).on("focus"+this.eventNamespace,".ui-tabs-anchor",(function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()})),this.tabs=this.tablist.find("> li:has(a[href])").attr({role:"tab",tabIndex:-1}),this._addClass(this.tabs,"ui-tabs-tab","ui-state-default"),this.anchors=this.tabs.map((function(){return t("a",this)[0]})).attr({role:"presentation",tabIndex:-1}),this._addClass(this.anchors,"ui-tabs-anchor"),this.panels=t(),this.anchors.each((function(i,n){var s,r,o,a=t(n).uniqueId().attr("id"),l=t(n).closest("li"),u=l.attr("aria-controls");e._isLocal(n)?(o=(s=n.hash).substring(1),r=e.element.find(e._sanitizeSelector(s))):(s="#"+(o=l.attr("aria-controls")||t({}).uniqueId()[0].id),(r=e.element.find(s)).length||(r=e._createPanel(o)).insertAfter(e.panels[i-1]||e.tablist),r.attr("aria-live","polite")),r.length&&(e.panels=e.panels.add(r)),u&&l.data("ui-tabs-aria-controls",u),l.attr({"aria-controls":o,"aria-labelledby":a}),r.attr("aria-labelledby",a)})),this.panels.attr("role","tabpanel"),this._addClass(this.panels,"ui-tabs-panel","ui-widget-content"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol, ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).data("ui-tabs-destroy",!0)},_setOptionDisabled:function(e){var i,n,s;for(t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1),s=0;n=this.tabs[s];s++)i=t(n),!0===e||-1!==t.inArray(s,e)?(i.attr("aria-disabled","true"),this._addClass(i,null,"ui-state-disabled")):(i.removeAttr("aria-disabled"),this._removeClass(i,null,"ui-state-disabled"));this.options.disabled=e,this._toggleClass(this.widget(),this.widgetFullName+"-disabled",null,!0===e)},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),(function(t,e){i[e]="_eventHandler"})),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,n=this.element.parent();"fill"===e?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each((function(){var e=t(this),n=e.css("position");"absolute"!==n&&"fixed"!==n&&(i-=e.outerHeight(!0))})),this.element.children().not(this.panels).each((function(){i-=t(this).outerHeight(!0)})),this.panels.each((function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))})).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each((function(){i=Math.max(i,t(this).height("").height())})).height(i))},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget).closest("li"),r=s[0]===n[0],o=r&&i.collapsible,a=o?t():this._getPanelForTab(s),l=n.length?this._getPanelForTab(n):t(),u={oldTab:n,oldPanel:l,newTab:o?t():s,newPanel:a};e.preventDefault(),s.hasClass("ui-state-disabled")||s.hasClass("ui-tabs-loading")||this.running||r&&!i.collapsible||!1===this._trigger("beforeActivate",e,u)||(i.active=!o&&this.tabs.index(s),this.active=r?t():s,this.xhr&&this.xhr.abort(),l.length||a.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),a.length&&this.load(this.tabs.index(s),e),this._toggle(e,u))},_toggle:function(e,i){function n(){r.running=!1,r._trigger("activate",e,i)}function s(){r._addClass(i.newTab.closest("li"),"ui-tabs-active","ui-state-active"),o.length&&r.options.show?r._show(o,r.options.show,n):(o.show(),n())}var r=this,o=i.newPanel,a=i.oldPanel;this.running=!0,a.length&&this.options.hide?this._hide(a,this.options.hide,(function(){r._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),s()})):(this._removeClass(i.oldTab.closest("li"),"ui-tabs-active","ui-state-active"),a.hide(),s()),a.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),o.length&&a.length?i.oldTab.attr("tabIndex",-1):o.length&&this.tabs.filter((function(){return 0===t(this).attr("tabIndex")})).attr("tabIndex",-1),o.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){var i,n=this._findActive(e);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return!1===e?t():this.tabs.eq(e)},_getIndex:function(e){return"string"==typeof e&&(e=this.anchors.index(this.anchors.filter("[href$='"+t.ui.escapeSelector(e)+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.tablist.removeAttr("role").off(this.eventNamespace),this.anchors.removeAttr("role tabIndex").removeUniqueId(),this.tabs.add(this.panels).each((function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeAttr("role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded")})),this.tabs.each((function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")})),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;!1!==i&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,(function(t){return t!==e?t:null})):t.map(this.tabs,(function(t,i){return i!==e?i:null}))),this._setOptionDisabled(i))},disable:function(e){var i=this.options.disabled;if(!0!==i){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setOptionDisabled(i)}},load:function(e,i){e=this._getIndex(e);var n=this,s=this.tabs.eq(e),r=s.find(".ui-tabs-anchor"),o=this._getPanelForTab(s),a={tab:s,panel:o},l=function(t,e){"abort"===e&&n.panels.stop(!1,!0),n._removeClass(s,"ui-tabs-loading"),o.removeAttr("aria-busy"),t===n.xhr&&delete n.xhr};this._isLocal(r[0])||(this.xhr=t.ajax(this._ajaxSettings(r,i,a)),this.xhr&&"canceled"!==this.xhr.statusText&&(this._addClass(s,"ui-tabs-loading"),o.attr("aria-busy","true"),this.xhr.done((function(t,e,s){setTimeout((function(){o.html(t),n._trigger("load",i,a),l(s,e)}),1)})).fail((function(t,e){setTimeout((function(){l(t,e)}),1)}))))},_ajaxSettings:function(e,i,n){var s=this;return{url:e.attr("href").replace(/#.*$/,""),beforeSend:function(e,r){return s._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:r},n))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),!1!==t.uiBackCompat&&t.widget("ui.tabs",t.ui.tabs,{_processTabs:function(){this._superApply(arguments),this._addClass(this.tabs,"ui-tab")}}),t.ui.tabs,t.widget("ui.tooltip",{version:"1.12.1",options:{classes:{"ui-tooltip":"ui-corner-all ui-widget-shadow"},content:function(){var e=t(this).attr("title")||"";return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var n=(e.attr("aria-describedby")||"").split(/\s+/);n.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(n.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),n=(e.attr("aria-describedby")||"").split(/\s+/),s=t.inArray(i,n);-1!==s&&n.splice(s,1),e.removeData("ui-tooltip-id"),(n=t.trim(n.join(" ")))?e.attr("aria-describedby",n):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).appendTo(this.document[0].body),this._addClass(this.liveRegion,null,"ui-helper-hidden-accessible"),this.disabledTitles=t([])},_setOption:function(e,i){var n=this;this._super(e,i),"content"===e&&t.each(this.tooltips,(function(t,e){n._updateContent(e.element)}))},_setOptionDisabled:function(t){this[t?"_disable":"_enable"]()},_disable:function(){var e=this;t.each(this.tooltips,(function(i,n){var s=t.Event("blur");s.target=s.currentTarget=n.element[0],e.close(s,!0)})),this.disabledTitles=this.disabledTitles.add(this.element.find(this.options.items).addBack().filter((function(){var e=t(this);return e.is("[title]")?e.data("ui-tooltip-title",e.attr("title")).removeAttr("title"):void 0})))},_enable:function(){this.disabledTitles.each((function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))})),this.disabledTitles=t([])},open:function(e){var i=this,n=t(e?e.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&n.parents().each((function(){var e,n=t(this);n.data("ui-tooltip-open")&&((e=t.Event("blur")).target=e.currentTarget=this,i.close(e,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))})),this._registerCloseHandlers(e,n),this._updateContent(n,e))},_updateContent:function(t,e){var i,n=this.options.content,s=this,r=e?e.type:null;return"string"==typeof n||n.nodeType||n.jquery?this._open(e,t,n):void((i=n.call(t[0],(function(i){s._delay((function(){t.data("ui-tooltip-open")&&(e&&(e.type=r),this._open(e,t,i))}))})))&&this._open(e,t,i))},_open:function(e,i,n){function s(t){u.of=t,o.is(":hidden")||o.position(u)}var r,o,a,l,u=t.extend({},this.options.position);if(n){if(r=this._find(i))return void r.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),r=this._tooltip(i),o=r.tooltip,this._addDescribedBy(i,o.attr("id")),o.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),(l=t("<div>").html(o.find(".ui-tooltip-content").html())).removeAttr("name").find("[name]").removeAttr("name"),l.removeAttr("id").find("[id]").removeAttr("id"),l.appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:s}),s(e)):o.position(t.extend({of:i},this.options.position)),o.hide(),this._show(o,this.options.show),this.options.track&&this.options.show&&this.options.show.delay&&(a=this.delayedShow=setInterval((function(){o.is(":visible")&&(s(u.of),clearInterval(a))}),t.fx.interval)),this._trigger("open",e,{tooltip:o})}},_registerCloseHandlers:function(e,i){var n={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var n=t.Event(e);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&"mouseover"!==e.type||(n.mouseleave="close"),e&&"focusin"!==e.type||(n.focusout="close"),this._on(!0,i,n)},close:function(e){var i,n=this,s=t(e?e.currentTarget:this.element),r=this._find(s);return r?(i=r.tooltip,void(r.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),r.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,(function(){n._removeTooltip(t(this))})),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,(function(e,i){t(i.element).attr("title",i.title),delete n.parents[e]})),r.closing=!0,this._trigger("close",e,{tooltip:i}),r.hiding||(r.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(e){var i=t("<div>").attr("role","tooltip"),n=t("<div>").appendTo(i),s=i.uniqueId().attr("id");return this._addClass(n,"ui-tooltip-content"),this._addClass(i,"ui-tooltip","ui-widget ui-widget-content"),i.appendTo(this._appendTo(e)),this.tooltips[s]={element:e,tooltip:i}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_appendTo:function(t){var e=t.closest(".ui-front, dialog");return e.length||(e=this.document[0].body),e},_destroy:function(){var e=this;t.each(this.tooltips,(function(i,n){var s=t.Event("blur"),r=n.element;s.target=s.currentTarget=r[0],e.close(s,!0),t("#"+i).remove(),r.data("ui-tooltip-title")&&(r.attr("title")||r.attr("title",r.data("ui-tooltip-title")),r.removeData("ui-tooltip-title"))})),this.liveRegion.remove()}}),!1!==t.uiBackCompat&&t.widget("ui.tooltip",t.ui.tooltip,{options:{tooltipClass:null},_tooltip:function(){var t=this._superApply(arguments);return this.options.tooltipClass&&t.tooltip.addClass(this.options.tooltipClass),t}}),t.ui.tooltip})?n.apply(e,s):n)||(t.exports=r)},function(t,e,i){},function(t,e,i){(function(n){var s,r,o;r=[i(0)],void 0===(o="function"==typeof(s=function(t){t.extend(t.fn,{validate:function(e){if(this.length){var i=t.data(this[0],"validator");return i||(this.attr("novalidate","novalidate"),i=new t.validator(e,this[0]),t.data(this[0],"validator",i),i.settings.onsubmit&&(this.on("click.validate",":submit",(function(e){i.submitButton=e.currentTarget,t(this).hasClass("cancel")&&(i.cancelSubmit=!0),void 0!==t(this).attr("formnovalidate")&&(i.cancelSubmit=!0)})),this.on("submit.validate",(function(e){function n(){var n,s;return i.submitButton&&(i.settings.submitHandler||i.formSubmitted)&&(n=t("<input type='hidden'/>").attr("name",i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)),!(i.settings.submitHandler&&!i.settings.debug)||(s=i.settings.submitHandler.call(i,i.currentForm,e),n&&n.remove(),void 0!==s&&s)}return i.settings.debug&&e.preventDefault(),i.cancelSubmit?(i.cancelSubmit=!1,n()):i.form()?i.pendingRequest?(i.formSubmitted=!0,!1):n():(i.focusInvalid(),!1)}))),i)}e&&e.debug&&window.console&&n.warn("Nothing selected, can't validate, returning nothing.")},valid:function(){var e,i,n;return t(this[0]).is("form")?e=this.validate().form():(n=[],e=!0,i=t(this[0].form).validate(),this.each((function(){(e=i.element(this)&&e)||(n=n.concat(i.errorList))})),i.errorList=n),e},rules:function(e,i){var n,s,r,o,a,l,u=this[0],c=void 0!==this.attr("contenteditable")&&"false"!==this.attr("contenteditable");if(null!=u&&(!u.form&&c&&(u.form=this.closest("form")[0],u.name=this.attr("name")),null!=u.form)){if(e)switch(n=t.data(u.form,"validator").settings,s=n.rules,r=t.validator.staticRules(u),e){case"add":t.extend(r,t.validator.normalizeRule(i)),delete r.messages,s[u.name]=r,i.messages&&(n.messages[u.name]=t.extend(n.messages[u.name],i.messages));break;case"remove":return i?(l={},t.each(i.split(/\s/),(function(t,e){l[e]=r[e],delete r[e]})),l):(delete s[u.name],r)}return(o=t.validator.normalizeRules(t.extend({},t.validator.classRules(u),t.validator.attributeRules(u),t.validator.dataRules(u),t.validator.staticRules(u)),u)).required&&(a=o.required,delete o.required,o=t.extend({required:a},o)),o.remote&&(a=o.remote,delete o.remote,o=t.extend(o,{remote:a})),o}}}),t.extend(t.expr.pseudos||t.expr[":"],{blank:function(e){return!t.trim(""+t(e).val())},filled:function(e){var i=t(e).val();return null!==i&&!!t.trim(""+i)},unchecked:function(e){return!t(e).prop("checked")}}),t.validator=function(e,i){this.settings=t.extend(!0,{},t.validator.defaults,e),this.currentForm=i,this.init()},t.validator.format=function(e,i){return 1===arguments.length?function(){var i=t.makeArray(arguments);return i.unshift(e),t.validator.format.apply(this,i)}:void 0===i?e:(arguments.length>2&&i.constructor!==Array&&(i=t.makeArray(arguments).slice(1)),i.constructor!==Array&&(i=[i]),t.each(i,(function(t,i){e=e.replace(new RegExp("\\{"+t+"\\}","g"),(function(){return i}))})),e)},t.extend(t.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:t([]),errorLabelContainer:t([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(t){this.lastActive=t,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,t,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(t)))},onfocusout:function(t){this.checkable(t)||!(t.name in this.submitted)&&this.optional(t)||this.element(t)},onkeyup:function(e,i){9===i.which&&""===this.elementValue(e)||-1!==t.inArray(i.keyCode,[16,17,18,20,35,36,37,38,39,40,45,144,225])||(e.name in this.submitted||e.name in this.invalid)&&this.element(e)},onclick:function(t){t.name in this.submitted?this.element(t):t.parentNode.name in this.submitted&&this.element(t.parentNode)},highlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).addClass(i).removeClass(n):t(e).addClass(i).removeClass(n)},unhighlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).removeClass(i).addClass(n):t(e).removeClass(i).addClass(n)}},setDefaults:function(e){t.extend(t.validator.defaults,e)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:t.validator.format("Please enter no more than {0} characters."),minlength:t.validator.format("Please enter at least {0} characters."),rangelength:t.validator.format("Please enter a value between {0} and {1} characters long."),range:t.validator.format("Please enter a value between {0} and {1}."),max:t.validator.format("Please enter a value less than or equal to {0}."),min:t.validator.format("Please enter a value greater than or equal to {0}."),step:t.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){function e(e){var i=void 0!==t(this).attr("contenteditable")&&"false"!==t(this).attr("contenteditable");if(!this.form&&i&&(this.form=t(this).closest("form")[0],this.name=t(this).attr("name")),n===this.form){var s=t.data(this.form,"validator"),r="on"+e.type.replace(/^validate/,""),o=s.settings;o[r]&&!t(this).is(o.ignore)&&o[r].call(s,this,e)}}this.labelContainer=t(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||t(this.currentForm),this.containers=t(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var i,n=this.currentForm,s=this.groups={};t.each(this.settings.groups,(function(e,i){"string"==typeof i&&(i=i.split(/\s/)),t.each(i,(function(t,i){s[i]=e}))})),i=this.settings.rules,t.each(i,(function(e,n){i[e]=t.validator.normalizeRule(n)})),t(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",e).on("click.validate","select, option, [type='radio'], [type='checkbox']",e),this.settings.invalidHandler&&t(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),t.extend(this.submitted,this.errorMap),this.invalid=t.extend({},this.errorMap),this.valid()||t(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var t=0,e=this.currentElements=this.elements();e[t];t++)this.check(e[t]);return this.valid()},element:function(e){var i,n,s=this.clean(e),r=this.validationTargetFor(s),o=this,a=!0;return void 0===r?delete this.invalid[s.name]:(this.prepareElement(r),this.currentElements=t(r),(n=this.groups[r.name])&&t.each(this.groups,(function(t,e){e===n&&t!==r.name&&(s=o.validationTargetFor(o.clean(o.findByName(t))))&&s.name in o.invalid&&(o.currentElements.push(s),a=o.check(s)&&a)})),i=!1!==this.check(r),a=a&&i,this.invalid[r.name]=!i,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),t(e).attr("aria-invalid",!i)),a},showErrors:function(e){if(e){var i=this;t.extend(this.errorMap,e),this.errorList=t.map(this.errorMap,(function(t,e){return{message:t,element:i.findByName(e)[0]}})),this.successList=t.grep(this.successList,(function(t){return!(t.name in e)}))}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){t.fn.resetForm&&t(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var e=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(e)},resetElements:function(t){var e;if(this.settings.unhighlight)for(e=0;t[e];e++)this.settings.unhighlight.call(this,t[e],this.settings.errorClass,""),this.findByName(t[e].name).removeClass(this.settings.validClass);else t.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(t){var e,i=0;for(e in t)void 0!==t[e]&&null!==t[e]&&!1!==t[e]&&i++;return i},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(t){t.not(this.containers).text(""),this.addWrapper(t).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{t(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").trigger("focus").trigger("focusin")}catch(t){}},findLastActive:function(){var e=this.lastActive;return e&&1===t.grep(this.errorList,(function(t){return t.element.name===e.name})).length&&e},elements:function(){var e=this,i={};return t(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter((function(){var s=this.name||t(this).attr("name"),r=void 0!==t(this).attr("contenteditable")&&"false"!==t(this).attr("contenteditable");return!s&&e.settings.debug&&window.console&&n.error("%o has no name assigned",this),r&&(this.form=t(this).closest("form")[0],this.name=s),!(this.form!==e.currentForm||s in i||!e.objectLength(t(this).rules())||(i[s]=!0,0))}))},clean:function(e){return t(e)[0]},errors:function(){var e=this.settings.errorClass.split(" ").join(".");return t(this.settings.errorElement+"."+e,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=t([]),this.toHide=t([])},reset:function(){this.resetInternals(),this.currentElements=t([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(t){this.reset(),this.toHide=this.errorsFor(t)},elementValue:function(e){var i,n,s=t(e),r=e.type,o=void 0!==s.attr("contenteditable")&&"false"!==s.attr("contenteditable");return"radio"===r||"checkbox"===r?this.findByName(e.name).filter(":checked").val():"number"===r&&void 0!==e.validity?e.validity.badInput?"NaN":s.val():(i=o?s.text():s.val(),"file"===r?"C:\\fakepath\\"===i.substr(0,12)?i.substr(12):(n=i.lastIndexOf("/"))>=0?i.substr(n+1):(n=i.lastIndexOf("\\"))>=0?i.substr(n+1):i:"string"==typeof i?i.replace(/\r/g,""):i)},check:function(e){e=this.validationTargetFor(this.clean(e));var i,s,r,o,a=t(e).rules(),l=t.map(a,(function(t,e){return e})).length,u=!1,c=this.elementValue(e);for(s in"function"==typeof a.normalizer?o=a.normalizer:"function"==typeof this.settings.normalizer&&(o=this.settings.normalizer),o&&(c=o.call(e,c),delete a.normalizer),a){r={method:s,parameters:a[s]};try{if("dependency-mismatch"===(i=t.validator.methods[s].call(this,c,e,r.parameters))&&1===l){u=!0;continue}if(u=!1,"pending"===i)return void(this.toHide=this.toHide.not(this.errorsFor(e)));if(!i)return this.formatAndAdd(e,r),!1}catch(t){throw this.settings.debug&&window.console&&n.log("Exception occurred when checking element "+e.id+", check the '"+r.method+"' method.",t),t instanceof TypeError&&(t.message+=".  Exception occurred when checking element "+e.id+", check the '"+r.method+"' method."),t}}if(!u)return this.objectLength(a)&&this.successList.push(e),!0},customDataMessage:function(e,i){return t(e).data("msg"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase())||t(e).data("msg")},customMessage:function(t,e){var i=this.settings.messages[t];return i&&(i.constructor===String?i:i[e])},findDefined:function(){for(var t=0;t<arguments.length;t++)if(void 0!==arguments[t])return arguments[t]},defaultMessage:function(e,i){"string"==typeof i&&(i={method:i});var n=this.findDefined(this.customMessage(e.name,i.method),this.customDataMessage(e,i.method),!this.settings.ignoreTitle&&e.title||void 0,t.validator.messages[i.method],"<strong>Warning: No message defined for "+e.name+"</strong>"),s=/\$?\{(\d+)\}/g;return"function"==typeof n?n=n.call(this,i.parameters,e):s.test(n)&&(n=t.validator.format(n.replace(s,"{$1}"),i.parameters)),n},formatAndAdd:function(t,e){var i=this.defaultMessage(t,e);this.errorList.push({message:i,element:t,method:e.method}),this.errorMap[t.name]=i,this.submitted[t.name]=i},addWrapper:function(t){return this.settings.wrapper&&(t=t.add(t.parent(this.settings.wrapper))),t},defaultShowErrors:function(){var t,e,i;for(t=0;this.errorList[t];t++)i=this.errorList[t],this.settings.highlight&&this.settings.highlight.call(this,i.element,this.settings.errorClass,this.settings.validClass),this.showLabel(i.element,i.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(t=0;this.successList[t];t++)this.showLabel(this.successList[t]);if(this.settings.unhighlight)for(t=0,e=this.validElements();e[t];t++)this.settings.unhighlight.call(this,e[t],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return t(this.errorList).map((function(){return this.element}))},showLabel:function(e,i){var n,s,r,o,a=this.errorsFor(e),l=this.idOrName(e),u=t(e).attr("aria-describedby");a.length?(a.removeClass(this.settings.validClass).addClass(this.settings.errorClass),a.html(i)):(n=a=t("<"+this.settings.errorElement+">").attr("id",l+"-error").addClass(this.settings.errorClass).html(i||""),this.settings.wrapper&&(n=a.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(n):this.settings.errorPlacement?this.settings.errorPlacement.call(this,n,t(e)):n.insertAfter(e),a.is("label")?a.attr("for",l):0===a.parents("label[for='"+this.escapeCssMeta(l)+"']").length&&(r=a.attr("id"),u?u.match(new RegExp("\\b"+this.escapeCssMeta(r)+"\\b"))||(u+=" "+r):u=r,t(e).attr("aria-describedby",u),(s=this.groups[e.name])&&(o=this,t.each(o.groups,(function(e,i){i===s&&t("[name='"+o.escapeCssMeta(e)+"']",o.currentForm).attr("aria-describedby",a.attr("id"))}))))),!i&&this.settings.success&&(a.text(""),"string"==typeof this.settings.success?a.addClass(this.settings.success):this.settings.success(a,e)),this.toShow=this.toShow.add(a)},errorsFor:function(e){var i=this.escapeCssMeta(this.idOrName(e)),n=t(e).attr("aria-describedby"),s="label[for='"+i+"'], label[for='"+i+"'] *";return n&&(s=s+", #"+this.escapeCssMeta(n).replace(/\s+/g,", #")),this.errors().filter(s)},escapeCssMeta:function(t){return t.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(t){return this.groups[t.name]||(this.checkable(t)?t.name:t.id||t.name)},validationTargetFor:function(e){return this.checkable(e)&&(e=this.findByName(e.name)),t(e).not(this.settings.ignore)[0]},checkable:function(t){return/radio|checkbox/i.test(t.type)},findByName:function(e){return t(this.currentForm).find("[name='"+this.escapeCssMeta(e)+"']")},getLength:function(e,i){switch(i.nodeName.toLowerCase()){case"select":return t("option:selected",i).length;case"input":if(this.checkable(i))return this.findByName(i.name).filter(":checked").length}return e.length},depend:function(t,e){return!this.dependTypes[typeof t]||this.dependTypes[typeof t](t,e)},dependTypes:{boolean:function(t){return t},string:function(e,i){return!!t(e,i.form).length},function:function(t,e){return t(e)}},optional:function(e){var i=this.elementValue(e);return!t.validator.methods.required.call(this,i,e)&&"dependency-mismatch"},startRequest:function(e){this.pending[e.name]||(this.pendingRequest++,t(e).addClass(this.settings.pendingClass),this.pending[e.name]=!0)},stopRequest:function(e,i){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[e.name],t(e).removeClass(this.settings.pendingClass),i&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(t(this.currentForm).submit(),this.submitButton&&t("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!i&&0===this.pendingRequest&&this.formSubmitted&&(t(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(e,i){return i="string"==typeof i&&i||"remote",t.data(e,"previousValue")||t.data(e,"previousValue",{old:null,valid:!0,message:this.defaultMessage(e,{method:i})})},destroy:function(){this.resetForm(),t(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(e,i){e.constructor===String?this.classRuleSettings[e]=i:t.extend(this.classRuleSettings,e)},classRules:function(e){var i={},n=t(e).attr("class");return n&&t.each(n.split(" "),(function(){this in t.validator.classRuleSettings&&t.extend(i,t.validator.classRuleSettings[this])})),i},normalizeAttributeRule:function(t,e,i,n){/min|max|step/.test(i)&&(null===e||/number|range|text/.test(e))&&(n=Number(n),isNaN(n)&&(n=void 0)),n||0===n?t[i]=n:e===i&&"range"!==e&&(t[i]=!0)},attributeRules:function(e){var i,n,s={},r=t(e),o=e.getAttribute("type");for(i in t.validator.methods)"required"===i?(""===(n=e.getAttribute(i))&&(n=!0),n=!!n):n=r.attr(i),this.normalizeAttributeRule(s,o,i,n);return s.maxlength&&/-1|2147483647|524288/.test(s.maxlength)&&delete s.maxlength,s},dataRules:function(e){var i,n,s={},r=t(e),o=e.getAttribute("type");for(i in t.validator.methods)""===(n=r.data("rule"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase()))&&(n=!0),this.normalizeAttributeRule(s,o,i,n);return s},staticRules:function(e){var i={},n=t.data(e.form,"validator");return n.settings.rules&&(i=t.validator.normalizeRule(n.settings.rules[e.name])||{}),i},normalizeRules:function(e,i){return t.each(e,(function(n,s){if(!1!==s){if(s.param||s.depends){var r=!0;switch(typeof s.depends){case"string":r=!!t(s.depends,i.form).length;break;case"function":r=s.depends.call(i,i)}r?e[n]=void 0===s.param||s.param:(t.data(i.form,"validator").resetElements(t(i)),delete e[n])}}else delete e[n]})),t.each(e,(function(n,s){e[n]=t.isFunction(s)&&"normalizer"!==n?s(i):s})),t.each(["minlength","maxlength"],(function(){e[this]&&(e[this]=Number(e[this]))})),t.each(["rangelength","range"],(function(){var i;e[this]&&(t.isArray(e[this])?e[this]=[Number(e[this][0]),Number(e[this][1])]:"string"==typeof e[this]&&(i=e[this].replace(/[\[\]]/g,"").split(/[\s,]+/),e[this]=[Number(i[0]),Number(i[1])]))})),t.validator.autoCreateRanges&&(null!=e.min&&null!=e.max&&(e.range=[e.min,e.max],delete e.min,delete e.max),null!=e.minlength&&null!=e.maxlength&&(e.rangelength=[e.minlength,e.maxlength],delete e.minlength,delete e.maxlength)),e},normalizeRule:function(e){if("string"==typeof e){var i={};t.each(e.split(/\s/),(function(){i[this]=!0})),e=i}return e},addMethod:function(e,i,n){t.validator.methods[e]=i,t.validator.messages[e]=void 0!==n?n:t.validator.messages[e],i.length<3&&t.validator.addClassRules(e,t.validator.normalizeRule(e))},methods:{required:function(e,i,n){if(!this.depend(n,i))return"dependency-mismatch";if("select"===i.nodeName.toLowerCase()){var s=t(i).val();return s&&s.length>0}return this.checkable(i)?this.getLength(e,i)>0:null!=e&&e.length>0},email:function(t,e){return this.optional(e)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t)},url:function(t,e){return this.optional(e)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(t)},date:function(){var t=!1;return function(e,i){return t||(t=!0,this.settings.debug&&window.console&&n.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.")),this.optional(i)||!/Invalid|NaN/.test(new Date(e).toString())}}(),dateISO:function(t,e){return this.optional(e)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t)},number:function(t,e){return this.optional(e)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)},digits:function(t,e){return this.optional(e)||/^\d+$/.test(t)},minlength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s>=n},maxlength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s<=n},rangelength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s>=n[0]&&s<=n[1]},min:function(t,e,i){return this.optional(e)||t>=i},max:function(t,e,i){return this.optional(e)||t<=i},range:function(t,e,i){return this.optional(e)||t>=i[0]&&t<=i[1]},step:function(e,i,n){var s,r=t(i).attr("type"),o="Step attribute on input type "+r+" is not supported.",a=new RegExp("\\b"+r+"\\b"),l=function(t){var e=(""+t).match(/(?:\.(\d+))?$/);return e&&e[1]?e[1].length:0},u=function(t){return Math.round(t*Math.pow(10,s))},c=!0;if(r&&!a.test(["text","number","range"].join()))throw new Error(o);return s=l(n),(l(e)>s||u(e)%u(n)!=0)&&(c=!1),this.optional(i)||c},equalTo:function(e,i,n){var s=t(n);return this.settings.onfocusout&&s.not(".validate-equalTo-blur").length&&s.addClass("validate-equalTo-blur").on("blur.validate-equalTo",(function(){t(i).valid()})),e===s.val()},remote:function(e,i,n,s){if(this.optional(i))return"dependency-mismatch";s="string"==typeof s&&s||"remote";var r,o,a,l=this.previousValue(i,s);return this.settings.messages[i.name]||(this.settings.messages[i.name]={}),l.originalMessage=l.originalMessage||this.settings.messages[i.name][s],this.settings.messages[i.name][s]=l.message,n="string"==typeof n&&{url:n}||n,a=t.param(t.extend({data:e},n.data)),l.old===a?l.valid:(l.old=a,r=this,this.startRequest(i),(o={})[i.name]=e,t.ajax(t.extend(!0,{mode:"abort",port:"validate"+i.name,dataType:"json",data:o,context:r.currentForm,success:function(t){var n,o,a,u=!0===t||"true"===t;r.settings.messages[i.name][s]=l.originalMessage,u?(a=r.formSubmitted,r.resetInternals(),r.toHide=r.errorsFor(i),r.formSubmitted=a,r.successList.push(i),r.invalid[i.name]=!1,r.showErrors()):(n={},o=t||r.defaultMessage(i,{method:s,parameters:e}),n[i.name]=l.message=o,r.invalid[i.name]=!0,r.showErrors(n)),l.valid=u,r.stopRequest(i,u)}},n)),"pending")}}});var e,i={};return t.ajaxPrefilter?t.ajaxPrefilter((function(t,e,n){var s=t.port;"abort"===t.mode&&(i[s]&&i[s].abort(),i[s]=n)})):(e=t.ajax,t.ajax=function(n){var s=("mode"in n?n:t.ajaxSettings).mode,r=("port"in n?n:t.ajaxSettings).port;return"abort"===s?(i[r]&&i[r].abort(),i[r]=e.apply(this,arguments),i[r]):e.apply(this,arguments)}),t})?s.apply(e,r):s)||(t.exports=o)}).call(this,i(1))},function(t,e){t.exports="/assets/images/create-account-icon.jpg"},function(t,e){t.exports="/assets/images/sign-into-account-icon.jpg"},function(t,e,i){var n=i(0),s={defaultAccountPageState:function(){n("#sign-up-create-acc-panel").css("display","none"),n("#sign-up-additional-information-panel").css("display","none"),n("#registered-top-bar-column-2").css("display","none")},registerAccountPageState:function(){n("#sign-in-panel").css("display","none"),n("#sign-up-create-acc-panel").css("display","flex"),n("#account-login-signup-header").html("Register Account"),s.toggleAccountLinkState()},loginAccountPageState:function(){n("#sign-in-panel").css("display","flex"),n("#sign-up-create-acc-panel").css("display","none"),n("#account-login-signup-header").html("Returning User"),s.toggleAccountLinkState()},toggleAccountLinkState:function(){"flex"===n("#sign-in-panel").css("display")?n("#Login-link").addClass("active"):n("#Login-link").hasClass("active")&&n("#Login-link").removeClass("active"),"flex"===n("#sign-up-create-acc-panel").css("display")?n("#Register-link").addClass("active"):n("#Register-link").hasClass("active")&&n("#Register-link").removeClass("active")}};n((function(){s.defaultAccountPageState(),n("#go-to-sign-up-btn").on("click",(function(){s.registerAccountPageState()})),n("#go-back-to-sign-in-link").on("click",(function(){s.loginAccountPageState()})),n("#register-tab-button").on("click",(function(){s.registerAccountPageState()})),n("#login-tab-button").on("click",(function(){s.loginAccountPageState()}))}))},function(t,e,i){i(32).validate;var n=i(0);n((function(){n("form[name='sign-in-form']").validate({rules:{"returning-username":{required:!0,minlength:5},"returning-password":{required:!0,minlength:8}},messages:{"returning-username":{required:"Enter your username",minlength:"Username doesn't meet the required length"},"returning-password":{required:"Please enter a password",minlength:"Password doesn't meet the required length"}},submitHandler:function(t,e){e.preventDefault}}),n("form[name='create-account-form']").validate({rules:{"new-username":{required:!0,minlength:5},"new-password":{required:!0,minlength:8},"new-password-confirm":{required:!0,minlength:8,equalTo:"#new-password"}},messages:{"new-username":{required:"Choose a username",minlength:"Username must be at least 5 characters long"},"new-password":{required:"Choose a password",minlength:"Password must be 8 characters long"},"new-password-confirm":{required:"Re-enter your password",minlength:"Password must be 8 characters long",equalTo:"Passwords don't match"}},submitHandler:function(t,e){e.preventDefault}})}))},function(t,e,i){(function(n){var s,r,o;r=[i(0)],void 0===(o="function"==typeof(s=function(t){var e;t.extend(t.fn,{validate:function(e){if(this.length){var i=t.data(this[0],"validator");return i||(this.attr("novalidate","novalidate"),i=new t.validator(e,this[0]),t.data(this[0],"validator",i),i.settings.onsubmit&&(this.on("click.validate",":submit",(function(e){i.submitButton=e.currentTarget,t(this).hasClass("cancel")&&(i.cancelSubmit=!0),void 0!==t(this).attr("formnovalidate")&&(i.cancelSubmit=!0)})),this.on("submit.validate",(function(e){function n(){var n,s;return i.submitButton&&(i.settings.submitHandler||i.formSubmitted)&&(n=t("<input type='hidden'/>").attr("name",i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)),!(i.settings.submitHandler&&!i.settings.debug)||(s=i.settings.submitHandler.call(i,i.currentForm,e),n&&n.remove(),void 0!==s&&s)}return i.settings.debug&&e.preventDefault(),i.cancelSubmit?(i.cancelSubmit=!1,n()):i.form()?i.pendingRequest?(i.formSubmitted=!0,!1):n():(i.focusInvalid(),!1)}))),i)}e&&e.debug&&window.console&&n.warn("Nothing selected, can't validate, returning nothing.")},valid:function(){var e,i,n;return t(this[0]).is("form")?e=this.validate().form():(n=[],e=!0,i=t(this[0].form).validate(),this.each((function(){(e=i.element(this)&&e)||(n=n.concat(i.errorList))})),i.errorList=n),e},rules:function(e,i){var n,s,r,o,a,l,u=this[0],c=void 0!==this.attr("contenteditable")&&"false"!==this.attr("contenteditable");if(null!=u&&(!u.form&&c&&(u.form=this.closest("form")[0],u.name=this.attr("name")),null!=u.form)){if(e)switch(s=(n=t.data(u.form,"validator").settings).rules,r=t.validator.staticRules(u),e){case"add":t.extend(r,t.validator.normalizeRule(i)),delete r.messages,s[u.name]=r,i.messages&&(n.messages[u.name]=t.extend(n.messages[u.name],i.messages));break;case"remove":return i?(l={},t.each(i.split(/\s/),(function(t,e){l[e]=r[e],delete r[e]})),l):(delete s[u.name],r)}return(o=t.validator.normalizeRules(t.extend({},t.validator.classRules(u),t.validator.attributeRules(u),t.validator.dataRules(u),t.validator.staticRules(u)),u)).required&&(a=o.required,delete o.required,o=t.extend({required:a},o)),o.remote&&(a=o.remote,delete o.remote,o=t.extend(o,{remote:a})),o}}}),t.extend(t.expr.pseudos||t.expr[":"],{blank:function(e){return!t.trim(""+t(e).val())},filled:function(e){var i=t(e).val();return null!==i&&!!t.trim(""+i)},unchecked:function(e){return!t(e).prop("checked")}}),t.validator=function(e,i){this.settings=t.extend(!0,{},t.validator.defaults,e),this.currentForm=i,this.init()},t.validator.format=function(e,i){return 1===arguments.length?function(){var i=t.makeArray(arguments);return i.unshift(e),t.validator.format.apply(this,i)}:void 0===i?e:(arguments.length>2&&i.constructor!==Array&&(i=t.makeArray(arguments).slice(1)),i.constructor!==Array&&(i=[i]),t.each(i,(function(t,i){e=e.replace(new RegExp("\\{"+t+"\\}","g"),(function(){return i}))})),e)},t.extend(t.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:t([]),errorLabelContainer:t([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(t){this.lastActive=t,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,t,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(t)))},onfocusout:function(t){this.checkable(t)||!(t.name in this.submitted)&&this.optional(t)||this.element(t)},onkeyup:function(e,i){9===i.which&&""===this.elementValue(e)||-1!==t.inArray(i.keyCode,[16,17,18,20,35,36,37,38,39,40,45,144,225])||(e.name in this.submitted||e.name in this.invalid)&&this.element(e)},onclick:function(t){t.name in this.submitted?this.element(t):t.parentNode.name in this.submitted&&this.element(t.parentNode)},highlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).addClass(i).removeClass(n):t(e).addClass(i).removeClass(n)},unhighlight:function(e,i,n){"radio"===e.type?this.findByName(e.name).removeClass(i).addClass(n):t(e).removeClass(i).addClass(n)}},setDefaults:function(e){t.extend(t.validator.defaults,e)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:t.validator.format("Please enter no more than {0} characters."),minlength:t.validator.format("Please enter at least {0} characters."),rangelength:t.validator.format("Please enter a value between {0} and {1} characters long."),range:t.validator.format("Please enter a value between {0} and {1}."),max:t.validator.format("Please enter a value less than or equal to {0}."),min:t.validator.format("Please enter a value greater than or equal to {0}."),step:t.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){this.labelContainer=t(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||t(this.currentForm),this.containers=t(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var e,i=this.currentForm,n=this.groups={};function s(e){var n=void 0!==t(this).attr("contenteditable")&&"false"!==t(this).attr("contenteditable");if(!this.form&&n&&(this.form=t(this).closest("form")[0],this.name=t(this).attr("name")),i===this.form){var s=t.data(this.form,"validator"),r="on"+e.type.replace(/^validate/,""),o=s.settings;o[r]&&!t(this).is(o.ignore)&&o[r].call(s,this,e)}}t.each(this.settings.groups,(function(e,i){"string"==typeof i&&(i=i.split(/\s/)),t.each(i,(function(t,i){n[i]=e}))})),e=this.settings.rules,t.each(e,(function(i,n){e[i]=t.validator.normalizeRule(n)})),t(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",s).on("click.validate","select, option, [type='radio'], [type='checkbox']",s),this.settings.invalidHandler&&t(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),t.extend(this.submitted,this.errorMap),this.invalid=t.extend({},this.errorMap),this.valid()||t(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var t=0,e=this.currentElements=this.elements();e[t];t++)this.check(e[t]);return this.valid()},element:function(e){var i,n,s=this.clean(e),r=this.validationTargetFor(s),o=this,a=!0;return void 0===r?delete this.invalid[s.name]:(this.prepareElement(r),this.currentElements=t(r),(n=this.groups[r.name])&&t.each(this.groups,(function(t,e){e===n&&t!==r.name&&(s=o.validationTargetFor(o.clean(o.findByName(t))))&&s.name in o.invalid&&(o.currentElements.push(s),a=o.check(s)&&a)})),i=!1!==this.check(r),a=a&&i,this.invalid[r.name]=!i,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),t(e).attr("aria-invalid",!i)),a},showErrors:function(e){if(e){var i=this;t.extend(this.errorMap,e),this.errorList=t.map(this.errorMap,(function(t,e){return{message:t,element:i.findByName(e)[0]}})),this.successList=t.grep(this.successList,(function(t){return!(t.name in e)}))}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){t.fn.resetForm&&t(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var e=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(e)},resetElements:function(t){var e;if(this.settings.unhighlight)for(e=0;t[e];e++)this.settings.unhighlight.call(this,t[e],this.settings.errorClass,""),this.findByName(t[e].name).removeClass(this.settings.validClass);else t.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(t){var e,i=0;for(e in t)void 0!==t[e]&&null!==t[e]&&!1!==t[e]&&i++;return i},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(t){t.not(this.containers).text(""),this.addWrapper(t).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{t(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").trigger("focus").trigger("focusin")}catch(t){}},findLastActive:function(){var e=this.lastActive;return e&&1===t.grep(this.errorList,(function(t){return t.element.name===e.name})).length&&e},elements:function(){var e=this,i={};return t(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter((function(){var s=this.name||t(this).attr("name"),r=void 0!==t(this).attr("contenteditable")&&"false"!==t(this).attr("contenteditable");return!s&&e.settings.debug&&window.console&&n.error("%o has no name assigned",this),r&&(this.form=t(this).closest("form")[0],this.name=s),!(this.form!==e.currentForm||s in i||!e.objectLength(t(this).rules())||(i[s]=!0,0))}))},clean:function(e){return t(e)[0]},errors:function(){var e=this.settings.errorClass.split(" ").join(".");return t(this.settings.errorElement+"."+e,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=t([]),this.toHide=t([])},reset:function(){this.resetInternals(),this.currentElements=t([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(t){this.reset(),this.toHide=this.errorsFor(t)},elementValue:function(e){var i,n,s=t(e),r=e.type,o=void 0!==s.attr("contenteditable")&&"false"!==s.attr("contenteditable");return"radio"===r||"checkbox"===r?this.findByName(e.name).filter(":checked").val():"number"===r&&void 0!==e.validity?e.validity.badInput?"NaN":s.val():(i=o?s.text():s.val(),"file"===r?"C:\\fakepath\\"===i.substr(0,12)?i.substr(12):(n=i.lastIndexOf("/"))>=0?i.substr(n+1):(n=i.lastIndexOf("\\"))>=0?i.substr(n+1):i:"string"==typeof i?i.replace(/\r/g,""):i)},check:function(e){e=this.validationTargetFor(this.clean(e));var i,s,r,o,a=t(e).rules(),l=t.map(a,(function(t,e){return e})).length,u=!1,c=this.elementValue(e);for(s in"function"==typeof a.normalizer?o=a.normalizer:"function"==typeof this.settings.normalizer&&(o=this.settings.normalizer),o&&(c=o.call(e,c),delete a.normalizer),a){r={method:s,parameters:a[s]};try{if("dependency-mismatch"===(i=t.validator.methods[s].call(this,c,e,r.parameters))&&1===l){u=!0;continue}if(u=!1,"pending"===i)return void(this.toHide=this.toHide.not(this.errorsFor(e)));if(!i)return this.formatAndAdd(e,r),!1}catch(t){throw this.settings.debug&&window.console&&n.log("Exception occurred when checking element "+e.id+", check the '"+r.method+"' method.",t),t instanceof TypeError&&(t.message+=".  Exception occurred when checking element "+e.id+", check the '"+r.method+"' method."),t}}if(!u)return this.objectLength(a)&&this.successList.push(e),!0},customDataMessage:function(e,i){return t(e).data("msg"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase())||t(e).data("msg")},customMessage:function(t,e){var i=this.settings.messages[t];return i&&(i.constructor===String?i:i[e])},findDefined:function(){for(var t=0;t<arguments.length;t++)if(void 0!==arguments[t])return arguments[t]},defaultMessage:function(e,i){"string"==typeof i&&(i={method:i});var n=this.findDefined(this.customMessage(e.name,i.method),this.customDataMessage(e,i.method),!this.settings.ignoreTitle&&e.title||void 0,t.validator.messages[i.method],"<strong>Warning: No message defined for "+e.name+"</strong>"),s=/\$?\{(\d+)\}/g;return"function"==typeof n?n=n.call(this,i.parameters,e):s.test(n)&&(n=t.validator.format(n.replace(s,"{$1}"),i.parameters)),n},formatAndAdd:function(t,e){var i=this.defaultMessage(t,e);this.errorList.push({message:i,element:t,method:e.method}),this.errorMap[t.name]=i,this.submitted[t.name]=i},addWrapper:function(t){return this.settings.wrapper&&(t=t.add(t.parent(this.settings.wrapper))),t},defaultShowErrors:function(){var t,e,i;for(t=0;this.errorList[t];t++)i=this.errorList[t],this.settings.highlight&&this.settings.highlight.call(this,i.element,this.settings.errorClass,this.settings.validClass),this.showLabel(i.element,i.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(t=0;this.successList[t];t++)this.showLabel(this.successList[t]);if(this.settings.unhighlight)for(t=0,e=this.validElements();e[t];t++)this.settings.unhighlight.call(this,e[t],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return t(this.errorList).map((function(){return this.element}))},showLabel:function(e,i){var n,s,r,o,a=this.errorsFor(e),l=this.idOrName(e),u=t(e).attr("aria-describedby");a.length?(a.removeClass(this.settings.validClass).addClass(this.settings.errorClass),a.html(i)):(n=a=t("<"+this.settings.errorElement+">").attr("id",l+"-error").addClass(this.settings.errorClass).html(i||""),this.settings.wrapper&&(n=a.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(n):this.settings.errorPlacement?this.settings.errorPlacement.call(this,n,t(e)):n.insertAfter(e),a.is("label")?a.attr("for",l):0===a.parents("label[for='"+this.escapeCssMeta(l)+"']").length&&(r=a.attr("id"),u?u.match(new RegExp("\\b"+this.escapeCssMeta(r)+"\\b"))||(u+=" "+r):u=r,t(e).attr("aria-describedby",u),(s=this.groups[e.name])&&(o=this,t.each(o.groups,(function(e,i){i===s&&t("[name='"+o.escapeCssMeta(e)+"']",o.currentForm).attr("aria-describedby",a.attr("id"))}))))),!i&&this.settings.success&&(a.text(""),"string"==typeof this.settings.success?a.addClass(this.settings.success):this.settings.success(a,e)),this.toShow=this.toShow.add(a)},errorsFor:function(e){var i=this.escapeCssMeta(this.idOrName(e)),n=t(e).attr("aria-describedby"),s="label[for='"+i+"'], label[for='"+i+"'] *";return n&&(s=s+", #"+this.escapeCssMeta(n).replace(/\s+/g,", #")),this.errors().filter(s)},escapeCssMeta:function(t){return t.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(t){return this.groups[t.name]||(this.checkable(t)?t.name:t.id||t.name)},validationTargetFor:function(e){return this.checkable(e)&&(e=this.findByName(e.name)),t(e).not(this.settings.ignore)[0]},checkable:function(t){return/radio|checkbox/i.test(t.type)},findByName:function(e){return t(this.currentForm).find("[name='"+this.escapeCssMeta(e)+"']")},getLength:function(e,i){switch(i.nodeName.toLowerCase()){case"select":return t("option:selected",i).length;case"input":if(this.checkable(i))return this.findByName(i.name).filter(":checked").length}return e.length},depend:function(t,e){return!this.dependTypes[typeof t]||this.dependTypes[typeof t](t,e)},dependTypes:{boolean:function(t){return t},string:function(e,i){return!!t(e,i.form).length},function:function(t,e){return t(e)}},optional:function(e){var i=this.elementValue(e);return!t.validator.methods.required.call(this,i,e)&&"dependency-mismatch"},startRequest:function(e){this.pending[e.name]||(this.pendingRequest++,t(e).addClass(this.settings.pendingClass),this.pending[e.name]=!0)},stopRequest:function(e,i){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[e.name],t(e).removeClass(this.settings.pendingClass),i&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(t(this.currentForm).submit(),this.submitButton&&t("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!i&&0===this.pendingRequest&&this.formSubmitted&&(t(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(e,i){return i="string"==typeof i&&i||"remote",t.data(e,"previousValue")||t.data(e,"previousValue",{old:null,valid:!0,message:this.defaultMessage(e,{method:i})})},destroy:function(){this.resetForm(),t(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(e,i){e.constructor===String?this.classRuleSettings[e]=i:t.extend(this.classRuleSettings,e)},classRules:function(e){var i={},n=t(e).attr("class");return n&&t.each(n.split(" "),(function(){this in t.validator.classRuleSettings&&t.extend(i,t.validator.classRuleSettings[this])})),i},normalizeAttributeRule:function(t,e,i,n){/min|max|step/.test(i)&&(null===e||/number|range|text/.test(e))&&(n=Number(n),isNaN(n)&&(n=void 0)),n||0===n?t[i]=n:e===i&&"range"!==e&&(t[i]=!0)},attributeRules:function(e){var i,n,s={},r=t(e),o=e.getAttribute("type");for(i in t.validator.methods)"required"===i?(""===(n=e.getAttribute(i))&&(n=!0),n=!!n):n=r.attr(i),this.normalizeAttributeRule(s,o,i,n);return s.maxlength&&/-1|2147483647|524288/.test(s.maxlength)&&delete s.maxlength,s},dataRules:function(e){var i,n,s={},r=t(e),o=e.getAttribute("type");for(i in t.validator.methods)""===(n=r.data("rule"+i.charAt(0).toUpperCase()+i.substring(1).toLowerCase()))&&(n=!0),this.normalizeAttributeRule(s,o,i,n);return s},staticRules:function(e){var i={},n=t.data(e.form,"validator");return n.settings.rules&&(i=t.validator.normalizeRule(n.settings.rules[e.name])||{}),i},normalizeRules:function(e,i){return t.each(e,(function(n,s){if(!1!==s){if(s.param||s.depends){var r=!0;switch(typeof s.depends){case"string":r=!!t(s.depends,i.form).length;break;case"function":r=s.depends.call(i,i)}r?e[n]=void 0===s.param||s.param:(t.data(i.form,"validator").resetElements(t(i)),delete e[n])}}else delete e[n]})),t.each(e,(function(n,s){e[n]=t.isFunction(s)&&"normalizer"!==n?s(i):s})),t.each(["minlength","maxlength"],(function(){e[this]&&(e[this]=Number(e[this]))})),t.each(["rangelength","range"],(function(){var i;e[this]&&(t.isArray(e[this])?e[this]=[Number(e[this][0]),Number(e[this][1])]:"string"==typeof e[this]&&(i=e[this].replace(/[\[\]]/g,"").split(/[\s,]+/),e[this]=[Number(i[0]),Number(i[1])]))})),t.validator.autoCreateRanges&&(null!=e.min&&null!=e.max&&(e.range=[e.min,e.max],delete e.min,delete e.max),null!=e.minlength&&null!=e.maxlength&&(e.rangelength=[e.minlength,e.maxlength],delete e.minlength,delete e.maxlength)),e},normalizeRule:function(e){if("string"==typeof e){var i={};t.each(e.split(/\s/),(function(){i[this]=!0})),e=i}return e},addMethod:function(e,i,n){t.validator.methods[e]=i,t.validator.messages[e]=void 0!==n?n:t.validator.messages[e],i.length<3&&t.validator.addClassRules(e,t.validator.normalizeRule(e))},methods:{required:function(e,i,n){if(!this.depend(n,i))return"dependency-mismatch";if("select"===i.nodeName.toLowerCase()){var s=t(i).val();return s&&s.length>0}return this.checkable(i)?this.getLength(e,i)>0:null!=e&&e.length>0},email:function(t,e){return this.optional(e)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t)},url:function(t,e){return this.optional(e)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(t)},date:(e=!1,function(t,i){return e||(e=!0,this.settings.debug&&window.console&&n.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.")),this.optional(i)||!/Invalid|NaN/.test(new Date(t).toString())}),dateISO:function(t,e){return this.optional(e)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t)},number:function(t,e){return this.optional(e)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)},digits:function(t,e){return this.optional(e)||/^\d+$/.test(t)},minlength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s>=n},maxlength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s<=n},rangelength:function(e,i,n){var s=t.isArray(e)?e.length:this.getLength(e,i);return this.optional(i)||s>=n[0]&&s<=n[1]},min:function(t,e,i){return this.optional(e)||t>=i},max:function(t,e,i){return this.optional(e)||t<=i},range:function(t,e,i){return this.optional(e)||t>=i[0]&&t<=i[1]},step:function(e,i,n){var s,r=t(i).attr("type"),o="Step attribute on input type "+r+" is not supported.",a=new RegExp("\\b"+r+"\\b"),l=function(t){var e=(""+t).match(/(?:\.(\d+))?$/);return e&&e[1]?e[1].length:0},u=function(t){return Math.round(t*Math.pow(10,s))},c=!0;if(r&&!a.test(["text","number","range"].join()))throw new Error(o);return s=l(n),(l(e)>s||u(e)%u(n)!=0)&&(c=!1),this.optional(i)||c},equalTo:function(e,i,n){var s=t(n);return this.settings.onfocusout&&s.not(".validate-equalTo-blur").length&&s.addClass("validate-equalTo-blur").on("blur.validate-equalTo",(function(){t(i).valid()})),e===s.val()},remote:function(e,i,n,s){if(this.optional(i))return"dependency-mismatch";s="string"==typeof s&&s||"remote";var r,o,a,l=this.previousValue(i,s);return this.settings.messages[i.name]||(this.settings.messages[i.name]={}),l.originalMessage=l.originalMessage||this.settings.messages[i.name][s],this.settings.messages[i.name][s]=l.message,n="string"==typeof n&&{url:n}||n,a=t.param(t.extend({data:e},n.data)),l.old===a?l.valid:(l.old=a,r=this,this.startRequest(i),(o={})[i.name]=e,t.ajax(t.extend(!0,{mode:"abort",port:"validate"+i.name,dataType:"json",data:o,context:r.currentForm,success:function(t){var n,o,a,u=!0===t||"true"===t;r.settings.messages[i.name][s]=l.originalMessage,u?(a=r.formSubmitted,r.resetInternals(),r.toHide=r.errorsFor(i),r.formSubmitted=a,r.successList.push(i),r.invalid[i.name]=!1,r.showErrors()):(n={},o=t||r.defaultMessage(i,{method:s,parameters:e}),n[i.name]=l.message=o,r.invalid[i.name]=!0,r.showErrors(n)),l.valid=u,r.stopRequest(i,u)}},n)),"pending")}}});var i,s={};return t.ajaxPrefilter?t.ajaxPrefilter((function(t,e,i){var n=t.port;"abort"===t.mode&&(s[n]&&s[n].abort(),s[n]=i)})):(i=t.ajax,t.ajax=function(e){var n=("mode"in e?e:t.ajaxSettings).mode,r=("port"in e?e:t.ajaxSettings).port;return"abort"===n?(s[r]&&s[r].abort(),s[r]=i.apply(this,arguments),s[r]):i.apply(this,arguments)}),t})?s.apply(e,r):s)||(t.exports=o)}).call(this,i(1))},function(t,e,i){t.exports=i(34)},function(t,e,i){var n=function(){return this}()||Function("return this")(),s=n.regeneratorRuntime&&Object.getOwnPropertyNames(n).indexOf("regeneratorRuntime")>=0,r=s&&n.regeneratorRuntime;if(n.regeneratorRuntime=void 0,t.exports=i(35),s)n.regeneratorRuntime=r;else try{delete n.regeneratorRuntime}catch(t){n.regeneratorRuntime=void 0}},function(t,e){!function(e){"use strict";var i,n=Object.prototype,s=n.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",a=r.asyncIterator||"@@asyncIterator",l=r.toStringTag||"@@toStringTag",u="object"==typeof t,c=e.regeneratorRuntime;if(c)u&&(t.exports=c);else{(c=e.regeneratorRuntime=u?t.exports:{}).wrap=_;var h="suspendedStart",d="suspendedYield",p="executing",f="completed",g={},m={};m[o]=function(){return this};var v=Object.getPrototypeOf,y=v&&v(v(I([])));y&&y!==n&&s.call(y,o)&&(m=y);var b=k.prototype=w.prototype=Object.create(m);C.prototype=b.constructor=k,k.constructor=C,k[l]=C.displayName="GeneratorFunction",c.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===C||"GeneratorFunction"===(e.displayName||e.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,k):(t.__proto__=k,l in t||(t[l]="GeneratorFunction")),t.prototype=Object.create(b),t},c.awrap=function(t){return{__await:t}},T(D.prototype),D.prototype[a]=function(){return this},c.AsyncIterator=D,c.async=function(t,e,i,n){var s=new D(_(t,e,i,n));return c.isGeneratorFunction(e)?s:s.next().then((function(t){return t.done?t.value:s.next()}))},T(b),b[l]="Generator",b[o]=function(){return this},b.toString=function(){return"[object Generator]"},c.keys=function(t){var e=[];for(var i in t)e.push(i);return e.reverse(),function i(){for(;e.length;){var n=e.pop();if(n in t)return i.value=n,i.done=!1,i}return i.done=!0,i}},c.values=I,P.prototype={constructor:P,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=i,this.done=!1,this.delegate=null,this.method="next",this.arg=i,this.tryEntries.forEach(A),!t)for(var e in this)"t"===e.charAt(0)&&s.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=i)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function n(n,s){return a.type="throw",a.arg=t,e.next=n,s&&(e.method="next",e.arg=i),!!s}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],a=o.completion;if("root"===o.tryLoc)return n("end");if(o.tryLoc<=this.prev){var l=s.call(o,"catchLoc"),u=s.call(o,"finallyLoc");if(l&&u){if(this.prev<o.catchLoc)return n(o.catchLoc,!0);if(this.prev<o.finallyLoc)return n(o.finallyLoc)}else if(l){if(this.prev<o.catchLoc)return n(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return n(o.finallyLoc)}}}},abrupt:function(t,e){for(var i=this.tryEntries.length-1;i>=0;--i){var n=this.tryEntries[i];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var r=n;break}}r&&("break"===t||"continue"===t)&&r.tryLoc<=e&&e<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=t,o.arg=e,r?(this.method="next",this.next=r.finallyLoc,g):this.complete(o)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.finallyLoc===t)return this.complete(i.completion,i.afterLoc),A(i),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var i=this.tryEntries[e];if(i.tryLoc===t){var n=i.completion;if("throw"===n.type){var s=n.arg;A(i)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:I(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=i),g}}}function _(t,e,i,n){var s=e&&e.prototype instanceof w?e:w,r=Object.create(s.prototype),o=new P(n||[]);return r._invoke=function(t,e,i){var n=h;return function(s,r){if(n===p)throw new Error("Generator is already running");if(n===f){if("throw"===s)throw r;return N()}for(i.method=s,i.arg=r;;){var o=i.delegate;if(o){var a=S(o,i);if(a){if(a===g)continue;return a}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(n===h)throw n=f,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);n=p;var l=x(t,e,i);if("normal"===l.type){if(n=i.done?f:d,l.arg===g)continue;return{value:l.arg,done:i.done}}"throw"===l.type&&(n=f,i.method="throw",i.arg=l.arg)}}}(t,i,o),r}function x(t,e,i){try{return{type:"normal",arg:t.call(e,i)}}catch(t){return{type:"throw",arg:t}}}function w(){}function C(){}function k(){}function T(t){["next","throw","return"].forEach((function(e){t[e]=function(t){return this._invoke(e,t)}}))}function D(t){var e;this._invoke=function(i,n){function r(){return new Promise((function(e,r){!function e(i,n,r,o){var a=x(t[i],t,n);if("throw"!==a.type){var l=a.arg,u=l.value;return u&&"object"==typeof u&&s.call(u,"__await")?Promise.resolve(u.__await).then((function(t){e("next",t,r,o)}),(function(t){e("throw",t,r,o)})):Promise.resolve(u).then((function(t){l.value=t,r(l)}),o)}o(a.arg)}(i,n,e,r)}))}return e=e?e.then(r,r):r()}}function S(t,e){var n=t.iterator[e.method];if(n===i){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=i,S(t,e),"throw"===e.method))return g;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var s=x(n,t.iterator,e.arg);if("throw"===s.type)return e.method="throw",e.arg=s.arg,e.delegate=null,g;var r=s.arg;return r?r.done?(e[t.resultName]=r.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=i),e.delegate=null,g):r:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,g)}function E(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(E,this),this.reset(!0)}function I(t){if(t){var e=t[o];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var n=-1,r=function e(){for(;++n<t.length;)if(s.call(t,n))return e.value=t[n],e.done=!1,e;return e.value=i,e.done=!0,e};return r.next=r}}return{next:N}}function N(){return{value:i,done:!0}}}(function(){return this}()||Function("return this")())},function(t,e,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29uc29sZS1icm93c2VyaWZ5L2luZGV4LmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL2xvYWQtc3RhdGVzLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9qYXZhc2NyaXB0cy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdXRpbC91dGlsLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9qYXZhc2NyaXB0cy9sb2FkLXByb2R1Y3RzLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9qYXZhc2NyaXB0cy9uYXZpZ2F0aW9uLWJ1dHRvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL3NhdmUtb3JkZXItaW5mb3JtYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL3NhdmUtcGF5bWVudC1pbmZvcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvamF2YXNjcmlwdHMvc2F2ZS1zaGlwcGluZy1pbmZvcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvamF2YXNjcmlwdHMvc2F2ZS11c2VyLWluZm9ybWF0aW9uLmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9qYXZhc2NyaXB0cy9zaG9wcGluZy1jYXJ0LmpzIiwid2VicGFjazovLy8uL3B1YmxpYy9qYXZhc2NyaXB0cy92YWxpZGF0ZS1hY2NvdW50LWZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL3ZhbGlkYXRlLWNoZWNrb3V0LWZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL3ZhbGlkYXRlLXNoaXBwaW5nLWZvcm0uanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL2FwcGxpY2F0aW9uLWNsb3NlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy91dGlsL3N1cHBvcnQvaXNCdWZmZXJCcm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9hc3NlcnQvYXNzZXJ0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kYXRlLW5vdy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pxdWVyeS11aS1kaXN0L2pxdWVyeS11aS5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pxdWVyeS12YWxpZGF0aW9uL2Rpc3QvanF1ZXJ5LnZhbGlkYXRlLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXNzZXRzL0ltYWdlcy9jcmVhdGUtYWNjb3VudC1pY29uLmpwZyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvYXNzZXRzL0ltYWdlcy9zaWduLWludG8tYWNjb3VudC1pY29uLmpwZyIsIndlYnBhY2s6Ly8vLi9wdWJsaWMvamF2YXNjcmlwdHMvYXBwbGljYXRpb24tc3RhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vcHVibGljL2phdmFzY3JpcHRzL3ZhbGlkYXRlLXVzZXItZm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanF1ZXJ5LXZhbGlkYXRpb24vZGlzdC9qcXVlcnkudmFsaWRhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImdsb2JhbCIsImZhY3RvcnkiLCJkb2N1bWVudCIsInciLCJFcnJvciIsIndpbmRvdyIsInRoaXMiLCJub0dsb2JhbCIsImFyciIsImdldFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJzbGljZSIsImNvbmNhdCIsInB1c2giLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiZm5Ub1N0cmluZyIsIk9iamVjdEZ1bmN0aW9uU3RyaW5nIiwic3VwcG9ydCIsImlzRnVuY3Rpb24iLCJvYmoiLCJub2RlVHlwZSIsImlzV2luZG93IiwicHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyIsInR5cGUiLCJzcmMiLCJub25jZSIsIm5vTW9kdWxlIiwiRE9NRXZhbCIsImNvZGUiLCJub2RlIiwiZG9jIiwidmFsIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInRleHQiLCJnZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ0b1R5cGUiLCJqUXVlcnkiLCJzZWxlY3RvciIsImNvbnRleHQiLCJmbiIsImluaXQiLCJydHJpbSIsImlzQXJyYXlMaWtlIiwibGVuZ3RoIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJ0b0FycmF5IiwibnVtIiwicHVzaFN0YWNrIiwiZWxlbXMiLCJyZXQiLCJtZXJnZSIsInByZXZPYmplY3QiLCJlYWNoIiwiY2FsbGJhY2siLCJtYXAiLCJlbGVtIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJmaXJzdCIsImVxIiwibGFzdCIsImxlbiIsImoiLCJlbmQiLCJzb3J0Iiwic3BsaWNlIiwiZXh0ZW5kIiwib3B0aW9ucyIsImNvcHkiLCJjb3B5SXNBcnJheSIsImNsb25lIiwidGFyZ2V0IiwiZGVlcCIsImlzUGxhaW5PYmplY3QiLCJBcnJheSIsImlzQXJyYXkiLCJ1bmRlZmluZWQiLCJleHBhbmRvIiwiTWF0aCIsInJhbmRvbSIsInJlcGxhY2UiLCJpc1JlYWR5IiwiZXJyb3IiLCJtc2ciLCJub29wIiwicHJvdG8iLCJDdG9yIiwiaXNFbXB0eU9iamVjdCIsImdsb2JhbEV2YWwiLCJ0cmltIiwibWFrZUFycmF5IiwicmVzdWx0cyIsImluQXJyYXkiLCJzZWNvbmQiLCJncmVwIiwiaW52ZXJ0IiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwiZ3VpZCIsIml0ZXJhdG9yIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSIsIlNpenpsZSIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwic2V0RG9jdW1lbnQiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJEYXRlIiwicHJlZmVycmVkRG9jIiwiZGlycnVucyIsImRvbmUiLCJjbGFzc0NhY2hlIiwiY3JlYXRlQ2FjaGUiLCJ0b2tlbkNhY2hlIiwiY29tcGlsZXJDYWNoZSIsIm5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUiLCJzb3J0T3JkZXIiLCJhIiwiYiIsInBvcCIsInB1c2hfbmF0aXZlIiwibGlzdCIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmRlc2NlbmQiLCJycHNldWRvIiwicmlkZW50aWZpZXIiLCJtYXRjaEV4cHIiLCJyaHRtbCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJxdWlja0V4cHIiLCJyc2libGluZyIsInJ1bmVzY2FwZSIsImZ1bmVzY2FwZSIsIl8iLCJlc2NhcGVkIiwiZXNjYXBlZFdoaXRlc3BhY2UiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJjaCIsImFzQ29kZVBvaW50IiwiY2hhckNvZGVBdCIsInVubG9hZEhhbmRsZXIiLCJpbkRpc2FibGVkRmllbGRzZXQiLCJhZGRDb21iaW5hdG9yIiwiZGlzYWJsZWQiLCJub2RlTmFtZSIsImRpciIsIm5leHQiLCJjaGlsZE5vZGVzIiwiZSIsImVscyIsInNlZWQiLCJuaWQiLCJtYXRjaCIsImdyb3VwcyIsIm5ld1NlbGVjdG9yIiwibmV3Q29udGV4dCIsIm93bmVyRG9jdW1lbnQiLCJleGVjIiwiZ2V0RWxlbWVudEJ5SWQiLCJpZCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInFzYSIsInRlc3QiLCJ0b1NlbGVjdG9yIiwiam9pbiIsInRlc3RDb250ZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwia2V5cyIsImNhY2hlIiwiY2FjaGVMZW5ndGgiLCJzaGlmdCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiYXR0cnMiLCJoYW5kbGVyIiwiYXR0ckhhbmRsZSIsInNpYmxpbmdDaGVjayIsImN1ciIsImRpZmYiLCJzb3VyY2VJbmRleCIsIm5leHRTaWJsaW5nIiwiY3JlYXRlSW5wdXRQc2V1ZG8iLCJjcmVhdGVCdXR0b25Qc2V1ZG8iLCJjcmVhdGVEaXNhYmxlZFBzZXVkbyIsImlzRGlzYWJsZWQiLCJjcmVhdGVQb3NpdGlvbmFsUHNldWRvIiwiYXJndW1lbnQiLCJtYXRjaEluZGV4ZXMiLCJuYW1lc3BhY2UiLCJuYW1lc3BhY2VVUkkiLCJkb2N1bWVudEVsZW1lbnQiLCJoYXNDb21wYXJlIiwic3ViV2luZG93IiwiZGVmYXVsdFZpZXciLCJ0b3AiLCJhZGRFdmVudExpc3RlbmVyIiwiYXR0YWNoRXZlbnQiLCJjbGFzc05hbWUiLCJjcmVhdGVDb21tZW50IiwiZ2V0QnlJZCIsImdldEVsZW1lbnRzQnlOYW1lIiwiZmlsdGVyIiwiYXR0cklkIiwiZmluZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJ0YWciLCJ0bXAiLCJpbm5lckhUTUwiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwidW5zaGlmdCIsImV4cHIiLCJlbGVtZW50cyIsImF0dHIiLCJzcGVjaWZpZWQiLCJlc2NhcGUiLCJzZWwiLCJ1bmlxdWVTb3J0IiwiZHVwbGljYXRlcyIsImRldGVjdER1cGxpY2F0ZXMiLCJzb3J0U3RhYmxlIiwidGV4dENvbnRlbnQiLCJmaXJzdENoaWxkIiwibm9kZVZhbHVlIiwic2VsZWN0b3JzIiwiY3JlYXRlUHNldWRvIiwicmVsYXRpdmUiLCJwcmVGaWx0ZXIiLCJleGNlc3MiLCJ1bnF1b3RlZCIsIm5vZGVOYW1lU2VsZWN0b3IiLCJwYXR0ZXJuIiwib3BlcmF0b3IiLCJjaGVjayIsInJlc3VsdCIsIndoYXQiLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwieG1sIiwidW5pcXVlQ2FjaGUiLCJvdXRlckNhY2hlIiwibm9kZUluZGV4Iiwic3RhcnQiLCJwYXJlbnQiLCJ1c2VDYWNoZSIsImxhc3RDaGlsZCIsInVuaXF1ZUlEIiwicHNldWRvIiwiYXJncyIsInNldEZpbHRlcnMiLCJpZHgiLCJtYXRjaGVkIiwibWF0Y2hlciIsInVubWF0Y2hlZCIsImxhbmciLCJlbGVtTGFuZyIsImhhc2giLCJsb2NhdGlvbiIsImFjdGl2ZUVsZW1lbnQiLCJoYXNGb2N1cyIsImhyZWYiLCJ0YWJJbmRleCIsImNoZWNrZWQiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsImNoZWNrTm9uRWxlbWVudHMiLCJkb25lTmFtZSIsIm9sZENhY2hlIiwibmV3Q2FjaGUiLCJlbGVtZW50TWF0Y2hlciIsIm1hdGNoZXJzIiwiY29uZGVuc2UiLCJuZXdVbm1hdGNoZWQiLCJtYXBwZWQiLCJzZXRNYXRjaGVyIiwicG9zdEZpbHRlciIsInBvc3RGaW5kZXIiLCJwb3N0U2VsZWN0b3IiLCJ0ZW1wIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwiY29udGV4dHMiLCJtdWx0aXBsZUNvbnRleHRzIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwiaW1wbGljaXRSZWxhdGl2ZSIsIm1hdGNoQ29udGV4dCIsIm1hdGNoQW55Q29udGV4dCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJzZXRNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsImJ5U2V0IiwiYnlFbGVtZW50Iiwic3VwZXJNYXRjaGVyIiwib3V0ZXJtb3N0IiwibWF0Y2hlZENvdW50Iiwic2V0TWF0Y2hlZCIsImNvbnRleHRCYWNrdXAiLCJkaXJydW5zVW5pcXVlIiwibWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzIiwidG9rZW4iLCJjb21waWxlZCIsImRlZmF1bHRWYWx1ZSIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJ1bnRpbCIsInRydW5jYXRlIiwiaXMiLCJzaWJsaW5ncyIsInJuZWVkc0NvbnRleHQiLCJuZWVkc0NvbnRleHQiLCJyc2luZ2xlVGFnIiwid2lubm93IiwicXVhbGlmaWVyIiwibm90Iiwic2VsZiIsInJvb3RqUXVlcnkiLCJyb290IiwicGFyc2VIVE1MIiwicmVhZHkiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwiY2hpbGRyZW4iLCJjb250ZW50cyIsInByZXYiLCJzaWJsaW5nIiwiaGFzIiwidGFyZ2V0cyIsImNsb3Nlc3QiLCJpbmRleCIsInByZXZBbGwiLCJhZGQiLCJhZGRCYWNrIiwicGFyZW50cyIsInBhcmVudHNVbnRpbCIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJjb250ZW50RG9jdW1lbnQiLCJjb250ZW50IiwicmV2ZXJzZSIsInJub3RodG1sd2hpdGUiLCJJZGVudGl0eSIsInYiLCJUaHJvd2VyIiwiZXgiLCJhZG9wdFZhbHVlIiwicmVzb2x2ZSIsInJlamVjdCIsIm5vVmFsdWUiLCJtZXRob2QiLCJwcm9taXNlIiwiZmFpbCIsInRoZW4iLCJDYWxsYmFja3MiLCJmbGFnIiwiY3JlYXRlT3B0aW9ucyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwicXVldWUiLCJmaXJpbmdJbmRleCIsImZpcmUiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJyZW1vdmUiLCJlbXB0eSIsImRpc2FibGUiLCJsb2NrIiwiZmlyZVdpdGgiLCJEZWZlcnJlZCIsImZ1bmMiLCJ0dXBsZXMiLCJzdGF0ZSIsImFsd2F5cyIsImRlZmVycmVkIiwicGlwZSIsImZucyIsIm5ld0RlZmVyIiwidHVwbGUiLCJyZXR1cm5lZCIsInByb2dyZXNzIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsIm1heERlcHRoIiwiZGVwdGgiLCJzcGVjaWFsIiwidGhhdCIsIm1pZ2h0VGhyb3ciLCJUeXBlRXJyb3IiLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJyZWplY3RXaXRoIiwiZ2V0U3RhY2tIb29rIiwic2V0VGltZW91dCIsInN0YXRlU3RyaW5nIiwid2hlbiIsInNpbmdsZVZhbHVlIiwicmVtYWluaW5nIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsIm1hc3RlciIsInVwZGF0ZUZ1bmMiLCJyZXJyb3JOYW1lcyIsInN0YWNrIiwiY29uc29sZSIsIndhcm4iLCJtZXNzYWdlIiwicmVhZHlFeGNlcHRpb24iLCJyZWFkeUxpc3QiLCJjb21wbGV0ZWQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiY2F0Y2giLCJyZWFkeVdhaXQiLCJ3YWl0IiwicmVhZHlTdGF0ZSIsImRvU2Nyb2xsIiwiYWNjZXNzIiwiY2hhaW5hYmxlIiwiZW1wdHlHZXQiLCJyYXciLCJidWxrIiwicm1zUHJlZml4IiwicmRhc2hBbHBoYSIsImZjYW1lbENhc2UiLCJhbGwiLCJsZXR0ZXIiLCJ0b1VwcGVyQ2FzZSIsImNhbWVsQ2FzZSIsInN0cmluZyIsImFjY2VwdERhdGEiLCJvd25lciIsIkRhdGEiLCJ1aWQiLCJjb25maWd1cmFibGUiLCJzZXQiLCJkYXRhIiwicHJvcCIsImhhc0RhdGEiLCJkYXRhUHJpdiIsImRhdGFVc2VyIiwicmJyYWNlIiwicm11bHRpRGFzaCIsImRhdGFBdHRyIiwiSlNPTiIsInBhcnNlIiwiZ2V0RGF0YSIsInJlbW92ZURhdGEiLCJfZGF0YSIsIl9yZW1vdmVEYXRhIiwiZGVxdWV1ZSIsInN0YXJ0TGVuZ3RoIiwiaG9va3MiLCJfcXVldWVIb29rcyIsInN0b3AiLCJzZXR0ZXIiLCJjbGVhclF1ZXVlIiwiY291bnQiLCJkZWZlciIsInBudW0iLCJzb3VyY2UiLCJyY3NzTnVtIiwiY3NzRXhwYW5kIiwiaXNBdHRhY2hlZCIsImNvbXBvc2VkIiwiZ2V0Um9vdE5vZGUiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJzdHlsZSIsImRpc3BsYXkiLCJjc3MiLCJzd2FwIiwib2xkIiwiYWRqdXN0Q1NTIiwidmFsdWVQYXJ0cyIsInR3ZWVuIiwiYWRqdXN0ZWQiLCJzY2FsZSIsIm1heEl0ZXJhdGlvbnMiLCJjdXJyZW50VmFsdWUiLCJpbml0aWFsIiwidW5pdCIsImNzc051bWJlciIsImluaXRpYWxJblVuaXQiLCJkZWZhdWx0RGlzcGxheU1hcCIsImdldERlZmF1bHREaXNwbGF5IiwiYm9keSIsInNob3dIaWRlIiwic2hvdyIsInZhbHVlcyIsImhpZGUiLCJ0b2dnbGUiLCJyY2hlY2thYmxlVHlwZSIsInJ0YWdOYW1lIiwicnNjcmlwdFR5cGUiLCJ3cmFwTWFwIiwib3B0aW9uIiwidGhlYWQiLCJjb2wiLCJ0ciIsInRkIiwiX2RlZmF1bHQiLCJnZXRBbGwiLCJzZXRHbG9iYWxFdmFsIiwicmVmRWxlbWVudHMiLCJvcHRncm91cCIsInRib2R5IiwidGZvb3QiLCJjb2xncm91cCIsImNhcHRpb24iLCJ0aCIsImRpdiIsImJ1aWxkRnJhZ21lbnQiLCJzY3JpcHRzIiwic2VsZWN0aW9uIiwiaWdub3JlZCIsIndyYXAiLCJhdHRhY2hlZCIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsIm5vZGVzIiwiaHRtbFByZWZpbHRlciIsImNyZWF0ZVRleHROb2RlIiwiY2hlY2tDbG9uZSIsImNsb25lTm9kZSIsIm5vQ2xvbmVDaGVja2VkIiwicmtleUV2ZW50Iiwicm1vdXNlRXZlbnQiLCJydHlwZW5hbWVzcGFjZSIsInJldHVyblRydWUiLCJyZXR1cm5GYWxzZSIsImV4cGVjdFN5bmMiLCJlcnIiLCJzYWZlQWN0aXZlRWxlbWVudCIsIm9uIiwidHlwZXMiLCJvbmUiLCJvcmlnRm4iLCJldmVudCIsIm9mZiIsImxldmVyYWdlTmF0aXZlIiwibm90QXN5bmMiLCJzYXZlZCIsImlzVHJpZ2dlciIsImRlbGVnYXRlVHlwZSIsInN0b3BQcm9wYWdhdGlvbiIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsInByZXZlbnREZWZhdWx0IiwidHJpZ2dlciIsIkV2ZW50IiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImV2ZW50cyIsImhhbmRsZU9iaiIsImhhbmRsZXJzIiwibmFtZXNwYWNlcyIsIm9yaWdUeXBlIiwiZWxlbURhdGEiLCJoYW5kbGUiLCJ0cmlnZ2VyZWQiLCJkaXNwYXRjaCIsImJpbmRUeXBlIiwiZGVsZWdhdGVDb3VudCIsInNldHVwIiwibWFwcGVkVHlwZXMiLCJvcmlnQ291bnQiLCJ0ZWFyZG93biIsInJlbW92ZUV2ZW50IiwibmF0aXZlRXZlbnQiLCJoYW5kbGVyUXVldWUiLCJmaXgiLCJkZWxlZ2F0ZVRhcmdldCIsInByZURpc3BhdGNoIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJjdXJyZW50VGFyZ2V0IiwiaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQiLCJybmFtZXNwYWNlIiwicG9zdERpc3BhdGNoIiwibWF0Y2hlZEhhbmRsZXJzIiwibWF0Y2hlZFNlbGVjdG9ycyIsImJ1dHRvbiIsImFkZFByb3AiLCJob29rIiwib3JpZ2luYWxFdmVudCIsIndyaXRhYmxlIiwibG9hZCIsIm5vQnViYmxlIiwiY2xpY2siLCJiZWZvcmV1bmxvYWQiLCJyZXR1cm5WYWx1ZSIsInByb3BzIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJlbGF0ZWRUYXJnZXQiLCJ0aW1lU3RhbXAiLCJub3ciLCJpc1NpbXVsYXRlZCIsImFsdEtleSIsImJ1YmJsZXMiLCJjYW5jZWxhYmxlIiwiY2hhbmdlZFRvdWNoZXMiLCJjdHJsS2V5IiwiZGV0YWlsIiwiZXZlbnRQaGFzZSIsIm1ldGFLZXkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJ2aWV3IiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJ3aGljaCIsImZvY3VzIiwiYmx1ciIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicG9pbnRlcmVudGVyIiwicG9pbnRlcmxlYXZlIiwib3JpZyIsInJlbGF0ZWQiLCJyeGh0bWxUYWciLCJybm9Jbm5lcmh0bWwiLCJyY2hlY2tlZCIsInJjbGVhblNjcmlwdCIsIm1hbmlwdWxhdGlvblRhcmdldCIsImRpc2FibGVTY3JpcHQiLCJyZXN0b3JlU2NyaXB0IiwiY2xvbmVDb3B5RXZlbnQiLCJkZXN0IiwicGRhdGFPbGQiLCJwZGF0YUN1ciIsInVkYXRhT2xkIiwidWRhdGFDdXIiLCJmaXhJbnB1dCIsImRvbU1hbmlwIiwiY29sbGVjdGlvbiIsImhhc1NjcmlwdHMiLCJpTm9DbG9uZSIsInZhbHVlSXNGdW5jdGlvbiIsImh0bWwiLCJfZXZhbFVybCIsImtlZXBEYXRhIiwiY2xlYW5EYXRhIiwiZGF0YUFuZEV2ZW50cyIsImRlZXBEYXRhQW5kRXZlbnRzIiwic3JjRWxlbWVudHMiLCJkZXN0RWxlbWVudHMiLCJpblBhZ2UiLCJkZXRhY2giLCJhcHBlbmQiLCJwcmVwZW5kIiwiaW5zZXJ0QmVmb3JlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJyZXBsYWNlV2l0aCIsInJlcGxhY2VDaGlsZCIsImFwcGVuZFRvIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwib3JpZ2luYWwiLCJpbnNlcnQiLCJybnVtbm9ucHgiLCJnZXRTdHlsZXMiLCJvcGVuZXIiLCJnZXRDb21wdXRlZFN0eWxlIiwicmJveFN0eWxlIiwiY3VyQ1NTIiwiY29tcHV0ZWQiLCJ3aWR0aCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJnZXRQcm9wZXJ0eVZhbHVlIiwicGl4ZWxCb3hTdHlsZXMiLCJhZGRHZXRIb29rSWYiLCJjb25kaXRpb25GbiIsImhvb2tGbiIsImNvbXB1dGVTdHlsZVRlc3RzIiwiY29udGFpbmVyIiwiY3NzVGV4dCIsImRpdlN0eWxlIiwicGl4ZWxQb3NpdGlvblZhbCIsInJlbGlhYmxlTWFyZ2luTGVmdFZhbCIsInJvdW5kUGl4ZWxNZWFzdXJlcyIsIm1hcmdpbkxlZnQiLCJyaWdodCIsInBpeGVsQm94U3R5bGVzVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJwb3NpdGlvbiIsInNjcm9sbGJveFNpemVWYWwiLCJvZmZzZXRXaWR0aCIsIm1lYXN1cmUiLCJyb3VuZCIsInBhcnNlRmxvYXQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsImJveFNpemluZ1JlbGlhYmxlIiwicGl4ZWxQb3NpdGlvbiIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInNjcm9sbGJveFNpemUiLCJjc3NQcmVmaXhlcyIsImVtcHR5U3R5bGUiLCJ2ZW5kb3JQcm9wcyIsImZpbmFsUHJvcE5hbWUiLCJmaW5hbCIsImNzc1Byb3BzIiwiY2FwTmFtZSIsInZlbmRvclByb3BOYW1lIiwicmRpc3BsYXlzd2FwIiwicmN1c3RvbVByb3AiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0Iiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1heCIsImJveE1vZGVsQWRqdXN0bWVudCIsImRpbWVuc2lvbiIsImJveCIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwiY29tcHV0ZWRWYWwiLCJleHRyYSIsImRlbHRhIiwiY2VpbCIsImdldFdpZHRoT3JIZWlnaHQiLCJ2YWx1ZUlzQm9yZGVyQm94Iiwib2Zmc2V0UHJvcCIsImdldENsaWVudFJlY3RzIiwiVHdlZW4iLCJlYXNpbmciLCJjc3NIb29rcyIsIm9wYWNpdHkiLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInNldFByb3BlcnR5IiwiaXNGaW5pdGUiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzY3JvbGxib3hTaXplQnVnZ3kiLCJsZWZ0IiwibWFyZ2luIiwicGFkZGluZyIsImJvcmRlciIsInByZWZpeCIsInN1ZmZpeCIsImV4cGFuZCIsImV4cGFuZGVkIiwicGFydHMiLCJwcm9wSG9va3MiLCJydW4iLCJwZXJjZW50IiwiZWFzZWQiLCJkdXJhdGlvbiIsInBvcyIsInN0ZXAiLCJmeCIsInNjcm9sbFRvcCIsInNjcm9sbExlZnQiLCJsaW5lYXIiLCJzd2luZyIsImNvcyIsIlBJIiwiZnhOb3ciLCJpblByb2dyZXNzIiwicmZ4dHlwZXMiLCJycnVuIiwic2NoZWR1bGUiLCJoaWRkZW4iLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJpbnRlcnZhbCIsInRpY2siLCJjcmVhdGVGeE5vdyIsImdlbkZ4IiwiaW5jbHVkZVdpZHRoIiwiaGVpZ2h0IiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsInByb3BlcnRpZXMiLCJzdG9wcGVkIiwicHJlZmlsdGVycyIsImN1cnJlbnRUaW1lIiwic3RhcnRUaW1lIiwidHdlZW5zIiwib3B0cyIsInNwZWNpYWxFYXNpbmciLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJnb3RvRW5kIiwicHJvcEZpbHRlciIsImNvbXBsZXRlIiwidGltZXIiLCJhbmltIiwidHdlZW5lciIsIm9sZGZpcmUiLCJwcm9wVHdlZW4iLCJyZXN0b3JlRGlzcGxheSIsImlzQm94IiwiZGF0YVNob3ciLCJ1bnF1ZXVlZCIsIm92ZXJmbG93Iiwib3ZlcmZsb3dYIiwib3ZlcmZsb3dZIiwicHJlZmlsdGVyIiwic3BlZWQiLCJvcHQiLCJzcGVlZHMiLCJmYWRlVG8iLCJ0byIsImFuaW1hdGUiLCJvcHRhbGwiLCJkb0FuaW1hdGlvbiIsImZpbmlzaCIsInN0b3BRdWV1ZSIsInRpbWVycyIsImNzc0ZuIiwic2xpZGVEb3duIiwic2xpZGVVcCIsInNsaWRlVG9nZ2xlIiwiZmFkZUluIiwiZmFkZU91dCIsImZhZGVUb2dnbGUiLCJzbG93IiwiZmFzdCIsImRlbGF5IiwidGltZSIsInRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJjaGVja09uIiwib3B0U2VsZWN0ZWQiLCJyYWRpb1ZhbHVlIiwiYm9vbEhvb2siLCJyZW1vdmVBdHRyIiwiblR5cGUiLCJhdHRySG9va3MiLCJib29sIiwiYXR0ck5hbWVzIiwibG93ZXJjYXNlTmFtZSIsInJmb2N1c2FibGUiLCJyY2xpY2thYmxlIiwic3RyaXBBbmRDb2xsYXBzZSIsImdldENsYXNzIiwiY2xhc3Nlc1RvQXJyYXkiLCJyZW1vdmVQcm9wIiwicHJvcEZpeCIsInRhYmluZGV4IiwicGFyc2VJbnQiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImlzVmFsaWRWYWx1ZSIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsInJyZXR1cm4iLCJ2YWxIb29rcyIsIm9wdGlvblNldCIsImZvY3VzaW4iLCJyZm9jdXNNb3JwaCIsInN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrIiwib25seUhhbmRsZXJzIiwiYnViYmxlVHlwZSIsIm9udHlwZSIsImxhc3RFbGVtZW50IiwiZXZlbnRQYXRoIiwicGFyZW50V2luZG93Iiwic2ltdWxhdGUiLCJ0cmlnZ2VySGFuZGxlciIsImF0dGFjaGVzIiwicnF1ZXJ5IiwicGFyc2VYTUwiLCJET01QYXJzZXIiLCJwYXJzZUZyb21TdHJpbmciLCJyYnJhY2tldCIsInJDUkxGIiwicnN1Ym1pdHRlclR5cGVzIiwicnN1Ym1pdHRhYmxlIiwiYnVpbGRQYXJhbXMiLCJ0cmFkaXRpb25hbCIsInBhcmFtIiwidmFsdWVPckZ1bmN0aW9uIiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwic2VyaWFsaXplIiwic2VyaWFsaXplQXJyYXkiLCJyMjAiLCJyaGFzaCIsInJhbnRpQ2FjaGUiLCJyaGVhZGVycyIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJ0cmFuc3BvcnRzIiwiYWxsVHlwZXMiLCJvcmlnaW5BbmNob3IiLCJhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJzdHJ1Y3R1cmUiLCJkYXRhVHlwZUV4cHJlc3Npb24iLCJkYXRhVHlwZSIsImRhdGFUeXBlcyIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0ZWQiLCJzZWVraW5nVHJhbnNwb3J0IiwiaW5zcGVjdCIsInByZWZpbHRlck9yRmFjdG9yeSIsImRhdGFUeXBlT3JUcmFuc3BvcnQiLCJhamF4RXh0ZW5kIiwiZmxhdE9wdGlvbnMiLCJhamF4U2V0dGluZ3MiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb3RvY29sIiwicHJvY2Vzc0RhdGEiLCJhc3luYyIsImNvbnRlbnRUeXBlIiwiYWNjZXB0cyIsImpzb24iLCJyZXNwb25zZUZpZWxkcyIsImNvbnZlcnRlcnMiLCJhamF4U2V0dXAiLCJzZXR0aW5ncyIsImFqYXhQcmVmaWx0ZXIiLCJhamF4VHJhbnNwb3J0IiwiYWpheCIsInRyYW5zcG9ydCIsImNhY2hlVVJMIiwicmVzcG9uc2VIZWFkZXJzU3RyaW5nIiwicmVzcG9uc2VIZWFkZXJzIiwidGltZW91dFRpbWVyIiwidXJsQW5jaG9yIiwiZmlyZUdsb2JhbHMiLCJ1bmNhY2hlZCIsImNhbGxiYWNrQ29udGV4dCIsImdsb2JhbEV2ZW50Q29udGV4dCIsImNvbXBsZXRlRGVmZXJyZWQiLCJzdGF0dXNDb2RlIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRSZXNwb25zZUhlYWRlciIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwibWltZVR5cGUiLCJzdGF0dXMiLCJhYm9ydCIsInN0YXR1c1RleHQiLCJmaW5hbFRleHQiLCJjcm9zc0RvbWFpbiIsImhvc3QiLCJoYXNDb250ZW50IiwiaWZNb2RpZmllZCIsImhlYWRlcnMiLCJiZWZvcmVTZW5kIiwic3VjY2VzcyIsInNlbmQiLCJuYXRpdmVTdGF0dXNUZXh0IiwicmVzcG9uc2VzIiwiaXNTdWNjZXNzIiwicmVzcG9uc2UiLCJtb2RpZmllZCIsImN0IiwiZmluYWxEYXRhVHlwZSIsImZpcnN0RGF0YVR5cGUiLCJhamF4SGFuZGxlUmVzcG9uc2VzIiwiY29udjIiLCJjdXJyZW50IiwiY29udiIsImRhdGFGaWx0ZXIiLCJ0aHJvd3MiLCJhamF4Q29udmVydCIsImdldEpTT04iLCJnZXRTY3JpcHQiLCJ3cmFwQWxsIiwiZmlyc3RFbGVtZW50Q2hpbGQiLCJ3cmFwSW5uZXIiLCJodG1sSXNGdW5jdGlvbiIsInVud3JhcCIsInZpc2libGUiLCJvZmZzZXRIZWlnaHQiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsInhoclN1Y2Nlc3NTdGF0dXMiLCIwIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJzY3JpcHRBdHRycyIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjdXJFbGVtIiwidXNpbmciLCJyZWN0Iiwid2luIiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJ1bmJpbmQiLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJwcm94eSIsImhvbGRSZWFkeSIsImhvbGQiLCJwYXJzZUpTT04iLCJpc051bWVyaWMiLCJpc05hTiIsIl9qUXVlcnkiLCJfJCIsIiQiLCJub0NvbmZsaWN0IiwidXRpbCIsInRpbWVzIiwiZnVuY3Rpb25zIiwibG9nIiwibGFiZWwiLCJmb3JtYXQiLCJleHByZXNzaW9uIiwib2siLCJmIiwiZyIsIkZ1bmN0aW9uIiwiQyIsIkUiLCJ1IiwieSIsIngiLCJrIiwiaCIsIlQiLCJTIiwidWUiLCJOIiwiQSIsIkQiLCJxIiwiTCIsIkgiLCJPIiwiUCIsIlIiLCJNIiwiSSIsIlciLCJGIiwiQiIsInoiLCJVIiwiWCIsIlYiLCJHIiwiSUQiLCJDTEFTUyIsIlRBRyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsIlkiLCJRIiwiSiIsIksiLCJaIiwiZWUiLCJ0ZSIsIm5lIiwicmUiLCJpZSIsIm9lIiwiYWUiLCJiZSIsInNlIiwieGUiLCJ5ZSIsImxlIiwiY2UiLCJmZSIsInBlIiwiZGUiLCJoZSIsImdlIiwidmUiLCJlbmFibGVkIiwiaGVhZGVyIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJudGgiLCJtZSIsIndlIiwiVGUiLCJDZSIsIkVlIiwia2UiLCJTZSIsIk5lIiwiQWUiLCJEZSIsImplIiwicWUiLCJMZSIsIkhlIiwiT2UiLCJQZSIsIlJlIiwiTWUiLCJJZSIsIldlIiwiJGUiLCJGZSIsIkJlIiwiX2UiLCJ6ZSIsIlVlIiwiWGUiLCJWZSIsIkdlIiwiWWUiLCJRZSIsIkplIiwiS2UiLCJaZSIsImV0IiwidHQiLCJudCIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiY29sdW1uQ291bnQiLCJmaWxsT3BhY2l0eSIsImZsZXhHcm93IiwiZmxleFNocmluayIsImdyaWRBcmVhIiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3RhcnQiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTdGFydCIsImxpbmVIZWlnaHQiLCJvcmRlciIsIm9ycGhhbnMiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwicnQiLCJpdCIsIm90IiwiYXQiLCJzdCIsInV0IiwiZnQiLCJwdCIsImR0IiwiaHQiLCJ2dCIsInl0IiwibXQiLCJ4dCIsImJ0Iiwid3QiLCJUdCIsIkN0IiwiRXQiLCJrdCIsIlN0IiwiTnQiLCJBdCIsIkR0IiwianQiLCJxdCIsIkx0IiwiSHQiLCJPdCIsIlB0IiwiUnQiLCJNdCIsIkl0IiwiV3QiLCIkdCIsIkZ0IiwiQnQiLCJfdCIsInp0IiwiVXQiLCJYdCIsIlZ0IiwiR3QiLCJZdCIsIlF0IiwiSnQiLCJyZXF1aXJlIiwidXNlclN0YXRlU2VsZWN0aW9uIiwic2hpcHBpbmdTdGF0ZVNlbGVjdGlvbiIsInN0YXRlcyIsInNldFN0YXRlU2VsZWN0IiwibG9hZFN0YXRlcyIsImxvYWRQcm9kdWN0cyIsIm5hdmlnYXRpb25CdXR0b25zIiwic2F2ZU9yZGVySW5mb3JtYXRpb24iLCJzYXZlUGF5bWVudEluZm9ybWF0aW9uIiwic2F2ZVNoaXBwaW5nSW5mb3JtYXRpb24iLCJzYXZlVXNlckluZm9ybWF0aW9uIiwic2hvcHBpbmdDYXJ0IiwidmFsaWRhdGVDaGVja291dEZvcm0iLCJ2YWxpZGF0ZUFjY291bnRGb3JtIiwidmFsaWRhdGVTaGlwcGluZ0Zvcm0iLCJjbG9zaW5nQXBwbGljYXRpb24iLCJpc1ZhbGlkIiwiY2hlY2tWYWxpZGl0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZXNjcmlwdG9ycyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImZvcm1hdFJlZ0V4cCIsImlzU3RyaW5nIiwib2JqZWN0cyIsInN0ciIsIk51bWJlciIsInN0cmluZ2lmeSIsImlzTnVsbCIsImlzT2JqZWN0IiwiZGVwcmVjYXRlIiwibm9EZXByZWNhdGlvbiIsIndhcm5lZCIsInRocm93RGVwcmVjYXRpb24iLCJ0cmFjZURlcHJlY2F0aW9uIiwidHJhY2UiLCJkZWJ1Z0Vudmlyb24iLCJkZWJ1Z3MiLCJjdHgiLCJzZWVuIiwic3R5bGl6ZSIsInN0eWxpemVOb0NvbG9yIiwiY29sb3JzIiwiaXNCb29sZWFuIiwic2hvd0hpZGRlbiIsIl9leHRlbmQiLCJpc1VuZGVmaW5lZCIsImN1c3RvbUluc3BlY3QiLCJzdHlsaXplV2l0aENvbG9yIiwiZm9ybWF0VmFsdWUiLCJzdHlsZVR5cGUiLCJyZWN1cnNlVGltZXMiLCJwcmltaXRpdmUiLCJpc051bWJlciIsImZvcm1hdFByaW1pdGl2ZSIsInZpc2libGVLZXlzIiwiYXJyYXkiLCJmb3JFYWNoIiwiYXJyYXlUb0hhc2giLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiaXNFcnJvciIsImZvcm1hdEVycm9yIiwiaXNSZWdFeHAiLCJpc0RhdGUiLCJvdXRwdXQiLCJicmFjZXMiLCJ0b1VUQ1N0cmluZyIsImZvcm1hdFByb3BlcnR5IiwiZm9ybWF0QXJyYXkiLCJyZWR1Y2UiLCJudW1MaW5lc0VzdCIsInJlZHVjZVRvU2luZ2xlU3RyaW5nIiwiZGVzYyIsImxpbmUiLCJzdWJzdHIiLCJhciIsIm9iamVjdFRvU3RyaW5nIiwicGFkIiwiZGVidWdsb2ciLCJOT0RFX0RFQlVHIiwicGlkIiwiaXNOdWxsT3JVbmRlZmluZWQiLCJpc1N5bWJvbCIsImlzUHJpbWl0aXZlIiwiaXNCdWZmZXIiLCJtb250aHMiLCJ0aW1lc3RhbXAiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwiZ2V0RGF0ZSIsImdldE1vbnRoIiwiaW5oZXJpdHMiLCJvcmlnaW4iLCJrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wiLCJjYWxsYmFja2lmeU9uUmVqZWN0ZWQiLCJyZWFzb24iLCJjYiIsIm5ld1JlYXNvbiIsInByb21pc2lmeSIsInByb21pc2VSZXNvbHZlIiwicHJvbWlzZVJlamVjdCIsIlByb21pc2UiLCJzZXRQcm90b3R5cGVPZiIsImRlZmluZVByb3BlcnRpZXMiLCJjdXN0b20iLCJjYWxsYmFja2lmeSIsImNhbGxiYWNraWZpZWQiLCJtYXliZUNiIiwibmV4dFRpY2siLCJyZWoiLCJwcm9kdWN0c0Ryb3BEb3duIiwic3RvcmVJdGVtc1RhYmxlIiwiYXJlUHJvZHVjdHNMb2FkZWQiLCJzZXJ2ZXJSZXNwb25zZSIsInByb2R1Y3RzRnJvbVNlcnZlciIsInByb2R1Y3RzIiwicHJvZHVjdCIsInByb2R1Y3RJRCIsImRlc2NyaXB0aW9uIiwidW5pdFByaWNlIiwiYXBwZW5kVG9TdG9yZUl0ZW1zVGFibGUiLCJvcGVuVGFiIiwidGFiTmFtZSIsInRhYiIsImFjdGl2ZVRhYiIsInZpZXdUYWJzIiwidGFiTGlua3MiLCJhY3RpdmVMaW5rIiwic3VibWl0T3JkZXIiLCJpdGVtcyIsIm9yZGVySXRlbXMiLCJpdGVtIiwiaXRlbUlEIiwicXVhbnRpdHkiLCJvcmRlclByaWNlIiwidXNlck5hbWUiLCJvcmRlckpTT05SZXF1ZXN0IiwidG90YWxQcmljZSIsInBvc3QiLCJhbGVydCIsInN1Ym1pdFBheW1lbnRJbmZvcm1hdGlvbkZvcm0iLCJwYXltZW50SW5mb3JtYXRpb24iLCJwYXltZW50TWV0aG9kIiwicGF5bWVudENhcmROYW1lIiwicGF5bWVudENhcmROdW1iZXIiLCJwYXltZW50Q2FyZEV4cGlyYXRpb25EYXRlIiwicGF5bWVudENhcmRWZXJpZmljYXRpb25Db2RlIiwicGF5bWVudEluZm9ybWF0aW9uSlNPTlJlcXVlc3QiLCJjYXJkVHlwZSIsImNhcmROdW1iZXIiLCJleHBEYXRlIiwiQ1ZWIiwiY2FyZE5hbWUiLCJ1c2VyRnVsbE5hbWUiLCJnZXRTaGlwcGluZ0lucHV0RmllbGRzIiwiZ2V0QmlsbGluZ0lucHV0RmllbGRzIiwiY2xlYXJTaGlwcGluZ0lucHV0cyIsImFkZHJlc3MxIiwiYWRkcmVzczIiLCJjaXR5IiwiemlwY29kZSIsImNoZWNrRm9yQmlsbGluZ0FkZHJlc3MiLCJzaGlwcGluZ0FkZHJlc3MxIiwic2hpcHBpbmdBZGRyZXNzMiIsInNoaXBwaW5nQ2l0eSIsInNoaXBwaW5nWmlwQ29kZSIsImJpbGxpbmdBZGRyZXNzMSIsImJpbGxpbmdBZGRyZXNzMiIsImJpbGxpbmdDaXR5IiwiYmlsbGluZ1N0YXRlIiwiYmlsbGluZ1ppcENvZGUiLCJ1c2VCaWxsaW5nQ2hlY2tCb3giLCJzaGlwcGluZ19hZGRyZXNzMSIsInNoaXBwaW5nX2FkZHJlc3MyIiwic2hpcHBpbmdfY2l0eSIsInNoaXBwaW5nX3N0YXRlIiwic2hpcHBpbmdfemlwY29kZSIsInNhdmVBZGRyZXNzQXNTaGlwcGluZ0luZm8iLCJnZXRVc2VySW5mb3JtYXRpb24iLCJzdWJtaXRVc2VyRm9ybSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwicGhvbmUiLCJlbWFpbCIsInppcENvZGUiLCJ1c2VySW5mb3JtYXRpb24iLCJmdWxsbmFtZSIsInVzZXJfcGhvbmUiLCJ1c2VyX2VtYWlsIiwidXNlcl9hZGRyZXNzMSIsInVzZXJfYWRkcmVzczIiLCJ1c2VyX2NpdHkiLCJ1c2VyX3N0YXRlIiwidXNlcl96aXBjb2RlIiwic2V0VXNlck92ZXJ2aWV3Iiwic3VidG90YWwiLCJwcm9kdWN0RHJvcERvd24iLCJwcm9kdWN0T3JkZXJzIiwiZ2V0U2VsZWN0ZWRQcm9kdWN0UHJpY2UiLCJ0ZXh0T2ZJdGVtIiwiZ2V0UHJvZHVjdFByaWNlIiwiZGlzcGxheVByb2R1Y3RQcmljZSIsInByb2R1Y2VWYWx1ZSIsImdldEl0ZW1RdWFudGl0eSIsInVuaXRzIiwiZ2V0U2VsZWN0ZWRPcmRlclByaWNlIiwiZGlzcGxheVN1YnRvdGFsIiwiYWRkT3JkZXJUb3RhbFRvU3VidG90YWwiLCJvcmRlclRvdGFsIiwicHJvZHVjdE5hbWUiLCJwcm9kdWN0RGV0YWlscyIsInByb2R1Y3RWYWx1ZSIsInByb2R1Y3RVbml0cyIsInJvd1Byb2R1Y3QiLCJ1bml0c0lkZW50aWZpZXIiLCJ0b3RhbENvc3RJZGVudGlmaWVyIiwib2xkVW5pdHMiLCJvbGRJdGVtQ29zdERvbGxhckFtb3VudCIsIm9sZEl0ZW1Db3N0TnVtYmVyIiwibmV3VW5pdHMiLCJuZXdUb3RhbEl0ZW1Db3N0IiwiYXBwZW5kT3JkZXJUb0NhcnQiLCJkZWxldGVSb3ciLCJjaGVja291dENhbGN1bGF0aW9ucyIsImdldE9yZGVyVGF4ZXMiLCJvcmRlclN1YnRvdGFsIiwiZ2V0T3JkZXJTaGlwcGluZyIsImdldE9yZGVyVG90YWxDb3N0Iiwib3JkZXJUYXhlcyIsIm9yZGVyU2hpcHBpbmciLCJzZXRPcmRlclZhbHVlcyIsIm5ld1N1YnRvdGFsIiwib3JkZXJUb3RhbENvc3QiLCJnZXRPcmRlclZhbHVlcyIsImluaXRpYWxDb3N0IiwidGF4ZXMiLCJzaGlwcGluZyIsInRvdGFsQ29zdCIsInRvRml4ZWQiLCJpc0FjY291bnRGaXJzdE5hbWVWYWxpZCIsImlzQWNjb3VudExhc3ROYW1lVmFsaWQiLCJpc0FjY291bnRQaG9uZVZhbGlkIiwiaXNBY2NvdW50RW1haWxWYWxpZCIsImlzQWNjb3VudEFkZHJlc3MxVmFsaWQiLCJpc0FjY291bnRTdGF0ZVZhbGlkIiwiaXNBY2NvdW50Q2l0eVZhbGlkIiwiaXNBY2NvdW50WmlwVmFsaWQiLCJjaGVja1VzZXJGaXJzdE5hbWVWYWxpZCIsInVzZXJGaXJzdE5hbWUiLCJ1c2VyRmlyc3ROYW1lRXJyb3JNZXNzYWdlIiwiZm9ybU5hbWUiLCJjaGVja1VzZXJMYXN0TmFtZVZhbGlkIiwidXNlckxhc3ROYW1lIiwidXNlckxhc3ROYW1lRXJyb3JNZXNzYWdlIiwiY2hlY2tVc2VyUGhvbmVWYWxpZCIsInVzZXJQaG9uZSIsInVzZXJQaG9uZUVycm9yTWVzc2FnZSIsImNoZWNrVXNlckVtYWlsVmFsaWQiLCJ1c2VyRW1haWwiLCJ1c2VyRW1haWxFcnJvck1lc3NhZ2UiLCJjaGVja1VzZXJBZGRyZXNzMVZhbGlkIiwiYWRkcmVzczFFcnJvck1lc3NhZ2UiLCJjaGVja1VzZXJBZGRyZXNzMlZhbGlkMiIsImFkZHJlc3MyRXJyb3JNZXNzYWdlIiwiY2hlY2tBY2NvdW50Q2l0eVZhbGlkIiwiY2l0eUVycm9yTWVzc2FnZSIsImNoZWNrQWNjb3VudFppcFZhbGlkIiwiemlwRXJyb3JNZXNzYWdlIiwiaXNVc2VyRm9ybVZhbGlkIiwicmVnaXN0ZXJCdXR0b24iLCJzdGF0ZUVycm9yTWVzc2FnZSIsImNoZWNrQWNjb3VudFN0YXRlVmFsaWQiLCJpc0NhcmRUeXBlVmFsaWQiLCJpc0NhcmROYW1lVmFsaWQiLCJpc0NhcmROdW1iZXJWYWxpZCIsImlzQ2FyZEV4cGlyZVZhbGlkIiwiaXNDYXJkQ29kZVZhbGlkIiwiaXNQYXltZW50QWdyZWVkVG8iLCJjaGVja05hbWVPbkNhcmQiLCJjYXJkTmFtZUVycm9yTWVzc2FnZSIsImZpZWxkTmFtZSIsImNoZWNrQ2FyZE51bWJlclZhbGlkIiwiY2FyZE51bWJlckVycm9yTWVzc2FnZSIsInZpc2FQYXR0ZXJuIiwibWFzdFBhdHRlcm4iLCJhbWV4UGF0dGVybiIsImZpZWxkVmFsdWUiLCJjaGVja0NhcmRUeXBlIiwiY2FyZFR5cGVFcnJvck1lc3NhZ2UiLCJjaGVja0NhcmRFeHBpcmVEYXRlIiwiY2FyZEV4cGlyZSIsImNhcmRFeHBpcmVFcnJvck1lc3NhZ2UiLCJjaGVja0NhcmRDVlYiLCJjYXJkQ1ZWIiwiY2FyZENWVkVycm9yTWVzc2FnZSIsImNoZWNrUGF5bWVudEFncmVlbWVudCIsInBheW1lbnRBZ3JlZW1lbnQiLCJpc0NoZWNrb3V0Rm9ybVZhbGlkIiwiY2hlY2tvdXRCdXR0b24iLCJpc0FkZHJlc3MxVmFsaWQiLCJpc1N0YXRlVmFsaWQiLCJpc0NpdHlWYWxpZCIsImlzWmlwVmFsaWQiLCJjaGVja1NoaXBwaW5nQWRkcmVzczEiLCJjaGVja1NoaXBwaW5nQWRkcmVzczIiLCJjaGVja1NoaXBwaW5nQ2l0eSIsImNoZWNrU2hpcHBpbmdaaXAiLCJpc1NoaXBwaW5nRm9ybVZhbGlkIiwic2V0U2hpcHBpbmdBZGRyZXNzQnV0dG9uIiwic2hpcHBpbmdFdmVudEhhbmRsZXJzIiwiY2hlY2tTaGlwcGluZ1N0YXRlIiwibmF2aWdhdG9yIiwic2VuZEJlYWNvbiIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsInRpdGxlIiwiYnJvd3NlciIsImVudiIsImFyZ3YiLCJ2ZXJzaW9uIiwidmVyc2lvbnMiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwiZW1pdCIsInByZXBlbmRMaXN0ZW5lciIsInByZXBlbmRPbmNlTGlzdGVuZXIiLCJsaXN0ZW5lcnMiLCJiaW5kaW5nIiwiY3dkIiwiY2hkaXIiLCJ1bWFzayIsImZpbGwiLCJyZWFkVUludDgiLCJjdG9yIiwic3VwZXJDdG9yIiwic3VwZXJfIiwiVGVtcEN0b3IiLCJvYmplY3RBc3NpZ24iLCJtaW4iLCJCdWZmZXIiLCJfaXNCdWZmZXIiLCJwU2xpY2UiLCJmdW5jdGlvbnNIYXZlTmFtZXMiLCJwVG9TdHJpbmciLCJpc1ZpZXciLCJhcnJidWYiLCJBcnJheUJ1ZmZlciIsIkRhdGFWaWV3IiwiYnVmZmVyIiwicmVnZXgiLCJnZXROYW1lIiwic29tZXRoaW5nIiwicmF3bmFtZSIsImFjdHVhbCIsImV4cGVjdGVkIiwic3RhY2tTdGFydEZ1bmN0aW9uIiwiQXNzZXJ0aW9uRXJyb3IiLCJfZGVlcEVxdWFsIiwic3RyaWN0IiwibWVtb3MiLCJnZXRUaW1lIiwibXVsdGlsaW5lIiwibGFzdEluZGV4IiwiaWdub3JlQ2FzZSIsIkZsb2F0MzJBcnJheSIsIkZsb2F0NjRBcnJheSIsIlVpbnQ4QXJyYXkiLCJhY3R1YWxJbmRleCIsImFjdHVhbFZpc2l0ZWRPYmplY3RzIiwiYUlzQXJncyIsImlzQXJndW1lbnRzIiwiYklzQXJncyIsImthIiwib2JqZWN0S2V5cyIsImtiIiwib2JqRXF1aXYiLCJleHBlY3RlZEV4Y2VwdGlvbiIsImlzUHJvdG90eXBlT2YiLCJfdGhyb3dzIiwic2hvdWxkVGhyb3ciLCJibG9jayIsIl90cnlCbG9jayIsInVzZXJQcm92aWRlZE1lc3NhZ2UiLCJpc1VuZXhwZWN0ZWRFeGNlcHRpb24iLCJnZW5lcmF0ZWRNZXNzYWdlIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJvdXQiLCJmbl9uYW1lIiwibmV4dF9saW5lIiwic3Vic3RyaW5nIiwiZXF1YWwiLCJub3RFcXVhbCIsImRlZXBFcXVhbCIsImRlZXBTdHJpY3RFcXVhbCIsIm5vdERlZXBFcXVhbCIsIm5vdERlZXBTdHJpY3RFcXVhbCIsInN0cmljdEVxdWFsIiwibm90U3RyaWN0RXF1YWwiLCJkb2VzTm90VGhyb3ciLCJpZkVycm9yIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJhc3NpZ24iLCJ0ZXN0MSIsInRlc3QyIiwidGVzdDMiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsIm9yaWdpbmFsTW9kdWxlIiwid2VicGFja1BvbHlmaWxsIiwiX2N1ckluc3QiLCJfa2V5RXZlbnQiLCJfZGlzYWJsZWRJbnB1dHMiLCJfZGF0ZXBpY2tlclNob3dpbmciLCJfaW5EaWFsb2ciLCJfbWFpbkRpdklkIiwiX2lubGluZUNsYXNzIiwiX2FwcGVuZENsYXNzIiwiX3RyaWdnZXJDbGFzcyIsIl9kaWFsb2dDbGFzcyIsIl9kaXNhYmxlQ2xhc3MiLCJfdW5zZWxlY3RhYmxlQ2xhc3MiLCJfY3VycmVudENsYXNzIiwiX2RheU92ZXJDbGFzcyIsInJlZ2lvbmFsIiwiY2xvc2VUZXh0IiwicHJldlRleHQiLCJuZXh0VGV4dCIsImN1cnJlbnRUZXh0IiwibW9udGhOYW1lcyIsIm1vbnRoTmFtZXNTaG9ydCIsImRheU5hbWVzIiwiZGF5TmFtZXNTaG9ydCIsImRheU5hbWVzTWluIiwid2Vla0hlYWRlciIsImRhdGVGb3JtYXQiLCJmaXJzdERheSIsImlzUlRMIiwic2hvd01vbnRoQWZ0ZXJZZWFyIiwieWVhclN1ZmZpeCIsIl9kZWZhdWx0cyIsInNob3dPbiIsInNob3dBbmltIiwic2hvd09wdGlvbnMiLCJkZWZhdWx0RGF0ZSIsImFwcGVuZFRleHQiLCJidXR0b25UZXh0IiwiYnV0dG9uSW1hZ2UiLCJidXR0b25JbWFnZU9ubHkiLCJoaWRlSWZOb1ByZXZOZXh0IiwibmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCIsImdvdG9DdXJyZW50IiwiY2hhbmdlTW9udGgiLCJjaGFuZ2VZZWFyIiwieWVhclJhbmdlIiwic2hvd090aGVyTW9udGhzIiwic2VsZWN0T3RoZXJNb250aHMiLCJzaG93V2VlayIsImNhbGN1bGF0ZVdlZWsiLCJpc284NjAxV2VlayIsInNob3J0WWVhckN1dG9mZiIsIm1pbkRhdGUiLCJtYXhEYXRlIiwiYmVmb3JlU2hvd0RheSIsImJlZm9yZVNob3ciLCJvblNlbGVjdCIsIm9uQ2hhbmdlTW9udGhZZWFyIiwib25DbG9zZSIsIm51bWJlck9mTW9udGhzIiwic2hvd0N1cnJlbnRBdFBvcyIsInN0ZXBNb250aHMiLCJzdGVwQmlnTW9udGhzIiwiYWx0RmllbGQiLCJhbHRGb3JtYXQiLCJjb25zdHJhaW5JbnB1dCIsInNob3dCdXR0b25QYW5lbCIsImF1dG9TaXplIiwiZW4iLCJkcERpdiIsImRhdGVwaWNrZXIiLCJfaXNEaXNhYmxlZERhdGVwaWNrZXIiLCJpbmxpbmUiLCJlbGVtZW50IiwiX3JlZnJlc2giLCJfdHJpZ2dlciIsInVpIiwid2lkZ2V0IiwiV2lkZ2V0IiwiX2NyZWF0ZVdpZGdldCIsIl9wcm90byIsIl9jaGlsZENvbnN0cnVjdG9ycyIsIl9zdXBlciIsIl9zdXBlckFwcGx5Iiwid2lkZ2V0RXZlbnRQcmVmaXgiLCJ3aWRnZXROYW1lIiwid2lkZ2V0RnVsbE5hbWUiLCJicmlkZ2UiLCJjaGFyQXQiLCJfaW5pdCIsImRlZmF1bHRFbGVtZW50IiwidXVpZCIsImV2ZW50TmFtZXNwYWNlIiwiYmluZGluZ3MiLCJob3ZlcmFibGUiLCJmb2N1c2FibGUiLCJjbGFzc2VzRWxlbWVudExvb2t1cCIsIl9vbiIsImRlc3Ryb3kiLCJfZ2V0Q3JlYXRlT3B0aW9ucyIsIl9jcmVhdGUiLCJfc2V0T3B0aW9uRGlzYWJsZWQiLCJfZ2V0Q3JlYXRlRXZlbnREYXRhIiwiX2Rlc3Ryb3kiLCJfcmVtb3ZlQ2xhc3MiLCJfc2V0T3B0aW9ucyIsIl9zZXRPcHRpb24iLCJfc2V0T3B0aW9uQ2xhc3NlcyIsIl9jbGFzc2VzIiwiX3RvZ2dsZUNsYXNzIiwiZW5hYmxlIiwiX3VudHJhY2tDbGFzc2VzRWxlbWVudCIsIl9hZGRDbGFzcyIsIl9vZmYiLCJfZGVsYXkiLCJfaG92ZXJhYmxlIiwiX2ZvY3VzYWJsZSIsImZvY3Vzb3V0IiwiZWZmZWN0IiwiZWZmZWN0cyIsIm91dGVyV2lkdGgiLCJvdXRlckhlaWdodCIsImFicyIsInNjcm9sbGJhcldpZHRoIiwiY2xpZW50V2lkdGgiLCJnZXRTY3JvbGxJbmZvIiwiaXNEb2N1bWVudCIsInNjcm9sbFdpZHRoIiwic2Nyb2xsSGVpZ2h0IiwiZ2V0V2l0aGluSW5mbyIsIm9mIiwid2l0aGluIiwiY29sbGlzaW9uIiwibXkiLCJtYXJnaW5Ub3AiLCJ0YXJnZXRXaWR0aCIsInRhcmdldEhlaWdodCIsImVsZW1XaWR0aCIsImVsZW1IZWlnaHQiLCJjb2xsaXNpb25Qb3NpdGlvbiIsImNvbGxpc2lvbldpZHRoIiwiY29sbGlzaW9uSGVpZ2h0IiwiaG9yaXpvbnRhbCIsInZlcnRpY2FsIiwiaW1wb3J0YW50IiwiZml0IiwiZmxpcCIsImZsaXBmaXQiLCJkaXNhYmxlU2VsZWN0aW9uIiwiZW5hYmxlU2VsZWN0aW9uIiwiZGVmIiwiZmxvb3IiLCJtb2QiLCJfcmdiYSIsInNwYWNlIiwidHJhbnNwYXJlbnQiLCJDb2xvciIsInJnYmEiLCJyZWQiLCJncmVlbiIsImJsdWUiLCJoc2xhIiwiaHVlIiwic2F0dXJhdGlvbiIsImxpZ2h0bmVzcyIsImRlZ3JlZXMiLCJiYWNrZ3JvdW5kQ29sb3IiLCJhbHBoYSIsIl9zcGFjZSIsInRyYW5zaXRpb24iLCJibGVuZCIsInRvUmdiYVN0cmluZyIsInRvSHNsYVN0cmluZyIsInRvSGV4U3RyaW5nIiwiX2hzbGEiLCJjb2xvckluaXQiLCJib3JkZXJDb2xvciIsIm5hbWVzIiwiYXF1YSIsImJsYWNrIiwiZnVjaHNpYSIsImdyYXkiLCJsaW1lIiwibWFyb29uIiwibmF2eSIsIm9saXZlIiwicHVycGxlIiwic2lsdmVyIiwidGVhbCIsIndoaXRlIiwieWVsbG93IiwiY3VycmVudFN0eWxlIiwiYm9yZGVyQm90dG9tIiwiYm9yZGVyTGVmdCIsImJvcmRlclJpZ2h0IiwiYm9yZGVyVG9wIiwiYm9yZGVyV2lkdGgiLCJzZXRBdHRyIiwiYW5pbWF0ZUNsYXNzIiwic3dpdGNoQ2xhc3MiLCJib3R0b20iLCJ1aUJhY2tDb21wYXQiLCJzYXZlIiwicmVzdG9yZSIsInNldE1vZGUiLCJjcmVhdGVXcmFwcGVyIiwiZm9udFNpemUiLCJiYWNrZ3JvdW5kIiwicmVtb3ZlV3JhcHBlciIsImRlZmluZSIsInNjYWxlZERpbWVuc2lvbnMiLCJjbGlwVG9Cb3giLCJjbGlwIiwic2F2ZVN0eWxlIiwicmVzdG9yZVN0eWxlIiwiZ2V0QmFzZWxpbmUiLCJjcmVhdGVQbGFjZWhvbGRlciIsIm1hcmdpbkJvdHRvbSIsIm1hcmdpblJpZ2h0IiwicmVtb3ZlUGxhY2Vob2xkZXIiLCJjbGVhblVwIiwic2V0VHJhbnNpdGlvbiIsImNzc1VuaXQiLCJjc3NDbGlwIiwidHJhbnNmZXIiLCJpbm5lckhlaWdodCIsImlubmVyV2lkdGgiLCJjbGlwSW5pdCIsInBvdyIsIlNpbmUiLCJDaXJjIiwic3FydCIsIkVsYXN0aWMiLCJzaW4iLCJCYWNrIiwiQm91bmNlIiwidXAiLCJkb3duIiwiZGlyZWN0aW9uIiwiZGlzdGFuY2UiLCJwaWVjZXMiLCJzaXplIiwiaG9yaXpGaXJzdCIsImJhY2tncm91bmRJbWFnZSIsImNvbG9yIiwiZmFkZSIsImZvcm0iLCJmb3JtUmVzZXRNaXhpbiIsIl9mb3JtUmVzZXRIYW5kbGVyIiwicmVmcmVzaCIsIl9iaW5kRm9ybVJlc2V0SGFuZGxlciIsIl91bmJpbmRGb3JtUmVzZXRIYW5kbGVyIiwiQkFDS1NQQUNFIiwiQ09NTUEiLCJERUxFVEUiLCJET1dOIiwiRU5EIiwiRU5URVIiLCJFU0NBUEUiLCJIT01FIiwiTEVGVCIsIlBBR0VfRE9XTiIsIlBBR0VfVVAiLCJQRVJJT0QiLCJSSUdIVCIsIlNQQUNFIiwiVEFCIiwiVVAiLCJsYWJlbHMiLCJzY3JvbGxQYXJlbnQiLCJ0YWJiYWJsZSIsInVuaXF1ZUlkIiwicmVtb3ZlVW5pcXVlSWQiLCJjb2xsYXBzaWJsZSIsImhlaWdodFN0eWxlIiwiaWNvbnMiLCJhY3RpdmVIZWFkZXIiLCJhY3RpdmF0ZSIsImJlZm9yZUFjdGl2YXRlIiwiaGlkZVByb3BzIiwiYm9yZGVyVG9wV2lkdGgiLCJib3JkZXJCb3R0b21XaWR0aCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nQm90dG9tIiwic2hvd1Byb3BzIiwicHJldlNob3ciLCJwcmV2SGlkZSIsIl9wcm9jZXNzUGFuZWxzIiwicGFuZWwiLCJfY3JlYXRlSWNvbnMiLCJfZGVzdHJveUljb25zIiwiX2FjdGl2YXRlIiwiX3NldHVwRXZlbnRzIiwiX2tleWRvd24iLCJfZXZlbnRIYW5kbGVyIiwiX3BhbmVsS2V5RG93biIsInBhbmVscyIsIl9maW5kQWN0aXZlIiwia2V5ZG93biIsIm9sZEhlYWRlciIsIm9sZFBhbmVsIiwibmV3SGVhZGVyIiwibmV3UGFuZWwiLCJfdG9nZ2xlIiwiX2FuaW1hdGUiLCJfdG9nZ2xlQ29tcGxldGUiLCJzdWJtZW51IiwibWVudXMiLCJyb2xlIiwiYWN0aXZlTWVudSIsIm1vdXNlSGFuZGxlZCIsInByZXZpb3VzRmlsdGVyIiwiY29sbGFwc2VBbGwiLCJfY2xvc2VPbkRvY3VtZW50Q2xpY2siLCJwcmV2aW91c1BhZ2UiLCJuZXh0UGFnZSIsIl9tb3ZlIiwicHJldmlvdXMiLCJjb2xsYXBzZSIsImZpbHRlclRpbWVyIiwiX2ZpbHRlck1lbnVJdGVtcyIsIl9pc0RpdmlkZXIiLCJfaXRlbVJvbGUiLCJtZW51IiwibGlzdGJveCIsIl9zY3JvbGxJbnRvVmlldyIsIl9jbG9zZSIsIl9zdGFydE9wZW5pbmciLCJfaGFzU2Nyb2xsIiwiX29wZW4iLCJpc0ZpcnN0SXRlbSIsImlzTGFzdEl0ZW0iLCJhdXRvRm9jdXMiLCJtaW5MZW5ndGgiLCJjaGFuZ2UiLCJjbG9zZSIsInNlYXJjaCIsInJlcXVlc3RJbmRleCIsInBlbmRpbmciLCJpc011bHRpTGluZSIsIl9pc0NvbnRlbnRFZGl0YWJsZSIsInZhbHVlTWV0aG9kIiwiaXNOZXdNZW51IiwiX3ZhbHVlIiwidGVybSIsIl9zZWFyY2hUaW1lb3V0Iiwia2V5cHJlc3MiLCJzZWxlY3RlZEl0ZW0iLCJjYW5jZWxCbHVyIiwic2VhcmNoaW5nIiwiX2NoYW5nZSIsIl9pbml0U291cmNlIiwiX2FwcGVuZFRvIiwibW91c2Vkb3duIiwibWVudWZvY3VzIiwibGl2ZVJlZ2lvbiIsIm1lbnVzZWxlY3QiLCJfaXNFdmVudFRhcmdldEluV2lkZ2V0IiwiX2Nsb3NlT25DbGlja091dHNpZGUiLCJhdXRvY29tcGxldGUiLCJfc2VhcmNoIiwiY2FuY2VsU2VhcmNoIiwiX3Jlc3BvbnNlIiwiX19yZXNwb25zZSIsIl9ub3JtYWxpemUiLCJfc3VnZ2VzdCIsIl9yZW5kZXJNZW51IiwiX3Jlc2l6ZU1lbnUiLCJfcmVuZGVySXRlbURhdGEiLCJfcmVuZGVySXRlbSIsImVzY2FwZVJlZ2V4IiwibWVzc2FnZXMiLCJub1Jlc3VsdHMiLCJvbmx5VmlzaWJsZSIsImNvbnRyb2xncm91cExhYmVsIiwiY2hlY2tib3hyYWRpbyIsInNlbGVjdG1lbnUiLCJzcGlubmVyIiwiX2VuaGFuY2UiLCJfY2FsbENoaWxkTWV0aG9kIiwiY2hpbGRXaWRnZXRzIiwiX2luaXRXaWRnZXRzIiwiX3Jlc29sdmVDbGFzc2VzVmFsdWVzIiwiX3VwZGF0ZUNvcm5lckNsYXNzIiwiX2J1aWxkU2ltcGxlT3B0aW9ucyIsIm1pZGRsZSIsIm9ubHkiLCJfc3Bpbm5lck9wdGlvbnMiLCJfYnV0dG9uT3B0aW9ucyIsIl9jaGVja2JveHJhZGlvT3B0aW9ucyIsIl9zZWxlY3RtZW51T3B0aW9ucyIsImljb24iLCJfcmVhZFR5cGUiLCJvcmlnaW5hbExhYmVsIiwib3V0ZXJIVE1MIiwiX3VwZGF0ZUxhYmVsIiwiX3VwZGF0ZUljb24iLCJfZ2V0UmFkaW9Hcm91cCIsIl90b2dnbGVDbGFzc2VzIiwiaWNvblNwYWNlIiwiaWNvblBvc2l0aW9uIiwic2hvd0xhYmVsIiwiaXNJbnB1dCIsImhhc1RpdGxlIiwia2V5dXAiLCJfdXBkYXRlVG9vbHRpcCIsIl9hdHRhY2hJY29uIiwiX2F0dGFjaEljb25TcGFjZSIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJ0YWdOYW1lIiwiYnV0dG9uc2V0IiwiY29udHJvbGdyb3VwIiwibWFya2VyQ2xhc3NOYW1lIiwibWF4Um93cyIsIl93aWRnZXREYXRlcGlja2VyIiwic2V0RGVmYXVsdHMiLCJfYXR0YWNoRGF0ZXBpY2tlciIsIl9uZXdJbnN0IiwiX2Nvbm5lY3REYXRlcGlja2VyIiwiX2lubGluZURhdGVwaWNrZXIiLCJzZWxlY3RlZERheSIsInNlbGVjdGVkTW9udGgiLCJzZWxlY3RlZFllYXIiLCJkcmF3TW9udGgiLCJkcmF3WWVhciIsIl9hdHRhY2htZW50cyIsIl9kb0tleURvd24iLCJfZG9LZXlQcmVzcyIsIl9kb0tleVVwIiwiX2F1dG9TaXplIiwiX2Rpc2FibGVEYXRlcGlja2VyIiwiX2dldCIsIl9zaG93RGF0ZXBpY2tlciIsImFsdCIsIl9sYXN0SW5wdXQiLCJfaGlkZURhdGVwaWNrZXIiLCJzZXRNb250aCIsInNldERhdGUiLCJnZXREYXkiLCJfZm9ybWF0RGF0ZSIsIl9zZXREYXRlIiwiX2dldERlZmF1bHREYXRlIiwiX3VwZGF0ZURhdGVwaWNrZXIiLCJfdXBkYXRlQWx0ZXJuYXRlIiwiX2RpYWxvZ0RhdGVwaWNrZXIiLCJfZGlhbG9nSW5zdCIsIl9kaWFsb2dJbnB1dCIsIl9wb3MiLCJjbGllbnRIZWlnaHQiLCJibG9ja1VJIiwiX2Rlc3Ryb3lEYXRlcGlja2VyIiwiX2VuYWJsZURhdGVwaWNrZXIiLCJjdXJzb3IiLCJfZ2V0SW5zdCIsIl9vcHRpb25EYXRlcGlja2VyIiwiX2dldERhdGVEYXRlcGlja2VyIiwiX2dldE1pbk1heERhdGUiLCJfY2hhbmdlRGF0ZXBpY2tlciIsIl9yZWZyZXNoRGF0ZXBpY2tlciIsIl9zZXREYXRlRGF0ZXBpY2tlciIsIl9zZXREYXRlRnJvbUZpZWxkIiwiX2dldERhdGUiLCJfc2VsZWN0RGF5IiwiX2FkanVzdERhdGUiLCJfY2xlYXJEYXRlIiwiX2dvdG9Ub2RheSIsIl9wb3NzaWJsZUNoYXJzIiwibGFzdFZhbCIsInBhcnNlRGF0ZSIsIl9nZXRGb3JtYXRDb25maWciLCJfZmluZFBvcyIsIl9jaGVja09mZnNldCIsIl9zaG91bGRGb2N1c0lucHV0IiwiX2dlbmVyYXRlSFRNTCIsIl9hdHRhY2hIYW5kbGVycyIsIl9nZXROdW1iZXJPZk1vbnRocyIsInllYXJzaHRtbCIsIl90aWR5RGlhbG9nIiwidW5ibG9ja1VJIiwiX2NoZWNrRXh0ZXJuYWxDbGljayIsIl9hZGp1c3RJbnN0RGF0ZSIsImN1cnJlbnREYXkiLCJjdXJyZW50TW9udGgiLCJjdXJyZW50WWVhciIsImdldEZ1bGxZZWFyIiwiX25vdGlmeUNoYW5nZSIsIl9zZWxlY3RNb250aFllYXIiLCJfc2VsZWN0RGF0ZSIsImZvcm1hdERhdGUiLCJub1dlZWtlbmRzIiwiX3RpY2tzVG8xOTcwIiwiX2dldERheXNJbk1vbnRoIiwiX2RheWxpZ2h0U2F2aW5nQWRqdXN0IiwiQVRPTSIsIkNPT0tJRSIsIklTT184NjAxIiwiUkZDXzgyMiIsIlJGQ184NTAiLCJSRkNfMTAzNiIsIlJGQ18xMTIzIiwiUkZDXzI4MjIiLCJSU1MiLCJUSUNLUyIsIlRJTUVTVEFNUCIsIlczQyIsIl9yZXN0cmljdE1pbk1heCIsIl9kZXRlcm1pbmVEYXRlIiwic2V0SG91cnMiLCJzZXRNaW51dGVzIiwic2V0U2Vjb25kcyIsInNldE1pbGxpc2Vjb25kcyIsInRvZGF5Iiwic2VsZWN0RGF5Iiwic2VsZWN0TW9udGgiLCJzZWxlY3RZZWFyIiwiX2NhbkFkanVzdE1vbnRoIiwiX2lzSW5SYW5nZSIsIl9nZW5lcmF0ZU1vbnRoWWVhckhlYWRlciIsIl9nZXRGaXJzdERheU9mTW9udGgiLCJpbml0aWFsaXplZCIsInVzZXJBZ2VudCIsImNhbmNlbCIsIl9tb3VzZUluaXQiLCJfbW91c2VEb3duIiwic3RhcnRlZCIsIl9tb3VzZURlc3Ryb3kiLCJfbW91c2VNb3ZlRGVsZWdhdGUiLCJfbW91c2VVcERlbGVnYXRlIiwiX21vdXNlTW92ZWQiLCJfbW91c2VTdGFydGVkIiwiX21vdXNlVXAiLCJfbW91c2VEb3duRXZlbnQiLCJfbW91c2VDYXB0dXJlIiwibW91c2VEZWxheU1ldCIsIl9tb3VzZURlbGF5VGltZXIiLCJfbW91c2VEaXN0YW5jZU1ldCIsIl9tb3VzZURlbGF5TWV0IiwiX21vdXNlU3RhcnQiLCJfbW91c2VNb3ZlIiwiZG9jdW1lbnRNb2RlIiwiaWdub3JlTWlzc2luZ1doaWNoIiwiX21vdXNlRHJhZyIsIl9tb3VzZVN0b3AiLCJwbHVnaW4iLCJwbHVnaW5zIiwic2FmZUJsdXIiLCJtb3VzZSIsImFkZENsYXNzZXMiLCJheGlzIiwiY29ubmVjdFRvU29ydGFibGUiLCJjb250YWlubWVudCIsImN1cnNvckF0IiwiZ3JpZCIsImhlbHBlciIsImlmcmFtZUZpeCIsInJlZnJlc2hQb3NpdGlvbnMiLCJyZXZlcnQiLCJyZXZlcnREdXJhdGlvbiIsInNjb3BlIiwic2Nyb2xsIiwic2Nyb2xsU2Vuc2l0aXZpdHkiLCJzY3JvbGxTcGVlZCIsInNuYXAiLCJzbmFwTW9kZSIsInNuYXBUb2xlcmFuY2UiLCJkcmFnIiwiX3NldFBvc2l0aW9uUmVsYXRpdmUiLCJfc2V0SGFuZGxlQ2xhc3NOYW1lIiwiX3JlbW92ZUhhbmRsZUNsYXNzTmFtZSIsImRlc3Ryb3lPbkNsZWFyIiwiX2dldEhhbmRsZSIsIl9ibHVyQWN0aXZlRWxlbWVudCIsIl9ibG9ja0ZyYW1lcyIsImlmcmFtZUJsb2NrcyIsIl91bmJsb2NrRnJhbWVzIiwiX2NyZWF0ZUhlbHBlciIsIl9jYWNoZUhlbHBlclByb3BvcnRpb25zIiwiZGRtYW5hZ2VyIiwiX2NhY2hlTWFyZ2lucyIsImNzc1Bvc2l0aW9uIiwiaGFzRml4ZWRBbmNlc3RvciIsInBvc2l0aW9uQWJzIiwiX3JlZnJlc2hPZmZzZXRzIiwib3JpZ2luYWxQb3NpdGlvbiIsIl9nZW5lcmF0ZVBvc2l0aW9uIiwib3JpZ2luYWxQYWdlWCIsIm9yaWdpbmFsUGFnZVkiLCJfYWRqdXN0T2Zmc2V0RnJvbUhlbHBlciIsIl9zZXRDb250YWlubWVudCIsIl9jbGVhciIsImRyb3BCZWhhdmlvdXIiLCJwcmVwYXJlT2Zmc2V0cyIsImRyYWdTdGFydCIsIm1hcmdpbnMiLCJfZ2V0UGFyZW50T2Zmc2V0IiwiX2dldFJlbGF0aXZlT2Zmc2V0IiwiX2NvbnZlcnRQb3NpdGlvblRvIiwiX3VpSGFzaCIsImRyb3AiLCJkcm9wcGVkIiwiZHJhZ1N0b3AiLCJoYW5kbGVFbGVtZW50IiwiaGVscGVyUHJvcG9ydGlvbnMiLCJfaXNSb290Tm9kZSIsInJlbGF0aXZlQ29udGFpbmVyIiwiY2FuY2VsSGVscGVyUmVtb3ZhbCIsInNvcnRhYmxlcyIsInNvcnRhYmxlIiwiaXNPdmVyIiwiX3N0b3JlZENTUyIsInBsYWNlaG9sZGVyIiwiX2hlbHBlciIsIl9pbnRlcnNlY3RzV2l0aCIsImNvbnRhaW5lckNhY2hlIiwiX3BhcmVudCIsImN1cnJlbnRJdGVtIiwiZnJvbU91dHNpZGUiLCJfcmV2ZXJ0IiwiX2N1cnNvciIsIl9vcGFjaXR5Iiwic2Nyb2xsUGFyZW50Tm90SGlkZGVuIiwib3ZlcmZsb3dPZmZzZXQiLCJzbmFwRWxlbWVudHMiLCJzbmFwcGluZyIsInJlbGVhc2UiLCJzbmFwSXRlbSIsIl96SW5kZXgiLCJkcmFnZ2FibGUiLCJhbHNvUmVzaXplIiwiYW5pbWF0ZUR1cmF0aW9uIiwiYW5pbWF0ZUVhc2luZyIsImFzcGVjdFJhdGlvIiwiYXV0b0hpZGUiLCJnaG9zdCIsImhhbmRsZXMiLCJtYXhIZWlnaHQiLCJtaW5IZWlnaHQiLCJyZXNpemUiLCJfbnVtIiwiX2lzTnVtYmVyIiwiX2FzcGVjdFJhdGlvIiwib3JpZ2luYWxFbGVtZW50IiwiX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMiLCJyZXNpemFibGUiLCJlbGVtZW50SXNXcmFwcGVyIiwib3JpZ2luYWxSZXNpemVTdHlsZSIsIl9wcm9wb3J0aW9uYWxseVJlc2l6ZSIsIl9zZXR1cEhhbmRsZXMiLCJfaGFuZGxlcyIsInJlc2l6aW5nIiwiX3JlbW92ZUhhbmRsZXMiLCJzdyIsIm53IiwiX3JlbmRlckF4aXMiLCJfcmVuZGVyUHJveHkiLCJvcmlnaW5hbFNpemUiLCJzaXplRGlmZiIsIm9yaWdpbmFsTW91c2VQb3NpdGlvbiIsIl9wcm9wYWdhdGUiLCJfdXBkYXRlUHJldlByb3BlcnRpZXMiLCJfdXBkYXRlVmlydHVhbEJvdW5kYXJpZXMiLCJfdXBkYXRlUmF0aW8iLCJfcmVzcGVjdFNpemUiLCJfdXBkYXRlQ2FjaGUiLCJfYXBwbHlDaGFuZ2VzIiwicHJldlBvc2l0aW9uIiwicHJldlNpemUiLCJfdkJvdW5kYXJpZXMiLCJfZ2V0UGFkZGluZ1BsdXNCb3JkZXJEaW1lbnNpb25zIiwib3V0ZXJEaW1lbnNpb25zIiwiZWxlbWVudE9mZnNldCIsImNvbnRhaW5lckVsZW1lbnQiLCJjb250YWluZXJPZmZzZXQiLCJjb250YWluZXJQb3NpdGlvbiIsInBhcmVudERhdGEiLCJjb250YWluZXJTaXplIiwiYXV0b09wZW4iLCJjbG9zZU9uRXNjYXBlIiwibW9kYWwiLCJiZWZvcmVDbG9zZSIsInJlc2l6ZVN0YXJ0IiwicmVzaXplU3RvcCIsInNpemVSZWxhdGVkT3B0aW9ucyIsInJlc2l6YWJsZVJlbGF0ZWRPcHRpb25zIiwib3JpZ2luYWxDc3MiLCJvcmlnaW5hbFRpdGxlIiwiX2NyZWF0ZVdyYXBwZXIiLCJ1aURpYWxvZyIsIl9jcmVhdGVUaXRsZWJhciIsIl9jcmVhdGVCdXR0b25QYW5lIiwiX21ha2VEcmFnZ2FibGUiLCJfbWFrZVJlc2l6YWJsZSIsIl9pc09wZW4iLCJfdHJhY2tGb2N1cyIsIl91bnRyYWNrSW5zdGFuY2UiLCJfZGVzdHJveU92ZXJsYXkiLCJfZm9jdXNlZEVsZW1lbnQiLCJfaGlkZSIsImlzT3BlbiIsIm1vdmVUb1RvcCIsIl9tb3ZlVG9Ub3AiLCJfZm9jdXNUYWJiYWJsZSIsIl9zaXplIiwiX3Bvc2l0aW9uIiwiX2NyZWF0ZU92ZXJsYXkiLCJvdmVybGF5IiwiX3Nob3ciLCJfbWFrZUZvY3VzVGFyZ2V0IiwidWlEaWFsb2dCdXR0b25QYW5lIiwidWlEaWFsb2dUaXRsZWJhckNsb3NlIiwiX2tlZXBGb2N1cyIsInVpRGlhbG9nVGl0bGViYXIiLCJfdGl0bGUiLCJ1aUJ1dHRvblNldCIsIl9jcmVhdGVCdXR0b25zIiwiX21pbkhlaWdodCIsIl90cmFja2luZ0luc3RhbmNlcyIsIl9hbGxvd0ludGVyYWN0aW9uIiwiZGlhbG9nIiwiZGlhbG9nQ2xhc3MiLCJhY2NlcHQiLCJncmVlZHkiLCJ0b2xlcmFuY2UiLCJkZWFjdGl2YXRlIiwib3ZlciIsImlzb3ZlciIsImlzb3V0IiwicHJvcG9ydGlvbnMiLCJfYWRkVG9NYW5hZ2VyIiwiZHJvcHBhYmxlcyIsIl9zcGxpY2UiLCJfYWRkQWN0aXZlQ2xhc3MiLCJfZGVhY3RpdmF0ZSIsIl9yZW1vdmVBY3RpdmVDbGFzcyIsIl9vdmVyIiwiX2FkZEhvdmVyQ2xhc3MiLCJfb3V0IiwiX3JlbW92ZUhvdmVyQ2xhc3MiLCJfZHJvcCIsImRyb3BwYWJsZSIsImludGVyc2VjdCIsImFic29sdXRlIiwiZ3JlZWR5Q2hpbGQiLCJob3ZlckNsYXNzIiwiYWN0aXZlQ2xhc3MiLCJvbGRWYWx1ZSIsIl9jb25zdHJhaW5lZFZhbHVlIiwidmFsdWVEaXYiLCJfcmVmcmVzaFZhbHVlIiwiaW5kZXRlcm1pbmF0ZSIsIl9wZXJjZW50YWdlIiwib3ZlcmxheURpdiIsImF1dG9SZWZyZXNoIiwic2VsZWN0aW5nIiwidW5zZWxlY3RlZCIsInVuc2VsZWN0aW5nIiwiZHJhZ2dlZCIsImVsZW1lbnRQb3MiLCJzZWxlY3RlZXMiLCIkZWxlbWVudCIsInN0YXJ0c2VsZWN0ZWQiLCJvcG9zIiwiaWRzIiwiX2RyYXdCdXR0b24iLCJfZHJhd01lbnUiLCJfcmVuZGVyZWQiLCJtZW51SXRlbXMiLCJfcGFyc2VPcHRpb24iLCJidXR0b25JdGVtIiwiX3JlbmRlckJ1dHRvbkl0ZW0iLCJfcmVzaXplQnV0dG9uIiwiX2J1dHRvbkV2ZW50cyIsIl9yZWZyZXNoTWVudSIsIm1lbnVXcmFwIiwibWVudUluc3RhbmNlIiwiX3NldFNlbGVjdGlvbiIsIl9zZWxlY3QiLCJmb2N1c0luZGV4IiwiX2dldFNlbGVjdGVkSXRlbSIsIl9wYXJzZU9wdGlvbnMiLCJfc2V0QXJpYSIsIl90b2dnbGVBdHRyIiwiX2RvY3VtZW50Q2xpY2siLCJyYW5nZSIsIm1lbnVXaWRnZXQiLCJfc2V0VGV4dCIsImdldFNlbGVjdGlvbiIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwicmFuZ2VDb3VudCIsImdldFJhbmdlQXQiLCJjcmVhdGVSYW5nZSIsIl9zZWxlY3RGb2N1c2VkSXRlbSIsIm9yaWVudGF0aW9uIiwic2xpZGUiLCJudW1QYWdlcyIsIl9rZXlTbGlkaW5nIiwiX21vdXNlU2xpZGluZyIsIl9hbmltYXRlT2ZmIiwiX2hhbmRsZUluZGV4IiwiX2RldGVjdE9yaWVudGF0aW9uIiwiX2NhbGN1bGF0ZU5ld01heCIsIl9jcmVhdGVSYW5nZSIsIl9jcmVhdGVIYW5kbGVzIiwiX3ZhbHVlTWluIiwiX2hhbmRsZUV2ZW50cyIsImVsZW1lbnRTaXplIiwiX25vcm1WYWx1ZUZyb21Nb3VzZSIsIl92YWx1ZU1heCIsIl9sYXN0Q2hhbmdlZFZhbHVlIiwiX3N0YXJ0IiwiX2NsaWNrT2Zmc2V0IiwiX3NsaWRlIiwiX3N0b3AiLCJfdHJpbUFsaWduVmFsdWUiLCJoYW5kbGVJbmRleCIsIl9oYXNNdWx0aXBsZVZhbHVlcyIsIl92YWx1ZXMiLCJfcmVmcmVzaFJhbmdlIiwiX3ByZWNpc2lvbiIsIl9wcmVjaXNpb25PZiIsImNvbm5lY3RXaXRoIiwiZHJvcE9uRW1wdHkiLCJmb3JjZVBsYWNlaG9sZGVyU2l6ZSIsImZvcmNlSGVscGVyU2l6ZSIsImJlZm9yZVN0b3AiLCJyZWNlaXZlIiwidXBkYXRlIiwiX2lzT3ZlckF4aXMiLCJfaXNGbG9hdGluZyIsImluc3RhbmNlIiwicmV2ZXJ0aW5nIiwiX3JlZnJlc2hJdGVtcyIsIl9yZW1vdmVDdXJyZW50c0Zyb21JdGVtcyIsImN1cnJlbnRDb250YWluZXIiLCJkb21Qb3NpdGlvbiIsIl9jcmVhdGVQbGFjZWhvbGRlciIsInN0b3JlZEN1cnNvciIsInN0b3JlZFN0eWxlc2hlZXQiLCJfc3RvcmVkT3BhY2l0eSIsIl9zdG9yZWRaSW5kZXgiLCJfcHJlc2VydmVIZWxwZXJQcm9wb3J0aW9ucyIsImNvbnRhaW5lcnMiLCJkcmFnZ2luZyIsImxhc3RQb3NpdGlvbkFicyIsIl9pbnRlcnNlY3RzV2l0aFBvaW50ZXIiLCJfaW50ZXJzZWN0c1dpdGhTaWRlcyIsIl9yZWFycmFuZ2UiLCJfY29udGFjdENvbnRhaW5lcnMiLCJfbm9GaW5hbFNvcnQiLCJfZ2V0SXRlbXNBc2pRdWVyeSIsImNvbm5lY3RlZCIsImF0dHJpYnV0ZSIsImZvcmNlUG9pbnRlckZvckNvbnRhaW5lcnMiLCJmbG9hdGluZyIsIl9nZXREcmFnVmVydGljYWxEaXJlY3Rpb24iLCJfZ2V0RHJhZ0hvcml6b250YWxEaXJlY3Rpb24iLCJfY29ubmVjdFdpdGgiLCJ0b2xlcmFuY2VFbGVtZW50IiwicmVmcmVzaENvbnRhaW5lcnMiLCJfY3JlYXRlVHJQbGFjZWhvbGRlciIsImNvdW50ZXIiLCJzZW5kZXIiLCJjdWx0dXJlIiwiaW5jcmVtZW50YWwiLCJudW1iZXJGb3JtYXQiLCJwYWdlIiwic3BpbiIsIl9kcmF3IiwiX2V2ZW50cyIsIm1vdXNld2hlZWwiLCJzcGlubmluZyIsIl9zcGluIiwibW91c2V3aGVlbFRpbWVyIiwiX3JlcGVhdCIsInVpU3Bpbm5lciIsIl9hZGp1c3RWYWx1ZSIsIl9pbmNyZW1lbnQiLCJfcGFyc2UiLCJfZm9ybWF0IiwiR2xvYmFsaXplIiwic3RlcFVwIiwiX3N0ZXBVcCIsInN0ZXBEb3duIiwiX3N0ZXBEb3duIiwicGFnZVVwIiwicGFnZURvd24iLCJfdWlTcGlubmVySHRtbCIsIl9idXR0b25IdG1sIiwiYmVmb3JlTG9hZCIsIl9pc0xvY2FsIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicnVubmluZyIsIl9wcm9jZXNzVGFicyIsIl9pbml0aWFsQWN0aXZlIiwidGFicyIsImFuY2hvcnMiLCJfZ2V0UGFuZWxGb3JUYWIiLCJfdGFiS2V5ZG93biIsIl9oYW5kbGVQYWdlTmF2IiwiYWN0aXZhdGluZyIsIl9mb2N1c05leHRUYWIiLCJfcGFuZWxLZXlkb3duIiwiX2ZpbmROZXh0VGFiIiwiX3NldHVwSGVpZ2h0U3R5bGUiLCJfc2FuaXRpemVTZWxlY3RvciIsInRhYmxpc3QiLCJfZ2V0TGlzdCIsIl9jcmVhdGVQYW5lbCIsIm9sZFRhYiIsIm5ld1RhYiIsIl9nZXRJbmRleCIsIl9hamF4U2V0dGluZ3MiLCJ0cmFjayIsIl9hZGREZXNjcmliZWRCeSIsIl9yZW1vdmVEZXNjcmliZWRCeSIsIm1vdXNlb3ZlciIsInRvb2x0aXBzIiwiZGlzYWJsZWRUaXRsZXMiLCJfdXBkYXRlQ29udGVudCIsIl9kaXNhYmxlIiwiX2VuYWJsZSIsIl9yZWdpc3RlckNsb3NlSGFuZGxlcnMiLCJfZmluZCIsInRvb2x0aXAiLCJfdG9vbHRpcCIsIm1vdXNlbW92ZSIsImRlbGF5ZWRTaG93Iiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiX3JlbW92ZVRvb2x0aXAiLCJjbG9zaW5nIiwiaGlkaW5nIiwidG9vbHRpcENsYXNzIiwidmFsaWRhdGUiLCJ2YWxpZGF0b3IiLCJvbnN1Ym1pdCIsInN1Ym1pdEJ1dHRvbiIsImNhbmNlbFN1Ym1pdCIsInN1Ym1pdEhhbmRsZXIiLCJmb3JtU3VibWl0dGVkIiwiY3VycmVudEZvcm0iLCJkZWJ1ZyIsInBlbmRpbmdSZXF1ZXN0IiwiZm9jdXNJbnZhbGlkIiwidmFsaWQiLCJlcnJvckxpc3QiLCJydWxlcyIsInN0YXRpY1J1bGVzIiwibm9ybWFsaXplUnVsZSIsIm5vcm1hbGl6ZVJ1bGVzIiwiY2xhc3NSdWxlcyIsImF0dHJpYnV0ZVJ1bGVzIiwiZGF0YVJ1bGVzIiwicmVxdWlyZWQiLCJyZW1vdGUiLCJibGFuayIsImZpbGxlZCIsInVuY2hlY2tlZCIsImRlZmF1bHRzIiwiZXJyb3JDbGFzcyIsInBlbmRpbmdDbGFzcyIsInZhbGlkQ2xhc3MiLCJlcnJvckVsZW1lbnQiLCJmb2N1c0NsZWFudXAiLCJlcnJvckNvbnRhaW5lciIsImVycm9yTGFiZWxDb250YWluZXIiLCJpZ25vcmUiLCJpZ25vcmVUaXRsZSIsIm9uZm9jdXNpbiIsImxhc3RBY3RpdmUiLCJ1bmhpZ2hsaWdodCIsImhpZGVUaGVzZSIsImVycm9yc0ZvciIsIm9uZm9jdXNvdXQiLCJjaGVja2FibGUiLCJzdWJtaXR0ZWQiLCJvcHRpb25hbCIsIm9ua2V5dXAiLCJlbGVtZW50VmFsdWUiLCJpbnZhbGlkIiwib25jbGljayIsImhpZ2hsaWdodCIsImZpbmRCeU5hbWUiLCJkYXRlIiwiZGF0ZUlTTyIsIm51bWJlciIsImRpZ2l0cyIsImVxdWFsVG8iLCJtYXhsZW5ndGgiLCJtaW5sZW5ndGgiLCJyYW5nZWxlbmd0aCIsImF1dG9DcmVhdGVSYW5nZXMiLCJsYWJlbENvbnRhaW5lciIsImVycm9yQ29udGV4dCIsInZhbHVlQ2FjaGUiLCJpbnZhbGlkSGFuZGxlciIsImNoZWNrRm9ybSIsImVycm9yTWFwIiwic2hvd0Vycm9ycyIsInByZXBhcmVGb3JtIiwiY3VycmVudEVsZW1lbnRzIiwiY2xlYW4iLCJ2YWxpZGF0aW9uVGFyZ2V0Rm9yIiwicHJlcGFyZUVsZW1lbnQiLCJudW1iZXJPZkludmFsaWRzIiwidG9IaWRlIiwic3VjY2Vzc0xpc3QiLCJkZWZhdWx0U2hvd0Vycm9ycyIsInJlc2V0Rm9ybSIsImhpZGVFcnJvcnMiLCJyZXNldEVsZW1lbnRzIiwib2JqZWN0TGVuZ3RoIiwiYWRkV3JhcHBlciIsImZpbmRMYXN0QWN0aXZlIiwiZXJyb3JzIiwicmVzZXRJbnRlcm5hbHMiLCJ0b1Nob3ciLCJ2YWxpZGl0eSIsImJhZElucHV0IiwibGFzdEluZGV4T2YiLCJub3JtYWxpemVyIiwicGFyYW1ldGVycyIsIm1ldGhvZHMiLCJmb3JtYXRBbmRBZGQiLCJjdXN0b21EYXRhTWVzc2FnZSIsImN1c3RvbU1lc3NhZ2UiLCJmaW5kRGVmaW5lZCIsImRlZmF1bHRNZXNzYWdlIiwid3JhcHBlciIsInZhbGlkRWxlbWVudHMiLCJpbnZhbGlkRWxlbWVudHMiLCJpZE9yTmFtZSIsImVycm9yUGxhY2VtZW50IiwiZXNjYXBlQ3NzTWV0YSIsImdldExlbmd0aCIsImRlcGVuZCIsImRlcGVuZFR5cGVzIiwic3RhcnRSZXF1ZXN0Iiwic3RvcFJlcXVlc3QiLCJwcmV2aW91c1ZhbHVlIiwiY2xhc3NSdWxlU2V0dGluZ3MiLCJjcmVkaXRjYXJkIiwiYWRkQ2xhc3NSdWxlcyIsIm5vcm1hbGl6ZUF0dHJpYnV0ZVJ1bGUiLCJkZXBlbmRzIiwiYWRkTWV0aG9kIiwib3JpZ2luYWxNZXNzYWdlIiwicG9ydCIsImFwcGxpY2F0aW9uU3RhdGUiLCJkZWZhdWx0QWNjb3VudFBhZ2VTdGF0ZSIsInJlZ2lzdGVyQWNjb3VudFBhZ2VTdGF0ZSIsInRvZ2dsZUFjY291bnRMaW5rU3RhdGUiLCJsb2dpbkFjY291bnRQYWdlU3RhdGUiLCJjYWxsZWQiLCJjb21tYW5kIiwiZXhpc3RpbmdSdWxlcyIsImZpbHRlcmVkIiwiaXNDb250ZW50RWRpdGFibGUiLCJldmVudFR5cGUiLCJycyIsImdyb3VwIiwiY2xlYW5FbGVtZW50IiwiY2hlY2tFbGVtZW50IiwidGVzdGdyb3VwIiwicnVsZXNDYWNoZSIsInJ1bGUiLCJydWxlc0NvdW50IiwiZGVwZW5kZW5jeU1pc21hdGNoIiwidGhlcmVnZXgiLCJ0b1RvZ2dsZSIsInBsYWNlIiwiZXJyb3JJRCIsImVsZW1lbnRJRCIsImRlc2NyaWJlZEJ5IiwiZGVzY3JpYmVyIiwia2VlcFJ1bGUiLCJwYXJhbWV0ZXIiLCJ0cmFuc2Zvcm1lZCIsImRlY2ltYWxzIiwiZXJyb3JNZXNzYWdlIiwiZGVjaW1hbFBsYWNlcyIsInRvSW50Iiwib3B0aW9uRGF0YVN0cmluZyIsInBlbmRpbmdSZXF1ZXN0cyIsImhhZFJ1bnRpbWUiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJvbGRSdW50aW1lIiwiT3AiLCIkU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsInRvU3RyaW5nVGFnU3ltYm9sIiwiaW5Nb2R1bGUiLCJydW50aW1lIiwiR2VuU3RhdGVTdXNwZW5kZWRTdGFydCIsIkdlblN0YXRlU3VzcGVuZGVkWWllbGQiLCJHZW5TdGF0ZUV4ZWN1dGluZyIsIkdlblN0YXRlQ29tcGxldGVkIiwiQ29udGludWVTZW50aW5lbCIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUiLCJHcCIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiR2VuZXJhdG9yIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJtYXJrIiwiX19wcm90b19fIiwiYXdyYXAiLCJfX2F3YWl0IiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiQXN5bmNJdGVyYXRvciIsImlubmVyRm4iLCJvdXRlckZuIiwidHJ5TG9jc0xpc3QiLCJpdGVyIiwiQ29udGV4dCIsInNraXBUZW1wUmVzZXQiLCJzZW50IiwiX3NlbnQiLCJ0cnlFbnRyaWVzIiwicmVzZXRUcnlFbnRyeSIsInJvb3RSZWNvcmQiLCJjb21wbGV0aW9uIiwicnZhbCIsImRpc3BhdGNoRXhjZXB0aW9uIiwiZXhjZXB0aW9uIiwibG9jIiwiY2F1Z2h0IiwicmVjb3JkIiwiZW50cnkiLCJ0cnlMb2MiLCJoYXNDYXRjaCIsImhhc0ZpbmFsbHkiLCJjYXRjaExvYyIsImZpbmFsbHlMb2MiLCJhYnJ1cHQiLCJmaW5hbGx5RW50cnkiLCJhZnRlckxvYyIsInRocm93biIsImRlbGVnYXRlWWllbGQiLCJpdGVyYWJsZSIsInJlc3VsdE5hbWUiLCJuZXh0TG9jIiwicHJvdG9HZW5lcmF0b3IiLCJnZW5lcmF0b3IiLCJfaW52b2tlIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInRyeUNhdGNoIiwibWFrZUludm9rZU1ldGhvZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiaW52b2tlIiwidW53cmFwcGVkIiwicmV0dXJuIiwiaW5mbyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJpdGVyYXRvck1ldGhvZCJdLCJtYXBwaW5ncyI6IjthQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMs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RUFHckIsU0FBU2IsRUFBUUYsR0FJZnp6RixLQUFLK3pGLFdBQWEsQ0FBQyxDQUFFVyxPQUFRLFNBQzdCakIsRUFBWWg5QyxRQUFRNC9DLEVBQWNyMkYsTUFDbENBLEtBQUtnVSxPQUFNLEdBOEJiLFNBQVNtUCxFQUFPaXlFLEdBQ2QsR0FBSUEsRUFBVSxDQUNaLElBQUltQixFQUFpQm5CLEVBQVN2RCxHQUM5QixHQUFJMEUsRUFDRixPQUFPQSxFQUFlMTRGLEtBQUt1M0YsR0FHN0IsR0FBNkIsbUJBQWxCQSxFQUFTcHFGLEtBQ2xCLE9BQU9vcUYsRUFHVCxJQUFLM3RELE1BQU0ydEQsRUFBU3R5RixRQUFTLENBQzNCLElBQUlwRixHQUFLLEVBQUdzTixFQUFPLFNBQVNBLElBQzFCLE9BQVN0TixFQUFJMDNGLEVBQVN0eUYsUUFDcEIsR0FBSW5DLEVBQU85QyxLQUFLdTNGLEVBQVUxM0YsR0FHeEIsT0FGQXNOLEVBQUtyTSxNQUFReTJGLEVBQVMxM0YsR0FDdEJzTixFQUFLbEQsTUFBTyxFQUNMa0QsRUFPWCxPQUhBQSxFQUFLck0sTUFBUXFHLEVBQ2JnRyxFQUFLbEQsTUFBTyxFQUVMa0QsR0FHVCxPQUFPQSxFQUFLQSxLQUFPQSxHQUt2QixNQUFPLENBQUVBLEtBQU0wcUYsR0FJakIsU0FBU0EsSUFDUCxNQUFPLENBQUUvMkYsTUFBT3FHLEVBQVc4QyxNQUFNLElBaGdCcEMsQ0E4c0JDLFdBQWMsT0FBTzlILEtBQXJCLElBQWtDd29DLFNBQVMsY0FBVEEsSyIsImZpbGUiOiJjbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNSk7XG4iLCIvKiFcbiAqIGpRdWVyeSBKYXZhU2NyaXB0IExpYnJhcnkgdjMuNC4xXG4gKiBodHRwczovL2pxdWVyeS5jb20vXG4gKlxuICogSW5jbHVkZXMgU2l6emxlLmpzXG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHBzOi8vanF1ZXJ5Lm9yZy9saWNlbnNlXG4gKlxuICogRGF0ZTogMjAxOS0wNS0wMVQyMTowNFpcbiAqL1xuKCBmdW5jdGlvbiggZ2xvYmFsLCBmYWN0b3J5ICkge1xuXG5cdFwidXNlIHN0cmljdFwiO1xuXG5cdGlmICggdHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyBGb3IgQ29tbW9uSlMgYW5kIENvbW1vbkpTLWxpa2UgZW52aXJvbm1lbnRzIHdoZXJlIGEgcHJvcGVyIGB3aW5kb3dgXG5cdFx0Ly8gaXMgcHJlc2VudCwgZXhlY3V0ZSB0aGUgZmFjdG9yeSBhbmQgZ2V0IGpRdWVyeS5cblx0XHQvLyBGb3IgZW52aXJvbm1lbnRzIHRoYXQgZG8gbm90IGhhdmUgYSBgd2luZG93YCB3aXRoIGEgYGRvY3VtZW50YFxuXHRcdC8vIChzdWNoIGFzIE5vZGUuanMpLCBleHBvc2UgYSBmYWN0b3J5IGFzIG1vZHVsZS5leHBvcnRzLlxuXHRcdC8vIFRoaXMgYWNjZW50dWF0ZXMgdGhlIG5lZWQgZm9yIHRoZSBjcmVhdGlvbiBvZiBhIHJlYWwgYHdpbmRvd2AuXG5cdFx0Ly8gZS5nLiB2YXIgalF1ZXJ5ID0gcmVxdWlyZShcImpxdWVyeVwiKSh3aW5kb3cpO1xuXHRcdC8vIFNlZSB0aWNrZXQgIzE0NTQ5IGZvciBtb3JlIGluZm8uXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgP1xuXHRcdFx0ZmFjdG9yeSggZ2xvYmFsLCB0cnVlICkgOlxuXHRcdFx0ZnVuY3Rpb24oIHcgKSB7XG5cdFx0XHRcdGlmICggIXcuZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgbmV3IEVycm9yKCBcImpRdWVyeSByZXF1aXJlcyBhIHdpbmRvdyB3aXRoIGEgZG9jdW1lbnRcIiApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBmYWN0b3J5KCB3ICk7XG5cdFx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdGZhY3RvcnkoIGdsb2JhbCApO1xuXHR9XG5cbi8vIFBhc3MgdGhpcyBpZiB3aW5kb3cgaXMgbm90IGRlZmluZWQgeWV0XG59ICkoIHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgPyB3aW5kb3cgOiB0aGlzLCBmdW5jdGlvbiggd2luZG93LCBub0dsb2JhbCApIHtcblxuLy8gRWRnZSA8PSAxMiAtIDEzKywgRmlyZWZveCA8PTE4IC0gNDUrLCBJRSAxMCAtIDExLCBTYWZhcmkgNS4xIC0gOSssIGlPUyA2IC0gOS4xXG4vLyB0aHJvdyBleGNlcHRpb25zIHdoZW4gbm9uLXN0cmljdCBjb2RlIChlLmcuLCBBU1AuTkVUIDQuNSkgYWNjZXNzZXMgc3RyaWN0IG1vZGVcbi8vIGFyZ3VtZW50cy5jYWxsZWUuY2FsbGVyICh0cmFjLTEzMzM1KS4gQnV0IGFzIG9mIGpRdWVyeSAzLjAgKDIwMTYpLCBzdHJpY3QgbW9kZSBzaG91bGQgYmUgY29tbW9uXG4vLyBlbm91Z2ggdGhhdCBhbGwgc3VjaCBhdHRlbXB0cyBhcmUgZ3VhcmRlZCBpbiBhIHRyeSBibG9jay5cblwidXNlIHN0cmljdFwiO1xuXG52YXIgYXJyID0gW107XG5cbnZhciBkb2N1bWVudCA9IHdpbmRvdy5kb2N1bWVudDtcblxudmFyIGdldFByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuXG52YXIgc2xpY2UgPSBhcnIuc2xpY2U7XG5cbnZhciBjb25jYXQgPSBhcnIuY29uY2F0O1xuXG52YXIgcHVzaCA9IGFyci5wdXNoO1xuXG52YXIgaW5kZXhPZiA9IGFyci5pbmRleE9mO1xuXG52YXIgY2xhc3MydHlwZSA9IHt9O1xuXG52YXIgdG9TdHJpbmcgPSBjbGFzczJ0eXBlLnRvU3RyaW5nO1xuXG52YXIgaGFzT3duID0gY2xhc3MydHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxudmFyIGZuVG9TdHJpbmcgPSBoYXNPd24udG9TdHJpbmc7XG5cbnZhciBPYmplY3RGdW5jdGlvblN0cmluZyA9IGZuVG9TdHJpbmcuY2FsbCggT2JqZWN0ICk7XG5cbnZhciBzdXBwb3J0ID0ge307XG5cbnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gaXNGdW5jdGlvbiggb2JqICkge1xuXG4gICAgICAvLyBTdXBwb3J0OiBDaHJvbWUgPD01NywgRmlyZWZveCA8PTUyXG4gICAgICAvLyBJbiBzb21lIGJyb3dzZXJzLCB0eXBlb2YgcmV0dXJucyBcImZ1bmN0aW9uXCIgZm9yIEhUTUwgPG9iamVjdD4gZWxlbWVudHNcbiAgICAgIC8vIChpLmUuLCBgdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib2JqZWN0XCIgKSA9PT0gXCJmdW5jdGlvblwiYCkuXG4gICAgICAvLyBXZSBkb24ndCB3YW50IHRvIGNsYXNzaWZ5ICphbnkqIERPTSBub2RlIGFzIGEgZnVuY3Rpb24uXG4gICAgICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiICYmIHR5cGVvZiBvYmoubm9kZVR5cGUgIT09IFwibnVtYmVyXCI7XG4gIH07XG5cblxudmFyIGlzV2luZG93ID0gZnVuY3Rpb24gaXNXaW5kb3coIG9iaiApIHtcblx0XHRyZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqID09PSBvYmoud2luZG93O1xuXHR9O1xuXG5cblxuXG5cdHZhciBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzID0ge1xuXHRcdHR5cGU6IHRydWUsXG5cdFx0c3JjOiB0cnVlLFxuXHRcdG5vbmNlOiB0cnVlLFxuXHRcdG5vTW9kdWxlOiB0cnVlXG5cdH07XG5cblx0ZnVuY3Rpb24gRE9NRXZhbCggY29kZSwgbm9kZSwgZG9jICkge1xuXHRcdGRvYyA9IGRvYyB8fCBkb2N1bWVudDtcblxuXHRcdHZhciBpLCB2YWwsXG5cdFx0XHRzY3JpcHQgPSBkb2MuY3JlYXRlRWxlbWVudCggXCJzY3JpcHRcIiApO1xuXG5cdFx0c2NyaXB0LnRleHQgPSBjb2RlO1xuXHRcdGlmICggbm9kZSApIHtcblx0XHRcdGZvciAoIGkgaW4gcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDY0KywgRWRnZSAxOCtcblx0XHRcdFx0Ly8gU29tZSBicm93c2VycyBkb24ndCBzdXBwb3J0IHRoZSBcIm5vbmNlXCIgcHJvcGVydHkgb24gc2NyaXB0cy5cblx0XHRcdFx0Ly8gT24gdGhlIG90aGVyIGhhbmQsIGp1c3QgdXNpbmcgYGdldEF0dHJpYnV0ZWAgaXMgbm90IGVub3VnaCBhc1xuXHRcdFx0XHQvLyB0aGUgYG5vbmNlYCBhdHRyaWJ1dGUgaXMgcmVzZXQgdG8gYW4gZW1wdHkgc3RyaW5nIHdoZW5ldmVyIGl0XG5cdFx0XHRcdC8vIGJlY29tZXMgYnJvd3NpbmctY29udGV4dCBjb25uZWN0ZWQuXG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vd2hhdHdnL2h0bWwvaXNzdWVzLzIzNjlcblx0XHRcdFx0Ly8gU2VlIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI25vbmNlLWF0dHJpYnV0ZXNcblx0XHRcdFx0Ly8gVGhlIGBub2RlLmdldEF0dHJpYnV0ZWAgY2hlY2sgd2FzIGFkZGVkIGZvciB0aGUgc2FrZSBvZlxuXHRcdFx0XHQvLyBgalF1ZXJ5Lmdsb2JhbEV2YWxgIHNvIHRoYXQgaXQgY2FuIGZha2UgYSBub25jZS1jb250YWluaW5nIG5vZGVcblx0XHRcdFx0Ly8gdmlhIGFuIG9iamVjdC5cblx0XHRcdFx0dmFsID0gbm9kZVsgaSBdIHx8IG5vZGUuZ2V0QXR0cmlidXRlICYmIG5vZGUuZ2V0QXR0cmlidXRlKCBpICk7XG5cdFx0XHRcdGlmICggdmFsICkge1xuXHRcdFx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoIGksIHZhbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGRvYy5oZWFkLmFwcGVuZENoaWxkKCBzY3JpcHQgKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHQgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIHRvVHlwZSggb2JqICkge1xuXHRpZiAoIG9iaiA9PSBudWxsICkge1xuXHRcdHJldHVybiBvYmogKyBcIlwiO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5IChmdW5jdGlvbmlzaCBSZWdFeHApXG5cdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XG5cdFx0Y2xhc3MydHlwZVsgdG9TdHJpbmcuY2FsbCggb2JqICkgXSB8fCBcIm9iamVjdFwiIDpcblx0XHR0eXBlb2Ygb2JqO1xufVxuLyogZ2xvYmFsIFN5bWJvbCAqL1xuLy8gRGVmaW5pbmcgdGhpcyBnbG9iYWwgaW4gLmVzbGludHJjLmpzb24gd291bGQgY3JlYXRlIGEgZGFuZ2VyIG9mIHVzaW5nIHRoZSBnbG9iYWxcbi8vIHVuZ3VhcmRlZCBpbiBhbm90aGVyIHBsYWNlLCBpdCBzZWVtcyBzYWZlciB0byBkZWZpbmUgZ2xvYmFsIG9ubHkgZm9yIHRoaXMgbW9kdWxlXG5cblxuXG52YXJcblx0dmVyc2lvbiA9IFwiMy40LjFcIixcblxuXHQvLyBEZWZpbmUgYSBsb2NhbCBjb3B5IG9mIGpRdWVyeVxuXHRqUXVlcnkgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cblx0XHQvLyBUaGUgalF1ZXJ5IG9iamVjdCBpcyBhY3R1YWxseSBqdXN0IHRoZSBpbml0IGNvbnN0cnVjdG9yICdlbmhhbmNlZCdcblx0XHQvLyBOZWVkIGluaXQgaWYgalF1ZXJ5IGlzIGNhbGxlZCAoanVzdCBhbGxvdyBlcnJvciB0byBiZSB0aHJvd24gaWYgbm90IGluY2x1ZGVkKVxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB3ZSB0cmltIEJPTSBhbmQgTkJTUFxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZztcblxualF1ZXJ5LmZuID0galF1ZXJ5LnByb3RvdHlwZSA9IHtcblxuXHQvLyBUaGUgY3VycmVudCB2ZXJzaW9uIG9mIGpRdWVyeSBiZWluZyB1c2VkXG5cdGpxdWVyeTogdmVyc2lvbixcblxuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LFxuXG5cdC8vIFRoZSBkZWZhdWx0IGxlbmd0aCBvZiBhIGpRdWVyeSBvYmplY3QgaXMgMFxuXHRsZW5ndGg6IDAsXG5cblx0dG9BcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTtcblx0fSxcblxuXHQvLyBHZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0IE9SXG5cdC8vIEdldCB0aGUgd2hvbGUgbWF0Y2hlZCBlbGVtZW50IHNldCBhcyBhIGNsZWFuIGFycmF5XG5cdGdldDogZnVuY3Rpb24oIG51bSApIHtcblxuXHRcdC8vIFJldHVybiBhbGwgdGhlIGVsZW1lbnRzIGluIGEgY2xlYW4gYXJyYXlcblx0XHRpZiAoIG51bSA9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4ganVzdCB0aGUgb25lIGVsZW1lbnQgZnJvbSB0aGUgc2V0XG5cdFx0cmV0dXJuIG51bSA8IDAgPyB0aGlzWyBudW0gKyB0aGlzLmxlbmd0aCBdIDogdGhpc1sgbnVtIF07XG5cdH0sXG5cblx0Ly8gVGFrZSBhbiBhcnJheSBvZiBlbGVtZW50cyBhbmQgcHVzaCBpdCBvbnRvIHRoZSBzdGFja1xuXHQvLyAocmV0dXJuaW5nIHRoZSBuZXcgbWF0Y2hlZCBlbGVtZW50IHNldClcblx0cHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cblx0XHQvLyBCdWlsZCBhIG5ldyBqUXVlcnkgbWF0Y2hlZCBlbGVtZW50IHNldFxuXHRcdHZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTtcblxuXHRcdC8vIEFkZCB0aGUgb2xkIG9iamVjdCBvbnRvIHRoZSBzdGFjayAoYXMgYSByZWZlcmVuY2UpXG5cdFx0cmV0LnByZXZPYmplY3QgPSB0aGlzO1xuXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdC8vIEV4ZWN1dGUgYSBjYWxsYmFjayBmb3IgZXZlcnkgZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBzZXQuXG5cdGVhY2g6IGZ1bmN0aW9uKCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XG5cdH0sXG5cblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkubWFwKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiBjYWxsYmFjay5jYWxsKCBlbGVtLCBpLCBlbGVtICk7XG5cdFx0fSApICk7XG5cdH0sXG5cblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggc2xpY2UuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApICk7XG5cdH0sXG5cblx0Zmlyc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAwICk7XG5cdH0sXG5cblx0bGFzdDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XG5cdH0sXG5cblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xuXHRcdHZhciBsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdGogPSAraSArICggaSA8IDAgPyBsZW4gOiAwICk7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xuXHR9LFxuXG5cdGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMucHJldk9iamVjdCB8fCB0aGlzLmNvbnN0cnVjdG9yKCk7XG5cdH0sXG5cblx0Ly8gRm9yIGludGVybmFsIHVzZSBvbmx5LlxuXHQvLyBCZWhhdmVzIGxpa2UgYW4gQXJyYXkncyBtZXRob2QsIG5vdCBsaWtlIGEgalF1ZXJ5IG1ldGhvZC5cblx0cHVzaDogcHVzaCxcblx0c29ydDogYXJyLnNvcnQsXG5cdHNwbGljZTogYXJyLnNwbGljZVxufTtcblxualF1ZXJ5LmV4dGVuZCA9IGpRdWVyeS5mbi5leHRlbmQgPSBmdW5jdGlvbigpIHtcblx0dmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgMCBdIHx8IHt9LFxuXHRcdGkgPSAxLFxuXHRcdGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cdFx0ZGVlcCA9IGZhbHNlO1xuXG5cdC8vIEhhbmRsZSBhIGRlZXAgY29weSBzaXR1YXRpb25cblx0aWYgKCB0eXBlb2YgdGFyZ2V0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRkZWVwID0gdGFyZ2V0O1xuXG5cdFx0Ly8gU2tpcCB0aGUgYm9vbGVhbiBhbmQgdGhlIHRhcmdldFxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgaSBdIHx8IHt9O1xuXHRcdGkrKztcblx0fVxuXG5cdC8vIEhhbmRsZSBjYXNlIHdoZW4gdGFyZ2V0IGlzIGEgc3RyaW5nIG9yIHNvbWV0aGluZyAocG9zc2libGUgaW4gZGVlcCBjb3B5KVxuXHRpZiAoIHR5cGVvZiB0YXJnZXQgIT09IFwib2JqZWN0XCIgJiYgIWlzRnVuY3Rpb24oIHRhcmdldCApICkge1xuXHRcdHRhcmdldCA9IHt9O1xuXHR9XG5cblx0Ly8gRXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkXG5cdGlmICggaSA9PT0gbGVuZ3RoICkge1xuXHRcdHRhcmdldCA9IHRoaXM7XG5cdFx0aS0tO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cblx0XHQvLyBPbmx5IGRlYWwgd2l0aCBub24tbnVsbC91bmRlZmluZWQgdmFsdWVzXG5cdFx0aWYgKCAoIG9wdGlvbnMgPSBhcmd1bWVudHNbIGkgXSApICE9IG51bGwgKSB7XG5cblx0XHRcdC8vIEV4dGVuZCB0aGUgYmFzZSBvYmplY3Rcblx0XHRcdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IE9iamVjdC5wcm90b3R5cGUgcG9sbHV0aW9uXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKCBuYW1lID09PSBcIl9fcHJvdG9fX1wiIHx8IHRhcmdldCA9PT0gY29weSApIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJlY3Vyc2UgaWYgd2UncmUgbWVyZ2luZyBwbGFpbiBvYmplY3RzIG9yIGFycmF5c1xuXHRcdFx0XHRpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb3B5ICkgfHxcblx0XHRcdFx0XHQoIGNvcHlJc0FycmF5ID0gQXJyYXkuaXNBcnJheSggY29weSApICkgKSApIHtcblx0XHRcdFx0XHRzcmMgPSB0YXJnZXRbIG5hbWUgXTtcblxuXHRcdFx0XHRcdC8vIEVuc3VyZSBwcm9wZXIgdHlwZSBmb3IgdGhlIHNvdXJjZSB2YWx1ZVxuXHRcdFx0XHRcdGlmICggY29weUlzQXJyYXkgJiYgIUFycmF5LmlzQXJyYXkoIHNyYyApICkge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBbXTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKCAhY29weUlzQXJyYXkgJiYgIWpRdWVyeS5pc1BsYWluT2JqZWN0KCBzcmMgKSApIHtcblx0XHRcdFx0XHRcdGNsb25lID0ge307XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApO1xuXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0fSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXG5cblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcblx0aXNSZWFkeTogdHJ1ZSxcblxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xuXHR9LFxuXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXG5cblx0aXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgcHJvdG8sIEN0b3I7XG5cblx0XHQvLyBEZXRlY3Qgb2J2aW91cyBuZWdhdGl2ZXNcblx0XHQvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBjYXRjaCBob3N0IG9iamVjdHNcblx0XHRpZiAoICFvYmogfHwgdG9TdHJpbmcuY2FsbCggb2JqICkgIT09IFwiW29iamVjdCBPYmplY3RdXCIgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cHJvdG8gPSBnZXRQcm90byggb2JqICk7XG5cblx0XHQvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluXG5cdFx0aWYgKCAhcHJvdG8gKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBPYmplY3RzIHdpdGggcHJvdG90eXBlIGFyZSBwbGFpbiBpZmYgdGhleSB3ZXJlIGNvbnN0cnVjdGVkIGJ5IGEgZ2xvYmFsIE9iamVjdCBmdW5jdGlvblxuXHRcdEN0b3IgPSBoYXNPd24uY2FsbCggcHJvdG8sIFwiY29uc3RydWN0b3JcIiApICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuXHRcdHJldHVybiB0eXBlb2YgQ3RvciA9PT0gXCJmdW5jdGlvblwiICYmIGZuVG9TdHJpbmcuY2FsbCggQ3RvciApID09PSBPYmplY3RGdW5jdGlvblN0cmluZztcblx0fSxcblxuXHRpc0VtcHR5T2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXHRcdHZhciBuYW1lO1xuXG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdC8vIEV2YWx1YXRlcyBhIHNjcmlwdCBpbiBhIGdsb2JhbCBjb250ZXh0XG5cdGdsb2JhbEV2YWw6IGZ1bmN0aW9uKCBjb2RlLCBvcHRpb25zICkge1xuXHRcdERPTUV2YWwoIGNvZGUsIHsgbm9uY2U6IG9wdGlvbnMgJiYgb3B0aW9ucy5ub25jZSB9ICk7XG5cdH0sXG5cblx0ZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGxlbmd0aCwgaSA9IDA7XG5cblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSApIHtcblx0XHRcdGxlbmd0aCA9IG9iai5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9iajtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcblx0dHJpbTogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XHRcIlwiIDpcblx0XHRcdCggdGV4dCArIFwiXCIgKS5yZXBsYWNlKCBydHJpbSwgXCJcIiApO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKCBcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sXCIuc3BsaXQoIFwiIFwiICksXG5mdW5jdGlvbiggaSwgbmFtZSApIHtcblx0Y2xhc3MydHlwZVsgXCJbb2JqZWN0IFwiICsgbmFtZSArIFwiXVwiIF0gPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59ICk7XG5cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKCBvYmogKSB7XG5cblx0Ly8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxuXHQvLyBgaW5gIGNoZWNrIHVzZWQgdG8gcHJldmVudCBKSVQgZXJyb3IgKGdoLTIxNDUpXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXG5cdHZhciBsZW5ndGggPSAhIW9iaiAmJiBcImxlbmd0aFwiIGluIG9iaiAmJiBvYmoubGVuZ3RoLFxuXHRcdHR5cGUgPSB0b1R5cGUoIG9iaiApO1xuXG5cdGlmICggaXNGdW5jdGlvbiggb2JqICkgfHwgaXNXaW5kb3coIG9iaiApICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHJldHVybiB0eXBlID09PSBcImFycmF5XCIgfHwgbGVuZ3RoID09PSAwIHx8XG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcbn1cbnZhciBTaXp6bGUgPVxuLyohXG4gKiBTaXp6bGUgQ1NTIFNlbGVjdG9yIEVuZ2luZSB2Mi4zLjRcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBKUyBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9qcy5mb3VuZGF0aW9uL1xuICpcbiAqIERhdGU6IDIwMTktMDQtMDhcbiAqL1xuKGZ1bmN0aW9uKCB3aW5kb3cgKSB7XG5cbnZhciBpLFxuXHRzdXBwb3J0LFxuXHRFeHByLFxuXHRnZXRUZXh0LFxuXHRpc1hNTCxcblx0dG9rZW5pemUsXG5cdGNvbXBpbGUsXG5cdHNlbGVjdCxcblx0b3V0ZXJtb3N0Q29udGV4dCxcblx0c29ydElucHV0LFxuXHRoYXNEdXBsaWNhdGUsXG5cblx0Ly8gTG9jYWwgZG9jdW1lbnQgdmFyc1xuXHRzZXREb2N1bWVudCxcblx0ZG9jdW1lbnQsXG5cdGRvY0VsZW0sXG5cdGRvY3VtZW50SXNIVE1MLFxuXHRyYnVnZ3lRU0EsXG5cdHJidWdneU1hdGNoZXMsXG5cdG1hdGNoZXMsXG5cdGNvbnRhaW5zLFxuXG5cdC8vIEluc3RhbmNlLXNwZWNpZmljIGRhdGFcblx0ZXhwYW5kbyA9IFwic2l6emxlXCIgKyAxICogbmV3IERhdGUoKSxcblx0cHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LFxuXHRkaXJydW5zID0gMCxcblx0ZG9uZSA9IDAsXG5cdGNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHR0b2tlbkNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0Y29tcGlsZXJDYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBJbnN0YW5jZSBtZXRob2RzXG5cdGhhc093biA9ICh7fSkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoX25hdGl2ZSA9IGFyci5wdXNoLFxuXHRwdXNoID0gYXJyLnB1c2gsXG5cdHNsaWNlID0gYXJyLnNsaWNlLFxuXHQvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmVcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI3ZhbHVlLWRlZi1pZGVudGlmaWVyXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcLnxbXFxcXHctXXxbXlxcMC1cXFxceGEwXSkrXCIsXG5cblx0Ly8gQXR0cmlidXRlIHNlbGVjdG9yczogaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNhdHRyaWJ1dGUtc2VsZWN0b3JzXG5cdGF0dHJpYnV0ZXMgPSBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFwiICsgaWRlbnRpZmllciArIFwiKSg/OlwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcblx0XHRcIiooWypeJHwhfl0/PSlcIiArIHdoaXRlc3BhY2UgK1xuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XSBvciBzdHJpbmdzIFtjYXB0dXJlIDMgb3IgY2FwdHVyZSA0XVwiXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlxcXFxdXCIsXG5cblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXG5cdFx0Ly8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRpbmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czpcblx0XHQvLyAxLiBxdW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSlcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxuXHRcdFwiLipcIiArXG5cdFx0XCIpXFxcXCl8KVwiLFxuXG5cdC8vIExlYWRpbmcgYW5kIG5vbi1lc2NhcGVkIHRyYWlsaW5nIHdoaXRlc3BhY2UsIGNhcHR1cmluZyBzb21lIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlcnMgcHJlY2VkaW5nIHRoZSBsYXR0ZXJcblx0cndoaXRlc3BhY2UgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCIrXCIsIFwiZ1wiICksXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICsgd2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcblxuXHRyY29tbWEgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiosXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cdHJkZXNjZW5kID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwifD5cIiApLFxuXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXG5cdHJpZGVudGlmaWVyID0gbmV3IFJlZ0V4cCggXCJeXCIgKyBpZGVudGlmaWVyICsgXCIkXCIgKSxcblxuXHRtYXRjaEV4cHIgPSB7XG5cdFx0XCJJRFwiOiBuZXcgUmVnRXhwKCBcIl4jKFwiICsgaWRlbnRpZmllciArIFwiKVwiICksXG5cdFx0XCJDTEFTU1wiOiBuZXcgUmVnRXhwKCBcIl5cXFxcLihcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcblx0XHRcIkFUVFJcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBhdHRyaWJ1dGVzICksXG5cdFx0XCJQU0VVRE9cIjogbmV3IFJlZ0V4cCggXCJeXCIgKyBwc2V1ZG9zICksXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcdFwiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86KFsrLV18KVwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooXFxcXGQrKXwpKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfClcIiwgXCJpXCIgKSxcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcblx0XHQvLyBGb3IgdXNlIGluIGxpYnJhcmllcyBpbXBsZW1lbnRpbmcgLmlzKClcblx0XHQvLyBXZSB1c2UgdGhpcyBmb3IgUE9TIG1hdGNoaW5nIGluIGBzZWxlY3RgXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcblx0XHRcdHdoaXRlc3BhY2UgKyBcIiooKD86LVxcXFxkKT9cXFxcZCopXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXCl8KSg/PVteLV18JClcIiwgXCJpXCIgKVxuXHR9LFxuXG5cdHJodG1sID0gL0hUTUwkL2ksXG5cdHJpbnB1dHMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyaGVhZGVyID0gL15oXFxkJC9pLFxuXG5cdHJuYXRpdmUgPSAvXltee10rXFx7XFxzKlxcW25hdGl2ZSBcXHcvLFxuXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xuXHRycXVpY2tFeHByID0gL14oPzojKFtcXHctXSspfChcXHcrKXxcXC4oW1xcdy1dKykpJC8sXG5cblx0cnNpYmxpbmcgPSAvWyt+XS8sXG5cblx0Ly8gQ1NTIGVzY2FwZXNcblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xuXHRydW5lc2NhcGUgPSBuZXcgUmVnRXhwKCBcIlxcXFxcXFxcKFtcXFxcZGEtZl17MSw2fVwiICsgd2hpdGVzcGFjZSArIFwiP3woXCIgKyB3aGl0ZXNwYWNlICsgXCIpfC4pXCIsIFwiaWdcIiApLFxuXHRmdW5lc2NhcGUgPSBmdW5jdGlvbiggXywgZXNjYXBlZCwgZXNjYXBlZFdoaXRlc3BhY2UgKSB7XG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcblx0XHQvLyBOYU4gbWVhbnMgbm9uLWNvZGVwb2ludFxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjRcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcblx0XHRyZXR1cm4gaGlnaCAhPT0gaGlnaCB8fCBlc2NhcGVkV2hpdGVzcGFjZSA/XG5cdFx0XHRlc2NhcGVkIDpcblx0XHRcdGhpZ2ggPCAwID9cblx0XHRcdFx0Ly8gQk1QIGNvZGVwb2ludFxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoICsgMHgxMDAwMCApIDpcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXG5cdFx0XHRcdFN0cmluZy5mcm9tQ2hhckNvZGUoIGhpZ2ggPj4gMTAgfCAweEQ4MDAsIGhpZ2ggJiAweDNGRiB8IDB4REMwMCApO1xuXHR9LFxuXG5cdC8vIENTUyBzdHJpbmcvaWRlbnRpZmllciBzZXJpYWxpemF0aW9uXG5cdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jY29tbW9uLXNlcmlhbGl6aW5nLWlkaW9tc1xuXHRyY3NzZXNjYXBlID0gLyhbXFwwLVxceDFmXFx4N2ZdfF4tP1xcZCl8Xi0kfFteXFwwLVxceDFmXFx4N2YtXFx1RkZGRlxcdy1dL2csXG5cdGZjc3Nlc2NhcGUgPSBmdW5jdGlvbiggY2gsIGFzQ29kZVBvaW50ICkge1xuXHRcdGlmICggYXNDb2RlUG9pbnQgKSB7XG5cblx0XHRcdC8vIFUrMDAwMCBOVUxMIGJlY29tZXMgVStGRkZEIFJFUExBQ0VNRU5UIENIQVJBQ1RFUlxuXHRcdFx0aWYgKCBjaCA9PT0gXCJcXDBcIiApIHtcblx0XHRcdFx0cmV0dXJuIFwiXFx1RkZGRFwiO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb250cm9sIGNoYXJhY3RlcnMgYW5kIChkZXBlbmRlbnQgdXBvbiBwb3NpdGlvbikgbnVtYmVycyBnZXQgZXNjYXBlZCBhcyBjb2RlIHBvaW50c1xuXHRcdFx0cmV0dXJuIGNoLnNsaWNlKCAwLCAtMSApICsgXCJcXFxcXCIgKyBjaC5jaGFyQ29kZUF0KCBjaC5sZW5ndGggLSAxICkudG9TdHJpbmcoIDE2ICkgKyBcIiBcIjtcblx0XHR9XG5cblx0XHQvLyBPdGhlciBwb3RlbnRpYWxseS1zcGVjaWFsIEFTQ0lJIGNoYXJhY3RlcnMgZ2V0IGJhY2tzbGFzaC1lc2NhcGVkXG5cdFx0cmV0dXJuIFwiXFxcXFwiICsgY2g7XG5cdH0sXG5cblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xuXHQvLyBTZWUgc2V0RG9jdW1lbnQoKVxuXHQvLyBSZW1vdmluZyB0aGUgZnVuY3Rpb24gd3JhcHBlciBjYXVzZXMgYSBcIlBlcm1pc3Npb24gRGVuaWVkXCJcblx0Ly8gZXJyb3IgaW4gSUVcblx0dW5sb2FkSGFuZGxlciA9IGZ1bmN0aW9uKCkge1xuXHRcdHNldERvY3VtZW50KCk7XG5cdH0sXG5cblx0aW5EaXNhYmxlZEZpZWxkc2V0ID0gYWRkQ29tYmluYXRvcihcblx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSB0cnVlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJmaWVsZHNldFwiO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkpLFxuXHRcdHByZWZlcnJlZERvYy5jaGlsZE5vZGVzXG5cdCk7XG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdC8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHlcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hfbmF0aXZlLmFwcGx5KCB0YXJnZXQsIHNsaWNlLmNhbGwoZWxzKSApO1xuXHRcdH0gOlxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICh0YXJnZXRbaisrXSA9IGVsc1tpKytdKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cblx0XHRpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkge1xuXHRcdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHR9XG5cdFx0Y29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7XG5cblx0XHRpZiAoIGRvY3VtZW50SXNIVE1MICkge1xuXG5cdFx0XHQvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgXCJnZXQqQnkqXCIgRE9NIG1ldGhvZFxuXHRcdFx0Ly8gKGV4Y2VwdGluZyBEb2N1bWVudEZyYWdtZW50IGNvbnRleHQsIHdoZXJlIHRoZSBtZXRob2RzIGRvbid0IGV4aXN0KVxuXHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMTEgJiYgKG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApKSApIHtcblxuXHRcdFx0XHQvLyBJRCBzZWxlY3RvclxuXHRcdFx0XHRpZiAoIChtID0gbWF0Y2hbMV0pICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9jdW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBFbGVtZW50IGNvbnRleHRcblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAmJiAoZWxlbSA9IG5ld0NvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsyXSApIHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdFx0Ly8gQ2xhc3Mgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggKG0gPSBtYXRjaFszXSkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDggb25seVxuXHRcdFx0XHQvLyBFeGNsdWRlIG9iamVjdCBlbGVtZW50c1xuXHRcdFx0XHQobm9kZVR5cGUgIT09IDEgfHwgY29udGV4dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSBcIm9iamVjdFwiKSApIHtcblxuXHRcdFx0XHRuZXdTZWxlY3RvciA9IHNlbGVjdG9yO1xuXHRcdFx0XHRuZXdDb250ZXh0ID0gY29udGV4dDtcblxuXHRcdFx0XHQvLyBxU0EgY29uc2lkZXJzIGVsZW1lbnRzIG91dHNpZGUgYSBzY29waW5nIHJvb3Qgd2hlbiBldmFsdWF0aW5nIGNoaWxkIG9yXG5cdFx0XHRcdC8vIGRlc2NlbmRhbnQgY29tYmluYXRvcnMsIHdoaWNoIGlzIG5vdCB3aGF0IHdlIHdhbnQuXG5cdFx0XHRcdC8vIEluIHN1Y2ggY2FzZXMsIHdlIHdvcmsgYXJvdW5kIHRoZSBiZWhhdmlvciBieSBwcmVmaXhpbmcgZXZlcnkgc2VsZWN0b3IgaW4gdGhlXG5cdFx0XHRcdC8vIGxpc3Qgd2l0aCBhbiBJRCBzZWxlY3RvciByZWZlcmVuY2luZyB0aGUgc2NvcGUgY29udGV4dC5cblx0XHRcdFx0Ly8gVGhhbmtzIHRvIEFuZHJldyBEdXBvbnQgZm9yIHRoaXMgdGVjaG5pcXVlLlxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSAxICYmIHJkZXNjZW5kLnRlc3QoIHNlbGVjdG9yICkgKSB7XG5cblx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdGlmICggKG5pZCA9IGNvbnRleHQuZ2V0QXR0cmlidXRlKCBcImlkXCIgKSkgKSB7XG5cdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb250ZXh0LnNldEF0dHJpYnV0ZSggXCJpZFwiLCAobmlkID0gZXhwYW5kbykgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3Rcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IFwiI1wiICsgbmlkICsgXCIgXCIgKyB0b1NlbGVjdG9yKCBncm91cHNbaV0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggXCIsXCIgKTtcblxuXHRcdFx0XHRcdC8vIEV4cGFuZCBjb250ZXh0IGZvciBzaWJsaW5nIHNlbGVjdG9yc1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cyxcblx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5yZW1vdmVBdHRyaWJ1dGUoIFwiaWRcIiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIEFsbCBvdGhlcnNcblx0cmV0dXJuIHNlbGVjdCggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICk7XG59XG5cbi8qKlxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oc3RyaW5nLCBvYmplY3QpfSBSZXR1cm5zIHRoZSBPYmplY3QgZGF0YSBhZnRlciBzdG9yaW5nIGl0IG9uIGl0c2VsZiB3aXRoXG4gKlx0cHJvcGVydHkgbmFtZSB0aGUgKHNwYWNlLXN1ZmZpeGVkKSBzdHJpbmcgYW5kIChpZiB0aGUgY2FjaGUgaXMgbGFyZ2VyIHRoYW4gRXhwci5jYWNoZUxlbmd0aClcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUNhY2hlKCkge1xuXHR2YXIga2V5cyA9IFtdO1xuXG5cdGZ1bmN0aW9uIGNhY2hlKCBrZXksIHZhbHVlICkge1xuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXG5cdFx0aWYgKCBrZXlzLnB1c2goIGtleSArIFwiIFwiICkgPiBFeHByLmNhY2hlTGVuZ3RoICkge1xuXHRcdFx0Ly8gT25seSBrZWVwIHRoZSBtb3N0IHJlY2VudCBlbnRyaWVzXG5cdFx0XHRkZWxldGUgY2FjaGVbIGtleXMuc2hpZnQoKSBdO1xuXHRcdH1cblx0XHRyZXR1cm4gKGNhY2hlWyBrZXkgKyBcIiBcIiBdID0gdmFsdWUpO1xuXHR9XG5cdHJldHVybiBjYWNoZTtcbn1cblxuLyoqXG4gKiBNYXJrIGEgZnVuY3Rpb24gZm9yIHNwZWNpYWwgdXNlIGJ5IFNpenpsZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcbiAqL1xuZnVuY3Rpb24gbWFya0Z1bmN0aW9uKCBmbiApIHtcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XG5cdHJldHVybiBmbjtcbn1cblxuLyoqXG4gKiBTdXBwb3J0IHRlc3RpbmcgdXNpbmcgYW4gZWxlbWVudFxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGVsZW1lbnQgYW5kIHJldHVybnMgYSBib29sZWFuIHJlc3VsdFxuICovXG5mdW5jdGlvbiBhc3NlcnQoIGZuICkge1xuXHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7XG5cblx0dHJ5IHtcblx0XHRyZXR1cm4gISFmbiggZWwgKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fSBmaW5hbGx5IHtcblx0XHQvLyBSZW1vdmUgZnJvbSBpdHMgcGFyZW50IGJ5IGRlZmF1bHRcblx0XHRpZiAoIGVsLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRlbC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBlbCApO1xuXHRcdH1cblx0XHQvLyByZWxlYXNlIG1lbW9yeSBpbiBJRVxuXHRcdGVsID0gbnVsbDtcblx0fVxufVxuXG4vKipcbiAqIEFkZHMgdGhlIHNhbWUgaGFuZGxlciBmb3IgYWxsIG9mIHRoZSBzcGVjaWZpZWQgYXR0cnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXIgVGhlIG1ldGhvZCB0aGF0IHdpbGwgYmUgYXBwbGllZFxuICovXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xuXHR2YXIgYXJyID0gYXR0cnMuc3BsaXQoXCJ8XCIpLFxuXHRcdGkgPSBhcnIubGVuZ3RoO1xuXG5cdHdoaWxlICggaS0tICkge1xuXHRcdEV4cHIuYXR0ckhhbmRsZVsgYXJyW2ldIF0gPSBoYW5kbGVyO1xuXHR9XG59XG5cbi8qKlxuICogQ2hlY2tzIGRvY3VtZW50IG9yZGVyIG9mIHR3byBzaWJsaW5nc1xuICogQHBhcmFtIHtFbGVtZW50fSBhXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcbiAqIEByZXR1cm5zIHtOdW1iZXJ9IFJldHVybnMgbGVzcyB0aGFuIDAgaWYgYSBwcmVjZWRlcyBiLCBncmVhdGVyIHRoYW4gMCBpZiBhIGZvbGxvd3MgYlxuICovXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XG5cdHZhciBjdXIgPSBiICYmIGEsXG5cdFx0ZGlmZiA9IGN1ciAmJiBhLm5vZGVUeXBlID09PSAxICYmIGIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdGEuc291cmNlSW5kZXggLSBiLnNvdXJjZUluZGV4O1xuXG5cdC8vIFVzZSBJRSBzb3VyY2VJbmRleCBpZiBhdmFpbGFibGUgb24gYm90aCBub2Rlc1xuXHRpZiAoIGRpZmYgKSB7XG5cdFx0cmV0dXJuIGRpZmY7XG5cdH1cblxuXHQvLyBDaGVjayBpZiBiIGZvbGxvd3MgYVxuXHRpZiAoIGN1ciApIHtcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIubmV4dFNpYmxpbmcpICkge1xuXHRcdFx0aWYgKCBjdXIgPT09IGIgKSB7XG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gYSA/IDEgOiAtMTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGlucHV0IHR5cGVzXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxuICovXG5mdW5jdGlvbiBjcmVhdGVJbnB1dFBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgYnV0dG9uc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlQnV0dG9uUHNldWRvKCB0eXBlICkge1xuXHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0cmV0dXJuIChuYW1lID09PSBcImlucHV0XCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIikgJiYgZWxlbS50eXBlID09PSB0eXBlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgOmVuYWJsZWQvOmRpc2FibGVkXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGRpc2FibGVkIHRydWUgZm9yIDpkaXNhYmxlZDsgZmFsc2UgZm9yIDplbmFibGVkXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZURpc2FibGVkUHNldWRvKCBkaXNhYmxlZCApIHtcblxuXHQvLyBLbm93biA6ZGlzYWJsZWQgZmFsc2UgcG9zaXRpdmVzOiBmaWVsZHNldFtkaXNhYmxlZF0gPiBsZWdlbmQ6bnRoLW9mLXR5cGUobisyKSA6Y2FuLWRpc2FibGVcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gT25seSBjZXJ0YWluIGVsZW1lbnRzIGNhbiBtYXRjaCA6ZW5hYmxlZCBvciA6ZGlzYWJsZWRcblx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9zY3JpcHRpbmcuaHRtbCNzZWxlY3Rvci1lbmFibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZGlzYWJsZWRcblx0XHRpZiAoIFwiZm9ybVwiIGluIGVsZW0gKSB7XG5cblx0XHRcdC8vIENoZWNrIGZvciBpbmhlcml0ZWQgZGlzYWJsZWRuZXNzIG9uIHJlbGV2YW50IG5vbi1kaXNhYmxlZCBlbGVtZW50czpcblx0XHRcdC8vICogbGlzdGVkIGZvcm0tYXNzb2NpYXRlZCBlbGVtZW50cyBpbiBhIGRpc2FibGVkIGZpZWxkc2V0XG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY2F0ZWdvcnktbGlzdGVkXG5cdFx0XHQvLyAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjY29uY2VwdC1mZS1kaXNhYmxlZFxuXHRcdFx0Ly8gKiBvcHRpb24gZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtb3B0aW9uLWRpc2FibGVkXG5cdFx0XHQvLyBBbGwgc3VjaCBlbGVtZW50cyBoYXZlIGEgXCJmb3JtXCIgcHJvcGVydHkuXG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSAmJiBlbGVtLmRpc2FibGVkID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHQvLyBPcHRpb24gZWxlbWVudHMgZGVmZXIgdG8gYSBwYXJlbnQgb3B0Z3JvdXAgaWYgcHJlc2VudFxuXHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0XHRcdGlmICggXCJsYWJlbFwiIGluIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtLnBhcmVudE5vZGUuZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgNiAtIDExXG5cdFx0XHRcdC8vIFVzZSB0aGUgaXNEaXNhYmxlZCBzaG9ydGN1dCBwcm9wZXJ0eSB0byBjaGVjayBmb3IgZGlzYWJsZWQgZmllbGRzZXQgYW5jZXN0b3JzXG5cdFx0XHRcdHJldHVybiBlbGVtLmlzRGlzYWJsZWQgPT09IGRpc2FibGVkIHx8XG5cblx0XHRcdFx0XHQvLyBXaGVyZSB0aGVyZSBpcyBubyBpc0Rpc2FibGVkLCBjaGVjayBtYW51YWxseVxuXHRcdFx0XHRcdC8qIGpzaGludCAtVzAxOCAqL1xuXHRcdFx0XHRcdGVsZW0uaXNEaXNhYmxlZCAhPT0gIWRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRpbkRpc2FibGVkRmllbGRzZXQoIGVsZW0gKSA9PT0gZGlzYWJsZWQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblxuXHRcdC8vIFRyeSB0byB3aW5ub3cgb3V0IGVsZW1lbnRzIHRoYXQgY2FuJ3QgYmUgZGlzYWJsZWQgYmVmb3JlIHRydXN0aW5nIHRoZSBkaXNhYmxlZCBwcm9wZXJ0eS5cblx0XHQvLyBTb21lIHZpY3RpbXMgZ2V0IGNhdWdodCBpbiBvdXIgbmV0IChsYWJlbCwgbGVnZW5kLCBtZW51LCB0cmFjayksIGJ1dCBpdCBzaG91bGRuJ3Rcblx0XHQvLyBldmVuIGV4aXN0IG9uIHRoZW0sIGxldCBhbG9uZSBoYXZlIGEgYm9vbGVhbiB2YWx1ZS5cblx0XHR9IGVsc2UgaWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHR9XG5cblx0XHQvLyBSZW1haW5pbmcgZWxlbWVudHMgYXJlIG5laXRoZXIgOmVuYWJsZWQgbm9yIDpkaXNhYmxlZFxuXHRcdHJldHVybiBmYWxzZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIHBvc2l0aW9uYWxzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmblxuICovXG5mdW5jdGlvbiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKCBmbiApIHtcblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggYXJndW1lbnQgKSB7XG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XG5cdFx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdHZhciBqLFxuXHRcdFx0XHRtYXRjaEluZGV4ZXMgPSBmbiggW10sIHNlZWQubGVuZ3RoLCBhcmd1bWVudCApLFxuXHRcdFx0XHRpID0gbWF0Y2hJbmRleGVzLmxlbmd0aDtcblxuXHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgZm91bmQgYXQgdGhlIHNwZWNpZmllZCBpbmRleGVzXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCBzZWVkWyAoaiA9IG1hdGNoSW5kZXhlc1tpXSkgXSApIHtcblx0XHRcdFx0XHRzZWVkW2pdID0gIShtYXRjaGVzW2pdID0gc2VlZFtqXSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblx0fSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGEgbm9kZSBmb3IgdmFsaWRpdHkgYXMgYSBTaXp6bGUgY29udGV4dFxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcbiAqIEByZXR1cm5zIHtFbGVtZW50fE9iamVjdHxCb29sZWFufSBUaGUgaW5wdXQgbm9kZSBpZiBhY2NlcHRhYmxlLCBvdGhlcndpc2UgYSBmYWxzeSB2YWx1ZVxuICovXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcblx0cmV0dXJuIGNvbnRleHQgJiYgdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29udGV4dDtcbn1cblxuLy8gRXhwb3NlIHN1cHBvcnQgdmFycyBmb3IgY29udmVuaWVuY2VcbnN1cHBvcnQgPSBTaXp6bGUuc3VwcG9ydCA9IHt9O1xuXG4vKipcbiAqIERldGVjdHMgWE1MIG5vZGVzXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxuICogQHJldHVybnMge0Jvb2xlYW59IFRydWUgaWZmIGVsZW0gaXMgYSBub24tSFRNTCBYTUwgbm9kZVxuICovXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbmFtZXNwYWNlID0gZWxlbS5uYW1lc3BhY2VVUkksXG5cdFx0ZG9jRWxlbSA9IChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OFxuXHQvLyBBc3N1bWUgSFRNTCB3aGVuIGRvY3VtZW50RWxlbWVudCBkb2Vzbid0IHlldCBleGlzdCwgc3VjaCBhcyBpbnNpZGUgbG9hZGluZyBpZnJhbWVzXG5cdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC80ODMzXG5cdHJldHVybiAhcmh0bWwudGVzdCggbmFtZXNwYWNlIHx8IGRvY0VsZW0gJiYgZG9jRWxlbS5ub2RlTmFtZSB8fCBcIkhUTUxcIiApO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPT0gZG9jdW1lbnQgJiZcblx0XHQoc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcpICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmNsYXNzTmFtZSA9IFwiaVwiO1xuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwiXCIpICk7XG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtbWF0aWNhbGx5LXNldCBuYW1lcyxcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0pO1xuXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gNyBvbmx5XG5cdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgaXMgbm90IHJlbGlhYmxlIGFzIGEgZmluZCBzaG9ydGN1dFxuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG5vZGUsIGksIGVsZW1zLFxuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXG5cdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXG5cdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1zW2krK10pICkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbXCJDTEFTU1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44K1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCI6Y2hlY2tlZFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcImhpZGRlblwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKS5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIkRcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEVuZm9yY2UgY2FzZS1zZW5zaXRpdml0eSBvZiBuYW1lIGF0dHJpYnV0ZVxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9KTtcblx0fVxuXG5cdHJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oXCJ8XCIpICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oXCJ8XCIpICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0aWYgKCBhID09PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGEpICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGIgPT09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYikgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblx0XHRcdHJldHVybiBhID09PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXHRcdGN1ciA9IGI7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwW2ldID09PSBicFtpXSApIHtcblx0XHRcdGkrKztcblx0XHR9XG5cblx0XHRyZXR1cm4gaSA/XG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3Rcblx0XHRcdGFwW2ldID09PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFtpXSA9PT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQwO1xuXHR9O1xuXG5cdHJldHVybiBkb2N1bWVudDtcbn07XG5cblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xuXHRyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBlbGVtZW50cyApO1xufTtcblxuU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBlbGVtLCBleHByICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHRpZiAoIHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yICYmIGRvY3VtZW50SXNIVE1MICYmXG5cdFx0IW5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGVbIGV4cHIgKyBcIiBcIiBdICYmXG5cdFx0KCAhcmJ1Z2d5TWF0Y2hlcyB8fCAhcmJ1Z2d5TWF0Y2hlcy50ZXN0KCBleHByICkgKSAmJlxuXHRcdCggIXJidWdneVFTQSAgICAgfHwgIXJidWdneVFTQS50ZXN0KCBleHByICkgKSApIHtcblxuXHRcdHRyeSB7XG5cdFx0XHR2YXIgcmV0ID0gbWF0Y2hlcy5jYWxsKCBlbGVtLCBleHByICk7XG5cblx0XHRcdC8vIElFIDkncyBtYXRjaGVzU2VsZWN0b3IgcmV0dXJucyBmYWxzZSBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRcdGlmICggcmV0IHx8IHN1cHBvcnQuZGlzY29ubmVjdGVkTWF0Y2ggfHxcblx0XHRcdFx0XHQvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudFxuXHRcdFx0XHRcdC8vIGZyYWdtZW50IGluIElFIDlcblx0XHRcdFx0XHRlbGVtLmRvY3VtZW50ICYmIGVsZW0uZG9jdW1lbnQubm9kZVR5cGUgIT09IDExICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXHRcdH0gY2F0Y2ggKGUpIHtcblx0XHRcdG5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUoIGV4cHIsIHRydWUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gU2l6emxlKCBleHByLCBkb2N1bWVudCwgbnVsbCwgWyBlbGVtIF0gKS5sZW5ndGggPiAwO1xufTtcblxuU2l6emxlLmNvbnRhaW5zID0gZnVuY3Rpb24oIGNvbnRleHQsIGVsZW0gKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0fVxuXHRyZXR1cm4gY29udGFpbnMoIGNvbnRleHQsIGVsZW0gKTtcbn07XG5cblNpenpsZS5hdHRyID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0fVxuXG5cdHZhciBmbiA9IEV4cHIuYXR0ckhhbmRsZVsgbmFtZS50b0xvd2VyQ2FzZSgpIF0sXG5cdFx0Ly8gRG9uJ3QgZ2V0IGZvb2xlZCBieSBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKGpRdWVyeSAjMTM4MDcpXG5cdFx0dmFsID0gZm4gJiYgaGFzT3duLmNhbGwoIEV4cHIuYXR0ckhhbmRsZSwgbmFtZS50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0Zm4oIGVsZW0sIG5hbWUsICFkb2N1bWVudElzSFRNTCApIDpcblx0XHRcdHVuZGVmaW5lZDtcblxuXHRyZXR1cm4gdmFsICE9PSB1bmRlZmluZWQgP1xuXHRcdHZhbCA6XG5cdFx0c3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApIDpcblx0XHRcdCh2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUobmFtZSkpICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xufTtcblxuU2l6emxlLmVzY2FwZSA9IGZ1bmN0aW9uKCBzZWwgKSB7XG5cdHJldHVybiAoc2VsICsgXCJcIikucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xufTtcblxuU2l6emxlLmVycm9yID0gZnVuY3Rpb24oIG1zZyApIHtcblx0dGhyb3cgbmV3IEVycm9yKCBcIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246IFwiICsgbXNnICk7XG59O1xuXG4vKipcbiAqIERvY3VtZW50IHNvcnRpbmcgYW5kIHJlbW92aW5nIGR1cGxpY2F0ZXNcbiAqIEBwYXJhbSB7QXJyYXlMaWtlfSByZXN1bHRzXG4gKi9cblNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24oIHJlc3VsdHMgKSB7XG5cdHZhciBlbGVtLFxuXHRcdGR1cGxpY2F0ZXMgPSBbXSxcblx0XHRqID0gMCxcblx0XHRpID0gMDtcblxuXHQvLyBVbmxlc3Mgd2UgKmtub3cqIHdlIGNhbiBkZXRlY3QgZHVwbGljYXRlcywgYXNzdW1lIHRoZWlyIHByZXNlbmNlXG5cdGhhc0R1cGxpY2F0ZSA9ICFzdXBwb3J0LmRldGVjdER1cGxpY2F0ZXM7XG5cdHNvcnRJbnB1dCA9ICFzdXBwb3J0LnNvcnRTdGFibGUgJiYgcmVzdWx0cy5zbGljZSggMCApO1xuXHRyZXN1bHRzLnNvcnQoIHNvcnRPcmRlciApO1xuXG5cdGlmICggaGFzRHVwbGljYXRlICkge1xuXHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xuXHRcdFx0aWYgKCBlbGVtID09PSByZXN1bHRzWyBpIF0gKSB7XG5cdFx0XHRcdGogPSBkdXBsaWNhdGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRyZXN1bHRzLnNwbGljZSggZHVwbGljYXRlc1sgaiBdLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2xlYXIgaW5wdXQgYWZ0ZXIgc29ydGluZyB0byByZWxlYXNlIG9iamVjdHNcblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvc2l6emxlL3B1bGwvMjI1XG5cdHNvcnRJbnB1dCA9IG51bGw7XG5cblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vKipcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgdGhlIHRleHQgdmFsdWUgb2YgYW4gYXJyYXkgb2YgRE9NIG5vZGVzXG4gKiBAcGFyYW0ge0FycmF5fEVsZW1lbnR9IGVsZW1cbiAqL1xuZ2V0VGV4dCA9IFNpenpsZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHZhciBub2RlLFxuXHRcdHJldCA9IFwiXCIsXG5cdFx0aSA9IDAsXG5cdFx0bm9kZVR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdGlmICggIW5vZGVUeXBlICkge1xuXHRcdC8vIElmIG5vIG5vZGVUeXBlLCB0aGlzIGlzIGV4cGVjdGVkIHRvIGJlIGFuIGFycmF5XG5cdFx0d2hpbGUgKCAobm9kZSA9IGVsZW1baSsrXSkgKSB7XG5cdFx0XHQvLyBEbyBub3QgdHJhdmVyc2UgY29tbWVudCBub2Rlc1xuXHRcdFx0cmV0ICs9IGdldFRleHQoIG5vZGUgKTtcblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAxIHx8IG5vZGVUeXBlID09PSA5IHx8IG5vZGVUeXBlID09PSAxMSApIHtcblx0XHQvLyBVc2UgdGV4dENvbnRlbnQgZm9yIGVsZW1lbnRzXG5cdFx0Ly8gaW5uZXJUZXh0IHVzYWdlIHJlbW92ZWQgZm9yIGNvbnNpc3RlbmN5IG9mIG5ldyBsaW5lcyAoalF1ZXJ5ICMxMTE1Mylcblx0XHRpZiAoIHR5cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0udGV4dENvbnRlbnQ7XG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdHJldCArPSBnZXRUZXh0KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMyB8fCBub2RlVHlwZSA9PT0gNCApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVmFsdWU7XG5cdH1cblx0Ly8gRG8gbm90IGluY2x1ZGUgY29tbWVudCBvciBwcm9jZXNzaW5nIGluc3RydWN0aW9uIG5vZGVzXG5cblx0cmV0dXJuIHJldDtcbn07XG5cbkV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzID0ge1xuXG5cdC8vIENhbiBiZSBhZGp1c3RlZCBieSB0aGUgdXNlclxuXHRjYWNoZUxlbmd0aDogNTAsXG5cblx0Y3JlYXRlUHNldWRvOiBtYXJrRnVuY3Rpb24sXG5cblx0bWF0Y2g6IG1hdGNoRXhwcixcblxuXHRhdHRySGFuZGxlOiB7fSxcblxuXHRmaW5kOiB7fSxcblxuXHRyZWxhdGl2ZToge1xuXHRcdFwiPlwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCIgXCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiB9LFxuXHRcdFwiK1wiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIn5cIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIgfVxuXHR9LFxuXG5cdHByZUZpbHRlcjoge1xuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaFsxXSA9IG1hdGNoWzFdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdC8vIE1vdmUgdGhlIGdpdmVuIHZhbHVlIHRvIG1hdGNoWzNdIHdoZXRoZXIgcXVvdGVkIG9yIHVucXVvdGVkXG5cdFx0XHRtYXRjaFszXSA9ICggbWF0Y2hbM10gfHwgbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIiApLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cblx0XHRcdGlmICggbWF0Y2hbMl0gPT09IFwifj1cIiApIHtcblx0XHRcdFx0bWF0Y2hbM10gPSBcIiBcIiArIG1hdGNoWzNdICsgXCIgXCI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgNCApO1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdC8qIG1hdGNoZXMgZnJvbSBtYXRjaEV4cHJbXCJDSElMRFwiXVxuXHRcdFx0XHQxIHR5cGUgKG9ubHl8bnRofC4uLilcblx0XHRcdFx0MiB3aGF0IChjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHQzIGFyZ3VtZW50IChldmVufG9kZHxcXGQqfFxcZCpuKFsrLV1cXGQrKT98Li4uKVxuXHRcdFx0XHQ0IHhuLWNvbXBvbmVudCBvZiB4bit5IGFyZ3VtZW50IChbKy1dP1xcZCpufClcblx0XHRcdFx0NSBzaWduIG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ2IHggb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDcgc2lnbiBvZiB5LWNvbXBvbmVudFxuXHRcdFx0XHQ4IHkgb2YgeS1jb21wb25lbnRcblx0XHRcdCovXG5cdFx0XHRtYXRjaFsxXSA9IG1hdGNoWzFdLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRcdGlmICggbWF0Y2hbMV0uc2xpY2UoIDAsIDMgKSA9PT0gXCJudGhcIiApIHtcblx0XHRcdFx0Ly8gbnRoLSogcmVxdWlyZXMgYXJndW1lbnRcblx0XHRcdFx0aWYgKCAhbWF0Y2hbM10gKSB7XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gbnVtZXJpYyB4IGFuZCB5IHBhcmFtZXRlcnMgZm9yIEV4cHIuZmlsdGVyLkNISUxEXG5cdFx0XHRcdC8vIHJlbWVtYmVyIHRoYXQgZmFsc2UvdHJ1ZSBjYXN0IHJlc3BlY3RpdmVseSB0byAwLzFcblx0XHRcdFx0bWF0Y2hbNF0gPSArKCBtYXRjaFs0XSA/IG1hdGNoWzVdICsgKG1hdGNoWzZdIHx8IDEpIDogMiAqICggbWF0Y2hbM10gPT09IFwiZXZlblwiIHx8IG1hdGNoWzNdID09PSBcIm9kZFwiICkgKTtcblx0XHRcdFx0bWF0Y2hbNV0gPSArKCAoIG1hdGNoWzddICsgbWF0Y2hbOF0gKSB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApO1xuXG5cdFx0XHQvLyBvdGhlciB0eXBlcyBwcm9oaWJpdCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWzNdICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBtYXRjaDtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0dmFyIGV4Y2Vzcyxcblx0XHRcdFx0dW5xdW90ZWQgPSAhbWF0Y2hbNl0gJiYgbWF0Y2hbMl07XG5cblx0XHRcdGlmICggbWF0Y2hFeHByW1wiQ0hJTERcIl0udGVzdCggbWF0Y2hbMF0gKSApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFjY2VwdCBxdW90ZWQgYXJndW1lbnRzIGFzLWlzXG5cdFx0XHRpZiAoIG1hdGNoWzNdICkge1xuXHRcdFx0XHRtYXRjaFsyXSA9IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCI7XG5cblx0XHRcdC8vIFN0cmlwIGV4Y2VzcyBjaGFyYWN0ZXJzIGZyb20gdW5xdW90ZWQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCB1bnF1b3RlZCAmJiBycHNldWRvLnRlc3QoIHVucXVvdGVkICkgJiZcblx0XHRcdFx0Ly8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSlcblx0XHRcdFx0KGV4Y2VzcyA9IHRva2VuaXplKCB1bnF1b3RlZCwgdHJ1ZSApKSAmJlxuXHRcdFx0XHQvLyBhZHZhbmNlIHRvIHRoZSBuZXh0IGNsb3NpbmcgcGFyZW50aGVzaXNcblx0XHRcdFx0KGV4Y2VzcyA9IHVucXVvdGVkLmluZGV4T2YoIFwiKVwiLCB1bnF1b3RlZC5sZW5ndGggLSBleGNlc3MgKSAtIHVucXVvdGVkLmxlbmd0aCkgKSB7XG5cblx0XHRcdFx0Ly8gZXhjZXNzIGlzIGEgbmVnYXRpdmUgaW5kZXhcblx0XHRcdFx0bWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHRcdG1hdGNoWzJdID0gdW5xdW90ZWQuc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXR1cm4gb25seSBjYXB0dXJlcyBuZWVkZWQgYnkgdGhlIHBzZXVkbyBmaWx0ZXIgbWV0aG9kICh0eXBlIGFuZCBhcmd1bWVudClcblx0XHRcdHJldHVybiBtYXRjaC5zbGljZSggMCwgMyApO1xuXHRcdH1cblx0fSxcblxuXHRmaWx0ZXI6IHtcblxuXHRcdFwiVEFHXCI6IGZ1bmN0aW9uKCBub2RlTmFtZVNlbGVjdG9yICkge1xuXHRcdFx0dmFyIG5vZGVOYW1lID0gbm9kZU5hbWVTZWxlY3Rvci5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbm9kZU5hbWVTZWxlY3RvciA9PT0gXCIqXCIgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH0gOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5vZGVOYW1lO1xuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNMQVNTXCI6IGZ1bmN0aW9uKCBjbGFzc05hbWUgKSB7XG5cdFx0XHR2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFtZSArIFwiIFwiIF07XG5cblx0XHRcdHJldHVybiBwYXR0ZXJuIHx8XG5cdFx0XHRcdChwYXR0ZXJuID0gbmV3IFJlZ0V4cCggXCIoXnxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIGNsYXNzTmFtZSArIFwiKFwiICsgd2hpdGVzcGFjZSArIFwifCQpXCIgKSkgJiZcblx0XHRcdFx0Y2xhc3NDYWNoZSggY2xhc3NOYW1lLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gcGF0dGVybi50ZXN0KCB0eXBlb2YgZWxlbS5jbGFzc05hbWUgPT09IFwic3RyaW5nXCIgJiYgZWxlbS5jbGFzc05hbWUgfHwgdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlICE9PSBcInVuZGVmaW5lZFwiICYmIGVsZW0uZ2V0QXR0cmlidXRlKFwiY2xhc3NcIikgfHwgXCJcIiApO1xuXHRcdFx0XHR9KTtcblx0XHR9LFxuXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBuYW1lLCBvcGVyYXRvciwgY2hlY2sgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciByZXN1bHQgPSBTaXp6bGUuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0XHRcdGlmICggcmVzdWx0ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIiE9XCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCAhb3BlcmF0b3IgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXN1bHQgKz0gXCJcIjtcblxuXHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiPVwiID8gcmVzdWx0ID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiIT1cIiA/IHJlc3VsdCAhPT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIl49XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA9PT0gMCA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiKj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID4gLTEgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiQ9XCIgPyBjaGVjayAmJiByZXN1bHQuc2xpY2UoIC1jaGVjay5sZW5ndGggKSA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIn49XCIgPyAoIFwiIFwiICsgcmVzdWx0LnJlcGxhY2UoIHJ3aGl0ZXNwYWNlLCBcIiBcIiApICsgXCIgXCIgKS5pbmRleE9mKCBjaGVjayApID4gLTEgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcInw9XCIgPyByZXN1bHQgPT09IGNoZWNrIHx8IHJlc3VsdC5zbGljZSggMCwgY2hlY2subGVuZ3RoICsgMSApID09PSBjaGVjayArIFwiLVwiIDpcblx0XHRcdFx0XHRmYWxzZTtcblx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIHR5cGUsIHdoYXQsIGFyZ3VtZW50LCBmaXJzdCwgbGFzdCApIHtcblx0XHRcdHZhciBzaW1wbGUgPSB0eXBlLnNsaWNlKCAwLCAzICkgIT09IFwibnRoXCIsXG5cdFx0XHRcdGZvcndhcmQgPSB0eXBlLnNsaWNlKCAtNCApICE9PSBcImxhc3RcIixcblx0XHRcdFx0b2ZUeXBlID0gd2hhdCA9PT0gXCJvZi10eXBlXCI7XG5cblx0XHRcdHJldHVybiBmaXJzdCA9PT0gMSAmJiBsYXN0ID09PSAwID9cblxuXHRcdFx0XHQvLyBTaG9ydGN1dCBmb3IgOm50aC0qKG4pXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiAhIWVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdFx0fSA6XG5cblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgY2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLCBub2RlLCBub2RlSW5kZXgsIHN0YXJ0LFxuXHRcdFx0XHRcdFx0ZGlyID0gc2ltcGxlICE9PSBmb3J3YXJkID8gXCJuZXh0U2libGluZ1wiIDogXCJwcmV2aW91c1NpYmxpbmdcIixcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcblx0XHRcdFx0XHRcdG5hbWUgPSBvZlR5cGUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFxuXHRcdFx0XHRcdFx0dXNlQ2FjaGUgPSAheG1sICYmICFvZlR5cGUsXG5cdFx0XHRcdFx0XHRkaWZmID0gZmFsc2U7XG5cblx0XHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gOihmaXJzdHxsYXN0fG9ubHkpLShjaGlsZHxvZi10eXBlKVxuXHRcdFx0XHRcdFx0aWYgKCBzaW1wbGUgKSB7XG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSBub2RlWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHQvLyBSZXZlcnNlIGRpcmVjdGlvbiBmb3IgOm9ubHktKiAoaWYgd2UgaGF2ZW4ndCB5ZXQgZG9uZSBzbylcblx0XHRcdFx0XHRcdFx0XHRzdGFydCA9IGRpciA9IHR5cGUgPT09IFwib25seVwiICYmICFzdGFydCAmJiBcIm5leHRTaWJsaW5nXCI7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdHN0YXJ0ID0gWyBmb3J3YXJkID8gcGFyZW50LmZpcnN0Q2hpbGQgOiBwYXJlbnQubGFzdENoaWxkIF07XG5cblx0XHRcdFx0XHRcdC8vIG5vbi14bWwgOm50aC1jaGlsZCguLi4pIHN0b3JlcyBjYWNoZSBkYXRhIG9uIGBwYXJlbnRgXG5cdFx0XHRcdFx0XHRpZiAoIGZvcndhcmQgJiYgdXNlQ2FjaGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU2VlayBgZWxlbWAgZnJvbSBhIHByZXZpb3VzbHktY2FjaGVkIGluZGV4XG5cblx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRub2RlID0gcGFyZW50O1xuXHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4ICYmIGNhY2hlWyAyIF07XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBub2RlSW5kZXggJiYgcGFyZW50LmNoaWxkTm9kZXNbIG5vZGVJbmRleCBdO1xuXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUubm9kZVR5cGUgPT09IDEgJiYgKytkaWZmICYmIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBub2RlSW5kZXgsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBVc2UgcHJldmlvdXNseS1jYWNoZWQgZWxlbWVudCBpbmRleCBpZiBhdmFpbGFibGVcblx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4O1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0Ly8geG1sIDpudGgtY2hpbGQoLi4uKVxuXHRcdFx0XHRcdFx0XHQvLyBvciA6bnRoLWxhc3QtY2hpbGQoLi4uKSBvciA6bnRoKC1sYXN0KT8tb2YtdHlwZSguLi4pXG5cdFx0XHRcdFx0XHRcdGlmICggZGlmZiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gVXNlIHRoZSBzYW1lIGxvb3AgYXMgYWJvdmUgdG8gc2VlayBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdGlmICggKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0KytkaWZmICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIENhY2hlIHRoZSBpbmRleCBvZiBlYWNoIGVuY291bnRlcmVkIGVsZW1lbnRcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUgPT09IGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgdGhlIG9mZnNldCwgdGhlbiBjaGVjayBhZ2FpbnN0IGN5Y2xlIHNpemVcblx0XHRcdFx0XHRcdGRpZmYgLT0gbGFzdDtcblx0XHRcdFx0XHRcdHJldHVybiBkaWZmID09PSBmaXJzdCB8fCAoIGRpZmYgJSBmaXJzdCA9PT0gMCAmJiBkaWZmIC8gZmlyc3QgPj0gMCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIHBzZXVkbywgYXJndW1lbnQgKSB7XG5cdFx0XHQvLyBwc2V1ZG8tY2xhc3MgbmFtZXMgYXJlIGNhc2UtaW5zZW5zaXRpdmVcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jcHNldWRvLWNsYXNzZXNcblx0XHRcdC8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzXG5cdFx0XHQvLyBSZW1lbWJlciB0aGF0IHNldEZpbHRlcnMgaW5oZXJpdHMgZnJvbSBwc2V1ZG9zXG5cdFx0XHR2YXIgYXJncyxcblx0XHRcdFx0Zm4gPSBFeHByLnBzZXVkb3NbIHBzZXVkbyBdIHx8IEV4cHIuc2V0RmlsdGVyc1sgcHNldWRvLnRvTG93ZXJDYXNlKCkgXSB8fFxuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBwc2V1ZG86IFwiICsgcHNldWRvICk7XG5cblx0XHRcdC8vIFRoZSB1c2VyIG1heSB1c2UgY3JlYXRlUHNldWRvIHRvIGluZGljYXRlIHRoYXRcblx0XHRcdC8vIGFyZ3VtZW50cyBhcmUgbmVlZGVkIHRvIGNyZWF0ZSB0aGUgZmlsdGVyIGZ1bmN0aW9uXG5cdFx0XHQvLyBqdXN0IGFzIFNpenpsZSBkb2VzXG5cdFx0XHRpZiAoIGZuWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHJldHVybiBmbiggYXJndW1lbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQnV0IG1haW50YWluIHN1cHBvcnQgZm9yIG9sZCBzaWduYXR1cmVzXG5cdFx0XHRpZiAoIGZuLmxlbmd0aCA+IDEgKSB7XG5cdFx0XHRcdGFyZ3MgPSBbIHBzZXVkbywgcHNldWRvLCBcIlwiLCBhcmd1bWVudCBdO1xuXHRcdFx0XHRyZXR1cm4gRXhwci5zZXRGaWx0ZXJzLmhhc093blByb3BlcnR5KCBwc2V1ZG8udG9Mb3dlckNhc2UoKSApID9cblx0XHRcdFx0XHRtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHRcdFx0XHR2YXIgaWR4LFxuXHRcdFx0XHRcdFx0XHRtYXRjaGVkID0gZm4oIHNlZWQsIGFyZ3VtZW50ICksXG5cdFx0XHRcdFx0XHRcdGkgPSBtYXRjaGVkLmxlbmd0aDtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZHggPSBpbmRleE9mKCBzZWVkLCBtYXRjaGVkW2ldICk7XG5cdFx0XHRcdFx0XHRcdHNlZWRbIGlkeCBdID0gISggbWF0Y2hlc1sgaWR4IF0gPSBtYXRjaGVkW2ldICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSkgOlxuXHRcdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZuKCBlbGVtLCAwLCBhcmdzICk7XG5cdFx0XHRcdFx0fTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZuO1xuXHRcdH1cblx0fSxcblxuXHRwc2V1ZG9zOiB7XG5cdFx0Ly8gUG90ZW50aWFsbHkgY29tcGxleCBwc2V1ZG9zXG5cdFx0XCJub3RcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdC8vIFRyaW0gdGhlIHNlbGVjdG9yIHBhc3NlZCB0byBjb21waWxlXG5cdFx0XHQvLyB0byBhdm9pZCB0cmVhdGluZyBsZWFkaW5nIGFuZCB0cmFpbGluZ1xuXHRcdFx0Ly8gc3BhY2VzIGFzIGNvbWJpbmF0b3JzXG5cdFx0XHR2YXIgaW5wdXQgPSBbXSxcblx0XHRcdFx0cmVzdWx0cyA9IFtdLFxuXHRcdFx0XHRtYXRjaGVyID0gY29tcGlsZSggc2VsZWN0b3IucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApICk7XG5cblx0XHRcdHJldHVybiBtYXRjaGVyWyBleHBhbmRvIF0gP1xuXHRcdFx0XHRtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMsIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHR2YXIgZWxlbSxcblx0XHRcdFx0XHRcdHVubWF0Y2hlZCA9IG1hdGNoZXIoIHNlZWQsIG51bGwsIHhtbCwgW10gKSxcblx0XHRcdFx0XHRcdGkgPSBzZWVkLmxlbmd0aDtcblxuXHRcdFx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIHVubWF0Y2hlZCBieSBgbWF0Y2hlcmBcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKGVsZW0gPSB1bm1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRzZWVkW2ldID0gIShtYXRjaGVzW2ldID0gZWxlbSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBlbGVtO1xuXHRcdFx0XHRcdG1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTtcblx0XHRcdFx0XHQvLyBEb24ndCBrZWVwIHRoZSBlbGVtZW50IChpc3N1ZSAjMjk5KVxuXHRcdFx0XHRcdGlucHV0WzBdID0gbnVsbDtcblx0XHRcdFx0XHRyZXR1cm4gIXJlc3VsdHMucG9wKCk7XG5cdFx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImhhc1wiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0XCJjb250YWluc1wiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHR0ZXh0ID0gdGV4dC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLnRleHRDb250ZW50IHx8IGdldFRleHQoIGVsZW0gKSApLmluZGV4T2YoIHRleHQgKSA+IC0xO1xuXHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdC8vIFwiV2hldGhlciBhbiBlbGVtZW50IGlzIHJlcHJlc2VudGVkIGJ5IGEgOmxhbmcoKSBzZWxlY3RvclxuXHRcdC8vIGlzIGJhc2VkIHNvbGVseSBvbiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlXG5cdFx0Ly8gYmVpbmcgZXF1YWwgdG8gdGhlIGlkZW50aWZpZXIgQyxcblx0XHQvLyBvciBiZWdpbm5pbmcgd2l0aCB0aGUgaWRlbnRpZmllciBDIGltbWVkaWF0ZWx5IGZvbGxvd2VkIGJ5IFwiLVwiLlxuXHRcdC8vIFRoZSBtYXRjaGluZyBvZiBDIGFnYWluc3QgdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZSBpcyBwZXJmb3JtZWQgY2FzZS1pbnNlbnNpdGl2ZWx5LlxuXHRcdC8vIFRoZSBpZGVudGlmaWVyIEMgZG9lcyBub3QgaGF2ZSB0byBiZSBhIHZhbGlkIGxhbmd1YWdlIG5hbWUuXCJcblx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2xhbmctcHNldWRvXG5cdFx0XCJsYW5nXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGxhbmcgKSB7XG5cdFx0XHQvLyBsYW5nIHZhbHVlIG11c3QgYmUgYSB2YWxpZCBpZGVudGlmaWVyXG5cdFx0XHRpZiAoICFyaWRlbnRpZmllci50ZXN0KGxhbmcgfHwgXCJcIikgKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIiArIGxhbmcgKTtcblx0XHRcdH1cblx0XHRcdGxhbmcgPSBsYW5nLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIGVsZW1MYW5nO1xuXHRcdFx0XHRkbyB7XG5cdFx0XHRcdFx0aWYgKCAoZWxlbUxhbmcgPSBkb2N1bWVudElzSFRNTCA/XG5cdFx0XHRcdFx0XHRlbGVtLmxhbmcgOlxuXHRcdFx0XHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoXCJ4bWw6bGFuZ1wiKSB8fCBlbGVtLmdldEF0dHJpYnV0ZShcImxhbmdcIikpICkge1xuXG5cdFx0XHRcdFx0XHRlbGVtTGFuZyA9IGVsZW1MYW5nLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbUxhbmcgPT09IGxhbmcgfHwgZWxlbUxhbmcuaW5kZXhPZiggbGFuZyArIFwiLVwiICkgPT09IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IHdoaWxlICggKGVsZW0gPSBlbGVtLnBhcmVudE5vZGUpICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdC8vIE1pc2NlbGxhbmVvdXNcblx0XHRcInRhcmdldFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBoYXNoID0gd2luZG93LmxvY2F0aW9uICYmIHdpbmRvdy5sb2NhdGlvbi5oYXNoO1xuXHRcdFx0cmV0dXJuIGhhc2ggJiYgaGFzaC5zbGljZSggMSApID09PSBlbGVtLmlkO1xuXHRcdH0sXG5cblx0XHRcInJvb3RcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jRWxlbTtcblx0XHR9LFxuXG5cdFx0XCJmb2N1c1wiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ICYmICghZG9jdW1lbnQuaGFzRm9jdXMgfHwgZG9jdW1lbnQuaGFzRm9jdXMoKSkgJiYgISEoZWxlbS50eXBlIHx8IGVsZW0uaHJlZiB8fCB+ZWxlbS50YWJJbmRleCk7XG5cdFx0fSxcblxuXHRcdC8vIEJvb2xlYW4gcHJvcGVydGllc1xuXHRcdFwiZW5hYmxlZFwiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZmFsc2UgKSxcblx0XHRcImRpc2FibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCB0cnVlICksXG5cblx0XHRcImNoZWNrZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBJbiBDU1MzLCA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIGJvdGggY2hlY2tlZCBhbmQgc2VsZWN0ZWQgZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gKG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgISFlbGVtLmNoZWNrZWQpIHx8IChub2RlTmFtZSA9PT0gXCJvcHRpb25cIiAmJiAhIWVsZW0uc2VsZWN0ZWQpO1xuXHRcdH0sXG5cblx0XHRcInNlbGVjdGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0Ly8gQWNjZXNzaW5nIHRoaXMgcHJvcGVydHkgbWFrZXMgc2VsZWN0ZWQtYnktZGVmYXVsdFxuXHRcdFx0Ly8gb3B0aW9ucyBpbiBTYWZhcmkgd29yayBwcm9wZXJseVxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGVsZW0ucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZWxlbS5zZWxlY3RlZCA9PT0gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0Ly8gQ29udGVudHNcblx0XHRcImVtcHR5XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNlbXB0eS1wc2V1ZG9cblx0XHRcdC8vIDplbXB0eSBpcyBuZWdhdGVkIGJ5IGVsZW1lbnQgKDEpIG9yIGNvbnRlbnQgbm9kZXMgKHRleHQ6IDM7IGNkYXRhOiA0OyBlbnRpdHkgcmVmOiA1KSxcblx0XHRcdC8vICAgYnV0IG5vdCBieSBvdGhlcnMgKGNvbW1lbnQ6IDg7IHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb246IDc7IGV0Yy4pXG5cdFx0XHQvLyBub2RlVHlwZSA8IDYgd29ya3MgYmVjYXVzZSBhdHRyaWJ1dGVzICgyKSBkbyBub3QgYXBwZWFyIGFzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlIDwgNiApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0sXG5cblx0XHRcInBhcmVudFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAhRXhwci5wc2V1ZG9zW1wiZW1wdHlcIl0oIGVsZW0gKTtcblx0XHR9LFxuXG5cdFx0Ly8gRWxlbWVudC9pbnB1dCB0eXBlc1xuXHRcdFwiaGVhZGVyXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIHJoZWFkZXIudGVzdCggZWxlbS5ub2RlTmFtZSApO1xuXHRcdH0sXG5cblx0XHRcImlucHV0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIHJpbnB1dHMudGVzdCggZWxlbS5ub2RlTmFtZSApO1xuXHRcdH0sXG5cblx0XHRcImJ1dHRvblwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IFwiYnV0dG9uXCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIjtcblx0XHR9LFxuXG5cdFx0XCJ0ZXh0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGF0dHI7XG5cdFx0XHRyZXR1cm4gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgJiZcblx0XHRcdFx0ZWxlbS50eXBlID09PSBcInRleHRcIiAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFPDhcblx0XHRcdFx0Ly8gTmV3IEhUTUw1IGF0dHJpYnV0ZSB2YWx1ZXMgKGUuZy4sIFwic2VhcmNoXCIpIGFwcGVhciB3aXRoIGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCJcblx0XHRcdFx0KCAoYXR0ciA9IGVsZW0uZ2V0QXR0cmlidXRlKFwidHlwZVwiKSkgPT0gbnVsbCB8fCBhdHRyLnRvTG93ZXJDYXNlKCkgPT09IFwidGV4dFwiICk7XG5cdFx0fSxcblxuXHRcdC8vIFBvc2l0aW9uLWluLWNvbGxlY3Rpb25cblx0XHRcImZpcnN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gWyAwIF07XG5cdFx0fSksXG5cblx0XHRcImxhc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gWyBsZW5ndGggLSAxIF07XG5cdFx0fSksXG5cblx0XHRcImVxXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHJldHVybiBbIGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQgXTtcblx0XHR9KSxcblxuXHRcdFwiZXZlblwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwib2RkXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAxO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJsdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/XG5cdFx0XHRcdGFyZ3VtZW50ICsgbGVuZ3RoIDpcblx0XHRcdFx0YXJndW1lbnQgPiBsZW5ndGggP1xuXHRcdFx0XHRcdGxlbmd0aCA6XG5cdFx0XHRcdFx0YXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7IC0taSA+PSAwOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImd0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgKytpIDwgbGVuZ3RoOyApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSlcblx0fVxufTtcblxuRXhwci5wc2V1ZG9zW1wibnRoXCJdID0gRXhwci5wc2V1ZG9zW1wiZXFcIl07XG5cbi8vIEFkZCBidXR0b24vaW5wdXQgdHlwZSBwc2V1ZG9zXG5mb3IgKCBpIGluIHsgcmFkaW86IHRydWUsIGNoZWNrYm94OiB0cnVlLCBmaWxlOiB0cnVlLCBwYXNzd29yZDogdHJ1ZSwgaW1hZ2U6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVJbnB1dFBzZXVkbyggaSApO1xufVxuZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHtcblx0RXhwci5wc2V1ZG9zWyBpIF0gPSBjcmVhdGVCdXR0b25Qc2V1ZG8oIGkgKTtcbn1cblxuLy8gRWFzeSBBUEkgZm9yIGNyZWF0aW5nIG5ldyBzZXRGaWx0ZXJzXG5mdW5jdGlvbiBzZXRGaWx0ZXJzKCkge31cbnNldEZpbHRlcnMucHJvdG90eXBlID0gRXhwci5maWx0ZXJzID0gRXhwci5wc2V1ZG9zO1xuRXhwci5zZXRGaWx0ZXJzID0gbmV3IHNldEZpbHRlcnMoKTtcblxudG9rZW5pemUgPSBTaXp6bGUudG9rZW5pemUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIHBhcnNlT25seSApIHtcblx0dmFyIG1hdGNoZWQsIG1hdGNoLCB0b2tlbnMsIHR5cGUsXG5cdFx0c29GYXIsIGdyb3VwcywgcHJlRmlsdGVycyxcblx0XHRjYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCBjYWNoZWQgKSB7XG5cdFx0cmV0dXJuIHBhcnNlT25seSA/IDAgOiBjYWNoZWQuc2xpY2UoIDAgKTtcblx0fVxuXG5cdHNvRmFyID0gc2VsZWN0b3I7XG5cdGdyb3VwcyA9IFtdO1xuXHRwcmVGaWx0ZXJzID0gRXhwci5wcmVGaWx0ZXI7XG5cblx0d2hpbGUgKCBzb0ZhciApIHtcblxuXHRcdC8vIENvbW1hIGFuZCBmaXJzdCBydW5cblx0XHRpZiAoICFtYXRjaGVkIHx8IChtYXRjaCA9IHJjb21tYS5leGVjKCBzb0ZhciApKSApIHtcblx0XHRcdGlmICggbWF0Y2ggKSB7XG5cdFx0XHRcdC8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlkXG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoWzBdLmxlbmd0aCApIHx8IHNvRmFyO1xuXHRcdFx0fVxuXHRcdFx0Z3JvdXBzLnB1c2goICh0b2tlbnMgPSBbXSkgKTtcblx0XHR9XG5cblx0XHRtYXRjaGVkID0gZmFsc2U7XG5cblx0XHQvLyBDb21iaW5hdG9yc1xuXHRcdGlmICggKG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHR0b2tlbnMucHVzaCh7XG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXHRcdFx0XHQvLyBDYXN0IGRlc2NlbmRhbnQgY29tYmluYXRvcnMgdG8gc3BhY2Vcblx0XHRcdFx0dHlwZTogbWF0Y2hbMF0ucmVwbGFjZSggcnRyaW0sIFwiIFwiIClcblx0XHRcdH0pO1xuXHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGaWx0ZXJzXG5cdFx0Zm9yICggdHlwZSBpbiBFeHByLmZpbHRlciApIHtcblx0XHRcdGlmICggKG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSkgJiYgKCFwcmVGaWx0ZXJzWyB0eXBlIF0gfHxcblx0XHRcdFx0KG1hdGNoID0gcHJlRmlsdGVyc1sgdHlwZSBdKCBtYXRjaCApKSkgKSB7XG5cdFx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0XHR0b2tlbnMucHVzaCh7XG5cdFx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxuXHRcdFx0XHR9KTtcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hlZC5sZW5ndGggKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoICFtYXRjaGVkICkge1xuXHRcdFx0YnJlYWs7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSBsZW5ndGggb2YgdGhlIGludmFsaWQgZXhjZXNzXG5cdC8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZ1xuXHQvLyBPdGhlcndpc2UsIHRocm93IGFuIGVycm9yIG9yIHJldHVybiB0b2tlbnNcblx0cmV0dXJuIHBhcnNlT25seSA/XG5cdFx0c29GYXIubGVuZ3RoIDpcblx0XHRzb0ZhciA/XG5cdFx0XHRTaXp6bGUuZXJyb3IoIHNlbGVjdG9yICkgOlxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xuXHRcdFx0dG9rZW5DYWNoZSggc2VsZWN0b3IsIGdyb3VwcyApLnNsaWNlKCAwICk7XG59O1xuXG5mdW5jdGlvbiB0b1NlbGVjdG9yKCB0b2tlbnMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdHNlbGVjdG9yID0gXCJcIjtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zW2ldLnZhbHVlO1xuXHR9XG5cdHJldHVybiBzZWxlY3Rvcjtcbn1cblxuZnVuY3Rpb24gYWRkQ29tYmluYXRvciggbWF0Y2hlciwgY29tYmluYXRvciwgYmFzZSApIHtcblx0dmFyIGRpciA9IGNvbWJpbmF0b3IuZGlyLFxuXHRcdHNraXAgPSBjb21iaW5hdG9yLm5leHQsXG5cdFx0a2V5ID0gc2tpcCB8fCBkaXIsXG5cdFx0Y2hlY2tOb25FbGVtZW50cyA9IGJhc2UgJiYga2V5ID09PSBcInBhcmVudE5vZGVcIixcblx0XHRkb25lTmFtZSA9IGRvbmUrKztcblxuXHRyZXR1cm4gY29tYmluYXRvci5maXJzdCA/XG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBjbG9zZXN0IGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdHJldHVybiBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0gOlxuXG5cdFx0Ly8gQ2hlY2sgYWdhaW5zdCBhbGwgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRzXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsXG5cdFx0XHRcdG5ld0NhY2hlID0gWyBkaXJydW5zLCBkb25lTmFtZSBdO1xuXG5cdFx0XHQvLyBXZSBjYW4ndCBzZXQgYXJiaXRyYXJ5IGRhdGEgb24gWE1MIG5vZGVzLCBzbyB0aGV5IGRvbid0IGJlbmVmaXQgZnJvbSBjb21iaW5hdG9yIGNhY2hpbmdcblx0XHRcdGlmICggeG1sICkge1xuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gZWxlbVsgZGlyIF0pICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR3aGlsZSAoIChlbGVtID0gZWxlbVsgZGlyIF0pICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xuXHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IGVsZW1bIGV4cGFuZG8gXSB8fCAoZWxlbVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdIHx8IChvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdGlmICggc2tpcCAmJiBza2lwID09PSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdGVsZW0gPSBlbGVtWyBkaXIgXSB8fCBlbGVtO1xuXHRcdFx0XHRcdFx0fSBlbHNlIGlmICggKG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGtleSBdKSAmJlxuXHRcdFx0XHRcdFx0XHRvbGRDYWNoZVsgMCBdID09PSBkaXJydW5zICYmIG9sZENhY2hlWyAxIF0gPT09IGRvbmVOYW1lICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFzc2lnbiB0byBuZXdDYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHJldHVybiAobmV3Q2FjaGVbIDIgXSA9IG9sZENhY2hlWyAyIF0pO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gUmV1c2UgbmV3Y2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsga2V5IF0gPSBuZXdDYWNoZTtcblxuXHRcdFx0XHRcdFx0XHQvLyBBIG1hdGNoIG1lYW5zIHdlJ3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmdcblx0XHRcdFx0XHRcdFx0aWYgKCAobmV3Q2FjaGVbIDIgXSA9IG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG59XG5cbmZ1bmN0aW9uIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApIHtcblx0cmV0dXJuIG1hdGNoZXJzLmxlbmd0aCA+IDEgP1xuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgaSA9IG1hdGNoZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoICFtYXRjaGVyc1tpXSggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IDpcblx0XHRtYXRjaGVyc1swXTtcbn1cblxuZnVuY3Rpb24gbXVsdGlwbGVDb250ZXh0cyggc2VsZWN0b3IsIGNvbnRleHRzLCByZXN1bHRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gY29udGV4dHMubGVuZ3RoO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0c1tpXSwgcmVzdWx0cyApO1xuXHR9XG5cdHJldHVybiByZXN1bHRzO1xufVxuXG5mdW5jdGlvbiBjb25kZW5zZSggdW5tYXRjaGVkLCBtYXAsIGZpbHRlciwgY29udGV4dCwgeG1sICkge1xuXHR2YXIgZWxlbSxcblx0XHRuZXdVbm1hdGNoZWQgPSBbXSxcblx0XHRpID0gMCxcblx0XHRsZW4gPSB1bm1hdGNoZWQubGVuZ3RoLFxuXHRcdG1hcHBlZCA9IG1hcCAhPSBudWxsO1xuXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdGlmICggKGVsZW0gPSB1bm1hdGNoZWRbaV0pICkge1xuXHRcdFx0aWYgKCAhZmlsdGVyIHx8IGZpbHRlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdG5ld1VubWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdGlmICggbWFwcGVkICkge1xuXHRcdFx0XHRcdG1hcC5wdXNoKCBpICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbmV3VW5tYXRjaGVkO1xufVxuXG5mdW5jdGlvbiBzZXRNYXRjaGVyKCBwcmVGaWx0ZXIsIHNlbGVjdG9yLCBtYXRjaGVyLCBwb3N0RmlsdGVyLCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKSB7XG5cdGlmICggcG9zdEZpbHRlciAmJiAhcG9zdEZpbHRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaWx0ZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmlsdGVyICk7XG5cdH1cblx0aWYgKCBwb3N0RmluZGVyICYmICFwb3N0RmluZGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbmRlciA9IHNldE1hdGNoZXIoIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApO1xuXHR9XG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIHJlc3VsdHMsIGNvbnRleHQsIHhtbCApIHtcblx0XHR2YXIgdGVtcCwgaSwgZWxlbSxcblx0XHRcdHByZU1hcCA9IFtdLFxuXHRcdFx0cG9zdE1hcCA9IFtdLFxuXHRcdFx0cHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gR2V0IGluaXRpYWwgZWxlbWVudHMgZnJvbSBzZWVkIG9yIGNvbnRleHRcblx0XHRcdGVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciB8fCBcIipcIiwgY29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCwgW10gKSxcblxuXHRcdFx0Ly8gUHJlZmlsdGVyIHRvIGdldCBtYXRjaGVyIGlucHV0LCBwcmVzZXJ2aW5nIGEgbWFwIGZvciBzZWVkLXJlc3VsdHMgc3luY2hyb25pemF0aW9uXG5cdFx0XHRtYXRjaGVySW4gPSBwcmVGaWx0ZXIgJiYgKCBzZWVkIHx8ICFzZWxlY3RvciApID9cblx0XHRcdFx0Y29uZGVuc2UoIGVsZW1zLCBwcmVNYXAsIHByZUZpbHRlciwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRlbGVtcyxcblxuXHRcdFx0bWF0Y2hlck91dCA9IG1hdGNoZXIgP1xuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGEgcG9zdEZpbmRlciwgb3IgZmlsdGVyZWQgc2VlZCwgb3Igbm9uLXNlZWQgcG9zdEZpbHRlciBvciBwcmVleGlzdGluZyByZXN1bHRzLFxuXHRcdFx0XHRwb3N0RmluZGVyIHx8ICggc2VlZCA/IHByZUZpbHRlciA6IHByZWV4aXN0aW5nIHx8IHBvc3RGaWx0ZXIgKSA/XG5cblx0XHRcdFx0XHQvLyAuLi5pbnRlcm1lZGlhdGUgcHJvY2Vzc2luZyBpcyBuZWNlc3Nhcnlcblx0XHRcdFx0XHRbXSA6XG5cblx0XHRcdFx0XHQvLyAuLi5vdGhlcndpc2UgdXNlIHJlc3VsdHMgZGlyZWN0bHlcblx0XHRcdFx0XHRyZXN1bHRzIDpcblx0XHRcdFx0bWF0Y2hlckluO1xuXG5cdFx0Ly8gRmluZCBwcmltYXJ5IG1hdGNoZXNcblx0XHRpZiAoIG1hdGNoZXIgKSB7XG5cdFx0XHRtYXRjaGVyKCBtYXRjaGVySW4sIG1hdGNoZXJPdXQsIGNvbnRleHQsIHhtbCApO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHBvc3RGaWx0ZXJcblx0XHRpZiAoIHBvc3RGaWx0ZXIgKSB7XG5cdFx0XHR0ZW1wID0gY29uZGVuc2UoIG1hdGNoZXJPdXQsIHBvc3RNYXAgKTtcblx0XHRcdHBvc3RGaWx0ZXIoIHRlbXAsIFtdLCBjb250ZXh0LCB4bWwgKTtcblxuXHRcdFx0Ly8gVW4tbWF0Y2ggZmFpbGluZyBlbGVtZW50cyBieSBtb3ZpbmcgdGhlbSBiYWNrIHRvIG1hdGNoZXJJblxuXHRcdFx0aSA9IHRlbXAubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggKGVsZW0gPSB0ZW1wW2ldKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyT3V0WyBwb3N0TWFwW2ldIF0gPSAhKG1hdGNoZXJJblsgcG9zdE1hcFtpXSBdID0gZWxlbSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgfHwgcHJlRmlsdGVyICkge1xuXHRcdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdFx0Ly8gR2V0IHRoZSBmaW5hbCBtYXRjaGVyT3V0IGJ5IGNvbmRlbnNpbmcgdGhpcyBpbnRlcm1lZGlhdGUgaW50byBwb3N0RmluZGVyIGNvbnRleHRzXG5cdFx0XHRcdFx0dGVtcCA9IFtdO1xuXHRcdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSApIHtcblx0XHRcdFx0XHRcdFx0Ly8gUmVzdG9yZSBtYXRjaGVySW4gc2luY2UgZWxlbSBpcyBub3QgeWV0IGEgZmluYWwgbWF0Y2hcblx0XHRcdFx0XHRcdFx0dGVtcC5wdXNoKCAobWF0Y2hlckluW2ldID0gZWxlbSkgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgKG1hdGNoZXJPdXQgPSBbXSksIHRlbXAsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTW92ZSBtYXRjaGVkIGVsZW1lbnRzIGZyb20gc2VlZCB0byByZXN1bHRzIHRvIGtlZXAgdGhlbSBzeW5jaHJvbml6ZWRcblx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gbWF0Y2hlck91dFtpXSkgJiZcblx0XHRcdFx0XHRcdCh0ZW1wID0gcG9zdEZpbmRlciA/IGluZGV4T2YoIHNlZWQsIGVsZW0gKSA6IHByZU1hcFtpXSkgPiAtMSApIHtcblxuXHRcdFx0XHRcdFx0c2VlZFt0ZW1wXSA9ICEocmVzdWx0c1t0ZW1wXSA9IGVsZW0pO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gQWRkIGVsZW1lbnRzIHRvIHJlc3VsdHMsIHRocm91Z2ggcG9zdEZpbmRlciBpZiBkZWZpbmVkXG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXJPdXQgPSBjb25kZW5zZShcblx0XHRcdFx0bWF0Y2hlck91dCA9PT0gcmVzdWx0cyA/XG5cdFx0XHRcdFx0bWF0Y2hlck91dC5zcGxpY2UoIHByZWV4aXN0aW5nLCBtYXRjaGVyT3V0Lmxlbmd0aCApIDpcblx0XHRcdFx0XHRtYXRjaGVyT3V0XG5cdFx0XHQpO1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCByZXN1bHRzLCBtYXRjaGVyT3V0LCB4bWwgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIG1hdGNoZXJPdXQgKTtcblx0XHRcdH1cblx0XHR9XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zICkge1xuXHR2YXIgY2hlY2tDb250ZXh0LCBtYXRjaGVyLCBqLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0bGVhZGluZ1JlbGF0aXZlID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zWzBdLnR5cGUgXSxcblx0XHRpbXBsaWNpdFJlbGF0aXZlID0gbGVhZGluZ1JlbGF0aXZlIHx8IEV4cHIucmVsYXRpdmVbXCIgXCJdLFxuXHRcdGkgPSBsZWFkaW5nUmVsYXRpdmUgPyAxIDogMCxcblxuXHRcdC8vIFRoZSBmb3VuZGF0aW9uYWwgbWF0Y2hlciBlbnN1cmVzIHRoYXQgZWxlbWVudHMgYXJlIHJlYWNoYWJsZSBmcm9tIHRvcC1sZXZlbCBjb250ZXh0KHMpXG5cdFx0bWF0Y2hDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gY2hlY2tDb250ZXh0O1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaEFueUNvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBpbmRleE9mKCBjaGVja0NvbnRleHQsIGVsZW0gKSA+IC0xO1xuXHRcdH0sIGltcGxpY2l0UmVsYXRpdmUsIHRydWUgKSxcblx0XHRtYXRjaGVycyA9IFsgZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciByZXQgPSAoICFsZWFkaW5nUmVsYXRpdmUgJiYgKCB4bWwgfHwgY29udGV4dCAhPT0gb3V0ZXJtb3N0Q29udGV4dCApICkgfHwgKFxuXHRcdFx0XHQoY2hlY2tDb250ZXh0ID0gY29udGV4dCkubm9kZVR5cGUgP1xuXHRcdFx0XHRcdG1hdGNoQ29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgOlxuXHRcdFx0XHRcdG1hdGNoQW55Q29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgKTtcblx0XHRcdC8vIEF2b2lkIGhhbmdpbmcgb250byBlbGVtZW50IChpc3N1ZSAjMjk5KVxuXHRcdFx0Y2hlY2tDb250ZXh0ID0gbnVsbDtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fSBdO1xuXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdGlmICggKG1hdGNoZXIgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbaV0udHlwZSBdKSApIHtcblx0XHRcdG1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9yKGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyKSBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyID0gRXhwci5maWx0ZXJbIHRva2Vuc1tpXS50eXBlIF0uYXBwbHkoIG51bGwsIHRva2Vuc1tpXS5tYXRjaGVzICk7XG5cblx0XHRcdC8vIFJldHVybiBzcGVjaWFsIHVwb24gc2VlaW5nIGEgcG9zaXRpb25hbCBtYXRjaGVyXG5cdFx0XHRpZiAoIG1hdGNoZXJbIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0Ly8gRmluZCB0aGUgbmV4dCByZWxhdGl2ZSBvcGVyYXRvciAoaWYgYW55KSBmb3IgcHJvcGVyIGhhbmRsaW5nXG5cdFx0XHRcdGogPSArK2k7XG5cdFx0XHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgdG9rZW5zW2pdLnR5cGUgXSApIHtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gc2V0TWF0Y2hlcihcblx0XHRcdFx0XHRpID4gMSAmJiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSxcblx0XHRcdFx0XHRpID4gMSAmJiB0b1NlbGVjdG9yKFxuXHRcdFx0XHRcdFx0Ly8gSWYgdGhlIHByZWNlZGluZyB0b2tlbiB3YXMgYSBkZXNjZW5kYW50IGNvbWJpbmF0b3IsIGluc2VydCBhbiBpbXBsaWNpdCBhbnktZWxlbWVudCBgKmBcblx0XHRcdFx0XHRcdHRva2Vucy5zbGljZSggMCwgaSAtIDEgKS5jb25jYXQoeyB2YWx1ZTogdG9rZW5zWyBpIC0gMiBdLnR5cGUgPT09IFwiIFwiID8gXCIqXCIgOiBcIlwiIH0pXG5cdFx0XHRcdFx0KS5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksXG5cdFx0XHRcdFx0bWF0Y2hlcixcblx0XHRcdFx0XHRpIDwgaiAmJiBtYXRjaGVyRnJvbVRva2VucyggdG9rZW5zLnNsaWNlKCBpLCBqICkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIG1hdGNoZXJGcm9tVG9rZW5zKCAodG9rZW5zID0gdG9rZW5zLnNsaWNlKCBqICkpICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlcnMucHVzaCggbWF0Y2hlciApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkge1xuXHR2YXIgYnlTZXQgPSBzZXRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdGJ5RWxlbWVudCA9IGVsZW1lbnRNYXRjaGVycy5sZW5ndGggPiAwLFxuXHRcdHN1cGVyTWF0Y2hlciA9IGZ1bmN0aW9uKCBzZWVkLCBjb250ZXh0LCB4bWwsIHJlc3VsdHMsIG91dGVybW9zdCApIHtcblx0XHRcdHZhciBlbGVtLCBqLCBtYXRjaGVyLFxuXHRcdFx0XHRtYXRjaGVkQ291bnQgPSAwLFxuXHRcdFx0XHRpID0gXCIwXCIsXG5cdFx0XHRcdHVubWF0Y2hlZCA9IHNlZWQgJiYgW10sXG5cdFx0XHRcdHNldE1hdGNoZWQgPSBbXSxcblx0XHRcdFx0Y29udGV4dEJhY2t1cCA9IG91dGVybW9zdENvbnRleHQsXG5cdFx0XHRcdC8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNlZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHRcblx0XHRcdFx0ZWxlbXMgPSBzZWVkIHx8IGJ5RWxlbWVudCAmJiBFeHByLmZpbmRbXCJUQUdcIl0oIFwiKlwiLCBvdXRlcm1vc3QgKSxcblx0XHRcdFx0Ly8gVXNlIGludGVnZXIgZGlycnVucyBpZmYgdGhpcyBpcyB0aGUgb3V0ZXJtb3N0IG1hdGNoZXJcblx0XHRcdFx0ZGlycnVuc1VuaXF1ZSA9IChkaXJydW5zICs9IGNvbnRleHRCYWNrdXAgPT0gbnVsbCA/IDEgOiBNYXRoLnJhbmRvbSgpIHx8IDAuMSksXG5cdFx0XHRcdGxlbiA9IGVsZW1zLmxlbmd0aDtcblxuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0ID09PSBkb2N1bWVudCB8fCBjb250ZXh0IHx8IG91dGVybW9zdDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIGVsZW1lbnRzIHBhc3NpbmcgZWxlbWVudE1hdGNoZXJzIGRpcmVjdGx5IHRvIHJlc3VsdHNcblx0XHRcdC8vIFN1cHBvcnQ6IElFPDksIFNhZmFyaVxuXHRcdFx0Ly8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6IFwibGVuZ3RoXCI7IFNhZmFyaTogPG51bWJlcj4pIG1hdGNoaW5nIGVsZW1lbnRzIGJ5IGlkXG5cdFx0XHRmb3IgKCA7IGkgIT09IGxlbiAmJiAoZWxlbSA9IGVsZW1zW2ldKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRcdGlmICggYnlFbGVtZW50ICYmIGVsZW0gKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0aWYgKCAhY29udGV4dCAmJiBlbGVtLm93bmVyRG9jdW1lbnQgIT09IGRvY3VtZW50ICkge1xuXHRcdFx0XHRcdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcblx0XHRcdFx0XHRcdHhtbCA9ICFkb2N1bWVudElzSFRNTDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IGVsZW1lbnRNYXRjaGVyc1tqKytdKSApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sKSApIHtcblx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFRyYWNrIHVubWF0Y2hlZCBlbGVtZW50cyBmb3Igc2V0IGZpbHRlcnNcblx0XHRcdFx0aWYgKCBieVNldCApIHtcblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXG5cdFx0XHRcdFx0aWYgKCAoZWxlbSA9ICFtYXRjaGVyICYmIGVsZW0pICkge1xuXHRcdFx0XHRcdFx0bWF0Y2hlZENvdW50LS07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTGVuZ3RoZW4gdGhlIGFycmF5IGZvciBldmVyeSBlbGVtZW50LCBtYXRjaGVkIG9yIG5vdFxuXHRcdFx0XHRcdGlmICggc2VlZCApIHtcblx0XHRcdFx0XHRcdHVubWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIGBpYCBpcyBub3cgdGhlIGNvdW50IG9mIGVsZW1lbnRzIHZpc2l0ZWQgYWJvdmUsIGFuZCBhZGRpbmcgaXQgdG8gYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIG1ha2VzIHRoZSBsYXR0ZXIgbm9ubmVnYXRpdmUuXG5cdFx0XHRtYXRjaGVkQ291bnQgKz0gaTtcblxuXHRcdFx0Ly8gQXBwbHkgc2V0IGZpbHRlcnMgdG8gdW5tYXRjaGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBOT1RFOiBUaGlzIGNhbiBiZSBza2lwcGVkIGlmIHRoZXJlIGFyZSBubyB1bm1hdGNoZWQgZWxlbWVudHMgKGkuZS4sIGBtYXRjaGVkQ291bnRgXG5cdFx0XHQvLyBlcXVhbHMgYGlgKSwgdW5sZXNzIHdlIGRpZG4ndCB2aXNpdCBfYW55XyBlbGVtZW50cyBpbiB0aGUgYWJvdmUgbG9vcCBiZWNhdXNlIHdlIGhhdmVcblx0XHRcdC8vIG5vIGVsZW1lbnQgbWF0Y2hlcnMgYW5kIG5vIHNlZWQuXG5cdFx0XHQvLyBJbmNyZW1lbnRpbmcgYW4gaW5pdGlhbGx5LXN0cmluZyBcIjBcIiBgaWAgYWxsb3dzIGBpYCB0byByZW1haW4gYSBzdHJpbmcgb25seSBpbiB0aGF0XG5cdFx0XHQvLyBjYXNlLCB3aGljaCB3aWxsIHJlc3VsdCBpbiBhIFwiMDBcIiBgbWF0Y2hlZENvdW50YCB0aGF0IGRpZmZlcnMgZnJvbSBgaWAgYnV0IGlzIGFsc29cblx0XHRcdC8vIG51bWVyaWNhbGx5IHplcm8uXG5cdFx0XHRpZiAoIGJ5U2V0ICYmIGkgIT09IG1hdGNoZWRDb3VudCApIHtcblx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdHdoaWxlICggKG1hdGNoZXIgPSBzZXRNYXRjaGVyc1tqKytdKSApIHtcblx0XHRcdFx0XHRtYXRjaGVyKCB1bm1hdGNoZWQsIHNldE1hdGNoZWQsIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdC8vIFJlaW50ZWdyYXRlIGVsZW1lbnQgbWF0Y2hlcyB0byBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIHNvcnRpbmdcblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRDb3VudCA+IDAgKSB7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCAhKHVubWF0Y2hlZFtpXSB8fCBzZXRNYXRjaGVkW2ldKSApIHtcblx0XHRcdFx0XHRcdFx0XHRzZXRNYXRjaGVkW2ldID0gcG9wLmNhbGwoIHJlc3VsdHMgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIgdmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzXG5cdFx0XHRcdFx0c2V0TWF0Y2hlZCA9IGNvbmRlbnNlKCBzZXRNYXRjaGVkICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBZGQgbWF0Y2hlcyB0byByZXN1bHRzXG5cdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNldE1hdGNoZWQgKTtcblxuXHRcdFx0XHQvLyBTZWVkbGVzcyBzZXQgbWF0Y2hlcyBzdWNjZWVkaW5nIG11bHRpcGxlIHN1Y2Nlc3NmdWwgbWF0Y2hlcnMgc3RpcHVsYXRlIHNvcnRpbmdcblx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgJiYgIXNlZWQgJiYgc2V0TWF0Y2hlZC5sZW5ndGggPiAwICYmXG5cdFx0XHRcdFx0KCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEgKSB7XG5cblx0XHRcdFx0XHRTaXp6bGUudW5pcXVlU29ydCggcmVzdWx0cyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVyc1xuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dEJhY2t1cDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHVubWF0Y2hlZDtcblx0XHR9O1xuXG5cdHJldHVybiBieVNldCA/XG5cdFx0bWFya0Z1bmN0aW9uKCBzdXBlck1hdGNoZXIgKSA6XG5cdFx0c3VwZXJNYXRjaGVyO1xufVxuXG5jb21waWxlID0gU2l6emxlLmNvbXBpbGUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIG1hdGNoIC8qIEludGVybmFsIFVzZSBPbmx5ICovICkge1xuXHR2YXIgaSxcblx0XHRzZXRNYXRjaGVycyA9IFtdLFxuXHRcdGVsZW1lbnRNYXRjaGVycyA9IFtdLFxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoICFjYWNoZWQgKSB7XG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XG5cdFx0aWYgKCAhbWF0Y2ggKSB7XG5cdFx0XHRtYXRjaCA9IHRva2VuaXplKCBzZWxlY3RvciApO1xuXHRcdH1cblx0XHRpID0gbWF0Y2gubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoW2ldICk7XG5cdFx0XHRpZiAoIGNhY2hlZFsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRzZXRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnRNYXRjaGVycy5wdXNoKCBjYWNoZWQgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWNoZSB0aGUgY29tcGlsZWQgZnVuY3Rpb25cblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlKCBzZWxlY3RvciwgbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkgKTtcblxuXHRcdC8vIFNhdmUgc2VsZWN0b3IgYW5kIHRva2VuaXphdGlvblxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xuXHR9XG5cdHJldHVybiBjYWNoZWQ7XG59O1xuXG4vKipcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfEZ1bmN0aW9ufSBzZWxlY3RvciBBIHNlbGVjdG9yIG9yIGEgcHJlLWNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxuICogQHBhcmFtIHtFbGVtZW50fSBjb250ZXh0XG4gKiBAcGFyYW0ge0FycmF5fSBbcmVzdWx0c11cbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XG4gKi9cbnNlbGVjdCA9IFNpenpsZS5zZWxlY3QgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJlc3VsdHMsIHNlZWQgKSB7XG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxuXHRcdGNvbXBpbGVkID0gdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgc2VsZWN0b3IsXG5cdFx0bWF0Y2ggPSAhc2VlZCAmJiB0b2tlbml6ZSggKHNlbGVjdG9yID0gY29tcGlsZWQuc2VsZWN0b3IgfHwgc2VsZWN0b3IpICk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gVHJ5IHRvIG1pbmltaXplIG9wZXJhdGlvbnMgaWYgdGhlcmUgaXMgb25seSBvbmUgc2VsZWN0b3IgaW4gdGhlIGxpc3QgYW5kIG5vIHNlZWRcblx0Ly8gKHRoZSBsYXR0ZXIgb2Ygd2hpY2ggZ3VhcmFudGVlcyB1cyBjb250ZXh0KVxuXHRpZiAoIG1hdGNoLmxlbmd0aCA9PT0gMSApIHtcblxuXHRcdC8vIFJlZHVjZSBjb250ZXh0IGlmIHRoZSBsZWFkaW5nIGNvbXBvdW5kIHNlbGVjdG9yIGlzIGFuIElEXG5cdFx0dG9rZW5zID0gbWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZSggMCApO1xuXHRcdGlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKHRva2VuID0gdG9rZW5zWzBdKS50eXBlID09PSBcIklEXCIgJiZcblx0XHRcdFx0Y29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJiBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMV0udHlwZSBdICkge1xuXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbXCJJRFwiXSggdG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKHJ1bmVzY2FwZSwgZnVuZXNjYXBlKSwgY29udGV4dCApIHx8IFtdIClbMF07XG5cdFx0XHRpZiAoICFjb250ZXh0ICkge1xuXHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblxuXHRcdFx0Ly8gUHJlY29tcGlsZWQgbWF0Y2hlcnMgd2lsbCBzdGlsbCB2ZXJpZnkgYW5jZXN0cnksIHNvIHN0ZXAgdXAgYSBsZXZlbFxuXHRcdFx0fSBlbHNlIGlmICggY29tcGlsZWQgKSB7XG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcblx0XHRpID0gbWF0Y2hFeHByW1wibmVlZHNDb250ZXh0XCJdLnRlc3QoIHNlbGVjdG9yICkgPyAwIDogdG9rZW5zLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRva2VuID0gdG9rZW5zW2ldO1xuXG5cdFx0XHQvLyBBYm9ydCBpZiB3ZSBoaXQgYSBjb21iaW5hdG9yXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICh0eXBlID0gdG9rZW4udHlwZSkgXSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkge1xuXHRcdFx0XHQvLyBTZWFyY2gsIGV4cGFuZGluZyBjb250ZXh0IGZvciBsZWFkaW5nIHNpYmxpbmcgY29tYmluYXRvcnNcblx0XHRcdFx0aWYgKCAoc2VlZCA9IGZpbmQoXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxuXHRcdFx0XHRcdHJzaWJsaW5nLnRlc3QoIHRva2Vuc1swXS50eXBlICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0XHRcdFx0KSkgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiBzZWVkIGlzIGVtcHR5IG9yIG5vIHRva2VucyByZW1haW4sIHdlIGNhbiByZXR1cm4gZWFybHlcblx0XHRcdFx0XHR0b2tlbnMuc3BsaWNlKCBpLCAxICk7XG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcblx0XHRcdFx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIHNlZWQgKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXG5cdC8vIFByb3ZpZGUgYG1hdGNoYCB0byBhdm9pZCByZXRva2VuaXphdGlvbiBpZiB3ZSBtb2RpZmllZCB0aGUgc2VsZWN0b3IgYWJvdmVcblx0KCBjb21waWxlZCB8fCBjb21waWxlKCBzZWxlY3RvciwgbWF0Y2ggKSApKFxuXHRcdHNlZWQsXG5cdFx0Y29udGV4dCxcblx0XHQhZG9jdW1lbnRJc0hUTUwsXG5cdFx0cmVzdWx0cyxcblx0XHQhY29udGV4dCB8fCByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdCk7XG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcblxuLy8gU29ydCBzdGFiaWxpdHlcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoXCJcIikuc29ydCggc29ydE9yZGVyICkuam9pbihcIlwiKSA9PT0gZXhwYW5kbztcblxuLy8gU3VwcG9ydDogQ2hyb21lIDE0LTM1K1xuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxuc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzID0gISFoYXNEdXBsaWNhdGU7XG5cbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxuc2V0RG9jdW1lbnQoKTtcblxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcbi8vIERldGFjaGVkIG5vZGVzIGNvbmZvdW5kaW5nbHkgZm9sbG93ICplYWNoIG90aGVyKlxuc3VwcG9ydC5zb3J0RGV0YWNoZWQgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHQvLyBTaG91bGQgcmV0dXJuIDEsIGJ1dCByZXR1cm5zIDQgKGZvbGxvd2luZylcblx0cmV0dXJuIGVsLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIikgKSAmIDE7XG59KTtcblxuLy8gU3VwcG9ydDogSUU8OFxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcbi8vIGh0dHBzOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvbXM1MzY0MjklMjhWUy44NSUyOS5hc3B4XG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxhIGhyZWY9JyMnPjwvYT5cIjtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwiaHJlZlwiKSA9PT0gXCIjXCIgO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ0eXBlfGhyZWZ8aGVpZ2h0fHdpZHRoXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxuaWYgKCAhc3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRlbC5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XG5cdGVsLmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcblx0cmV0dXJuIGVsLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcbn0pICkge1xuXHRhZGRIYW5kbGUoIFwidmFsdWVcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGVmYXVsdFZhbHVlO1xuXHRcdH1cblx0fSk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBnZXRBdHRyaWJ1dGVOb2RlIHRvIGZldGNoIGJvb2xlYW5zIHdoZW4gZ2V0QXR0cmlidXRlIGxpZXNcbmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdHJldHVybiBlbC5nZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKSA9PSBudWxsO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHR2YXIgdmFsO1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XG5cdFx0XHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0XHR2YWwudmFsdWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdH1cblx0fSk7XG59XG5cbnJldHVybiBTaXp6bGU7XG5cbn0pKCB3aW5kb3cgKTtcblxuXG5cbmpRdWVyeS5maW5kID0gU2l6emxlO1xualF1ZXJ5LmV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzO1xuXG4vLyBEZXByZWNhdGVkXG5qUXVlcnkuZXhwclsgXCI6XCIgXSA9IGpRdWVyeS5leHByLnBzZXVkb3M7XG5qUXVlcnkudW5pcXVlU29ydCA9IGpRdWVyeS51bmlxdWUgPSBTaXp6bGUudW5pcXVlU29ydDtcbmpRdWVyeS50ZXh0ID0gU2l6emxlLmdldFRleHQ7XG5qUXVlcnkuaXNYTUxEb2MgPSBTaXp6bGUuaXNYTUw7XG5qUXVlcnkuY29udGFpbnMgPSBTaXp6bGUuY29udGFpbnM7XG5qUXVlcnkuZXNjYXBlU2VsZWN0b3IgPSBTaXp6bGUuZXNjYXBlO1xuXG5cblxuXG52YXIgZGlyID0gZnVuY3Rpb24oIGVsZW0sIGRpciwgdW50aWwgKSB7XG5cdHZhciBtYXRjaGVkID0gW10sXG5cdFx0dHJ1bmNhdGUgPSB1bnRpbCAhPT0gdW5kZWZpbmVkO1xuXG5cdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5ICkge1xuXHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGlmICggdHJ1bmNhdGUgJiYgalF1ZXJ5KCBlbGVtICkuaXMoIHVudGlsICkgKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0bWF0Y2hlZC5wdXNoKCBlbGVtICk7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgc2libGluZ3MgPSBmdW5jdGlvbiggbiwgZWxlbSApIHtcblx0dmFyIG1hdGNoZWQgPSBbXTtcblxuXHRmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkge1xuXHRcdGlmICggbi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtICkge1xuXHRcdFx0bWF0Y2hlZC5wdXNoKCBuICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBybmVlZHNDb250ZXh0ID0galF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0O1xuXG5cblxuZnVuY3Rpb24gbm9kZU5hbWUoIGVsZW0sIG5hbWUgKSB7XG5cbiAgcmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cbn07XG52YXIgcnNpbmdsZVRhZyA9ICggL148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2kgKTtcblxuXG5cbi8vIEltcGxlbWVudCB0aGUgaWRlbnRpY2FsIGZ1bmN0aW9uYWxpdHkgZm9yIGZpbHRlciBhbmQgbm90XG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcblx0aWYgKCBpc0Z1bmN0aW9uKCBxdWFsaWZpZXIgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSwgaSApIHtcblx0XHRcdHJldHVybiAhIXF1YWxpZmllci5jYWxsKCBlbGVtLCBpLCBlbGVtICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBTaW5nbGUgZWxlbWVudFxuXHRpZiAoIHF1YWxpZmllci5ub2RlVHlwZSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gQXJyYXlsaWtlIG9mIGVsZW1lbnRzIChqUXVlcnksIGFyZ3VtZW50cywgQXJyYXkpXG5cdGlmICggdHlwZW9mIHF1YWxpZmllciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiAoIGluZGV4T2YuY2FsbCggcXVhbGlmaWVyLCBlbGVtICkgPiAtMSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRmlsdGVyZWQgZGlyZWN0bHkgZm9yIGJvdGggc2ltcGxlIGFuZCBjb21wbGV4IHNlbGVjdG9yc1xuXHRyZXR1cm4galF1ZXJ5LmZpbHRlciggcXVhbGlmaWVyLCBlbGVtZW50cywgbm90ICk7XG59XG5cbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcblx0dmFyIGVsZW0gPSBlbGVtc1sgMCBdO1xuXG5cdGlmICggbm90ICkge1xuXHRcdGV4cHIgPSBcIjpub3QoXCIgKyBleHByICsgXCIpXCI7XG5cdH1cblxuXHRpZiAoIGVsZW1zLmxlbmd0aCA9PT0gMSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW107XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZWxlbS5ub2RlVHlwZSA9PT0gMTtcblx0fSApICk7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZpbmQ6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgaSwgcmV0LFxuXHRcdFx0bGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRzZWxmID0gdGhpcztcblxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggc2VsZlsgaSBdLCB0aGlzICkgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gKSApO1xuXHRcdH1cblxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBbXSApO1xuXG5cdFx0Zm9yICggaSA9IDA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGVuID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCByZXQgKSA6IHJldDtcblx0fSxcblx0ZmlsdGVyOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCBmYWxzZSApICk7XG5cdH0sXG5cdG5vdDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7XG5cdH0sXG5cdGlzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuICEhd2lubm93KFxuXHRcdFx0dGhpcyxcblxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIHBvc2l0aW9uYWwvcmVsYXRpdmUgc2VsZWN0b3IsIGNoZWNrIG1lbWJlcnNoaXAgaW4gdGhlIHJldHVybmVkIHNldFxuXHRcdFx0Ly8gc28gJChcInA6Zmlyc3RcIikuaXMoXCJwOmxhc3RcIikgd29uJ3QgcmV0dXJuIHRydWUgZm9yIGEgZG9jIHdpdGggdHdvIFwicFwiLlxuXHRcdFx0dHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICYmIHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGpRdWVyeSggc2VsZWN0b3IgKSA6XG5cdFx0XHRcdHNlbGVjdG9yIHx8IFtdLFxuXHRcdFx0ZmFsc2Vcblx0XHQpLmxlbmd0aDtcblx0fVxufSApO1xuXG5cbi8vIEluaXRpYWxpemUgYSBqUXVlcnkgb2JqZWN0XG5cblxuLy8gQSBjZW50cmFsIHJlZmVyZW5jZSB0byB0aGUgcm9vdCBqUXVlcnkoZG9jdW1lbnQpXG52YXIgcm9vdGpRdWVyeSxcblxuXHQvLyBBIHNpbXBsZSB3YXkgdG8gY2hlY2sgZm9yIEhUTUwgc3RyaW5nc1xuXHQvLyBQcmlvcml0aXplICNpZCBvdmVyIDx0YWc+IHRvIGF2b2lkIFhTUyB2aWEgbG9jYXRpb24uaGFzaCAoIzk1MjEpXG5cdC8vIFN0cmljdCBIVE1MIHJlY29nbml0aW9uICgjMTEyOTA6IG11c3Qgc3RhcnQgd2l0aCA8KVxuXHQvLyBTaG9ydGN1dCBzaW1wbGUgI2lkIGNhc2UgZm9yIHNwZWVkXG5cdHJxdWlja0V4cHIgPSAvXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLyxcblxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XG5cdFx0dmFyIG1hdGNoLCBlbGVtO1xuXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXG5cdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHQvLyBNZXRob2QgaW5pdCgpIGFjY2VwdHMgYW4gYWx0ZXJuYXRlIHJvb3RqUXVlcnlcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXG5cdFx0cm9vdCA9IHJvb3QgfHwgcm9vdGpRdWVyeTtcblxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3Ncblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGlmICggc2VsZWN0b3JbIDAgXSA9PT0gXCI8XCIgJiZcblx0XHRcdFx0c2VsZWN0b3JbIHNlbGVjdG9yLmxlbmd0aCAtIDEgXSA9PT0gXCI+XCIgJiZcblx0XHRcdFx0c2VsZWN0b3IubGVuZ3RoID49IDMgKSB7XG5cblx0XHRcdFx0Ly8gQXNzdW1lIHRoYXQgc3RyaW5ncyB0aGF0IHN0YXJ0IGFuZCBlbmQgd2l0aCA8PiBhcmUgSFRNTCBhbmQgc2tpcCB0aGUgcmVnZXggY2hlY2tcblx0XHRcdFx0bWF0Y2ggPSBbIG51bGwsIHNlbGVjdG9yLCBudWxsIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYXRjaCBodG1sIG9yIG1ha2Ugc3VyZSBubyBjb250ZXh0IGlzIHNwZWNpZmllZCBmb3IgI2lkXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJChodG1sKSAtPiAkKGFycmF5KVxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XG5cdFx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQgaW5zdGFuY2VvZiBqUXVlcnkgPyBjb250ZXh0WyAwIF0gOiBjb250ZXh0O1xuXG5cdFx0XHRcdFx0Ly8gT3B0aW9uIHRvIHJ1biBzY3JpcHRzIGlzIHRydWUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMsIGpRdWVyeS5wYXJzZUhUTUwoXG5cdFx0XHRcdFx0XHRtYXRjaFsgMSBdLFxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcblx0XHRcdFx0XHRcdHRydWVcblx0XHRcdFx0XHQpICk7XG5cblx0XHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCwgcHJvcHMpXG5cdFx0XHRcdFx0aWYgKCByc2luZ2xlVGFnLnRlc3QoIG1hdGNoWyAxIF0gKSAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29udGV4dCApICkge1xuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBQcm9wZXJ0aWVzIG9mIGNvbnRleHQgYXJlIGNhbGxlZCBhcyBtZXRob2RzIGlmIHBvc3NpYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhpc1sgbWF0Y2ggXSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgb3RoZXJ3aXNlIHNldCBhcyBhdHRyaWJ1dGVzXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpcy5hdHRyKCBtYXRjaCwgY29udGV4dFsgbWF0Y2ggXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKCNpZClcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIG1hdGNoWyAyIF0gKTtcblxuXHRcdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSW5qZWN0IHRoZSBlbGVtZW50IGRpcmVjdGx5IGludG8gdGhlIGpRdWVyeSBvYmplY3Rcblx0XHRcdFx0XHRcdHRoaXNbIDAgXSA9IGVsZW07XG5cdFx0XHRcdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXG5cdFx0XHR9IGVsc2UgaWYgKCAhY29udGV4dCB8fCBjb250ZXh0LmpxdWVyeSApIHtcblx0XHRcdFx0cmV0dXJuICggY29udGV4dCB8fCByb290ICkuZmluZCggc2VsZWN0b3IgKTtcblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsIGNvbnRleHQpXG5cdFx0XHQvLyAod2hpY2ggaXMganVzdCBlcXVpdmFsZW50IHRvOiAkKGNvbnRleHQpLmZpbmQoZXhwcilcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmNvbnN0cnVjdG9yKCBjb250ZXh0ICkuZmluZCggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdC8vIEhBTkRMRTogJChET01FbGVtZW50KVxuXHRcdH0gZWxzZSBpZiAoIHNlbGVjdG9yLm5vZGVUeXBlICkge1xuXHRcdFx0dGhpc1sgMCBdID0gc2VsZWN0b3I7XG5cdFx0XHR0aGlzLmxlbmd0aCA9IDE7XG5cdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdC8vIEhBTkRMRTogJChmdW5jdGlvbilcblx0XHQvLyBTaG9ydGN1dCBmb3IgZG9jdW1lbnQgcmVhZHlcblx0XHR9IGVsc2UgaWYgKCBpc0Z1bmN0aW9uKCBzZWxlY3RvciApICkge1xuXHRcdFx0cmV0dXJuIHJvb3QucmVhZHkgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHJvb3QucmVhZHkoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIEV4ZWN1dGUgaW1tZWRpYXRlbHkgaWYgcmVhZHkgaXMgbm90IHByZXNlbnRcblx0XHRcdFx0c2VsZWN0b3IoIGpRdWVyeSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWFrZUFycmF5KCBzZWxlY3RvciwgdGhpcyApO1xuXHR9O1xuXG4vLyBHaXZlIHRoZSBpbml0IGZ1bmN0aW9uIHRoZSBqUXVlcnkgcHJvdG90eXBlIGZvciBsYXRlciBpbnN0YW50aWF0aW9uXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcblxuLy8gSW5pdGlhbGl6ZSBjZW50cmFsIHJlZmVyZW5jZVxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcblxuXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXG5cblx0Ly8gTWV0aG9kcyBndWFyYW50ZWVkIHRvIHByb2R1Y2UgYSB1bmlxdWUgc2V0IHdoZW4gc3RhcnRpbmcgZnJvbSBhIHVuaXF1ZSBzZXRcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcblx0XHRjaGlsZHJlbjogdHJ1ZSxcblx0XHRjb250ZW50czogdHJ1ZSxcblx0XHRuZXh0OiB0cnVlLFxuXHRcdHByZXY6IHRydWVcblx0fTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRoYXM6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7XG5cdFx0dmFyIHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxuXHRcdFx0bCA9IHRhcmdldHMubGVuZ3RoO1xuXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBpID0gMDtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHRoaXMsIHRhcmdldHNbIGkgXSApICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XG5cdFx0dmFyIGN1cixcblx0XHRcdGkgPSAwLFxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0bWF0Y2hlZCA9IFtdLFxuXHRcdFx0dGFyZ2V0cyA9IHR5cGVvZiBzZWxlY3RvcnMgIT09IFwic3RyaW5nXCIgJiYgalF1ZXJ5KCBzZWxlY3RvcnMgKTtcblxuXHRcdC8vIFBvc2l0aW9uYWwgc2VsZWN0b3JzIG5ldmVyIG1hdGNoLCBzaW5jZSB0aGVyZSdzIG5vIF9zZWxlY3Rpb25fIGNvbnRleHRcblx0XHRpZiAoICFybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9ycyApICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xuXG5cdFx0XHRcdFx0Ly8gQWx3YXlzIHNraXAgZG9jdW1lbnQgZnJhZ21lbnRzXG5cdFx0XHRcdFx0aWYgKCBjdXIubm9kZVR5cGUgPCAxMSAmJiAoIHRhcmdldHMgP1xuXHRcdFx0XHRcdFx0dGFyZ2V0cy5pbmRleCggY3VyICkgPiAtMSA6XG5cblx0XHRcdFx0XHRcdC8vIERvbid0IHBhc3Mgbm9uLWVsZW1lbnRzIHRvIFNpenpsZVxuXHRcdFx0XHRcdFx0Y3VyLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggY3VyLCBzZWxlY3RvcnMgKSApICkge1xuXG5cdFx0XHRcdFx0XHRtYXRjaGVkLnB1c2goIGN1ciApO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkLmxlbmd0aCA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApIDogbWF0Y2hlZCApO1xuXHR9LFxuXG5cdC8vIERldGVybWluZSB0aGUgcG9zaXRpb24gb2YgYW4gZWxlbWVudCB3aXRoaW4gdGhlIHNldFxuXHRpbmRleDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBObyBhcmd1bWVudCwgcmV0dXJuIGluZGV4IGluIHBhcmVudFxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XG5cdFx0fVxuXG5cdFx0Ly8gSW5kZXggaW4gc2VsZWN0b3Jcblx0XHRpZiAoIHR5cGVvZiBlbGVtID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggalF1ZXJ5KCBlbGVtICksIHRoaXNbIDAgXSApO1xuXHRcdH1cblxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxuXHRcdHJldHVybiBpbmRleE9mLmNhbGwoIHRoaXMsXG5cblx0XHRcdC8vIElmIGl0IHJlY2VpdmVzIGEgalF1ZXJ5IG9iamVjdCwgdGhlIGZpcnN0IGVsZW1lbnQgaXMgdXNlZFxuXHRcdFx0ZWxlbS5qcXVlcnkgPyBlbGVtWyAwIF0gOiBlbGVtXG5cdFx0KTtcblx0fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLmdldCgpLCBqUXVlcnkoIHNlbGVjdG9yLCBjb250ZXh0ICkgKVxuXHRcdFx0KVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/XG5cdFx0XHR0aGlzLnByZXZPYmplY3QgOiB0aGlzLnByZXZPYmplY3QuZmlsdGVyKCBzZWxlY3RvciApXG5cdFx0KTtcblx0fVxufSApO1xuXG5mdW5jdGlvbiBzaWJsaW5nKCBjdXIsIGRpciApIHtcblx0d2hpbGUgKCAoIGN1ciA9IGN1clsgZGlyIF0gKSAmJiBjdXIubm9kZVR5cGUgIT09IDEgKSB7fVxuXHRyZXR1cm4gY3VyO1xufVxuXG5qUXVlcnkuZWFjaCgge1xuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0cmV0dXJuIHBhcmVudCAmJiBwYXJlbnQubm9kZVR5cGUgIT09IDExID8gcGFyZW50IDogbnVsbDtcblx0fSxcblx0cGFyZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIgKTtcblx0fSxcblx0cGFyZW50c1VudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwYXJlbnROb2RlXCIsIHVudGlsICk7XG5cdH0sXG5cdG5leHQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dEFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXZBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIgKTtcblx0fSxcblx0bmV4dFVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJuZXh0U2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRwcmV2VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiLCB1bnRpbCApO1xuXHR9LFxuXHRzaWJsaW5nczogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCAoIGVsZW0ucGFyZW50Tm9kZSB8fCB7fSApLmZpcnN0Q2hpbGQsIGVsZW0gKTtcblx0fSxcblx0Y2hpbGRyZW46IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggZWxlbS5maXJzdENoaWxkICk7XG5cdH0sXG5cdGNvbnRlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmNvbnRlbnREb2N1bWVudCAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLmNvbnRlbnREb2N1bWVudDtcblx0XHR9XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seSwgaU9TIDcgb25seSwgQW5kcm9pZCBCcm93c2VyIDw9NC4zIG9ubHlcblx0XHQvLyBUcmVhdCB0aGUgdGVtcGxhdGUgZWxlbWVudCBhcyBhIHJlZ3VsYXIgb25lIGluIGJyb3dzZXJzIHRoYXRcblx0XHQvLyBkb24ndCBzdXBwb3J0IGl0LlxuXHRcdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGVtcGxhdGVcIiApICkge1xuXHRcdFx0ZWxlbSA9IGVsZW0uY29udGVudCB8fCBlbGVtO1xuXHRcdH1cblxuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBlbGVtLmNoaWxkTm9kZXMgKTtcblx0fVxufSwgZnVuY3Rpb24oIG5hbWUsIGZuICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCB1bnRpbCwgc2VsZWN0b3IgKSB7XG5cdFx0dmFyIG1hdGNoZWQgPSBqUXVlcnkubWFwKCB0aGlzLCBmbiwgdW50aWwgKTtcblxuXHRcdGlmICggbmFtZS5zbGljZSggLTUgKSAhPT0gXCJVbnRpbFwiICkge1xuXHRcdFx0c2VsZWN0b3IgPSB1bnRpbDtcblx0XHR9XG5cblx0XHRpZiAoIHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdG1hdGNoZWQgPSBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgbWF0Y2hlZCApO1xuXHRcdH1cblxuXHRcdGlmICggdGhpcy5sZW5ndGggPiAxICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgZHVwbGljYXRlc1xuXHRcdFx0aWYgKCAhZ3VhcmFudGVlZFVuaXF1ZVsgbmFtZSBdICkge1xuXHRcdFx0XHRqUXVlcnkudW5pcXVlU29ydCggbWF0Y2hlZCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXZlcnNlIG9yZGVyIGZvciBwYXJlbnRzKiBhbmQgcHJldi1kZXJpdmF0aXZlc1xuXHRcdFx0aWYgKCBycGFyZW50c3ByZXYudGVzdCggbmFtZSApICkge1xuXHRcdFx0XHRtYXRjaGVkLnJldmVyc2UoKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQgKTtcblx0fTtcbn0gKTtcbnZhciBybm90aHRtbHdoaXRlID0gKCAvW15cXHgyMFxcdFxcclxcblxcZl0rL2cgKTtcblxuXG5cbi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzXG5mdW5jdGlvbiBjcmVhdGVPcHRpb25zKCBvcHRpb25zICkge1xuXHR2YXIgb2JqZWN0ID0ge307XG5cdGpRdWVyeS5lYWNoKCBvcHRpb25zLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW10sIGZ1bmN0aW9uKCBfLCBmbGFnICkge1xuXHRcdG9iamVjdFsgZmxhZyBdID0gdHJ1ZTtcblx0fSApO1xuXHRyZXR1cm4gb2JqZWN0O1xufVxuXG4vKlxuICogQ3JlYXRlIGEgY2FsbGJhY2sgbGlzdCB1c2luZyB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnM6XG4gKlxuICpcdG9wdGlvbnM6IGFuIG9wdGlvbmFsIGxpc3Qgb2Ygc3BhY2Utc2VwYXJhdGVkIG9wdGlvbnMgdGhhdCB3aWxsIGNoYW5nZSBob3dcbiAqXHRcdFx0dGhlIGNhbGxiYWNrIGxpc3QgYmVoYXZlcyBvciBhIG1vcmUgdHJhZGl0aW9uYWwgb3B0aW9uIG9iamVjdFxuICpcbiAqIEJ5IGRlZmF1bHQgYSBjYWxsYmFjayBsaXN0IHdpbGwgYWN0IGxpa2UgYW4gZXZlbnQgY2FsbGJhY2sgbGlzdCBhbmQgY2FuIGJlXG4gKiBcImZpcmVkXCIgbXVsdGlwbGUgdGltZXMuXG4gKlxuICogUG9zc2libGUgb3B0aW9uczpcbiAqXG4gKlx0b25jZTpcdFx0XHR3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdG1lbW9yeTpcdFx0XHR3aWxsIGtlZXAgdHJhY2sgb2YgcHJldmlvdXMgdmFsdWVzIGFuZCB3aWxsIGNhbGwgYW55IGNhbGxiYWNrIGFkZGVkXG4gKlx0XHRcdFx0XHRhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCBcIm1lbW9yaXplZFwiXG4gKlx0XHRcdFx0XHR2YWx1ZXMgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0dW5pcXVlOlx0XHRcdHdpbGwgZW5zdXJlIGEgY2FsbGJhY2sgY2FuIG9ubHkgYmUgYWRkZWQgb25jZSAobm8gZHVwbGljYXRlIGluIHRoZSBsaXN0KVxuICpcbiAqXHRzdG9wT25GYWxzZTpcdGludGVycnVwdCBjYWxsaW5ncyB3aGVuIGEgY2FsbGJhY2sgcmV0dXJucyBmYWxzZVxuICpcbiAqL1xualF1ZXJ5LkNhbGxiYWNrcyA9IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdC8vIENvbnZlcnQgb3B0aW9ucyBmcm9tIFN0cmluZy1mb3JtYXR0ZWQgdG8gT2JqZWN0LWZvcm1hdHRlZCBpZiBuZWVkZWRcblx0Ly8gKHdlIGNoZWNrIGluIGNhY2hlIGZpcnN0KVxuXHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgP1xuXHRcdGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSA6XG5cdFx0alF1ZXJ5LmV4dGVuZCgge30sIG9wdGlvbnMgKTtcblxuXHR2YXIgLy8gRmxhZyB0byBrbm93IGlmIGxpc3QgaXMgY3VycmVudGx5IGZpcmluZ1xuXHRcdGZpcmluZyxcblxuXHRcdC8vIExhc3QgZmlyZSB2YWx1ZSBmb3Igbm9uLWZvcmdldHRhYmxlIGxpc3RzXG5cdFx0bWVtb3J5LFxuXG5cdFx0Ly8gRmxhZyB0byBrbm93IGlmIGxpc3Qgd2FzIGFscmVhZHkgZmlyZWRcblx0XHRmaXJlZCxcblxuXHRcdC8vIEZsYWcgdG8gcHJldmVudCBmaXJpbmdcblx0XHRsb2NrZWQsXG5cblx0XHQvLyBBY3R1YWwgY2FsbGJhY2sgbGlzdFxuXHRcdGxpc3QgPSBbXSxcblxuXHRcdC8vIFF1ZXVlIG9mIGV4ZWN1dGlvbiBkYXRhIGZvciByZXBlYXRhYmxlIGxpc3RzXG5cdFx0cXVldWUgPSBbXSxcblxuXHRcdC8vIEluZGV4IG9mIGN1cnJlbnRseSBmaXJpbmcgY2FsbGJhY2sgKG1vZGlmaWVkIGJ5IGFkZC9yZW1vdmUgYXMgbmVlZGVkKVxuXHRcdGZpcmluZ0luZGV4ID0gLTEsXG5cblx0XHQvLyBGaXJlIGNhbGxiYWNrc1xuXHRcdGZpcmUgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5mb3JjZSBzaW5nbGUtZmlyaW5nXG5cdFx0XHRsb2NrZWQgPSBsb2NrZWQgfHwgb3B0aW9ucy5vbmNlO1xuXG5cdFx0XHQvLyBFeGVjdXRlIGNhbGxiYWNrcyBmb3IgYWxsIHBlbmRpbmcgZXhlY3V0aW9ucyxcblx0XHRcdC8vIHJlc3BlY3RpbmcgZmlyaW5nSW5kZXggb3ZlcnJpZGVzIGFuZCBydW50aW1lIGNoYW5nZXNcblx0XHRcdGZpcmVkID0gZmlyaW5nID0gdHJ1ZTtcblx0XHRcdGZvciAoIDsgcXVldWUubGVuZ3RoOyBmaXJpbmdJbmRleCA9IC0xICkge1xuXHRcdFx0XHRtZW1vcnkgPSBxdWV1ZS5zaGlmdCgpO1xuXHRcdFx0XHR3aGlsZSAoICsrZmlyaW5nSW5kZXggPCBsaXN0Lmxlbmd0aCApIHtcblxuXHRcdFx0XHRcdC8vIFJ1biBjYWxsYmFjayBhbmQgY2hlY2sgZm9yIGVhcmx5IHRlcm1pbmF0aW9uXG5cdFx0XHRcdFx0aWYgKCBsaXN0WyBmaXJpbmdJbmRleCBdLmFwcGx5KCBtZW1vcnlbIDAgXSwgbWVtb3J5WyAxIF0gKSA9PT0gZmFsc2UgJiZcblx0XHRcdFx0XHRcdG9wdGlvbnMuc3RvcE9uRmFsc2UgKSB7XG5cblx0XHRcdFx0XHRcdC8vIEp1bXAgdG8gZW5kIGFuZCBmb3JnZXQgdGhlIGRhdGEgc28gLmFkZCBkb2Vzbid0IHJlLWZpcmVcblx0XHRcdFx0XHRcdGZpcmluZ0luZGV4ID0gbGlzdC5sZW5ndGg7XG5cdFx0XHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yZ2V0IHRoZSBkYXRhIGlmIHdlJ3JlIGRvbmUgd2l0aCBpdFxuXHRcdFx0aWYgKCAhb3B0aW9ucy5tZW1vcnkgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0fVxuXG5cdFx0XHRmaXJpbmcgPSBmYWxzZTtcblxuXHRcdFx0Ly8gQ2xlYW4gdXAgaWYgd2UncmUgZG9uZSBmaXJpbmcgZm9yIGdvb2Rcblx0XHRcdGlmICggbG9ja2VkICkge1xuXG5cdFx0XHRcdC8vIEtlZXAgYW4gZW1wdHkgbGlzdCBpZiB3ZSBoYXZlIGRhdGEgZm9yIGZ1dHVyZSBhZGQgY2FsbHNcblx0XHRcdFx0aWYgKCBtZW1vcnkgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgdGhpcyBvYmplY3QgaXMgc3BlbnRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRsaXN0ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHQvLyBBY3R1YWwgQ2FsbGJhY2tzIG9iamVjdFxuXHRcdHNlbGYgPSB7XG5cblx0XHRcdC8vIEFkZCBhIGNhbGxiYWNrIG9yIGEgY29sbGVjdGlvbiBvZiBjYWxsYmFja3MgdG8gdGhlIGxpc3Rcblx0XHRcdGFkZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggbGlzdCApIHtcblxuXHRcdFx0XHRcdC8vIElmIHdlIGhhdmUgbWVtb3J5IGZyb20gYSBwYXN0IHJ1biwgd2Ugc2hvdWxkIGZpcmUgYWZ0ZXIgYWRkaW5nXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmluZ0luZGV4ID0gbGlzdC5sZW5ndGggLSAxO1xuXHRcdFx0XHRcdFx0cXVldWUucHVzaCggbWVtb3J5ICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0KCBmdW5jdGlvbiBhZGQoIGFyZ3MgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggYXJncywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoICFvcHRpb25zLnVuaXF1ZSB8fCAhc2VsZi5oYXMoIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKCBhcmcgKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGFyZyAmJiBhcmcubGVuZ3RoICYmIHRvVHlwZSggYXJnICkgIT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBJbnNwZWN0IHJlY3Vyc2l2ZWx5XG5cdFx0XHRcdFx0XHRcdFx0YWRkKCBhcmcgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdH0gKSggYXJndW1lbnRzICk7XG5cblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhIGNhbGxiYWNrIGZyb20gdGhlIGxpc3Rcblx0XHRcdHJlbW92ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0dmFyIGluZGV4O1xuXHRcdFx0XHRcdHdoaWxlICggKCBpbmRleCA9IGpRdWVyeS5pbkFycmF5KCBhcmcsIGxpc3QsIGluZGV4ICkgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0bGlzdC5zcGxpY2UoIGluZGV4LCAxICk7XG5cblx0XHRcdFx0XHRcdC8vIEhhbmRsZSBmaXJpbmcgaW5kZXhlc1xuXHRcdFx0XHRcdFx0aWYgKCBpbmRleCA8PSBmaXJpbmdJbmRleCApIHtcblx0XHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXgtLTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDaGVjayBpZiBhIGdpdmVuIGNhbGxiYWNrIGlzIGluIHRoZSBsaXN0LlxuXHRcdFx0Ly8gSWYgbm8gYXJndW1lbnQgaXMgZ2l2ZW4sIHJldHVybiB3aGV0aGVyIG9yIG5vdCBsaXN0IGhhcyBjYWxsYmFja3MgYXR0YWNoZWQuXG5cdFx0XHRoYXM6IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRcdFx0cmV0dXJuIGZuID9cblx0XHRcdFx0XHRqUXVlcnkuaW5BcnJheSggZm4sIGxpc3QgKSA+IC0xIDpcblx0XHRcdFx0XHRsaXN0Lmxlbmd0aCA+IDA7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBSZW1vdmUgYWxsIGNhbGxiYWNrcyBmcm9tIHRoZSBsaXN0XG5cdFx0XHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggbGlzdCApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlIGFuZCAuYWRkXG5cdFx0XHQvLyBBYm9ydCBhbnkgY3VycmVudC9wZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdC8vIENsZWFyIGFsbCBjYWxsYmFja3MgYW5kIHZhbHVlc1xuXHRcdFx0ZGlzYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XG5cdFx0XHRcdGxpc3QgPSBtZW1vcnkgPSBcIlwiO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRkaXNhYmxlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhbGlzdDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmVcblx0XHRcdC8vIEFsc28gZGlzYWJsZSAuYWRkIHVubGVzcyB3ZSBoYXZlIG1lbW9yeSAoc2luY2UgaXQgd291bGQgaGF2ZSBubyBlZmZlY3QpXG5cdFx0XHQvLyBBYm9ydCBhbnkgcGVuZGluZyBleGVjdXRpb25zXG5cdFx0XHRsb2NrOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0aWYgKCAhbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0bG9ja2VkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhbG9ja2VkO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZVdpdGg6IGZ1bmN0aW9uKCBjb250ZXh0LCBhcmdzICkge1xuXHRcdFx0XHRpZiAoICFsb2NrZWQgKSB7XG5cdFx0XHRcdFx0YXJncyA9IGFyZ3MgfHwgW107XG5cdFx0XHRcdFx0YXJncyA9IFsgY29udGV4dCwgYXJncy5zbGljZSA/IGFyZ3Muc2xpY2UoKSA6IGFyZ3MgXTtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBhcmdzICk7XG5cdFx0XHRcdFx0aWYgKCAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyZSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGwgYWxsIHRoZSBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gYXJndW1lbnRzXG5cdFx0XHRmaXJlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0c2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiB0aGUgY2FsbGJhY2tzIGhhdmUgYWxyZWFkeSBiZWVuIGNhbGxlZCBhdCBsZWFzdCBvbmNlXG5cdFx0XHRmaXJlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhIWZpcmVkO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0cmV0dXJuIHNlbGY7XG59O1xuXG5cbmZ1bmN0aW9uIElkZW50aXR5KCB2ICkge1xuXHRyZXR1cm4gdjtcbn1cbmZ1bmN0aW9uIFRocm93ZXIoIGV4ICkge1xuXHR0aHJvdyBleDtcbn1cblxuZnVuY3Rpb24gYWRvcHRWYWx1ZSggdmFsdWUsIHJlc29sdmUsIHJlamVjdCwgbm9WYWx1ZSApIHtcblx0dmFyIG1ldGhvZDtcblxuXHR0cnkge1xuXG5cdFx0Ly8gQ2hlY2sgZm9yIHByb21pc2UgYXNwZWN0IGZpcnN0IHRvIHByaXZpbGVnZSBzeW5jaHJvbm91cyBiZWhhdmlvclxuXHRcdGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS5wcm9taXNlICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSApLmRvbmUoIHJlc29sdmUgKS5mYWlsKCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIHRoZW5hYmxlc1xuXHRcdH0gZWxzZSBpZiAoIHZhbHVlICYmIGlzRnVuY3Rpb24oICggbWV0aG9kID0gdmFsdWUudGhlbiApICkgKSB7XG5cdFx0XHRtZXRob2QuY2FsbCggdmFsdWUsIHJlc29sdmUsIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgbm9uLXRoZW5hYmxlc1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIENvbnRyb2wgYHJlc29sdmVgIGFyZ3VtZW50cyBieSBsZXR0aW5nIEFycmF5I3NsaWNlIGNhc3QgYm9vbGVhbiBgbm9WYWx1ZWAgdG8gaW50ZWdlcjpcblx0XHRcdC8vICogZmFsc2U6IFsgdmFsdWUgXS5zbGljZSggMCApID0+IHJlc29sdmUoIHZhbHVlIClcblx0XHRcdC8vICogdHJ1ZTogWyB2YWx1ZSBdLnNsaWNlKCAxICkgPT4gcmVzb2x2ZSgpXG5cdFx0XHRyZXNvbHZlLmFwcGx5KCB1bmRlZmluZWQsIFsgdmFsdWUgXS5zbGljZSggbm9WYWx1ZSApICk7XG5cdFx0fVxuXG5cdC8vIEZvciBQcm9taXNlcy9BKywgY29udmVydCBleGNlcHRpb25zIGludG8gcmVqZWN0aW9uc1xuXHQvLyBTaW5jZSBqUXVlcnkud2hlbiBkb2Vzbid0IHVud3JhcCB0aGVuYWJsZXMsIHdlIGNhbiBza2lwIHRoZSBleHRyYSBjaGVja3MgYXBwZWFyaW5nIGluXG5cdC8vIERlZmVycmVkI3RoZW4gdG8gY29uZGl0aW9uYWxseSBzdXBwcmVzcyByZWplY3Rpb24uXG5cdH0gY2F0Y2ggKCB2YWx1ZSApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIG9ubHlcblx0XHQvLyBTdHJpY3QgbW9kZSBmdW5jdGlvbnMgaW52b2tlZCB3aXRob3V0IC5jYWxsLy5hcHBseSBnZXQgZ2xvYmFsLW9iamVjdCBjb250ZXh0XG5cdFx0cmVqZWN0LmFwcGx5KCB1bmRlZmluZWQsIFsgdmFsdWUgXSApO1xuXHR9XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHREZWZlcnJlZDogZnVuY3Rpb24oIGZ1bmMgKSB7XG5cdFx0dmFyIHR1cGxlcyA9IFtcblxuXHRcdFx0XHQvLyBhY3Rpb24sIGFkZCBsaXN0ZW5lciwgY2FsbGJhY2tzLFxuXHRcdFx0XHQvLyAuLi4gLnRoZW4gaGFuZGxlcnMsIGFyZ3VtZW50IGluZGV4LCBbZmluYWwgc3RhdGVdXG5cdFx0XHRcdFsgXCJub3RpZnlcIiwgXCJwcm9ncmVzc1wiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApLCAyIF0sXG5cdFx0XHRcdFsgXCJyZXNvbHZlXCIsIFwiZG9uZVwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgMCwgXCJyZXNvbHZlZFwiIF0sXG5cdFx0XHRcdFsgXCJyZWplY3RcIiwgXCJmYWlsXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAxLCBcInJlamVjdGVkXCIgXVxuXHRcdFx0XSxcblx0XHRcdHN0YXRlID0gXCJwZW5kaW5nXCIsXG5cdFx0XHRwcm9taXNlID0ge1xuXHRcdFx0XHRzdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHN0YXRlO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRhbHdheXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGRlZmVycmVkLmRvbmUoIGFyZ3VtZW50cyApLmZhaWwoIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRcImNhdGNoXCI6IGZ1bmN0aW9uKCBmbiApIHtcblx0XHRcdFx0XHRyZXR1cm4gcHJvbWlzZS50aGVuKCBudWxsLCBmbiApO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEtlZXAgcGlwZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0cGlwZTogZnVuY3Rpb24oIC8qIGZuRG9uZSwgZm5GYWlsLCBmblByb2dyZXNzICovICkge1xuXHRcdFx0XHRcdHZhciBmbnMgPSBhcmd1bWVudHM7XG5cblx0XHRcdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTWFwIHR1cGxlcyAocHJvZ3Jlc3MsIGRvbmUsIGZhaWwpIHRvIGFyZ3VtZW50cyAoZG9uZSwgZmFpbCwgcHJvZ3Jlc3MpXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGlzRnVuY3Rpb24oIGZuc1sgdHVwbGVbIDQgXSBdICkgJiYgZm5zWyB0dXBsZVsgNCBdIF07XG5cblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQucHJvZ3Jlc3MoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIubm90aWZ5IH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmRvbmUoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVzb2x2ZSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5mYWlsKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlamVjdCB9KVxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQgPSBmbiAmJiBmbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCAmJiBpc0Z1bmN0aW9uKCByZXR1cm5lZC5wcm9taXNlICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC5wcm9taXNlKClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZG9uZSggbmV3RGVmZXIucmVzb2x2ZSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5mYWlsKCBuZXdEZWZlci5yZWplY3QgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXJbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRmbiA/IFsgcmV0dXJuZWQgXSA6IGFyZ3VtZW50c1xuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdGZucyA9IG51bGw7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIG9uRnVsZmlsbGVkLCBvblJlamVjdGVkLCBvblByb2dyZXNzICkge1xuXHRcdFx0XHRcdHZhciBtYXhEZXB0aCA9IDA7XG5cdFx0XHRcdFx0ZnVuY3Rpb24gcmVzb2x2ZSggZGVwdGgsIGRlZmVycmVkLCBoYW5kbGVyLCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHR2YXIgdGhhdCA9IHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0YXJncyA9IGFyZ3VtZW50cyxcblx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHR2YXIgcmV0dXJuZWQsIHRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4zXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01OVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIGRvdWJsZS1yZXNvbHV0aW9uIGF0dGVtcHRzXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoIDwgbWF4RGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybjtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQgPSBoYW5kbGVyLmFwcGx5KCB0aGF0LCBhcmdzICk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjFcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTQ4XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkID09PSBkZWZlcnJlZC5wcm9taXNlKCkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoIFwiVGhlbmFibGUgc2VsZi1yZXNvbHV0aW9uXCIgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbnMgMi4zLjMuMSwgMy41XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01NFxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNzVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIFJldHJpZXZlIGB0aGVuYCBvbmx5IG9uY2Vcblx0XHRcdFx0XHRcdFx0XHRcdHRoZW4gPSByZXR1cm5lZCAmJlxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBjaGVjayBvYmplY3RzIGFuZCBmdW5jdGlvbnMgZm9yIHRoZW5hYmlsaXR5XG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggdHlwZW9mIHJldHVybmVkID09PSBcIm9iamVjdFwiIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHJldHVybmVkID09PSBcImZ1bmN0aW9uXCIgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZC50aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYSByZXR1cm5lZCB0aGVuYWJsZVxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGVuICkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3BlY2lhbCBwcm9jZXNzb3JzIChub3RpZnkpIGp1c3Qgd2FpdCBmb3IgcmVzb2x1dGlvblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gTm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGFsc28gaG9vayBpbnRvIHByb2dyZXNzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyAuLi5hbmQgZGlzcmVnYXJkIG9sZGVyIHJlc29sdXRpb24gdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWF4RGVwdGgrKztcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhbGwgb3RoZXIgcmV0dXJuZWQgdmFsdWVzXG5cdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gSWRlbnRpdHkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyByZXR1cm5lZCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gUHJvY2VzcyB0aGUgdmFsdWUocylcblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRGVmYXVsdCBwcm9jZXNzIGlzIHJlc29sdmVcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCBzcGVjaWFsIHx8IGRlZmVycmVkLnJlc29sdmVXaXRoICkoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBub3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgY2F0Y2ggYW5kIHJlamVjdCBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcyA9IHNwZWNpYWwgP1xuXHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93KCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rKCBlLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuNC4xXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgcG9zdC1yZXNvbHV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICsgMSA+PSBtYXhEZXB0aCApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gYW5kIG11bHRpcGxlIHZhbHVlcyAobm9uLXNwZWMgYmVoYXZpb3IpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IFRocm93ZXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIGUgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuMVxuXHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC01N1xuXHRcdFx0XHRcdFx0XHQvLyBSZS1yZXNvbHZlIHByb21pc2VzIGltbWVkaWF0ZWx5IHRvIGRvZGdlIGZhbHNlIHJlamVjdGlvbiBmcm9tXG5cdFx0XHRcdFx0XHRcdC8vIHN1YnNlcXVlbnQgZXJyb3JzXG5cdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKSB7XG5cdFx0XHRcdFx0XHRcdFx0cHJvY2VzcygpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ2FsbCBhbiBvcHRpb25hbCBob29rIHRvIHJlY29yZCB0aGUgc3RhY2ssIGluIGNhc2Ugb2YgZXhjZXB0aW9uXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc2luY2UgaXQncyBvdGhlcndpc2UgbG9zdCB3aGVuIGV4ZWN1dGlvbiBnb2VzIGFzeW5jXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlID0galF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggcHJvY2VzcyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblxuXHRcdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblByb2dyZXNzICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25Qcm9ncmVzcyA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlci5ub3RpZnlXaXRoXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDEgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uRnVsZmlsbGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25GdWxmaWxsZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHlcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAyIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvblJlamVjdGVkICkgP1xuXHRcdFx0XHRcdFx0XHRcdFx0b25SZWplY3RlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRUaHJvd2VyXG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fSApLnByb21pc2UoKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBHZXQgYSBwcm9taXNlIGZvciB0aGlzIGRlZmVycmVkXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3Rcblx0XHRcdFx0cHJvbWlzZTogZnVuY3Rpb24oIG9iaiApIHtcblx0XHRcdFx0XHRyZXR1cm4gb2JqICE9IG51bGwgPyBqUXVlcnkuZXh0ZW5kKCBvYmosIHByb21pc2UgKSA6IHByb21pc2U7XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHRkZWZlcnJlZCA9IHt9O1xuXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xuXHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblx0XHRcdHZhciBsaXN0ID0gdHVwbGVbIDIgXSxcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgNSBdO1xuXG5cdFx0XHQvLyBwcm9taXNlLnByb2dyZXNzID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZG9uZSA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmZhaWwgPSBsaXN0LmFkZFxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XG5cblx0XHRcdC8vIEhhbmRsZSBzdGF0ZVxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcblx0XHRcdFx0bGlzdC5hZGQoXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZXNvbHZlZFwiIChpLmUuLCBmdWxmaWxsZWQpXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVqZWN0ZWRcIlxuXHRcdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcblx0XHRcdFx0XHR9LFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfY2FsbGJhY2tzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDIgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAzIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2NhbGxiYWNrcy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDIgXS5sb2NrLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0ubG9ja1xuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5maXJlXG5cdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gcmVqZWN0ZWRfaGFuZGxlcnMuZmlyZVxuXHRcdFx0bGlzdC5hZGQoIHR1cGxlWyAzIF0uZmlyZSApO1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnkgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQubm90aWZ5V2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmUgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVzb2x2ZVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3QgPSBmdW5jdGlvbigpIHsgZGVmZXJyZWQucmVqZWN0V2l0aCguLi4pIH1cblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdKCB0aGlzID09PSBkZWZlcnJlZCA/IHVuZGVmaW5lZCA6IHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH07XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlV2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdFdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xuXHRcdH0gKTtcblxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxuXHRcdHByb21pc2UucHJvbWlzZSggZGVmZXJyZWQgKTtcblxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcblx0XHRpZiAoIGZ1bmMgKSB7XG5cdFx0XHRmdW5jLmNhbGwoIGRlZmVycmVkLCBkZWZlcnJlZCApO1xuXHRcdH1cblxuXHRcdC8vIEFsbCBkb25lIVxuXHRcdHJldHVybiBkZWZlcnJlZDtcblx0fSxcblxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcblx0d2hlbjogZnVuY3Rpb24oIHNpbmdsZVZhbHVlICkge1xuXHRcdHZhclxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcblx0XHRcdHJlbWFpbmluZyA9IGFyZ3VtZW50cy5sZW5ndGgsXG5cblx0XHRcdC8vIGNvdW50IG9mIHVucHJvY2Vzc2VkIGFyZ3VtZW50c1xuXHRcdFx0aSA9IHJlbWFpbmluZyxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgZnVsZmlsbG1lbnQgZGF0YVxuXHRcdFx0cmVzb2x2ZUNvbnRleHRzID0gQXJyYXkoIGkgKSxcblx0XHRcdHJlc29sdmVWYWx1ZXMgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSxcblxuXHRcdFx0Ly8gdGhlIG1hc3RlciBEZWZlcnJlZFxuXHRcdFx0bWFzdGVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cblx0XHRcdC8vIHN1Ym9yZGluYXRlIGNhbGxiYWNrIGZhY3Rvcnlcblx0XHRcdHVwZGF0ZUZ1bmMgPSBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXNvbHZlQ29udGV4dHNbIGkgXSA9IHRoaXM7XG5cdFx0XHRcdFx0cmVzb2x2ZVZhbHVlc1sgaSBdID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSA6IHZhbHVlO1xuXHRcdFx0XHRcdGlmICggISggLS1yZW1haW5pbmcgKSApIHtcblx0XHRcdFx0XHRcdG1hc3Rlci5yZXNvbHZlV2l0aCggcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdFx0fTtcblxuXHRcdC8vIFNpbmdsZS0gYW5kIGVtcHR5IGFyZ3VtZW50cyBhcmUgYWRvcHRlZCBsaWtlIFByb21pc2UucmVzb2x2ZVxuXHRcdGlmICggcmVtYWluaW5nIDw9IDEgKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCBzaW5nbGVWYWx1ZSwgbWFzdGVyLmRvbmUoIHVwZGF0ZUZ1bmMoIGkgKSApLnJlc29sdmUsIG1hc3Rlci5yZWplY3QsXG5cdFx0XHRcdCFyZW1haW5pbmcgKTtcblxuXHRcdFx0Ly8gVXNlIC50aGVuKCkgdG8gdW53cmFwIHNlY29uZGFyeSB0aGVuYWJsZXMgKGNmLiBnaC0zMDAwKVxuXHRcdFx0aWYgKCBtYXN0ZXIuc3RhdGUoKSA9PT0gXCJwZW5kaW5nXCIgfHxcblx0XHRcdFx0aXNGdW5jdGlvbiggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIHJlc29sdmVWYWx1ZXNbIGkgXS50aGVuICkgKSB7XG5cblx0XHRcdFx0cmV0dXJuIG1hc3Rlci50aGVuKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gTXVsdGlwbGUgYXJndW1lbnRzIGFyZSBhZ2dyZWdhdGVkIGxpa2UgUHJvbWlzZS5hbGwgYXJyYXkgZWxlbWVudHNcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHJlc29sdmVWYWx1ZXNbIGkgXSwgdXBkYXRlRnVuYyggaSApLCBtYXN0ZXIucmVqZWN0ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hc3Rlci5wcm9taXNlKCk7XG5cdH1cbn0gKTtcblxuXG4vLyBUaGVzZSB1c3VhbGx5IGluZGljYXRlIGEgcHJvZ3JhbW1lciBtaXN0YWtlIGR1cmluZyBkZXZlbG9wbWVudCxcbi8vIHdhcm4gYWJvdXQgdGhlbSBBU0FQIHJhdGhlciB0aGFuIHN3YWxsb3dpbmcgdGhlbSBieSBkZWZhdWx0LlxudmFyIHJlcnJvck5hbWVzID0gL14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87XG5cbmpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rID0gZnVuY3Rpb24oIGVycm9yLCBzdGFjayApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA4IC0gOSBvbmx5XG5cdC8vIENvbnNvbGUgZXhpc3RzIHdoZW4gZGV2IHRvb2xzIGFyZSBvcGVuLCB3aGljaCBjYW4gaGFwcGVuIGF0IGFueSB0aW1lXG5cdGlmICggd2luZG93LmNvbnNvbGUgJiYgd2luZG93LmNvbnNvbGUud2FybiAmJiBlcnJvciAmJiByZXJyb3JOYW1lcy50ZXN0KCBlcnJvci5uYW1lICkgKSB7XG5cdFx0d2luZG93LmNvbnNvbGUud2FybiggXCJqUXVlcnkuRGVmZXJyZWQgZXhjZXB0aW9uOiBcIiArIGVycm9yLm1lc3NhZ2UsIGVycm9yLnN0YWNrLCBzdGFjayApO1xuXHR9XG59O1xuXG5cblxuXG5qUXVlcnkucmVhZHlFeGNlcHRpb24gPSBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHR0aHJvdyBlcnJvcjtcblx0fSApO1xufTtcblxuXG5cblxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XG52YXIgcmVhZHlMaXN0ID0galF1ZXJ5LkRlZmVycmVkKCk7XG5cbmpRdWVyeS5mbi5yZWFkeSA9IGZ1bmN0aW9uKCBmbiApIHtcblxuXHRyZWFkeUxpc3Rcblx0XHQudGhlbiggZm4gKVxuXG5cdFx0Ly8gV3JhcCBqUXVlcnkucmVhZHlFeGNlcHRpb24gaW4gYSBmdW5jdGlvbiBzbyB0aGF0IHRoZSBsb29rdXBcblx0XHQvLyBoYXBwZW5zIGF0IHRoZSB0aW1lIG9mIGVycm9yIGhhbmRsaW5nIGluc3RlYWQgb2YgY2FsbGJhY2tcblx0XHQvLyByZWdpc3RyYXRpb24uXG5cdFx0LmNhdGNoKCBmdW5jdGlvbiggZXJyb3IgKSB7XG5cdFx0XHRqUXVlcnkucmVhZHlFeGNlcHRpb24oIGVycm9yICk7XG5cdFx0fSApO1xuXG5cdHJldHVybiB0aGlzO1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIElzIHRoZSBET00gcmVhZHkgdG8gYmUgdXNlZD8gU2V0IHRvIHRydWUgb25jZSBpdCBvY2N1cnMuXG5cdGlzUmVhZHk6IGZhbHNlLFxuXG5cdC8vIEEgY291bnRlciB0byB0cmFjayBob3cgbWFueSBpdGVtcyB0byB3YWl0IGZvciBiZWZvcmVcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgIzY3ODFcblx0cmVhZHlXYWl0OiAxLFxuXG5cdC8vIEhhbmRsZSB3aGVuIHRoZSBET00gaXMgcmVhZHlcblx0cmVhZHk6IGZ1bmN0aW9uKCB3YWl0ICkge1xuXG5cdFx0Ly8gQWJvcnQgaWYgdGhlcmUgYXJlIHBlbmRpbmcgaG9sZHMgb3Igd2UncmUgYWxyZWFkeSByZWFkeVxuXHRcdGlmICggd2FpdCA9PT0gdHJ1ZSA/IC0talF1ZXJ5LnJlYWR5V2FpdCA6IGpRdWVyeS5pc1JlYWR5ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIFJlbWVtYmVyIHRoYXQgdGhlIERPTSBpcyByZWFkeVxuXHRcdGpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTtcblxuXHRcdC8vIElmIGEgbm9ybWFsIERPTSBSZWFkeSBldmVudCBmaXJlZCwgZGVjcmVtZW50LCBhbmQgd2FpdCBpZiBuZWVkIGJlXG5cdFx0aWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gSWYgdGhlcmUgYXJlIGZ1bmN0aW9ucyBib3VuZCwgdG8gZXhlY3V0ZVxuXHRcdHJlYWR5TGlzdC5yZXNvbHZlV2l0aCggZG9jdW1lbnQsIFsgalF1ZXJ5IF0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkucmVhZHkudGhlbiA9IHJlYWR5TGlzdC50aGVuO1xuXG4vLyBUaGUgcmVhZHkgZXZlbnQgaGFuZGxlciBhbmQgc2VsZiBjbGVhbnVwIG1ldGhvZFxuZnVuY3Rpb24gY29tcGxldGVkKCkge1xuXHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG5cdGpRdWVyeS5yZWFkeSgpO1xufVxuXG4vLyBDYXRjaCBjYXNlcyB3aGVyZSAkKGRvY3VtZW50KS5yZWFkeSgpIGlzIGNhbGxlZFxuLy8gYWZ0ZXIgdGhlIGJyb3dzZXIgZXZlbnQgaGFzIGFscmVhZHkgb2NjdXJyZWQuXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMCBvbmx5XG4vLyBPbGRlciBJRSBzb21ldGltZXMgc2lnbmFscyBcImludGVyYWN0aXZlXCIgdG9vIHNvb25cbmlmICggZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIHx8XG5cdCggZG9jdW1lbnQucmVhZHlTdGF0ZSAhPT0gXCJsb2FkaW5nXCIgJiYgIWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5kb1Njcm9sbCApICkge1xuXG5cdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxuXHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XG5cbn0gZWxzZSB7XG5cblx0Ly8gVXNlIHRoZSBoYW5keSBldmVudCBjYWxsYmFja1xuXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCBcIkRPTUNvbnRlbnRMb2FkZWRcIiwgY29tcGxldGVkICk7XG5cblx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcbn1cblxuXG5cblxuLy8gTXVsdGlmdW5jdGlvbmFsIG1ldGhvZCB0byBnZXQgYW5kIHNldCB2YWx1ZXMgb2YgYSBjb2xsZWN0aW9uXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cbnZhciBhY2Nlc3MgPSBmdW5jdGlvbiggZWxlbXMsIGZuLCBrZXksIHZhbHVlLCBjaGFpbmFibGUsIGVtcHR5R2V0LCByYXcgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBlbGVtcy5sZW5ndGgsXG5cdFx0YnVsayA9IGtleSA9PSBudWxsO1xuXG5cdC8vIFNldHMgbWFueSB2YWx1ZXNcblx0aWYgKCB0b1R5cGUoIGtleSApID09PSBcIm9iamVjdFwiICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cdFx0Zm9yICggaSBpbiBrZXkgKSB7XG5cdFx0XHRhY2Nlc3MoIGVsZW1zLCBmbiwgaSwga2V5WyBpIF0sIHRydWUsIGVtcHR5R2V0LCByYXcgKTtcblx0XHR9XG5cblx0Ly8gU2V0cyBvbmUgdmFsdWVcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXG5cdFx0aWYgKCAhaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJhdyA9IHRydWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBidWxrICkge1xuXG5cdFx0XHQvLyBCdWxrIG9wZXJhdGlvbnMgcnVuIGFnYWluc3QgdGhlIGVudGlyZSBzZXRcblx0XHRcdGlmICggcmF3ICkge1xuXHRcdFx0XHRmbi5jYWxsKCBlbGVtcywgdmFsdWUgKTtcblx0XHRcdFx0Zm4gPSBudWxsO1xuXG5cdFx0XHQvLyAuLi5leGNlcHQgd2hlbiBleGVjdXRpbmcgZnVuY3Rpb24gdmFsdWVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRidWxrID0gZm47XG5cdFx0XHRcdGZuID0gZnVuY3Rpb24oIGVsZW0sIGtleSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGJ1bGsuY2FsbCggalF1ZXJ5KCBlbGVtICksIHZhbHVlICk7XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRmbihcblx0XHRcdFx0XHRlbGVtc1sgaSBdLCBrZXksIHJhdyA/XG5cdFx0XHRcdFx0dmFsdWUgOlxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBjaGFpbmFibGUgKSB7XG5cdFx0cmV0dXJuIGVsZW1zO1xuXHR9XG5cblx0Ly8gR2V0c1xuXHRpZiAoIGJ1bGsgKSB7XG5cdFx0cmV0dXJuIGZuLmNhbGwoIGVsZW1zICk7XG5cdH1cblxuXHRyZXR1cm4gbGVuID8gZm4oIGVsZW1zWyAwIF0sIGtleSApIDogZW1wdHlHZXQ7XG59O1xuXG5cbi8vIE1hdGNoZXMgZGFzaGVkIHN0cmluZyBmb3IgY2FtZWxpemluZ1xudmFyIHJtc1ByZWZpeCA9IC9eLW1zLS8sXG5cdHJkYXNoQWxwaGEgPSAvLShbYS16XSkvZztcblxuLy8gVXNlZCBieSBjYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXG5mdW5jdGlvbiBmY2FtZWxDYXNlKCBhbGwsIGxldHRlciApIHtcblx0cmV0dXJuIGxldHRlci50b1VwcGVyQ2FzZSgpO1xufVxuXG4vLyBDb252ZXJ0IGRhc2hlZCB0byBjYW1lbENhc2U7IHVzZWQgYnkgdGhlIGNzcyBhbmQgZGF0YSBtb2R1bGVzXG4vLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSwgRWRnZSAxMiAtIDE1XG4vLyBNaWNyb3NvZnQgZm9yZ290IHRvIGh1bXAgdGhlaXIgdmVuZG9yIHByZWZpeCAoIzk1NzIpXG5mdW5jdGlvbiBjYW1lbENhc2UoIHN0cmluZyApIHtcblx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XG59XG52YXIgYWNjZXB0RGF0YSA9IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHQvLyBBY2NlcHRzIG9ubHk6XG5cdC8vICAtIE5vZGVcblx0Ly8gICAgLSBOb2RlLkVMRU1FTlRfTk9ERVxuXHQvLyAgICAtIE5vZGUuRE9DVU1FTlRfTk9ERVxuXHQvLyAgLSBPYmplY3Rcblx0Ly8gICAgLSBBbnlcblx0cmV0dXJuIG93bmVyLm5vZGVUeXBlID09PSAxIHx8IG93bmVyLm5vZGVUeXBlID09PSA5IHx8ICEoICtvd25lci5ub2RlVHlwZSApO1xufTtcblxuXG5cblxuZnVuY3Rpb24gRGF0YSgpIHtcblx0dGhpcy5leHBhbmRvID0galF1ZXJ5LmV4cGFuZG8gKyBEYXRhLnVpZCsrO1xufVxuXG5EYXRhLnVpZCA9IDE7XG5cbkRhdGEucHJvdG90eXBlID0ge1xuXG5cdGNhY2hlOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0XHQvLyBDaGVjayBpZiB0aGUgb3duZXIgb2JqZWN0IGFscmVhZHkgaGFzIGEgY2FjaGVcblx0XHR2YXIgdmFsdWUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHQvLyBJZiBub3QsIGNyZWF0ZSBvbmVcblx0XHRpZiAoICF2YWx1ZSApIHtcblx0XHRcdHZhbHVlID0ge307XG5cblx0XHRcdC8vIFdlIGNhbiBhY2NlcHQgZGF0YSBmb3Igbm9uLWVsZW1lbnQgbm9kZXMgaW4gbW9kZXJuIGJyb3dzZXJzLFxuXHRcdFx0Ly8gYnV0IHdlIHNob3VsZCBub3QsIHNlZSAjODMzNS5cblx0XHRcdC8vIEFsd2F5cyByZXR1cm4gYW4gZW1wdHkgb2JqZWN0LlxuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBvd25lciApICkge1xuXG5cdFx0XHRcdC8vIElmIGl0IGlzIGEgbm9kZSB1bmxpa2VseSB0byBiZSBzdHJpbmdpZnktZWQgb3IgbG9vcGVkIG92ZXJcblx0XHRcdFx0Ly8gdXNlIHBsYWluIGFzc2lnbm1lbnRcblx0XHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB2YWx1ZTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2Ugc2VjdXJlIGl0IGluIGEgbm9uLWVudW1lcmFibGUgcHJvcGVydHlcblx0XHRcdFx0Ly8gY29uZmlndXJhYmxlIG11c3QgYmUgdHJ1ZSB0byBhbGxvdyB0aGUgcHJvcGVydHkgdG8gYmVcblx0XHRcdFx0Ly8gZGVsZXRlZCB3aGVuIGRhdGEgaXMgcmVtb3ZlZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggb3duZXIsIHRoaXMuZXhwYW5kbywge1xuXHRcdFx0XHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlXG5cdFx0XHRcdFx0fSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9LFxuXHRzZXQ6IGZ1bmN0aW9uKCBvd25lciwgZGF0YSwgdmFsdWUgKSB7XG5cdFx0dmFyIHByb3AsXG5cdFx0XHRjYWNoZSA9IHRoaXMuY2FjaGUoIG93bmVyICk7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIGtleSwgdmFsdWUgXSBhcmdzXG5cdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBkYXRhICkgXSA9IHZhbHVlO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCB7IHByb3BlcnRpZXMgfSBdIGFyZ3Ncblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb3B5IHRoZSBwcm9wZXJ0aWVzIG9uZS1ieS1vbmUgdG8gdGhlIGNhY2hlIG9iamVjdFxuXHRcdFx0Zm9yICggcHJvcCBpbiBkYXRhICkge1xuXHRcdFx0XHRjYWNoZVsgY2FtZWxDYXNlKCBwcm9wICkgXSA9IGRhdGFbIHByb3AgXTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIGNhY2hlO1xuXHR9LFxuXHRnZXQ6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHJldHVybiBrZXkgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzLmNhY2hlKCBvd25lciApIDpcblxuXHRcdFx0Ly8gQWx3YXlzIHVzZSBjYW1lbENhc2Uga2V5IChnaC0yMjU3KVxuXHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdICYmIG93bmVyWyB0aGlzLmV4cGFuZG8gXVsgY2FtZWxDYXNlKCBrZXkgKSBdO1xuXHR9LFxuXHRhY2Nlc3M6IGZ1bmN0aW9uKCBvd25lciwga2V5LCB2YWx1ZSApIHtcblxuXHRcdC8vIEluIGNhc2VzIHdoZXJlIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gTm8ga2V5IHdhcyBzcGVjaWZpZWRcblx0XHQvLyAgIDIuIEEgc3RyaW5nIGtleSB3YXMgc3BlY2lmaWVkLCBidXQgbm8gdmFsdWUgcHJvdmlkZWRcblx0XHQvL1xuXHRcdC8vIFRha2UgdGhlIFwicmVhZFwiIHBhdGggYW5kIGFsbG93IHRoZSBnZXQgbWV0aG9kIHRvIGRldGVybWluZVxuXHRcdC8vIHdoaWNoIHZhbHVlIHRvIHJldHVybiwgcmVzcGVjdGl2ZWx5IGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gVGhlIGVudGlyZSBjYWNoZSBvYmplY3Rcblx0XHQvLyAgIDIuIFRoZSBkYXRhIHN0b3JlZCBhdCB0aGUga2V5XG5cdFx0Ly9cblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8XG5cdFx0XHRcdCggKCBrZXkgJiYgdHlwZW9mIGtleSA9PT0gXCJzdHJpbmdcIiApICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSApIHtcblxuXHRcdFx0cmV0dXJuIHRoaXMuZ2V0KCBvd25lciwga2V5ICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2hlbiB0aGUga2V5IGlzIG5vdCBhIHN0cmluZywgb3IgYm90aCBhIGtleSBhbmQgdmFsdWVcblx0XHQvLyBhcmUgc3BlY2lmaWVkLCBzZXQgb3IgZXh0ZW5kIChleGlzdGluZyBvYmplY3RzKSB3aXRoIGVpdGhlcjpcblx0XHQvL1xuXHRcdC8vICAgMS4gQW4gb2JqZWN0IG9mIHByb3BlcnRpZXNcblx0XHQvLyAgIDIuIEEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vXG5cdFx0dGhpcy5zZXQoIG93bmVyLCBrZXksIHZhbHVlICk7XG5cblx0XHQvLyBTaW5jZSB0aGUgXCJzZXRcIiBwYXRoIGNhbiBoYXZlIHR3byBwb3NzaWJsZSBlbnRyeSBwb2ludHNcblx0XHQvLyByZXR1cm4gdGhlIGV4cGVjdGVkIGRhdGEgYmFzZWQgb24gd2hpY2ggcGF0aCB3YXMgdGFrZW5bKl1cblx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoga2V5O1xuXHR9LFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBvd25lciwga2V5ICkge1xuXHRcdHZhciBpLFxuXHRcdFx0Y2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cblx0XHRpZiAoIGNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBrZXkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydCBhcnJheSBvciBzcGFjZSBzZXBhcmF0ZWQgc3RyaW5nIG9mIGtleXNcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSgga2V5ICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYga2V5IGlzIGFuIGFycmF5IG9mIGtleXMuLi5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHNldCBjYW1lbENhc2Uga2V5cywgc28gcmVtb3ZlIHRoYXQuXG5cdFx0XHRcdGtleSA9IGtleS5tYXAoIGNhbWVsQ2FzZSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0a2V5ID0gY2FtZWxDYXNlKCBrZXkgKTtcblxuXHRcdFx0XHQvLyBJZiBhIGtleSB3aXRoIHRoZSBzcGFjZXMgZXhpc3RzLCB1c2UgaXQuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSwgY3JlYXRlIGFuIGFycmF5IGJ5IG1hdGNoaW5nIG5vbi13aGl0ZXNwYWNlXG5cdFx0XHRcdGtleSA9IGtleSBpbiBjYWNoZSA/XG5cdFx0XHRcdFx0WyBrZXkgXSA6XG5cdFx0XHRcdFx0KCBrZXkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpID0ga2V5Lmxlbmd0aDtcblxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGRlbGV0ZSBjYWNoZVsga2V5WyBpIF0gXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgdGhlIGV4cGFuZG8gaWYgdGhlcmUncyBubyBtb3JlIGRhdGFcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkIHx8IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1XG5cdFx0XHQvLyBXZWJraXQgJiBCbGluayBwZXJmb3JtYW5jZSBzdWZmZXJzIHdoZW4gZGVsZXRpbmcgcHJvcGVydGllc1xuXHRcdFx0Ly8gZnJvbSBET00gbm9kZXMsIHNvIHNldCB0byB1bmRlZmluZWQgaW5zdGVhZFxuXHRcdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9Mzc4NjA3IChidWcgcmVzdHJpY3RlZClcblx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlbGV0ZSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXHRoYXNEYXRhOiBmdW5jdGlvbiggb3duZXIgKSB7XG5cdFx0dmFyIGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdHJldHVybiBjYWNoZSAhPT0gdW5kZWZpbmVkICYmICFqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKTtcblx0fVxufTtcbnZhciBkYXRhUHJpdiA9IG5ldyBEYXRhKCk7XG5cbnZhciBkYXRhVXNlciA9IG5ldyBEYXRhKCk7XG5cblxuXG4vL1x0SW1wbGVtZW50YXRpb24gU3VtbWFyeVxuLy9cbi8vXHQxLiBFbmZvcmNlIEFQSSBzdXJmYWNlIGFuZCBzZW1hbnRpYyBjb21wYXRpYmlsaXR5IHdpdGggMS45LnggYnJhbmNoXG4vL1x0Mi4gSW1wcm92ZSB0aGUgbW9kdWxlJ3MgbWFpbnRhaW5hYmlsaXR5IGJ5IHJlZHVjaW5nIHRoZSBzdG9yYWdlXG4vL1x0XHRwYXRocyB0byBhIHNpbmdsZSBtZWNoYW5pc20uXG4vL1x0My4gVXNlIHRoZSBzYW1lIHNpbmdsZSBtZWNoYW5pc20gdG8gc3VwcG9ydCBcInByaXZhdGVcIiBhbmQgXCJ1c2VyXCIgZGF0YS5cbi8vXHQ0LiBfTmV2ZXJfIGV4cG9zZSBcInByaXZhdGVcIiBkYXRhIHRvIHVzZXIgY29kZSAoVE9ETzogRHJvcCBfZGF0YSwgX3JlbW92ZURhdGEpXG4vL1x0NS4gQXZvaWQgZXhwb3NpbmcgaW1wbGVtZW50YXRpb24gZGV0YWlscyBvbiB1c2VyIG9iamVjdHMgKGVnLiBleHBhbmRvIHByb3BlcnRpZXMpXG4vL1x0Ni4gUHJvdmlkZSBhIGNsZWFyIHBhdGggZm9yIGltcGxlbWVudGF0aW9uIHVwZ3JhZGUgdG8gV2Vha01hcCBpbiAyMDE0XG5cbnZhciByYnJhY2UgPSAvXig/Olxce1tcXHdcXFddKlxcfXxcXFtbXFx3XFxXXSpcXF0pJC8sXG5cdHJtdWx0aURhc2ggPSAvW0EtWl0vZztcblxuZnVuY3Rpb24gZ2V0RGF0YSggZGF0YSApIHtcblx0aWYgKCBkYXRhID09PSBcInRydWVcIiApIHtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJmYWxzZVwiICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdGlmICggZGF0YSA9PT0gXCJudWxsXCIgKSB7XG5cdFx0cmV0dXJuIG51bGw7XG5cdH1cblxuXHQvLyBPbmx5IGNvbnZlcnQgdG8gYSBudW1iZXIgaWYgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cmluZ1xuXHRpZiAoIGRhdGEgPT09ICtkYXRhICsgXCJcIiApIHtcblx0XHRyZXR1cm4gK2RhdGE7XG5cdH1cblxuXHRpZiAoIHJicmFjZS50ZXN0KCBkYXRhICkgKSB7XG5cdFx0cmV0dXJuIEpTT04ucGFyc2UoIGRhdGEgKTtcblx0fVxuXG5cdHJldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBkYXRhQXR0ciggZWxlbSwga2V5LCBkYXRhICkge1xuXHR2YXIgbmFtZTtcblxuXHQvLyBJZiBub3RoaW5nIHdhcyBmb3VuZCBpbnRlcm5hbGx5LCB0cnkgdG8gZmV0Y2ggYW55XG5cdC8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZVxuXHRpZiAoIGRhdGEgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJCZcIiApLnRvTG93ZXJDYXNlKCk7XG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0YSA9IGdldERhdGEoIGRhdGEgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge31cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXG5cdFx0XHRkYXRhVXNlci5zZXQoIGVsZW0sIGtleSwgZGF0YSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZGF0YTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuaGFzRGF0YSggZWxlbSApIHx8IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKTtcblx0fSxcblxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVVzZXIuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVVzZXIucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH0sXG5cblx0Ly8gVE9ETzogTm93IHRoYXQgYWxsIGNhbGxzIHRvIF9kYXRhIGFuZCBfcmVtb3ZlRGF0YSBoYXZlIGJlZW4gcmVwbGFjZWRcblx0Ly8gd2l0aCBkaXJlY3QgY2FsbHMgdG8gZGF0YVByaXYgbWV0aG9kcywgdGhlc2UgY2FuIGJlIGRlcHJlY2F0ZWQuXG5cdF9kYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBuYW1lLCBkYXRhICk7XG5cdH0sXG5cblx0X3JlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGF0YTogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0dmFyIGksIG5hbWUsIGRhdGEsXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxuXHRcdFx0YXR0cnMgPSBlbGVtICYmIGVsZW0uYXR0cmlidXRlcztcblxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIHRoaXMubGVuZ3RoICkge1xuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtICk7XG5cblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFkYXRhUHJpdi5nZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIgKSApIHtcblx0XHRcdFx0XHRpID0gYXR0cnMubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHRcdFx0XHQvLyBUaGUgYXR0cnMgZWxlbWVudHMgY2FuIGJlIG51bGwgKCMxNDg5NClcblx0XHRcdFx0XHRcdGlmICggYXR0cnNbIGkgXSApIHtcblx0XHRcdFx0XHRcdFx0bmFtZSA9IGF0dHJzWyBpIF0ubmFtZTtcblx0XHRcdFx0XHRcdFx0aWYgKCBuYW1lLmluZGV4T2YoIFwiZGF0YS1cIiApID09PSAwICkge1xuXHRcdFx0XHRcdFx0XHRcdG5hbWUgPSBjYW1lbENhc2UoIG5hbWUuc2xpY2UoIDUgKSApO1xuXHRcdFx0XHRcdFx0XHRcdGRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIGVsZW0sIFwiaGFzRGF0YUF0dHJzXCIsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZGF0YTtcblx0XHR9XG5cblx0XHQvLyBTZXRzIG11bHRpcGxlIHZhbHVlc1xuXHRcdGlmICggdHlwZW9mIGtleSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBkYXRhO1xuXG5cdFx0XHQvLyBUaGUgY2FsbGluZyBqUXVlcnkgb2JqZWN0IChlbGVtZW50IG1hdGNoZXMpIGlzIG5vdCBlbXB0eVxuXHRcdFx0Ly8gKGFuZCB0aGVyZWZvcmUgaGFzIGFuIGVsZW1lbnQgYXBwZWFycyBhdCB0aGlzWyAwIF0pIGFuZCB0aGVcblx0XHRcdC8vIGB2YWx1ZWAgcGFyYW1ldGVyIHdhcyBub3QgdW5kZWZpbmVkLiBBbiBlbXB0eSBqUXVlcnkgb2JqZWN0XG5cdFx0XHQvLyB3aWxsIHJlc3VsdCBpbiBgdW5kZWZpbmVkYCBmb3IgZWxlbSA9IHRoaXNbIDAgXSB3aGljaCB3aWxsXG5cdFx0XHQvLyB0aHJvdyBhbiBleGNlcHRpb24gaWYgYW4gYXR0ZW1wdCB0byByZWFkIGEgZGF0YSBjYWNoZSBpcyBtYWRlLlxuXHRcdFx0aWYgKCBlbGVtICYmIHZhbHVlID09PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBnZXQgZGF0YSBmcm9tIHRoZSBjYWNoZVxuXHRcdFx0XHQvLyBUaGUga2V5IHdpbGwgYWx3YXlzIGJlIGNhbWVsQ2FzZWQgaW4gRGF0YVxuXHRcdFx0XHRkYXRhID0gZGF0YVVzZXIuZ2V0KCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIFwiZGlzY292ZXJcIiB0aGUgZGF0YSBpblxuXHRcdFx0XHQvLyBIVE1MNSBjdXN0b20gZGF0YS0qIGF0dHJzXG5cdFx0XHRcdGRhdGEgPSBkYXRhQXR0ciggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gV2UgdHJpZWQgcmVhbGx5IGhhcmQsIGJ1dCB0aGUgZGF0YSBkb2Vzbid0IGV4aXN0LlxuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCB0aGUgZGF0YS4uLlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc3RvcmUgdGhlIGNhbWVsQ2FzZWQga2V5XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5LCB2YWx1ZSApO1xuXHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSwgbnVsbCwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkYXRhVXNlci5yZW1vdmUoIHRoaXMsIGtleSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBxdWV1ZTtcblxuXHRcdGlmICggZWxlbSApIHtcblx0XHRcdHR5cGUgPSAoIHR5cGUgfHwgXCJmeFwiICkgKyBcInF1ZXVlXCI7XG5cdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmdldCggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHQvLyBTcGVlZCB1cCBkZXF1ZXVlIGJ5IGdldHRpbmcgb3V0IHF1aWNrbHkgaWYgdGhpcyBpcyBqdXN0IGEgbG9va3VwXG5cdFx0XHRpZiAoIGRhdGEgKSB7XG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IEFycmF5LmlzQXJyYXkoIGRhdGEgKSApIHtcblx0XHRcdFx0XHRxdWV1ZSA9IGRhdGFQcml2LmFjY2VzcyggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0cXVldWUucHVzaCggZGF0YSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcXVldWUgfHwgW107XG5cdFx0fVxuXHR9LFxuXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxuXHRcdFx0c3RhcnRMZW5ndGggPSBxdWV1ZS5sZW5ndGgsXG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCksXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxuXHRcdFx0bmV4dCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggZWxlbSwgdHlwZSApO1xuXHRcdFx0fTtcblxuXHRcdC8vIElmIHRoZSBmeCBxdWV1ZSBpcyBkZXF1ZXVlZCwgYWx3YXlzIHJlbW92ZSB0aGUgcHJvZ3Jlc3Mgc2VudGluZWxcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdHN0YXJ0TGVuZ3RoLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBmbiApIHtcblxuXHRcdFx0Ly8gQWRkIGEgcHJvZ3Jlc3Mgc2VudGluZWwgdG8gcHJldmVudCB0aGUgZnggcXVldWUgZnJvbSBiZWluZ1xuXHRcdFx0Ly8gYXV0b21hdGljYWxseSBkZXF1ZXVlZFxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XG5cdFx0XHRcdHF1ZXVlLnVuc2hpZnQoIFwiaW5wcm9ncmVzc1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENsZWFyIHVwIHRoZSBsYXN0IHF1ZXVlIHN0b3AgZnVuY3Rpb25cblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcblx0XHR9XG5cblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHR9XG5cdH0sXG5cblx0Ly8gTm90IHB1YmxpYyAtIGdlbmVyYXRlIGEgcXVldWVIb29rcyBvYmplY3QsIG9yIHJldHVybiB0aGUgY3VycmVudCBvbmVcblx0X3F1ZXVlSG9va3M6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xuXHRcdHZhciBrZXkgPSB0eXBlICsgXCJxdWV1ZUhvb2tzXCI7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmdldCggZWxlbSwga2V5ICkgfHwgZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBrZXksIHtcblx0XHRcdGVtcHR5OiBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKS5hZGQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFsgdHlwZSArIFwicXVldWVcIiwga2V5IF0gKTtcblx0XHRcdH0gKVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgc2V0dGVyID0gMjtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRkYXRhID0gdHlwZTtcblx0XHRcdHR5cGUgPSBcImZ4XCI7XG5cdFx0XHRzZXR0ZXItLTtcblx0XHR9XG5cblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPCBzZXR0ZXIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnF1ZXVlKCB0aGlzWyAwIF0sIHR5cGUgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZGF0YSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMgOlxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCB0aGlzLCB0eXBlLCBkYXRhICk7XG5cblx0XHRcdFx0Ly8gRW5zdXJlIGEgaG9va3MgZm9yIHRoaXMgcXVldWVcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCB0aGlzLCB0eXBlICk7XG5cblx0XHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgJiYgcXVldWVbIDAgXSAhPT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHR9LFxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0fSApO1xuXHR9LFxuXHRjbGVhclF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XG5cdH0sXG5cblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxuXHQvLyBhcmUgZW1wdGllZCAoZnggaXMgdGhlIHR5cGUgYnkgZGVmYXVsdClcblx0cHJvbWlzZTogZnVuY3Rpb24oIHR5cGUsIG9iaiApIHtcblx0XHR2YXIgdG1wLFxuXHRcdFx0Y291bnQgPSAxLFxuXHRcdFx0ZGVmZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcblx0XHRcdGkgPSB0aGlzLmxlbmd0aCxcblx0XHRcdHJlc29sdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XG5cdFx0XHRcdFx0ZGVmZXIucmVzb2x2ZVdpdGgoIGVsZW1lbnRzLCBbIGVsZW1lbnRzIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdGlmICggdHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRvYmogPSB0eXBlO1xuXHRcdFx0dHlwZSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0bXAgPSBkYXRhUHJpdi5nZXQoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xuXHRcdFx0aWYgKCB0bXAgJiYgdG1wLmVtcHR5ICkge1xuXHRcdFx0XHRjb3VudCsrO1xuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJlc29sdmUoKTtcblx0XHRyZXR1cm4gZGVmZXIucHJvbWlzZSggb2JqICk7XG5cdH1cbn0gKTtcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcblxudmFyIHJjc3NOdW0gPSBuZXcgUmVnRXhwKCBcIl4oPzooWystXSk9fCkoXCIgKyBwbnVtICsgXCIpKFthLXolXSopJFwiLCBcImlcIiApO1xuXG5cbnZhciBjc3NFeHBhbmQgPSBbIFwiVG9wXCIsIFwiUmlnaHRcIiwgXCJCb3R0b21cIiwgXCJMZWZ0XCIgXTtcblxudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcblxuXG5cblx0dmFyIGlzQXR0YWNoZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXHRcdH0sXG5cdFx0Y29tcG9zZWQgPSB7IGNvbXBvc2VkOiB0cnVlIH07XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExKywgRWRnZSAxMiAtIDE4KywgaU9TIDEwLjAgLSAxMC4yIG9ubHlcblx0Ly8gQ2hlY2sgYXR0YWNobWVudCBhY3Jvc3Mgc2hhZG93IERPTSBib3VuZGFyaWVzIHdoZW4gcG9zc2libGUgKGdoLTM1MDQpXG5cdC8vIFN1cHBvcnQ6IGlPUyAxMC4wLTEwLjIgb25seVxuXHQvLyBFYXJseSBpT1MgMTAgdmVyc2lvbnMgc3VwcG9ydCBgYXR0YWNoU2hhZG93YCBidXQgbm90IGBnZXRSb290Tm9kZWAsXG5cdC8vIGxlYWRpbmcgdG8gZXJyb3JzLiBXZSBuZWVkIHRvIGNoZWNrIGZvciBgZ2V0Um9vdE5vZGVgLlxuXHRpZiAoIGRvY3VtZW50RWxlbWVudC5nZXRSb290Tm9kZSApIHtcblx0XHRpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSB8fFxuXHRcdFx0XHRlbGVtLmdldFJvb3ROb2RlKCBjb21wb3NlZCApID09PSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0fTtcblx0fVxudmFyIGlzSGlkZGVuV2l0aGluVHJlZSA9IGZ1bmN0aW9uKCBlbGVtLCBlbCApIHtcblxuXHRcdC8vIGlzSGlkZGVuV2l0aGluVHJlZSBtaWdodCBiZSBjYWxsZWQgZnJvbSBqUXVlcnkjZmlsdGVyIGZ1bmN0aW9uO1xuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxuXHRcdGVsZW0gPSBlbCB8fCBlbGVtO1xuXG5cdFx0Ly8gSW5saW5lIHN0eWxlIHRydW1wcyBhbGxcblx0XHRyZXR1cm4gZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fFxuXHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmXG5cblx0XHRcdC8vIE90aGVyd2lzZSwgY2hlY2sgY29tcHV0ZWQgc3R5bGVcblx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD00MyAtIDQ1XG5cdFx0XHQvLyBEaXNjb25uZWN0ZWQgZWxlbWVudHMgY2FuIGhhdmUgY29tcHV0ZWQgZGlzcGxheTogbm9uZSwgc28gZmlyc3QgY29uZmlybSB0aGF0IGVsZW0gaXNcblx0XHRcdC8vIGluIHRoZSBkb2N1bWVudC5cblx0XHRcdGlzQXR0YWNoZWQoIGVsZW0gKSAmJlxuXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIjtcblx0fTtcblxudmFyIHN3YXAgPSBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG5cblxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcblx0dmFyIGFkanVzdGVkLCBzY2FsZSxcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5jdXIoKTtcblx0XHRcdH0gOlxuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wLCBcIlwiICk7XG5cdFx0XHR9LFxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcblx0XHR1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xuXHRcdGluaXRpYWxJblVuaXQgPSBlbGVtLm5vZGVUeXBlICYmXG5cdFx0XHQoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK2luaXRpYWwgKSAmJlxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcblxuXHRpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdFx0Ly8gSGFsdmUgdGhlIGl0ZXJhdGlvbiB0YXJnZXQgdmFsdWUgdG8gcHJldmVudCBpbnRlcmZlcmVuY2UgZnJvbSBDU1MgdXBwZXIgYm91bmRzIChnaC0yMTQ0KVxuXHRcdGluaXRpYWwgPSBpbml0aWFsIC8gMjtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0d2hpbGUgKCBtYXhJdGVyYXRpb25zLS0gKSB7XG5cblx0XHRcdC8vIEV2YWx1YXRlIGFuZCB1cGRhdGUgb3VyIGJlc3QgZ3Vlc3MgKGRvdWJsaW5nIGd1ZXNzZXMgdGhhdCB6ZXJvIG91dCkuXG5cdFx0XHQvLyBGaW5pc2ggaWYgdGhlIHNjYWxlIGVxdWFscyBvciBjcm9zc2VzIDEgKG1ha2luZyB0aGUgb2xkKm5ldyBwcm9kdWN0IG5vbi1wb3NpdGl2ZSkuXG5cdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cdFx0XHRpZiAoICggMSAtIHNjYWxlICkgKiAoIDEgLSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsIHx8IDAuNSApICkgPD0gMCApIHtcblx0XHRcdFx0bWF4SXRlcmF0aW9ucyA9IDA7XG5cdFx0XHR9XG5cdFx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAvIHNjYWxlO1xuXG5cdFx0fVxuXG5cdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgKiAyO1xuXHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG5cblxudmFyIGRlZmF1bHREaXNwbGF5TWFwID0ge307XG5cbmZ1bmN0aW9uIGdldERlZmF1bHREaXNwbGF5KCBlbGVtICkge1xuXHR2YXIgdGVtcCxcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXG5cdFx0bm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLFxuXHRcdGRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTtcblxuXHRpZiAoIGRpc3BsYXkgKSB7XG5cdFx0cmV0dXJuIGRpc3BsYXk7XG5cdH1cblxuXHR0ZW1wID0gZG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApICk7XG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xuXG5cdHRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApO1xuXG5cdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0ZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0fVxuXHRkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2Vcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24gY2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpXG5cdFx0XHQvLyBjaGVjayBpcyByZXF1aXJlZCBpbiB0aGlzIGZpcnN0IGxvb3AgdW5sZXNzIHdlIGhhdmUgYSBub25lbXB0eSBkaXNwbGF5IHZhbHVlIChlaXRoZXJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcblx0XHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKSB8fCBudWxsO1xuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XG5cdFx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmdcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3dcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkge1xuXHRcdFx0ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudHM7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xuXG52YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKikvaSApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxebW9kdWxlJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG53cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuXG5mdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFVzZSB0eXBlb2YgdG8gYXZvaWQgemVyby1hcmd1bWVudCBtZXRob2QgaW52b2NhdGlvbiBvbiBob3N0IG9iamVjdHMgKCMxNTE1MSlcblx0dmFyIHJldDtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSBpZiAoIHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IFtdO1xuXHR9XG5cblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cblxuLy8gTWFyayBzY3JpcHRzIGFzIGhhdmluZyBhbHJlYWR5IGJlZW4gZXZhbHVhdGVkXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRkYXRhUHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLFxuXHRcdFx0XCJnbG9iYWxFdmFsXCIsXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXG5cdFx0KTtcblx0fVxufVxuXG5cbnZhciByaHRtbCA9IC88fCYjP1xcdys7LztcblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBhdHRhY2hlZCwgaixcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcblxuXHRcdFx0Ly8gQWRkIG5vZGVzIGRpcmVjdGx5XG5cdFx0XHRpZiAoIHRvVHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0dG1wLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50XG5cdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRpID0gMDtcblx0d2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHtcblxuXHRcdC8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpXG5cdFx0aWYgKCBzZWxlY3Rpb24gJiYgalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7XG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XG5cdFx0XHRcdGlnbm9yZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0YXR0YWNoZWQgPSBpc0F0dGFjaGVkKCBlbGVtICk7XG5cblx0XHQvLyBBcHBlbmQgdG8gZnJhZ21lbnRcblx0XHR0bXAgPSBnZXRBbGwoIGZyYWdtZW50LmFwcGVuZENoaWxkKCBlbGVtICksIFwic2NyaXB0XCIgKTtcblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRpZiAoIGF0dGFjaGVkICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggdG1wICk7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FwdHVyZSBleGVjdXRhYmxlc1xuXHRcdGlmICggc2NyaXB0cyApIHtcblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0bXBbIGorKyBdICkgKSB7XG5cdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggZWxlbS50eXBlIHx8IFwiXCIgKSApIHtcblx0XHRcdFx0XHRzY3JpcHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBmcmFnbWVudDtcbn1cblxuXG4oIGZ1bmN0aW9uKCkge1xuXHR2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG5cdFx0ZGl2ID0gZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApLFxuXHRcdGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seVxuXHQvLyBDaGVjayBzdGF0ZSBsb3N0IGlmIHRoZSBuYW1lIGlzIHNldCAoIzExMjE3KVxuXHQvLyBTdXBwb3J0OiBXaW5kb3dzIFdlYiBBcHBzIChXV0EpXG5cdC8vIGBuYW1lYCBhbmQgYHR5cGVgIG11c3QgdXNlIC5zZXRBdHRyaWJ1dGUgZm9yIFdXQSAoIzE0OTAxKVxuXHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcInJhZGlvXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcImNoZWNrZWRcIiwgXCJjaGVja2VkXCIgKTtcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJ0XCIgKTtcblxuXHRkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICk7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSBvbmx5XG5cdC8vIE9sZGVyIFdlYktpdCBkb2Vzbid0IGNsb25lIGNoZWNrZWQgc3RhdGUgY29ycmVjdGx5IGluIGZyYWdtZW50c1xuXHRzdXBwb3J0LmNoZWNrQ2xvbmUgPSBkaXYuY2xvbmVOb2RlKCB0cnVlICkuY2xvbmVOb2RlKCB0cnVlICkubGFzdENoaWxkLmNoZWNrZWQ7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXG5cdGRpdi5pbm5lckhUTUwgPSBcIjx0ZXh0YXJlYT54PC90ZXh0YXJlYT5cIjtcblx0c3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCA9ICEhZGl2LmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5kZWZhdWx0VmFsdWU7XG59ICkoKTtcblxuXG52YXJcblx0cmtleUV2ZW50ID0gL15rZXkvLFxuXHRybW91c2VFdmVudCA9IC9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyxcblx0cnR5cGVuYW1lc3BhY2UgPSAvXihbXi5dKikoPzpcXC4oLispfCkvO1xuXG5mdW5jdGlvbiByZXR1cm5UcnVlKCkge1xuXHRyZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gcmV0dXJuRmFsc2UoKSB7XG5cdHJldHVybiBmYWxzZTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IC0gMTErXG4vLyBmb2N1cygpIGFuZCBibHVyKCkgYXJlIGFzeW5jaHJvbm91cywgZXhjZXB0IHdoZW4gdGhleSBhcmUgbm8tb3AuXG4vLyBTbyBleHBlY3QgZm9jdXMgdG8gYmUgc3luY2hyb25vdXMgd2hlbiB0aGUgZWxlbWVudCBpcyBhbHJlYWR5IGFjdGl2ZSxcbi8vIGFuZCBibHVyIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgbm90IGFscmVhZHkgYWN0aXZlLlxuLy8gKGZvY3VzIGFuZCBibHVyIGFyZSBhbHdheXMgc3luY2hyb25vdXMgaW4gb3RoZXIgc3VwcG9ydGVkIGJyb3dzZXJzLFxuLy8gdGhpcyBqdXN0IGRlZmluZXMgd2hlbiB3ZSBjYW4gY291bnQgb24gaXQpLlxuZnVuY3Rpb24gZXhwZWN0U3luYyggZWxlbSwgdHlwZSApIHtcblx0cmV0dXJuICggZWxlbSA9PT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSApID09PSAoIHR5cGUgPT09IFwiZm9jdXNcIiApO1xufVxuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuLy8gQWNjZXNzaW5nIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgY2FuIHRocm93IHVuZXhwZWN0ZWRseVxuLy8gaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzkzXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcblx0fSBjYXRjaCAoIGVyciApIHsgfVxufVxuXG5mdW5jdGlvbiBvbiggZWxlbSwgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgb25lICkge1xuXHR2YXIgb3JpZ0ZuLCB0eXBlO1xuXG5cdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xuXHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vICggdHlwZXMtT2JqZWN0LCBzZWxlY3RvciwgZGF0YSApXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMtT2JqZWN0LCBkYXRhIClcblx0XHRcdGRhdGEgPSBkYXRhIHx8IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRvbiggZWxlbSwgdHlwZSwgc2VsZWN0b3IsIGRhdGEsIHR5cGVzWyB0eXBlIF0sIG9uZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggZGF0YSA9PSBudWxsICYmIGZuID09IG51bGwgKSB7XG5cblx0XHQvLyAoIHR5cGVzLCBmbiApXG5cdFx0Zm4gPSBzZWxlY3Rvcjtcblx0XHRkYXRhID0gc2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vICggdHlwZXMsIGRhdGEsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0fVxuXHRpZiAoIGZuID09PSBmYWxzZSApIHtcblx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHR9IGVsc2UgaWYgKCAhZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIG9uZSA9PT0gMSApIHtcblx0XHRvcmlnRm4gPSBmbjtcblx0XHRmbiA9IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0Ly8gQ2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvXG5cdFx0XHRqUXVlcnkoKS5vZmYoIGV2ZW50ICk7XG5cdFx0XHRyZXR1cm4gb3JpZ0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9O1xuXG5cdFx0Ly8gVXNlIHNhbWUgZ3VpZCBzbyBjYWxsZXIgY2FuIHJlbW92ZSB1c2luZyBvcmlnRm5cblx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcblx0fVxuXHRyZXR1cm4gZWxlbS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XG5cdH0gKTtcbn1cblxuLypcbiAqIEhlbHBlciBmdW5jdGlvbnMgZm9yIG1hbmFnaW5nIGV2ZW50cyAtLSBub3QgcGFydCBvZiB0aGUgcHVibGljIGludGVyZmFjZS5cbiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuXG4gKi9cbmpRdWVyeS5ldmVudCA9IHtcblxuXHRnbG9iYWw6IHt9LFxuXG5cdGFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHtcblxuXHRcdHZhciBoYW5kbGVPYmpJbiwgZXZlbnRIYW5kbGUsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdC8vIERvbid0IGF0dGFjaCBldmVudHMgdG8gbm9EYXRhIG9yIHRleHQvY29tbWVudCBub2RlcyAoYnV0IGFsbG93IHBsYWluIG9iamVjdHMpXG5cdFx0aWYgKCAhZWxlbURhdGEgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGVyIGNhbiBwYXNzIGluIGFuIG9iamVjdCBvZiBjdXN0b20gZGF0YSBpbiBsaWV1IG9mIHRoZSBoYW5kbGVyXG5cdFx0aWYgKCBoYW5kbGVyLmhhbmRsZXIgKSB7XG5cdFx0XHRoYW5kbGVPYmpJbiA9IGhhbmRsZXI7XG5cdFx0XHRoYW5kbGVyID0gaGFuZGxlT2JqSW4uaGFuZGxlcjtcblx0XHRcdHNlbGVjdG9yID0gaGFuZGxlT2JqSW4uc2VsZWN0b3I7XG5cdFx0fVxuXG5cdFx0Ly8gRW5zdXJlIHRoYXQgaW52YWxpZCBzZWxlY3RvcnMgdGhyb3cgZXhjZXB0aW9ucyBhdCBhdHRhY2ggdGltZVxuXHRcdC8vIEV2YWx1YXRlIGFnYWluc3QgZG9jdW1lbnRFbGVtZW50IGluIGNhc2UgZWxlbSBpcyBhIG5vbi1lbGVtZW50IG5vZGUgKGUuZy4sIGRvY3VtZW50KVxuXHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGRvY3VtZW50RWxlbWVudCwgc2VsZWN0b3IgKTtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB0aGUgaGFuZGxlciBoYXMgYSB1bmlxdWUgSUQsIHVzZWQgdG8gZmluZC9yZW1vdmUgaXQgbGF0ZXJcblx0XHRpZiAoICFoYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xuXHRcdH1cblxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3Rcblx0XHRpZiAoICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0ZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzID0ge307XG5cdFx0fVxuXHRcdGlmICggISggZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgKSApIHtcblx0XHRcdGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlID0gZnVuY3Rpb24oIGUgKSB7XG5cblx0XHRcdFx0Ly8gRGlzY2FyZCB0aGUgc2Vjb25kIGV2ZW50IG9mIGEgalF1ZXJ5LmV2ZW50LnRyaWdnZXIoKSBhbmRcblx0XHRcdFx0Ly8gd2hlbiBhbiBldmVudCBpcyBjYWxsZWQgYWZ0ZXIgYSBwYWdlIGhhcyB1bmxvYWRlZFxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgP1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5kaXNwYXRjaC5hcHBseSggZWxlbSwgYXJndW1lbnRzICkgOiB1bmRlZmluZWQ7XG5cdFx0XHR9O1xuXHRcdH1cblxuXHRcdC8vIEhhbmRsZSBtdWx0aXBsZSBldmVudHMgc2VwYXJhdGVkIGJ5IGEgc3BhY2Vcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVGhlcmUgKm11c3QqIGJlIGEgdHlwZSwgbm8gYXR0YWNoaW5nIG5hbWVzcGFjZS1vbmx5IGhhbmRsZXJzXG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgZXZlbnQgY2hhbmdlcyBpdHMgdHlwZSwgdXNlIHRoZSBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGUgY2hhbmdlZCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gSWYgc2VsZWN0b3IgZGVmaW5lZCwgZGV0ZXJtaW5lIHNwZWNpYWwgZXZlbnQgYXBpIHR5cGUsIG90aGVyd2lzZSBnaXZlbiB0eXBlXG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cblx0XHRcdC8vIFVwZGF0ZSBzcGVjaWFsIGJhc2VkIG9uIG5ld2x5IHJlc2V0IHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBoYW5kbGVPYmogaXMgcGFzc2VkIHRvIGFsbCBldmVudCBoYW5kbGVyc1xuXHRcdFx0aGFuZGxlT2JqID0galF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRvcmlnVHlwZTogb3JpZ1R5cGUsXG5cdFx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRcdGhhbmRsZXI6IGhhbmRsZXIsXG5cdFx0XHRcdGd1aWQ6IGhhbmRsZXIuZ3VpZCxcblx0XHRcdFx0c2VsZWN0b3I6IHNlbGVjdG9yLFxuXHRcdFx0XHRuZWVkc0NvbnRleHQ6IHNlbGVjdG9yICYmIGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApLFxuXHRcdFx0XHRuYW1lc3BhY2U6IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKVxuXHRcdFx0fSwgaGFuZGxlT2JqSW4gKTtcblxuXHRcdFx0Ly8gSW5pdCB0aGUgZXZlbnQgaGFuZGxlciBxdWV1ZSBpZiB3ZSdyZSB0aGUgZmlyc3Rcblx0XHRcdGlmICggISggaGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSApICkge1xuXHRcdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdID0gW107XG5cdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQgPSAwO1xuXG5cdFx0XHRcdC8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZVxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnNldHVwIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC5zZXR1cC5jYWxsKCBlbGVtLCBkYXRhLCBuYW1lc3BhY2VzLCBldmVudEhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBldmVudEhhbmRsZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xuXHRcdFx0XHRzcGVjaWFsLmFkZC5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xuXHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyLmd1aWQgPSBoYW5kbGVyLmd1aWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIHRvIHRoZSBlbGVtZW50J3MgaGFuZGxlciBsaXN0LCBkZWxlZ2F0ZXMgaW4gZnJvbnRcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XG5cdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaGFuZGxlcnMuZGVsZWdhdGVDb3VudCsrLCAwLCBoYW5kbGVPYmogKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXG5cdFx0XHRqUXVlcnkuZXZlbnQuZ2xvYmFsWyB0eXBlIF0gPSB0cnVlO1xuXHRcdH1cblxuXHR9LFxuXG5cdC8vIERldGFjaCBhbiBldmVudCBvciBzZXQgb2YgZXZlbnRzIGZyb20gYW4gZWxlbWVudFxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgc2VsZWN0b3IsIG1hcHBlZFR5cGVzICkge1xuXG5cdFx0dmFyIGosIG9yaWdDb3VudCwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2Lmhhc0RhdGEoIGVsZW0gKSAmJiBkYXRhUHJpdi5nZXQoIGVsZW0gKTtcblxuXHRcdGlmICggIWVsZW1EYXRhIHx8ICEoIGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIE9uY2UgZm9yIGVhY2ggdHlwZS5uYW1lc3BhY2UgaW4gdHlwZXM7IHR5cGUgbWF5IGJlIG9taXR0ZWRcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cdFx0dCA9IHR5cGVzLmxlbmd0aDtcblx0XHR3aGlsZSAoIHQtLSApIHtcblx0XHRcdHRtcCA9IHJ0eXBlbmFtZXNwYWNlLmV4ZWMoIHR5cGVzWyB0IF0gKSB8fCBbXTtcblx0XHRcdHR5cGUgPSBvcmlnVHlwZSA9IHRtcFsgMSBdO1xuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcblxuXHRcdFx0Ly8gVW5iaW5kIGFsbCBldmVudHMgKG9uIHRoaXMgbmFtZXNwYWNlLCBpZiBwcm92aWRlZCkgZm9yIHRoZSBlbGVtZW50XG5cdFx0XHRpZiAoICF0eXBlICkge1xuXHRcdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICsgdHlwZXNbIHQgXSwgaGFuZGxlciwgc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRjb250aW51ZTtcblx0XHRcdH1cblxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0XHR0eXBlID0gKCBzZWxlY3RvciA/IHNwZWNpYWwuZGVsZWdhdGVUeXBlIDogc3BlY2lhbC5iaW5kVHlwZSApIHx8IHR5cGU7XG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xuXHRcdFx0dG1wID0gdG1wWyAyIF0gJiZcblx0XHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICk7XG5cblx0XHRcdC8vIFJlbW92ZSBtYXRjaGluZyBldmVudHNcblx0XHRcdG9yaWdDb3VudCA9IGogPSBoYW5kbGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGogXTtcblxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXG5cdFx0XHRcdFx0KCAhaGFuZGxlciB8fCBoYW5kbGVyLmd1aWQgPT09IGhhbmRsZU9iai5ndWlkICkgJiZcblx0XHRcdFx0XHQoICF0bXAgfHwgdG1wLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApICYmXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxuXHRcdFx0XHRcdFx0c2VsZWN0b3IgPT09IFwiKipcIiAmJiBoYW5kbGVPYmouc2VsZWN0b3IgKSApIHtcblx0XHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGosIDEgKTtcblxuXHRcdFx0XHRcdGlmICggaGFuZGxlT2JqLnNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudC0tO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIHNwZWNpYWwucmVtb3ZlICkge1xuXHRcdFx0XHRcdFx0c3BlY2lhbC5yZW1vdmUuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBnZW5lcmljIGV2ZW50IGhhbmRsZXIgaWYgd2UgcmVtb3ZlZCBzb21ldGhpbmcgYW5kIG5vIG1vcmUgaGFuZGxlcnMgZXhpc3Rcblx0XHRcdC8vIChhdm9pZHMgcG90ZW50aWFsIGZvciBlbmRsZXNzIHJlY3Vyc2lvbiBkdXJpbmcgcmVtb3ZhbCBvZiBzcGVjaWFsIGV2ZW50IGhhbmRsZXJzKVxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC50ZWFyZG93biB8fFxuXHRcdFx0XHRcdHNwZWNpYWwudGVhcmRvd24uY2FsbCggZWxlbSwgbmFtZXNwYWNlcywgZWxlbURhdGEuaGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBlbGVtRGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGRlbGV0ZSBldmVudHNbIHR5cGUgXTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBSZW1vdmUgZGF0YSBhbmQgdGhlIGV4cGFuZG8gaWYgaXQncyBubyBsb25nZXIgdXNlZFxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xuXHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBcImhhbmRsZSBldmVudHNcIiApO1xuXHRcdH1cblx0fSxcblxuXHRkaXNwYXRjaDogZnVuY3Rpb24oIG5hdGl2ZUV2ZW50ICkge1xuXG5cdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XG5cdFx0dmFyIGV2ZW50ID0galF1ZXJ5LmV2ZW50LmZpeCggbmF0aXZlRXZlbnQgKTtcblxuXHRcdHZhciBpLCBqLCByZXQsIG1hdGNoZWQsIGhhbmRsZU9iaiwgaGFuZGxlclF1ZXVlLFxuXHRcdFx0YXJncyA9IG5ldyBBcnJheSggYXJndW1lbnRzLmxlbmd0aCApLFxuXHRcdFx0aGFuZGxlcnMgPSAoIGRhdGFQcml2LmdldCggdGhpcywgXCJldmVudHNcIiApIHx8IHt9IClbIGV2ZW50LnR5cGUgXSB8fCBbXSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZXZlbnQudHlwZSBdIHx8IHt9O1xuXG5cdFx0Ly8gVXNlIHRoZSBmaXgtZWQgalF1ZXJ5LkV2ZW50IHJhdGhlciB0aGFuIHRoZSAocmVhZC1vbmx5KSBuYXRpdmUgZXZlbnRcblx0XHRhcmdzWyAwIF0gPSBldmVudDtcblxuXHRcdGZvciAoIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0YXJnc1sgaSBdID0gYXJndW1lbnRzWyBpIF07XG5cdFx0fVxuXG5cdFx0ZXZlbnQuZGVsZWdhdGVUYXJnZXQgPSB0aGlzO1xuXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxuXHRcdGlmICggc3BlY2lhbC5wcmVEaXNwYXRjaCAmJiBzcGVjaWFsLnByZURpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICkgPT09IGZhbHNlICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIERldGVybWluZSBoYW5kbGVyc1xuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcblxuXHRcdC8vIFJ1biBkZWxlZ2F0ZXMgZmlyc3Q7IHRoZXkgbWF5IHdhbnQgdG8gc3RvcCBwcm9wYWdhdGlvbiBiZW5lYXRoIHVzXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIG1hdGNoZWQgPSBoYW5kbGVyUXVldWVbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRldmVudC5jdXJyZW50VGFyZ2V0ID0gbWF0Y2hlZC5lbGVtO1xuXG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBoYW5kbGVPYmogPSBtYXRjaGVkLmhhbmRsZXJzWyBqKysgXSApICYmXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZSBldmVudCBpcyBuYW1lc3BhY2VkLCB0aGVuIGVhY2ggaGFuZGxlciBpcyBvbmx5IGludm9rZWQgaWYgaXQgaXNcblx0XHRcdFx0Ly8gc3BlY2lhbGx5IHVuaXZlcnNhbCBvciBpdHMgbmFtZXNwYWNlcyBhcmUgYSBzdXBlcnNldCBvZiB0aGUgZXZlbnQncy5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBoYW5kbGVPYmoubmFtZXNwYWNlID09PSBmYWxzZSB8fFxuXHRcdFx0XHRcdGV2ZW50LnJuYW1lc3BhY2UudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkge1xuXG5cdFx0XHRcdFx0ZXZlbnQuaGFuZGxlT2JqID0gaGFuZGxlT2JqO1xuXHRcdFx0XHRcdGV2ZW50LmRhdGEgPSBoYW5kbGVPYmouZGF0YTtcblxuXHRcdFx0XHRcdHJldCA9ICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgaGFuZGxlT2JqLm9yaWdUeXBlIF0gfHwge30gKS5oYW5kbGUgfHxcblx0XHRcdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyICkuYXBwbHkoIG1hdGNoZWQuZWxlbSwgYXJncyApO1xuXG5cdFx0XHRcdFx0aWYgKCByZXQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdGlmICggKCBldmVudC5yZXN1bHQgPSByZXQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGwgdGhlIHBvc3REaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGVcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xuXHRcdFx0c3BlY2lhbC5wb3N0RGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdGhhbmRsZXJzOiBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXJzICkge1xuXHRcdHZhciBpLCBoYW5kbGVPYmosIHNlbCwgbWF0Y2hlZEhhbmRsZXJzLCBtYXRjaGVkU2VsZWN0b3JzLFxuXHRcdFx0aGFuZGxlclF1ZXVlID0gW10sXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcblx0XHRcdGN1ciA9IGV2ZW50LnRhcmdldDtcblxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05XG5cdFx0XHQvLyBCbGFjay1ob2xlIFNWRyA8dXNlPiBpbnN0YW5jZSB0cmVlcyAodHJhYy0xMzE4MClcblx0XHRcdGN1ci5ub2RlVHlwZSAmJlxuXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDJcblx0XHRcdC8vIFN1cHByZXNzIHNwZWMtdmlvbGF0aW5nIGNsaWNrcyBpbmRpY2F0aW5nIGEgbm9uLXByaW1hcnkgcG9pbnRlciBidXR0b24gKHRyYWMtMzg2MSlcblx0XHRcdC8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9ET00tTGV2ZWwtMy1FdmVudHMvI2V2ZW50LXR5cGUtY2xpY2tcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdC8vIC4uLmJ1dCBub3QgYXJyb3cga2V5IFwiY2xpY2tzXCIgb2YgcmFkaW8gaW5wdXRzLCB3aGljaCBjYW4gaGF2ZSBgYnV0dG9uYCAtMSAoZ2gtMjM0Mylcblx0XHRcdCEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBldmVudC5idXR0b24gPj0gMSApICkge1xuXG5cdFx0XHRmb3IgKCA7IGN1ciAhPT0gdGhpczsgY3VyID0gY3VyLnBhcmVudE5vZGUgfHwgdGhpcyApIHtcblxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcblx0XHRcdFx0Ly8gRG9uJ3QgcHJvY2VzcyBjbGlja3Mgb24gZGlzYWJsZWQgZWxlbWVudHMgKCM2OTExLCAjODE2NSwgIzExMzgyLCAjMTE3NjQpXG5cdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlID09PSAxICYmICEoIGV2ZW50LnR5cGUgPT09IFwiY2xpY2tcIiAmJiBjdXIuZGlzYWJsZWQgPT09IHRydWUgKSApIHtcblx0XHRcdFx0XHRtYXRjaGVkSGFuZGxlcnMgPSBbXTtcblx0XHRcdFx0XHRtYXRjaGVkU2VsZWN0b3JzID0ge307XG5cdFx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBkZWxlZ2F0ZUNvdW50OyBpKysgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBjb25mbGljdCB3aXRoIE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoIzEzMjAzKVxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XG5cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkoIHNlbCwgdGhpcyApLmluZGV4KCBjdXIgKSA+IC0xIDpcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZCggc2VsLCB0aGlzLCBudWxsLCBbIGN1ciBdICkubGVuZ3RoO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVkU2VsZWN0b3JzWyBzZWwgXSApIHtcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRpZiAoIG1hdGNoZWRIYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBtYXRjaGVkSGFuZGxlcnMgfSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcblx0XHRjdXIgPSB0aGlzO1xuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcblx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XG5cdH0sXG5cblx0YWRkUHJvcDogZnVuY3Rpb24oIG5hbWUsIGhvb2sgKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBqUXVlcnkuRXZlbnQucHJvdG90eXBlLCBuYW1lLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxuXG5cdFx0XHRnZXQ6IGlzRnVuY3Rpb24oIGhvb2sgKSA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gaG9vayggdGhpcy5vcmlnaW5hbEV2ZW50ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9IDpcblx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbIG5hbWUgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIHRoaXMsIG5hbWUsIHtcblx0XHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHR3cml0YWJsZTogdHJ1ZSxcblx0XHRcdFx0XHR2YWx1ZTogdmFsdWVcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRmaXg6IGZ1bmN0aW9uKCBvcmlnaW5hbEV2ZW50ICkge1xuXHRcdHJldHVybiBvcmlnaW5hbEV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdG9yaWdpbmFsRXZlbnQgOlxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggb3JpZ2luYWxFdmVudCApO1xuXHR9LFxuXG5cdHNwZWNpYWw6IHtcblx0XHRsb2FkOiB7XG5cblx0XHRcdC8vIFByZXZlbnQgdHJpZ2dlcmVkIGltYWdlLmxvYWQgZXZlbnRzIGZyb20gYnViYmxpbmcgdG8gd2luZG93LmxvYWRcblx0XHRcdG5vQnViYmxlOiB0cnVlXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBVdGlsaXplIG5hdGl2ZSBldmVudCB0byBlbnN1cmUgY29ycmVjdCBzdGF0ZSBmb3IgY2hlY2thYmxlIGlucHV0c1xuXHRcdFx0c2V0dXA6IGZ1bmN0aW9uKCBkYXRhICkge1xuXG5cdFx0XHRcdC8vIEZvciBtdXR1YWwgY29tcHJlc3NpYmlsaXR5IHdpdGggX2RlZmF1bHQsIHJlcGxhY2UgYHRoaXNgIGFjY2VzcyB3aXRoIGEgbG9jYWwgdmFyLlxuXHRcdFx0XHQvLyBgfHwgZGF0YWAgaXMgZGVhZCBjb2RlIG1lYW50IG9ubHkgdG8gcHJlc2VydmUgdGhlIHZhcmlhYmxlIHRocm91Z2ggbWluaWZpY2F0aW9uLlxuXHRcdFx0XHR2YXIgZWwgPSB0aGlzIHx8IGRhdGE7XG5cblx0XHRcdFx0Ly8gQ2xhaW0gdGhlIGZpcnN0IGhhbmRsZXJcblx0XHRcdFx0aWYgKCByY2hlY2thYmxlVHlwZS50ZXN0KCBlbC50eXBlICkgJiZcblx0XHRcdFx0XHRlbC5jbGljayAmJiBub2RlTmFtZSggZWwsIFwiaW5wdXRcIiApICkge1xuXG5cdFx0XHRcdFx0Ly8gZGF0YVByaXYuc2V0KCBlbCwgXCJjbGlja1wiLCAuLi4gKVxuXHRcdFx0XHRcdGxldmVyYWdlTmF0aXZlKCBlbCwgXCJjbGlja1wiLCByZXR1cm5UcnVlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXR1cm4gZmFsc2UgdG8gYWxsb3cgbm9ybWFsIHByb2Nlc3NpbmcgaW4gdGhlIGNhbGxlclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9LFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oIGRhdGEgKSB7XG5cblx0XHRcdFx0Ly8gRm9yIG11dHVhbCBjb21wcmVzc2liaWxpdHkgd2l0aCBfZGVmYXVsdCwgcmVwbGFjZSBgdGhpc2AgYWNjZXNzIHdpdGggYSBsb2NhbCB2YXIuXG5cdFx0XHRcdC8vIGB8fCBkYXRhYCBpcyBkZWFkIGNvZGUgbWVhbnQgb25seSB0byBwcmVzZXJ2ZSB0aGUgdmFyaWFibGUgdGhyb3VnaCBtaW5pZmljYXRpb24uXG5cdFx0XHRcdHZhciBlbCA9IHRoaXMgfHwgZGF0YTtcblxuXHRcdFx0XHQvLyBGb3JjZSBzZXR1cCBiZWZvcmUgdHJpZ2dlcmluZyBhIGNsaWNrXG5cdFx0XHRcdGlmICggcmNoZWNrYWJsZVR5cGUudGVzdCggZWwudHlwZSApICYmXG5cdFx0XHRcdFx0ZWwuY2xpY2sgJiYgbm9kZU5hbWUoIGVsLCBcImlucHV0XCIgKSApIHtcblxuXHRcdFx0XHRcdGxldmVyYWdlTmF0aXZlKCBlbCwgXCJjbGlja1wiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZXR1cm4gbm9uLWZhbHNlIHRvIGFsbG93IG5vcm1hbCBldmVudC1wYXRoIHByb3BhZ2F0aW9uXG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIHN1cHByZXNzIG5hdGl2ZSAuY2xpY2soKSBvbiBsaW5rc1xuXHRcdFx0Ly8gQWxzbyBwcmV2ZW50IGl0IGlmIHdlJ3JlIGN1cnJlbnRseSBpbnNpZGUgYSBsZXZlcmFnZWQgbmF0aXZlLWV2ZW50IHN0YWNrXG5cdFx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0O1xuXHRcdFx0XHRyZXR1cm4gcmNoZWNrYWJsZVR5cGUudGVzdCggdGFyZ2V0LnR5cGUgKSAmJlxuXHRcdFx0XHRcdHRhcmdldC5jbGljayAmJiBub2RlTmFtZSggdGFyZ2V0LCBcImlucHV0XCIgKSAmJlxuXHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGFyZ2V0LCBcImNsaWNrXCIgKSB8fFxuXHRcdFx0XHRcdG5vZGVOYW1lKCB0YXJnZXQsIFwiYVwiICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGJlZm9yZXVubG9hZDoge1xuXHRcdFx0cG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCAyMCtcblx0XHRcdFx0Ly8gRmlyZWZveCBkb2Vzbid0IGFsZXJ0IGlmIHRoZSByZXR1cm5WYWx1ZSBmaWVsZCBpcyBub3Qgc2V0LlxuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQgKSB7XG5cdFx0XHRcdFx0ZXZlbnQub3JpZ2luYWxFdmVudC5yZXR1cm5WYWx1ZSA9IGV2ZW50LnJlc3VsdDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcblxuLy8gRW5zdXJlIHRoZSBwcmVzZW5jZSBvZiBhbiBldmVudCBsaXN0ZW5lciB0aGF0IGhhbmRsZXMgbWFudWFsbHktdHJpZ2dlcmVkXG4vLyBzeW50aGV0aWMgZXZlbnRzIGJ5IGludGVycnVwdGluZyBwcm9ncmVzcyB1bnRpbCByZWludm9rZWQgaW4gcmVzcG9uc2UgdG9cbi8vICpuYXRpdmUqIGV2ZW50cyB0aGF0IGl0IGZpcmVzIGRpcmVjdGx5LCBlbnN1cmluZyB0aGF0IHN0YXRlIGNoYW5nZXMgaGF2ZVxuLy8gYWxyZWFkeSBvY2N1cnJlZCBiZWZvcmUgb3RoZXIgbGlzdGVuZXJzIGFyZSBpbnZva2VkLlxuZnVuY3Rpb24gbGV2ZXJhZ2VOYXRpdmUoIGVsLCB0eXBlLCBleHBlY3RTeW5jICkge1xuXG5cdC8vIE1pc3NpbmcgZXhwZWN0U3luYyBpbmRpY2F0ZXMgYSB0cmlnZ2VyIGNhbGwsIHdoaWNoIG11c3QgZm9yY2Ugc2V0dXAgdGhyb3VnaCBqUXVlcnkuZXZlbnQuYWRkXG5cdGlmICggIWV4cGVjdFN5bmMgKSB7XG5cdFx0aWYgKCBkYXRhUHJpdi5nZXQoIGVsLCB0eXBlICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGVsLCB0eXBlLCByZXR1cm5UcnVlICk7XG5cdFx0fVxuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFJlZ2lzdGVyIHRoZSBjb250cm9sbGVyIGFzIGEgc3BlY2lhbCB1bml2ZXJzYWwgaGFuZGxlciBmb3IgYWxsIGV2ZW50IG5hbWVzcGFjZXNcblx0ZGF0YVByaXYuc2V0KCBlbCwgdHlwZSwgZmFsc2UgKTtcblx0alF1ZXJ5LmV2ZW50LmFkZCggZWwsIHR5cGUsIHtcblx0XHRuYW1lc3BhY2U6IGZhbHNlLFxuXHRcdGhhbmRsZXI6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciBub3RBc3luYywgcmVzdWx0LFxuXHRcdFx0XHRzYXZlZCA9IGRhdGFQcml2LmdldCggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRpZiAoICggZXZlbnQuaXNUcmlnZ2VyICYgMSApICYmIHRoaXNbIHR5cGUgXSApIHtcblxuXHRcdFx0XHQvLyBJbnRlcnJ1cHQgcHJvY2Vzc2luZyBvZiB0aGUgb3V0ZXIgc3ludGhldGljIC50cmlnZ2VyKCllZCBldmVudFxuXHRcdFx0XHQvLyBTYXZlZCBkYXRhIHNob3VsZCBiZSBmYWxzZSBpbiBzdWNoIGNhc2VzLCBidXQgbWlnaHQgYmUgYSBsZWZ0b3ZlciBjYXB0dXJlIG9iamVjdFxuXHRcdFx0XHQvLyBmcm9tIGFuIGFzeW5jIG5hdGl2ZSBoYW5kbGVyIChnaC00MzUwKVxuXHRcdFx0XHRpZiAoICFzYXZlZC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBhcmd1bWVudHMgZm9yIHVzZSB3aGVuIGhhbmRsaW5nIHRoZSBpbm5lciBuYXRpdmUgZXZlbnRcblx0XHRcdFx0XHQvLyBUaGVyZSB3aWxsIGFsd2F5cyBiZSBhdCBsZWFzdCBvbmUgYXJndW1lbnQgKGFuIGV2ZW50IG9iamVjdCksIHNvIHRoaXMgYXJyYXlcblx0XHRcdFx0XHQvLyB3aWxsIG5vdCBiZSBjb25mdXNlZCB3aXRoIGEgbGVmdG92ZXIgY2FwdHVyZSBvYmplY3QuXG5cdFx0XHRcdFx0c2F2ZWQgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIHNhdmVkICk7XG5cblx0XHRcdFx0XHQvLyBUcmlnZ2VyIHRoZSBuYXRpdmUgZXZlbnQgYW5kIGNhcHR1cmUgaXRzIHJlc3VsdFxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuXHRcdFx0XHRcdC8vIGZvY3VzKCkgYW5kIGJsdXIoKSBhcmUgYXN5bmNocm9ub3VzXG5cdFx0XHRcdFx0bm90QXN5bmMgPSBleHBlY3RTeW5jKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdFx0dGhpc1sgdHlwZSBdKCk7XG5cdFx0XHRcdFx0cmVzdWx0ID0gZGF0YVByaXYuZ2V0KCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdFx0aWYgKCBzYXZlZCAhPT0gcmVzdWx0IHx8IG5vdEFzeW5jICkge1xuXHRcdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCBmYWxzZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRyZXN1bHQgPSB7fTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBzYXZlZCAhPT0gcmVzdWx0ICkge1xuXG5cdFx0XHRcdFx0XHQvLyBDYW5jZWwgdGhlIG91dGVyIHN5bnRoZXRpYyBldmVudFxuXHRcdFx0XHRcdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdC52YWx1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhpcyBpcyBhbiBpbm5lciBzeW50aGV0aWMgZXZlbnQgZm9yIGFuIGV2ZW50IHdpdGggYSBidWJibGluZyBzdXJyb2dhdGVcblx0XHRcdFx0Ly8gKGZvY3VzIG9yIGJsdXIpLCBhc3N1bWUgdGhhdCB0aGUgc3Vycm9nYXRlIGFscmVhZHkgcHJvcGFnYXRlZCBmcm9tIHRyaWdnZXJpbmcgdGhlXG5cdFx0XHRcdC8vIG5hdGl2ZSBldmVudCBhbmQgcHJldmVudCB0aGF0IGZyb20gaGFwcGVuaW5nIGFnYWluIGhlcmUuXG5cdFx0XHRcdC8vIFRoaXMgdGVjaG5pY2FsbHkgZ2V0cyB0aGUgb3JkZXJpbmcgd3Jvbmcgdy5yLnQuIHRvIGAudHJpZ2dlcigpYCAoaW4gd2hpY2ggdGhlXG5cdFx0XHRcdC8vIGJ1YmJsaW5nIHN1cnJvZ2F0ZSBwcm9wYWdhdGVzICphZnRlciogdGhlIG5vbi1idWJibGluZyBiYXNlKSwgYnV0IHRoYXQgc2VlbXNcblx0XHRcdFx0Ly8gbGVzcyBiYWQgdGhhbiBkdXBsaWNhdGlvbi5cblx0XHRcdFx0fSBlbHNlIGlmICggKCBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9ICkuZGVsZWdhdGVUeXBlICkge1xuXHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBuYXRpdmUgZXZlbnQgdHJpZ2dlcmVkIGFib3ZlLCBldmVyeXRoaW5nIGlzIG5vdyBpbiBvcmRlclxuXHRcdFx0Ly8gRmlyZSBhbiBpbm5lciBzeW50aGV0aWMgZXZlbnQgd2l0aCB0aGUgb3JpZ2luYWwgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBzYXZlZC5sZW5ndGggKSB7XG5cblx0XHRcdFx0Ly8gLi4uYW5kIGNhcHR1cmUgdGhlIHJlc3VsdFxuXHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIHR5cGUsIHtcblx0XHRcdFx0XHR2YWx1ZTogalF1ZXJ5LmV2ZW50LnRyaWdnZXIoXG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuXHRcdFx0XHRcdFx0Ly8gRXh0ZW5kIHdpdGggdGhlIHByb3RvdHlwZSB0byByZXNldCB0aGUgYWJvdmUgc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKClcblx0XHRcdFx0XHRcdGpRdWVyeS5leHRlbmQoIHNhdmVkWyAwIF0sIGpRdWVyeS5FdmVudC5wcm90b3R5cGUgKSxcblx0XHRcdFx0XHRcdHNhdmVkLnNsaWNlKCAxICksXG5cdFx0XHRcdFx0XHR0aGlzXG5cdFx0XHRcdFx0KVxuXHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gQWJvcnQgaGFuZGxpbmcgb2YgdGhlIG5hdGl2ZSBldmVudFxuXHRcdFx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gKTtcbn1cblxualF1ZXJ5LnJlbW92ZUV2ZW50ID0gZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGhhbmRsZSApIHtcblxuXHQvLyBUaGlzIFwiaWZcIiBpcyBuZWVkZWQgZm9yIHBsYWluIG9iamVjdHNcblx0aWYgKCBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0ZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyKCB0eXBlLCBoYW5kbGUgKTtcblx0fVxufTtcblxualF1ZXJ5LkV2ZW50ID0gZnVuY3Rpb24oIHNyYywgcHJvcHMgKSB7XG5cblx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkXG5cdGlmICggISggdGhpcyBpbnN0YW5jZW9mIGpRdWVyeS5FdmVudCApICkge1xuXHRcdHJldHVybiBuZXcgalF1ZXJ5LkV2ZW50KCBzcmMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBFdmVudCBvYmplY3Rcblx0aWYgKCBzcmMgJiYgc3JjLnR5cGUgKSB7XG5cdFx0dGhpcy5vcmlnaW5hbEV2ZW50ID0gc3JjO1xuXHRcdHRoaXMudHlwZSA9IHNyYy50eXBlO1xuXG5cdFx0Ly8gRXZlbnRzIGJ1YmJsaW5nIHVwIHRoZSBkb2N1bWVudCBtYXkgaGF2ZSBiZWVuIG1hcmtlZCBhcyBwcmV2ZW50ZWRcblx0XHQvLyBieSBhIGhhbmRsZXIgbG93ZXIgZG93biB0aGUgdHJlZTsgcmVmbGVjdCB0aGUgY29ycmVjdCB2YWx1ZS5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHNyYy5kZWZhdWx0UHJldmVudGVkIHx8XG5cdFx0XHRcdHNyYy5kZWZhdWx0UHJldmVudGVkID09PSB1bmRlZmluZWQgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9Mi4zIG9ubHlcblx0XHRcdFx0c3JjLnJldHVyblZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRyZXR1cm5UcnVlIDpcblx0XHRcdHJldHVybkZhbHNlO1xuXG5cdFx0Ly8gQ3JlYXRlIHRhcmdldCBwcm9wZXJ0aWVzXG5cdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDw9NiAtIDcgb25seVxuXHRcdC8vIFRhcmdldCBzaG91bGQgbm90IGJlIGEgdGV4dCBub2RlICgjNTA0LCAjMTMxNDMpXG5cdFx0dGhpcy50YXJnZXQgPSAoIHNyYy50YXJnZXQgJiYgc3JjLnRhcmdldC5ub2RlVHlwZSA9PT0gMyApID9cblx0XHRcdHNyYy50YXJnZXQucGFyZW50Tm9kZSA6XG5cdFx0XHRzcmMudGFyZ2V0O1xuXG5cdFx0dGhpcy5jdXJyZW50VGFyZ2V0ID0gc3JjLmN1cnJlbnRUYXJnZXQ7XG5cdFx0dGhpcy5yZWxhdGVkVGFyZ2V0ID0gc3JjLnJlbGF0ZWRUYXJnZXQ7XG5cblx0Ly8gRXZlbnQgdHlwZVxuXHR9IGVsc2Uge1xuXHRcdHRoaXMudHlwZSA9IHNyYztcblx0fVxuXG5cdC8vIFB1dCBleHBsaWNpdGx5IHByb3ZpZGVkIHByb3BlcnRpZXMgb250byB0aGUgZXZlbnQgb2JqZWN0XG5cdGlmICggcHJvcHMgKSB7XG5cdFx0alF1ZXJ5LmV4dGVuZCggdGhpcywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIENyZWF0ZSBhIHRpbWVzdGFtcCBpZiBpbmNvbWluZyBldmVudCBkb2Vzbid0IGhhdmUgb25lXG5cdHRoaXMudGltZVN0YW1wID0gc3JjICYmIHNyYy50aW1lU3RhbXAgfHwgRGF0ZS5ub3coKTtcblxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXG5cdHRoaXNbIGpRdWVyeS5leHBhbmRvIF0gPSB0cnVlO1xufTtcblxuLy8galF1ZXJ5LkV2ZW50IGlzIGJhc2VkIG9uIERPTTMgRXZlbnRzIGFzIHNwZWNpZmllZCBieSB0aGUgRUNNQVNjcmlwdCBMYW5ndWFnZSBCaW5kaW5nXG4vLyBodHRwczovL3d3dy53My5vcmcvVFIvMjAwMy9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1sXG5qUXVlcnkuRXZlbnQucHJvdG90eXBlID0ge1xuXHRjb25zdHJ1Y3RvcjogalF1ZXJ5LkV2ZW50LFxuXHRpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLFxuXHRpc1Byb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNTaW11bGF0ZWQ6IGZhbHNlLFxuXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdH1cblxuXHRcdHRoaXMuc3RvcFByb3BhZ2F0aW9uKCk7XG5cdH1cbn07XG5cbi8vIEluY2x1ZGVzIGFsbCBjb21tb24gZXZlbnQgcHJvcHMgaW5jbHVkaW5nIEtleUV2ZW50IGFuZCBNb3VzZUV2ZW50IHNwZWNpZmljIHByb3BzXG5qUXVlcnkuZWFjaCgge1xuXHRhbHRLZXk6IHRydWUsXG5cdGJ1YmJsZXM6IHRydWUsXG5cdGNhbmNlbGFibGU6IHRydWUsXG5cdGNoYW5nZWRUb3VjaGVzOiB0cnVlLFxuXHRjdHJsS2V5OiB0cnVlLFxuXHRkZXRhaWw6IHRydWUsXG5cdGV2ZW50UGhhc2U6IHRydWUsXG5cdG1ldGFLZXk6IHRydWUsXG5cdHBhZ2VYOiB0cnVlLFxuXHRwYWdlWTogdHJ1ZSxcblx0c2hpZnRLZXk6IHRydWUsXG5cdHZpZXc6IHRydWUsXG5cdFwiY2hhclwiOiB0cnVlLFxuXHRjb2RlOiB0cnVlLFxuXHRjaGFyQ29kZTogdHJ1ZSxcblx0a2V5OiB0cnVlLFxuXHRrZXlDb2RlOiB0cnVlLFxuXHRidXR0b246IHRydWUsXG5cdGJ1dHRvbnM6IHRydWUsXG5cdGNsaWVudFg6IHRydWUsXG5cdGNsaWVudFk6IHRydWUsXG5cdG9mZnNldFg6IHRydWUsXG5cdG9mZnNldFk6IHRydWUsXG5cdHBvaW50ZXJJZDogdHJ1ZSxcblx0cG9pbnRlclR5cGU6IHRydWUsXG5cdHNjcmVlblg6IHRydWUsXG5cdHNjcmVlblk6IHRydWUsXG5cdHRhcmdldFRvdWNoZXM6IHRydWUsXG5cdHRvRWxlbWVudDogdHJ1ZSxcblx0dG91Y2hlczogdHJ1ZSxcblxuXHR3aGljaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdHZhciBidXR0b24gPSBldmVudC5idXR0b247XG5cblx0XHQvLyBBZGQgd2hpY2ggZm9yIGtleSBldmVudHNcblx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgJiYgcmtleUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdHJldHVybiBldmVudC5jaGFyQ29kZSAhPSBudWxsID8gZXZlbnQuY2hhckNvZGUgOiBldmVudC5rZXlDb2RlO1xuXHRcdH1cblxuXHRcdC8vIEFkZCB3aGljaCBmb3IgY2xpY2s6IDEgPT09IGxlZnQ7IDIgPT09IG1pZGRsZTsgMyA9PT0gcmlnaHRcblx0XHRpZiAoICFldmVudC53aGljaCAmJiBidXR0b24gIT09IHVuZGVmaW5lZCAmJiBybW91c2VFdmVudC50ZXN0KCBldmVudC50eXBlICkgKSB7XG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDEgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDIgKSB7XG5cdFx0XHRcdHJldHVybiAzO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGJ1dHRvbiAmIDQgKSB7XG5cdFx0XHRcdHJldHVybiAyO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQud2hpY2g7XG5cdH1cbn0sIGpRdWVyeS5ldmVudC5hZGRQcm9wICk7XG5cbmpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCB0eXBlLCBkZWxlZ2F0ZVR5cGUgKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gPSB7XG5cblx0XHQvLyBVdGlsaXplIG5hdGl2ZSBldmVudCBpZiBwb3NzaWJsZSBzbyBibHVyL2ZvY3VzIHNlcXVlbmNlIGlzIGNvcnJlY3Rcblx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENsYWltIHRoZSBmaXJzdCBoYW5kbGVyXG5cdFx0XHQvLyBkYXRhUHJpdi5zZXQoIHRoaXMsIFwiZm9jdXNcIiwgLi4uIClcblx0XHRcdC8vIGRhdGFQcml2LnNldCggdGhpcywgXCJibHVyXCIsIC4uLiApXG5cdFx0XHRsZXZlcmFnZU5hdGl2ZSggdGhpcywgdHlwZSwgZXhwZWN0U3luYyApO1xuXG5cdFx0XHQvLyBSZXR1cm4gZmFsc2UgdG8gYWxsb3cgbm9ybWFsIHByb2Nlc3NpbmcgaW4gdGhlIGNhbGxlclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEZvcmNlIHNldHVwIGJlZm9yZSB0cmlnZ2VyXG5cdFx0XHRsZXZlcmFnZU5hdGl2ZSggdGhpcywgdHlwZSApO1xuXG5cdFx0XHQvLyBSZXR1cm4gbm9uLWZhbHNlIHRvIGFsbG93IG5vcm1hbCBldmVudC1wYXRoIHByb3BhZ2F0aW9uXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0ZGVsZWdhdGVUeXBlOiBkZWxlZ2F0ZVR5cGVcblx0fTtcbn0gKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy8zMjI5XG5cdHJ4aHRtbFRhZyA9IC88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKilbXj5dKilcXC8+L2dpLFxuXG5cdC8qIGVzbGludC1lbmFibGUgKi9cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCBwZGF0YUN1ciwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7XG5cblx0aWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIDEuIENvcHkgcHJpdmF0ZSBkYXRhOiBldmVudHMsIGhhbmRsZXJzLCBldGMuXG5cdGlmICggZGF0YVByaXYuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0cGRhdGFPbGQgPSBkYXRhUHJpdi5hY2Nlc3MoIHNyYyApO1xuXHRcdHBkYXRhQ3VyID0gZGF0YVByaXYuc2V0KCBkZXN0LCBwZGF0YU9sZCApO1xuXHRcdGV2ZW50cyA9IHBkYXRhT2xkLmV2ZW50cztcblxuXHRcdGlmICggZXZlbnRzICkge1xuXHRcdFx0ZGVsZXRlIHBkYXRhQ3VyLmhhbmRsZTtcblx0XHRcdHBkYXRhQ3VyLmV2ZW50cyA9IHt9O1xuXG5cdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBldmVudHNbIHR5cGUgXS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gMi4gQ29weSB1c2VyIGRhdGFcblx0aWYgKCBkYXRhVXNlci5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHR1ZGF0YU9sZCA9IGRhdGFVc2VyLmFjY2Vzcyggc3JjICk7XG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcblxuXHRcdGRhdGFVc2VyLnNldCggZGVzdCwgdWRhdGFDdXIgKTtcblx0fVxufVxuXG4vLyBGaXggSUUgYnVncywgc2VlIHN1cHBvcnQgdGVzdHNcbmZ1bmN0aW9uIGZpeElucHV0KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBub2RlTmFtZSA9IGRlc3Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHQvLyBGYWlscyB0byBwZXJzaXN0IHRoZSBjaGVja2VkIHN0YXRlIG9mIGEgY2xvbmVkIGNoZWNrYm94IG9yIHJhZGlvIGJ1dHRvbi5cblx0aWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmIHJjaGVja2FibGVUeXBlLnRlc3QoIHNyYy50eXBlICkgKSB7XG5cdFx0ZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XG5cblx0Ly8gRmFpbHMgdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBvcHRpb24gdG8gdGhlIGRlZmF1bHQgc2VsZWN0ZWQgc3RhdGUgd2hlbiBjbG9uaW5nIG9wdGlvbnNcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiB8fCBub2RlTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiICkge1xuXHRcdGRlc3QuZGVmYXVsdFZhbHVlID0gc3JjLmRlZmF1bHRWYWx1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBkb21NYW5pcCggY29sbGVjdGlvbiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKSB7XG5cblx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRhcmdzID0gY29uY2F0LmFwcGx5KCBbXSwgYXJncyApO1xuXG5cdHZhciBmcmFnbWVudCwgZmlyc3QsIHNjcmlwdHMsIGhhc1NjcmlwdHMsIG5vZGUsIGRvYyxcblx0XHRpID0gMCxcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXG5cdFx0aU5vQ2xvbmUgPSBsIC0gMSxcblx0XHR2YWx1ZSA9IGFyZ3NbIDAgXSxcblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIHZhbHVlSXNGdW5jdGlvbiB8fFxuXHRcdFx0KCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXN1cHBvcnQuY2hlY2tDbG9uZSAmJiByY2hlY2tlZC50ZXN0KCB2YWx1ZSApICkgKSB7XG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xuXHRcdFx0dmFyIHNlbGYgPSBjb2xsZWN0aW9uLmVxKCBpbmRleCApO1xuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xuXHRcdFx0fVxuXHRcdFx0ZG9tTWFuaXAoIHNlbGYsIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCBsICkge1xuXHRcdGZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7XG5cdFx0Zmlyc3QgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdGZyYWdtZW50ID0gZmlyc3Q7XG5cdFx0fVxuXG5cdFx0Ly8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRlbnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxiYWNrXG5cdFx0aWYgKCBmaXJzdCB8fCBpZ25vcmVkICkge1xuXHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xuXHRcdFx0aGFzU2NyaXB0cyA9IHNjcmlwdHMubGVuZ3RoO1xuXG5cdFx0XHQvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtXG5cdFx0XHQvLyBpbnN0ZWFkIG9mIHRoZSBmaXJzdCBiZWNhdXNlIGl0IGNhbiBlbmQgdXBcblx0XHRcdC8vIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkgaW4gY2VydGFpbiBzaXR1YXRpb25zICgjODA3MCkuXG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdG5vZGUgPSBmcmFnbWVudDtcblxuXHRcdFx0XHRpZiAoIGkgIT09IGlOb0Nsb25lICkge1xuXHRcdFx0XHRcdG5vZGUgPSBqUXVlcnkuY2xvbmUoIG5vZGUsIHRydWUsIHRydWUgKTtcblxuXHRcdFx0XHRcdC8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQgc2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb25cblx0XHRcdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBzY3JpcHRzLCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNhbGxiYWNrLmNhbGwoIGNvbGxlY3Rpb25bIGkgXSwgbm9kZSwgaSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cdFx0XHRcdGRvYyA9IHNjcmlwdHNbIHNjcmlwdHMubGVuZ3RoIC0gMSBdLm93bmVyRG9jdW1lbnQ7XG5cblx0XHRcdFx0Ly8gUmVlbmFibGUgc2NyaXB0c1xuXHRcdFx0XHRqUXVlcnkubWFwKCBzY3JpcHRzLCByZXN0b3JlU2NyaXB0ICk7XG5cblx0XHRcdFx0Ly8gRXZhbHVhdGUgZXhlY3V0YWJsZSBzY3JpcHRzIG9uIGZpcnN0IGRvY3VtZW50IGluc2VydGlvblxuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGhhc1NjcmlwdHM7IGkrKyApIHtcblx0XHRcdFx0XHRub2RlID0gc2NyaXB0c1sgaSBdO1xuXHRcdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggbm9kZS50eXBlIHx8IFwiXCIgKSAmJlxuXHRcdFx0XHRcdFx0IWRhdGFQcml2LmFjY2Vzcyggbm9kZSwgXCJnbG9iYWxFdmFsXCIgKSAmJlxuXHRcdFx0XHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBkb2MsIG5vZGUgKSApIHtcblxuXHRcdFx0XHRcdFx0aWYgKCBub2RlLnNyYyAmJiAoIG5vZGUudHlwZSB8fCBcIlwiICkudG9Mb3dlckNhc2UoKSAgIT09IFwibW9kdWxlXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gT3B0aW9uYWwgQUpBWCBkZXBlbmRlbmN5LCBidXQgd29uJ3QgcnVuIHNjcmlwdHMgaWYgbm90IHByZXNlbnRcblx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuX2V2YWxVcmwgJiYgIW5vZGUubm9Nb2R1bGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYywge1xuXHRcdFx0XHRcdFx0XHRcdFx0bm9uY2U6IG5vZGUubm9uY2UgfHwgbm9kZS5nZXRBdHRyaWJ1dGUoIFwibm9uY2VcIiApXG5cdFx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBub2RlLCBkb2MgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGlzQXR0YWNoZWQoIG5vZGUgKSApIHtcblx0XHRcdFx0c2V0R2xvYmFsRXZhbCggZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdH1cblx0XHRcdG5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggbm9kZSApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGh0bWxQcmVmaWx0ZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHJldHVybiBodG1sLnJlcGxhY2UoIHJ4aHRtbFRhZywgXCI8JDE+PC8kMj5cIiApO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZWxlbSwgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0dmFyIGksIGwsIHNyY0VsZW1lbnRzLCBkZXN0RWxlbWVudHMsXG5cdFx0XHRjbG9uZSA9IGVsZW0uY2xvbmVOb2RlKCB0cnVlICksXG5cdFx0XHRpblBhZ2UgPSBpc0F0dGFjaGVkKCBlbGVtICk7XG5cblx0XHQvLyBGaXggSUUgY2xvbmluZyBpc3N1ZXNcblx0XHRpZiAoICFzdXBwb3J0Lm5vQ2xvbmVDaGVja2VkICYmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSApICYmXG5cdFx0XHRcdCFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gV2UgZXNjaGV3IFNpenpsZSBoZXJlIGZvciBwZXJmb3JtYW5jZSByZWFzb25zOiBodHRwczovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXG5cdFx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lICk7XG5cdFx0XHRzcmNFbGVtZW50cyA9IGdldEFsbCggZWxlbSApO1xuXG5cdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0Zml4SW5wdXQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29weSB0aGUgZXZlbnRzIGZyb20gdGhlIG9yaWdpbmFsIHRvIHRoZSBjbG9uZVxuXHRcdGlmICggZGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdGlmICggZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRcdHNyY0VsZW1lbnRzID0gc3JjRWxlbWVudHMgfHwgZ2V0QWxsKCBlbGVtICk7XG5cdFx0XHRcdGRlc3RFbGVtZW50cyA9IGRlc3RFbGVtZW50cyB8fCBnZXRBbGwoIGNsb25lICk7XG5cblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIHNyY0VsZW1lbnRzWyBpIF0sIGRlc3RFbGVtZW50c1sgaSBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGNsb25lQ29weUV2ZW50KCBlbGVtLCBjbG9uZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFByZXNlcnZlIHNjcmlwdCBldmFsdWF0aW9uIGhpc3Rvcnlcblx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lLCBcInNjcmlwdFwiICk7XG5cdFx0aWYgKCBkZXN0RWxlbWVudHMubGVuZ3RoID4gMCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIGRlc3RFbGVtZW50cywgIWluUGFnZSAmJiBnZXRBbGwoIGVsZW0sIFwic2NyaXB0XCIgKSApO1xuXHRcdH1cblxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxuXHRcdHJldHVybiBjbG9uZTtcblx0fSxcblxuXHRjbGVhbkRhdGE6IGZ1bmN0aW9uKCBlbGVtcyApIHtcblx0XHR2YXIgZGF0YSwgZWxlbSwgdHlwZSxcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbCxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT09IHVuZGVmaW5lZDsgaSsrICkge1xuXHRcdFx0aWYgKCBhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cdFx0XHRcdGlmICggKCBkYXRhID0gZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdICkgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdGZvciAoIHR5cGUgaW4gZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LnJlbW92ZUV2ZW50KCBlbGVtLCB0eXBlLCBkYXRhLmhhbmRsZSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCBlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gKSB7XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IgKTtcblx0fSxcblxuXHR0ZXh0OiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRqUXVlcnkudGV4dCggdGhpcyApIDpcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0dGhpcy50ZXh0Q29udGVudCA9IHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0YXBwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0cHJlcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZSggZWxlbSwgdGFyZ2V0LmZpcnN0Q2hpbGQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YmVmb3JlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcblx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHQvLyBQcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgYW55IHJlbWFpbmluZyBub2Rlc1xuXHRcdFx0XHRlbGVtLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XG5cdFx0ZGVlcERhdGFBbmRFdmVudHMgPSBkZWVwRGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZGF0YUFuZEV2ZW50cyA6IGRlZXBEYXRhQW5kRXZlbnRzO1xuXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBqUXVlcnkuY2xvbmUoIHRoaXMsIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdGh0bWw6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXSB8fCB7fSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcblxuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmlubmVySFRNTDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2VlIGlmIHdlIGNhbiB0YWtlIGEgc2hvcnRjdXQgYW5kIGp1c3QgdXNlIGlubmVySFRNTFxuXHRcdFx0aWYgKCB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgIXJub0lubmVyaHRtbC50ZXN0KCB2YWx1ZSApICYmXG5cdFx0XHRcdCF3cmFwTWFwWyAoIHJ0YWdOYW1lLmV4ZWMoIHZhbHVlICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHtcblxuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5odG1sUHJlZmlsdGVyKCB2YWx1ZSApO1xuXG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdFx0ZWxlbSA9IHRoaXNbIGkgXSB8fCB7fTtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIGVsZW1lbnQgbm9kZXMgYW5kIHByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXHRcdFx0XHRcdFx0XHRlbGVtLmlubmVySFRNTCA9IHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW0gPSAwO1xuXG5cdFx0XHRcdC8vIElmIHVzaW5nIGlubmVySFRNTCB0aHJvd3MgYW4gZXhjZXB0aW9uLCB1c2UgdGhlIGZhbGxiYWNrIG1ldGhvZFxuXHRcdFx0XHR9IGNhdGNoICggZSApIHt9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZCggdmFsdWUgKTtcblx0XHRcdH1cblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgaWdub3JlZCA9IFtdO1xuXG5cdFx0Ly8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuXHRcdFx0aWYgKCBqUXVlcnkuaW5BcnJheSggdGhpcywgaWdub3JlZCApIDwgMCApIHtcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCB0aGlzICkgKTtcblx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnJlcGxhY2VDaGlsZCggZWxlbSwgdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBGb3JjZSBjYWxsYmFjayBpbnZvY2F0aW9uXG5cdFx0fSwgaWdub3JlZCApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCB7XG5cdGFwcGVuZFRvOiBcImFwcGVuZFwiLFxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxuXHRpbnNlcnRCZWZvcmU6IFwiYmVmb3JlXCIsXG5cdGluc2VydEFmdGVyOiBcImFmdGVyXCIsXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxufSwgZnVuY3Rpb24oIG5hbWUsIG9yaWdpbmFsICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgZWxlbXMsXG5cdFx0XHRyZXQgPSBbXSxcblx0XHRcdGluc2VydCA9IGpRdWVyeSggc2VsZWN0b3IgKSxcblx0XHRcdGxhc3QgPSBpbnNlcnQubGVuZ3RoIC0gMSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcblx0XHRcdGVsZW1zID0gaSA9PT0gbGFzdCA/IHRoaXMgOiB0aGlzLmNsb25lKCB0cnVlICk7XG5cdFx0XHRqUXVlcnkoIGluc2VydFsgaSBdIClbIG9yaWdpbmFsIF0oIGVsZW1zICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0Ly8gLmdldCgpIGJlY2F1c2UgcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XG5cdH07XG59ICk7XG52YXIgcm51bW5vbnB4ID0gbmV3IFJlZ0V4cCggXCJeKFwiICsgcG51bSArIFwiKSg/IXB4KVthLXolXSskXCIsIFwiaVwiICk7XG5cbnZhciBnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seSwgRmlyZWZveCA8PTMwICgjMTUwOTgsICMxNDE1MClcblx0XHQvLyBJRSB0aHJvd3Mgb24gZWxlbWVudHMgY3JlYXRlZCBpbiBwb3B1cHNcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcblx0XHR2YXIgdmlldyA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldztcblxuXHRcdGlmICggIXZpZXcgfHwgIXZpZXcub3BlbmVyICkge1xuXHRcdFx0dmlldyA9IHdpbmRvdztcblx0XHR9XG5cblx0XHRyZXR1cm4gdmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtICk7XG5cdH07XG5cbnZhciByYm94U3R5bGUgPSBuZXcgUmVnRXhwKCBjc3NFeHBhbmQuam9pbiggXCJ8XCIgKSwgXCJpXCIgKTtcblxuXG5cbiggZnVuY3Rpb24oKSB7XG5cblx0Ly8gRXhlY3V0aW5nIGJvdGggcGl4ZWxQb3NpdGlvbiAmIGJveFNpemluZ1JlbGlhYmxlIHRlc3RzIHJlcXVpcmUgb25seSBvbmUgbGF5b3V0XG5cdC8vIHNvIHRoZXkncmUgZXhlY3V0ZWQgYXQgdGhlIHNhbWUgdGltZSB0byBzYXZlIHRoZSBzZWNvbmQgY29tcHV0YXRpb24uXG5cdGZ1bmN0aW9uIGNvbXB1dGVTdHlsZVRlc3RzKCkge1xuXG5cdFx0Ly8gVGhpcyBpcyBhIHNpbmdsZXRvbiwgd2UgbmVlZCB0byBleGVjdXRlIGl0IG9ubHkgb25jZVxuXHRcdGlmICggIWRpdiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7bGVmdDotMTExMTFweDt3aWR0aDo2MHB4O1wiICtcblx0XHRcdFwibWFyZ2luLXRvcDoxcHg7cGFkZGluZzowO2JvcmRlcjowXCI7XG5cdFx0ZGl2LnN0eWxlLmNzc1RleHQgPVxuXHRcdFx0XCJwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO2JveC1zaXppbmc6Ym9yZGVyLWJveDtvdmVyZmxvdzpzY3JvbGw7XCIgK1xuXHRcdFx0XCJtYXJnaW46YXV0bztib3JkZXI6MXB4O3BhZGRpbmc6MXB4O1wiICtcblx0XHRcdFwid2lkdGg6NjAlO3RvcDoxJVwiO1xuXHRcdGRvY3VtZW50RWxlbWVudC5hcHBlbmRDaGlsZCggY29udGFpbmVyICkuYXBwZW5kQ2hpbGQoIGRpdiApO1xuXG5cdFx0dmFyIGRpdlN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGRpdiApO1xuXHRcdHBpeGVsUG9zaXRpb25WYWwgPSBkaXZTdHlsZS50b3AgIT09IFwiMSVcIjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIEZpcmVmb3ggPD0zIC0gNDRcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLm1hcmdpbkxlZnQgKSA9PT0gMTI7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBTYWZhcmkgPD05LjEgLSAxMC4xLCBpT1MgPD03LjAgLSA5LjNcblx0XHQvLyBTb21lIHN0eWxlcyBjb21lIGJhY2sgd2l0aCBwZXJjZW50YWdlIHZhbHVlcywgZXZlbiB0aG91Z2ggdGhleSBzaG91bGRuJ3Rcblx0XHRkaXYuc3R5bGUucmlnaHQgPSBcIjYwJVwiO1xuXHRcdHBpeGVsQm94U3R5bGVzVmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5yaWdodCApID09PSAzNjtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG1pc3JlcG9ydGluZyBvZiBjb250ZW50IGRpbWVuc2lvbnMgZm9yIGJveC1zaXppbmc6Ym9yZGVyLWJveCBlbGVtZW50c1xuXHRcdGJveFNpemluZ1JlbGlhYmxlVmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS53aWR0aCApID09PSAzNjtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgb25seVxuXHRcdC8vIERldGVjdCBvdmVyZmxvdzpzY3JvbGwgc2NyZXdpbmVzcyAoZ2gtMzY5OSlcblx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD02NFxuXHRcdC8vIERvbid0IGdldCB0cmlja2VkIHdoZW4gem9vbSBhZmZlY3RzIG9mZnNldFdpZHRoIChnaC00MDI5KVxuXHRcdGRpdi5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcblx0XHRzY3JvbGxib3hTaXplVmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXYub2Zmc2V0V2lkdGggLyAzICkgPT09IDEyO1xuXG5cdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCBjb250YWluZXIgKTtcblxuXHRcdC8vIE51bGxpZnkgdGhlIGRpdiBzbyBpdCB3b3VsZG4ndCBiZSBzdG9yZWQgaW4gdGhlIG1lbW9yeSBhbmRcblx0XHQvLyBpdCB3aWxsIGFsc28gYmUgYSBzaWduIHRoYXQgY2hlY2tzIGFscmVhZHkgcGVyZm9ybWVkXG5cdFx0ZGl2ID0gbnVsbDtcblx0fVxuXG5cdGZ1bmN0aW9uIHJvdW5kUGl4ZWxNZWFzdXJlcyggbWVhc3VyZSApIHtcblx0XHRyZXR1cm4gTWF0aC5yb3VuZCggcGFyc2VGbG9hdCggbWVhc3VyZSApICk7XG5cdH1cblxuXHR2YXIgcGl4ZWxQb3NpdGlvblZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsIHNjcm9sbGJveFNpemVWYWwsIHBpeGVsQm94U3R5bGVzVmFsLFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xuXG5cdC8vIEZpbmlzaCBlYXJseSBpbiBsaW1pdGVkIChub24tYnJvd3NlcikgZW52aXJvbm1lbnRzXG5cdGlmICggIWRpdi5zdHlsZSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFN0eWxlIG9mIGNsb25lZCBlbGVtZW50IGFmZmVjdHMgc291cmNlIGVsZW1lbnQgY2xvbmVkICgjODkwOClcblx0ZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJjb250ZW50LWJveFwiO1xuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xuXHRzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSA9IGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9PT0gXCJjb250ZW50LWJveFwiO1xuXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcblx0XHRib3hTaXppbmdSZWxpYWJsZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIGJveFNpemluZ1JlbGlhYmxlVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxCb3hTdHlsZXM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbEJveFN0eWxlc1ZhbDtcblx0XHR9LFxuXHRcdHBpeGVsUG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBwaXhlbFBvc2l0aW9uVmFsO1xuXHRcdH0sXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5MZWZ0VmFsO1xuXHRcdH0sXG5cdFx0c2Nyb2xsYm94U2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHNjcm9sbGJveFNpemVWYWw7XG5cdFx0fVxuXHR9ICk7XG59ICkoKTtcblxuXG5mdW5jdGlvbiBjdXJDU1MoIGVsZW0sIG5hbWUsIGNvbXB1dGVkICkge1xuXHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA1MStcblx0XHQvLyBSZXRyaWV2aW5nIHN0eWxlIGJlZm9yZSBjb21wdXRlZCBzb21laG93XG5cdFx0Ly8gZml4ZXMgYW4gaXNzdWUgd2l0aCBnZXR0aW5nIHdyb25nIHZhbHVlc1xuXHRcdC8vIG9uIGRldGFjaGVkIGVsZW1lbnRzXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdGNvbXB1dGVkID0gY29tcHV0ZWQgfHwgZ2V0U3R5bGVzKCBlbGVtICk7XG5cblx0Ly8gZ2V0UHJvcGVydHlWYWx1ZSBpcyBuZWVkZWQgZm9yOlxuXHQvLyAgIC5jc3MoJ2ZpbHRlcicpIChJRSA5IG9ubHksICMxMjUzNylcblx0Ly8gICAuY3NzKCctLWN1c3RvbVByb3BlcnR5KSAoIzMxNDQpXG5cdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0cmV0ID0gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF07XG5cblx0XHRpZiAoIHJldCA9PT0gXCJcIiAmJiAhaXNBdHRhY2hlZCggZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXIgY3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIiBdLFxuXHRlbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLnN0eWxlLFxuXHR2ZW5kb3JQcm9wcyA9IHt9O1xuXG4vLyBSZXR1cm4gYSB2ZW5kb3ItcHJlZml4ZWQgcHJvcGVydHkgb3IgdW5kZWZpbmVkXG5mdW5jdGlvbiB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHtcblxuXHQvLyBDaGVjayBmb3IgdmVuZG9yIHByZWZpeGVkIG5hbWVzXG5cdHZhciBjYXBOYW1lID0gbmFtZVsgMCBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnNsaWNlKCAxICksXG5cdFx0aSA9IGNzc1ByZWZpeGVzLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRuYW1lID0gY3NzUHJlZml4ZXNbIGkgXSArIGNhcE5hbWU7XG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0XHRyZXR1cm4gbmFtZTtcblx0XHR9XG5cdH1cbn1cblxuLy8gUmV0dXJuIGEgcG90ZW50aWFsbHktbWFwcGVkIGpRdWVyeS5jc3NQcm9wcyBvciB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIGZpbmFsUHJvcE5hbWUoIG5hbWUgKSB7XG5cdHZhciBmaW5hbCA9IGpRdWVyeS5jc3NQcm9wc1sgbmFtZSBdIHx8IHZlbmRvclByb3BzWyBuYW1lIF07XG5cblx0aWYgKCBmaW5hbCApIHtcblx0XHRyZXR1cm4gZmluYWw7XG5cdH1cblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XG5cdFx0cmV0dXJuIG5hbWU7XG5cdH1cblx0cmV0dXJuIHZlbmRvclByb3BzWyBuYW1lIF0gPSB2ZW5kb3JQcm9wTmFtZSggbmFtZSApIHx8IG5hbWU7XG59XG5cblxudmFyXG5cblx0Ly8gU3dhcHBhYmxlIGlmIGRpc3BsYXkgaXMgbm9uZSBvciBzdGFydHMgd2l0aCB0YWJsZVxuXHQvLyBleGNlcHQgXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcblx0Ly8gU2VlIGhlcmUgZm9yIGRpc3BsYXkgdmFsdWVzOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL0NTUy9kaXNwbGF5XG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcblx0cmN1c3RvbVByb3AgPSAvXi0tLyxcblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXG5cdGNzc05vcm1hbFRyYW5zZm9ybSA9IHtcblx0XHRsZXR0ZXJTcGFjaW5nOiBcIjBcIixcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXG5cdH07XG5cbmZ1bmN0aW9uIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgc3VidHJhY3QgKSB7XG5cblx0Ly8gQW55IHJlbGF0aXZlICgrLy0pIHZhbHVlcyBoYXZlIGFscmVhZHkgYmVlblxuXHQvLyBub3JtYWxpemVkIGF0IHRoaXMgcG9pbnRcblx0dmFyIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICk7XG5cdHJldHVybiBtYXRjaGVzID9cblxuXHRcdC8vIEd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIFwic3VidHJhY3RcIiwgZS5nLiwgd2hlbiB1c2VkIGFzIGluIGNzc0hvb2tzXG5cdFx0TWF0aC5tYXgoIDAsIG1hdGNoZXNbIDIgXSAtICggc3VidHJhY3QgfHwgMCApICkgKyAoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSA6XG5cdFx0dmFsdWU7XG59XG5cbmZ1bmN0aW9uIGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBib3gsIGlzQm9yZGVyQm94LCBzdHlsZXMsIGNvbXB1dGVkVmFsICkge1xuXHR2YXIgaSA9IGRpbWVuc2lvbiA9PT0gXCJ3aWR0aFwiID8gMSA6IDAsXG5cdFx0ZXh0cmEgPSAwLFxuXHRcdGRlbHRhID0gMDtcblxuXHQvLyBBZGp1c3RtZW50IG1heSBub3QgYmUgbmVjZXNzYXJ5XG5cdGlmICggYm94ID09PSAoIGlzQm9yZGVyQm94ID8gXCJib3JkZXJcIiA6IFwiY29udGVudFwiICkgKSB7XG5cdFx0cmV0dXJuIDA7XG5cdH1cblxuXHRmb3IgKCA7IGkgPCA0OyBpICs9IDIgKSB7XG5cblx0XHQvLyBCb3RoIGJveCBtb2RlbHMgZXhjbHVkZSBtYXJnaW5cblx0XHRpZiAoIGJveCA9PT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdGRlbHRhICs9IGpRdWVyeS5jc3MoIGVsZW0sIGJveCArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBJZiB3ZSBnZXQgaGVyZSB3aXRoIGEgY29udGVudC1ib3gsIHdlJ3JlIHNlZWtpbmcgXCJwYWRkaW5nXCIgb3IgXCJib3JkZXJcIiBvciBcIm1hcmdpblwiXG5cdFx0aWYgKCAhaXNCb3JkZXJCb3ggKSB7XG5cblx0XHRcdC8vIEFkZCBwYWRkaW5nXG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBhZGRpbmdcIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gRm9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIiwgYWRkIGJvcmRlclxuXHRcdFx0aWYgKCBib3ggIT09IFwicGFkZGluZ1wiICkge1xuXHRcdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXG5cdFx0XHQvLyBCdXQgc3RpbGwga2VlcCB0cmFjayBvZiBpdCBvdGhlcndpc2Vcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGV4dHJhICs9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHQvLyBJZiB3ZSBnZXQgaGVyZSB3aXRoIGEgYm9yZGVyLWJveCAoY29udGVudCArIHBhZGRpbmcgKyBib3JkZXIpLCB3ZSdyZSBzZWVraW5nIFwiY29udGVudFwiIG9yXG5cdFx0Ly8gXCJwYWRkaW5nXCIgb3IgXCJtYXJnaW5cIlxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiwgc3VidHJhY3QgcGFkZGluZ1xuXHRcdFx0aWYgKCBib3ggPT09IFwiY29udGVudFwiICkge1xuXHRcdFx0XHRkZWx0YSAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBhZGRpbmdcIiArIGNzc0V4cGFuZFsgaSBdLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRm9yIFwiY29udGVudFwiIG9yIFwicGFkZGluZ1wiLCBzdWJ0cmFjdCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcIm1hcmdpblwiICkge1xuXHRcdFx0XHRkZWx0YSAtPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIEFjY291bnQgZm9yIHBvc2l0aXZlIGNvbnRlbnQtYm94IHNjcm9sbCBndXR0ZXIgd2hlbiByZXF1ZXN0ZWQgYnkgcHJvdmlkaW5nIGNvbXB1dGVkVmFsXG5cdGlmICggIWlzQm9yZGVyQm94ICYmIGNvbXB1dGVkVmFsID49IDAgKSB7XG5cblx0XHQvLyBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgaXMgYSByb3VuZGVkIHN1bSBvZiBjb250ZW50LCBwYWRkaW5nLCBzY3JvbGwgZ3V0dGVyLCBhbmQgYm9yZGVyXG5cdFx0Ly8gQXNzdW1pbmcgaW50ZWdlciBzY3JvbGwgZ3V0dGVyLCBzdWJ0cmFjdCB0aGUgcmVzdCBhbmQgcm91bmQgZG93blxuXHRcdGRlbHRhICs9IE1hdGgubWF4KCAwLCBNYXRoLmNlaWwoXG5cdFx0XHRlbGVtWyBcIm9mZnNldFwiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApIF0gLVxuXHRcdFx0Y29tcHV0ZWRWYWwgLVxuXHRcdFx0ZGVsdGEgLVxuXHRcdFx0ZXh0cmEgLVxuXHRcdFx0MC41XG5cblx0XHQvLyBJZiBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgaXMgdW5rbm93biwgdGhlbiB3ZSBjYW4ndCBkZXRlcm1pbmUgY29udGVudC1ib3ggc2Nyb2xsIGd1dHRlclxuXHRcdC8vIFVzZSBhbiBleHBsaWNpdCB6ZXJvIHRvIGF2b2lkIE5hTiAoZ2gtMzk2NClcblx0XHQpICkgfHwgMDtcblx0fVxuXG5cdHJldHVybiBkZWx0YTtcbn1cblxuZnVuY3Rpb24gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApIHtcblxuXHQvLyBTdGFydCB3aXRoIGNvbXB1dGVkIHN0eWxlXG5cdHZhciBzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblxuXHRcdC8vIFRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3csIG9ubHkgZmV0Y2ggYm94U2l6aW5nIGlmIHdlIG5lZWQgaXQgKGdoLTQzMjIpLlxuXHRcdC8vIEZha2UgY29udGVudC1ib3ggdW50aWwgd2Uga25vdyBpdCdzIG5lZWRlZCB0byBrbm93IHRoZSB0cnVlIHZhbHVlLlxuXHRcdGJveFNpemluZ05lZWRlZCA9ICFzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgfHwgZXh0cmEsXG5cdFx0aXNCb3JkZXJCb3ggPSBib3hTaXppbmdOZWVkZWQgJiZcblx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IGlzQm9yZGVyQm94LFxuXG5cdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBkaW1lbnNpb24sIHN0eWxlcyApLFxuXHRcdG9mZnNldFByb3AgPSBcIm9mZnNldFwiICsgZGltZW5zaW9uWyAwIF0udG9VcHBlckNhc2UoKSArIGRpbWVuc2lvbi5zbGljZSggMSApO1xuXG5cdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD01NFxuXHQvLyBSZXR1cm4gYSBjb25mb3VuZGluZyBub24tcGl4ZWwgdmFsdWUgb3IgZmVpZ24gaWdub3JhbmNlLCBhcyBhcHByb3ByaWF0ZS5cblx0aWYgKCBybnVtbm9ucHgudGVzdCggdmFsICkgKSB7XG5cdFx0aWYgKCAhZXh0cmEgKSB7XG5cdFx0XHRyZXR1cm4gdmFsO1xuXHRcdH1cblx0XHR2YWwgPSBcImF1dG9cIjtcblx0fVxuXG5cblx0Ly8gRmFsbCBiYWNrIHRvIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCB3aGVuIHZhbHVlIGlzIFwiYXV0b1wiXG5cdC8vIFRoaXMgaGFwcGVucyBmb3IgaW5saW5lIGVsZW1lbnRzIHdpdGggbm8gZXhwbGljaXQgc2V0dGluZyAoZ2gtMzU3MSlcblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMSAtIDQuMyBvbmx5XG5cdC8vIEFsc28gdXNlIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBmb3IgbWlzcmVwb3J0ZWQgaW5saW5lIGRpbWVuc2lvbnMgKGdoLTM2MDIpXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEgb25seVxuXHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIHdoZW4gYm94IHNpemluZyBpcyB1bnJlbGlhYmxlXG5cdC8vIFdlIHVzZSBnZXRDbGllbnRSZWN0cygpIHRvIGNoZWNrIGZvciBoaWRkZW4vZGlzY29ubmVjdGVkLlxuXHQvLyBJbiB0aG9zZSBjYXNlcywgdGhlIGNvbXB1dGVkIHZhbHVlIGNhbiBiZSB0cnVzdGVkIHRvIGJlIGJvcmRlci1ib3hcblx0aWYgKCAoICFzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgJiYgaXNCb3JkZXJCb3ggfHxcblx0XHR2YWwgPT09IFwiYXV0b1wiIHx8XG5cdFx0IXBhcnNlRmxvYXQoIHZhbCApICYmIGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiaW5saW5lXCIgKSAmJlxuXHRcdGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cblx0XHRpc0JvcmRlckJveCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCI7XG5cblx0XHQvLyBXaGVyZSBhdmFpbGFibGUsIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBhcHByb3hpbWF0ZSBib3JkZXIgYm94IGRpbWVuc2lvbnMuXG5cdFx0Ly8gV2hlcmUgbm90IGF2YWlsYWJsZSAoZS5nLiwgU1ZHKSwgYXNzdW1lIHVucmVsaWFibGUgYm94LXNpemluZyBhbmQgaW50ZXJwcmV0IHRoZVxuXHRcdC8vIHJldHJpZXZlZCB2YWx1ZSBhcyBhIGNvbnRlbnQgYm94IGRpbWVuc2lvbi5cblx0XHR2YWx1ZUlzQm9yZGVyQm94ID0gb2Zmc2V0UHJvcCBpbiBlbGVtO1xuXHRcdGlmICggdmFsdWVJc0JvcmRlckJveCApIHtcblx0XHRcdHZhbCA9IGVsZW1bIG9mZnNldFByb3AgXTtcblx0XHR9XG5cdH1cblxuXHQvLyBOb3JtYWxpemUgXCJcIiBhbmQgYXV0b1xuXHR2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwO1xuXG5cdC8vIEFkanVzdCBmb3IgdGhlIGVsZW1lbnQncyBib3ggbW9kZWxcblx0cmV0dXJuICggdmFsICtcblx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRlbGVtLFxuXHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxuXHRcdFx0dmFsdWVJc0JvcmRlckJveCxcblx0XHRcdHN0eWxlcyxcblxuXHRcdFx0Ly8gUHJvdmlkZSB0aGUgY3VycmVudCBjb21wdXRlZCBzaXplIHRvIHJlcXVlc3Qgc2Nyb2xsIGd1dHRlciBjYWxjdWxhdGlvbiAoZ2gtMzU4OSlcblx0XHRcdHZhbFxuXHRcdClcblx0KSArIFwicHhcIjtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxuXHQvLyBiZWhhdmlvciBvZiBnZXR0aW5nIGFuZCBzZXR0aW5nIGEgc3R5bGUgcHJvcGVydHlcblx0Y3NzSG9va3M6IHtcblx0XHRvcGFjaXR5OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHRcdC8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5XG5cdFx0XHRcdFx0dmFyIHJldCA9IGN1ckNTUyggZWxlbSwgXCJvcGFjaXR5XCIgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcblx0Y3NzTnVtYmVyOiB7XG5cdFx0XCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB0cnVlLFxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcblx0XHRcImZpbGxPcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJmbGV4R3Jvd1wiOiB0cnVlLFxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxuXHRcdFwiZm9udFdlaWdodFwiOiB0cnVlLFxuXHRcdFwiZ3JpZEFyZWFcIjogdHJ1ZSxcblx0XHRcImdyaWRDb2x1bW5cIjogdHJ1ZSxcblx0XHRcImdyaWRDb2x1bW5FbmRcIjogdHJ1ZSxcblx0XHRcImdyaWRDb2x1bW5TdGFydFwiOiB0cnVlLFxuXHRcdFwiZ3JpZFJvd1wiOiB0cnVlLFxuXHRcdFwiZ3JpZFJvd0VuZFwiOiB0cnVlLFxuXHRcdFwiZ3JpZFJvd1N0YXJ0XCI6IHRydWUsXG5cdFx0XCJsaW5lSGVpZ2h0XCI6IHRydWUsXG5cdFx0XCJvcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJvcmRlclwiOiB0cnVlLFxuXHRcdFwib3JwaGFuc1wiOiB0cnVlLFxuXHRcdFwid2lkb3dzXCI6IHRydWUsXG5cdFx0XCJ6SW5kZXhcIjogdHJ1ZSxcblx0XHRcInpvb21cIjogdHJ1ZVxuXHR9LFxuXG5cdC8vIEFkZCBpbiBwcm9wZXJ0aWVzIHdob3NlIG5hbWVzIHlvdSB3aXNoIHRvIGZpeCBiZWZvcmVcblx0Ly8gc2V0dGluZyBvciBnZXR0aW5nIHRoZSB2YWx1ZVxuXHRjc3NQcm9wczoge30sXG5cblx0Ly8gR2V0IGFuZCBzZXQgdGhlIHN0eWxlIHByb3BlcnR5IG9uIGEgRE9NIE5vZGVcblx0c3R5bGU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSwgZXh0cmEgKSB7XG5cblx0XHQvLyBEb24ndCBzZXQgc3R5bGVzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcblx0XHRpZiAoICFlbGVtIHx8IGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCB8fCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWVcblx0XHR2YXIgcmV0LCB0eXBlLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXG5cdFx0XHRpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICksXG5cdFx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUuIFdlIGRvbid0XG5cdFx0Ly8gd2FudCB0byBxdWVyeSB0aGUgdmFsdWUgaWYgaXQgaXMgYSBDU1MgY3VzdG9tIHByb3BlcnR5XG5cdFx0Ly8gc2luY2UgdGhleSBhcmUgdXNlci1kZWZpbmVkLlxuXHRcdGlmICggIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdG5hbWUgPSBmaW5hbFByb3BOYW1lKCBvcmlnTmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIEdldHMgaG9vayBmb3IgdGhlIHByZWZpeGVkIHZlcnNpb24sIHRoZW4gdW5wcmVmaXhlZCB2ZXJzaW9uXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBDaGVjayBpZiB3ZSdyZSBzZXR0aW5nIGEgdmFsdWVcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR0eXBlID0gdHlwZW9mIHZhbHVlO1xuXG5cdFx0XHQvLyBDb252ZXJ0IFwiKz1cIiBvciBcIi09XCIgdG8gcmVsYXRpdmUgbnVtYmVycyAoIzczNDUpXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwic3RyaW5nXCIgJiYgKCByZXQgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJiByZXRbIDEgXSApIHtcblx0XHRcdFx0dmFsdWUgPSBhZGp1c3RDU1MoIGVsZW0sIG5hbWUsIHJldCApO1xuXG5cdFx0XHRcdC8vIEZpeGVzIGJ1ZyAjOTIzN1xuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0ICgjNzExNilcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBudW1iZXIgd2FzIHBhc3NlZCBpbiwgYWRkIHRoZSB1bml0IChleGNlcHQgZm9yIGNlcnRhaW4gQ1NTIHByb3BlcnRpZXMpXG5cdFx0XHQvLyBUaGUgaXNDdXN0b21Qcm9wIGNoZWNrIGNhbiBiZSByZW1vdmVkIGluIGpRdWVyeSA0LjAgd2hlbiB3ZSBvbmx5IGF1dG8tYXBwZW5kXG5cdFx0XHQvLyBcInB4XCIgdG8gYSBmZXcgaGFyZGNvZGVkIHZhbHVlcy5cblx0XHRcdGlmICggdHlwZSA9PT0gXCJudW1iZXJcIiAmJiAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0XHR2YWx1ZSArPSByZXQgJiYgcmV0WyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBvcmlnTmFtZSBdID8gXCJcIiA6IFwicHhcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBiYWNrZ3JvdW5kLSogcHJvcHMgYWZmZWN0IG9yaWdpbmFsIGNsb25lJ3MgdmFsdWVzXG5cdFx0XHRpZiAoICFzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSAmJiB2YWx1ZSA9PT0gXCJcIiAmJiBuYW1lLmluZGV4T2YoIFwiYmFja2dyb3VuZFwiICkgPT09IDAgKSB7XG5cdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSBcImluaGVyaXRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lzZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHxcblx0XHRcdFx0KCB2YWx1ZSA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdGlmICggaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0XHRcdHN0eWxlLnNldFByb3BlcnR5KCBuYW1lLCB2YWx1ZSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXG5cdFx0XHRpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUuIFdlIGRvbid0XG5cdFx0Ly8gd2FudCB0byBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBUcnkgcHJlZml4ZWQgbmFtZSBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCBuYW1lXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxuXHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgXCJub3JtYWxcIiB0byBjb21wdXRlZCB2YWx1ZVxuXHRcdGlmICggdmFsID09PSBcIm5vcm1hbFwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtICkge1xuXHRcdFx0dmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBudW1lcmljIGlmIGZvcmNlZCBvciBhIHF1YWxpZmllciB3YXMgcHJvdmlkZWQgYW5kIHZhbCBsb29rcyBudW1lcmljXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xuXHRcdFx0cmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGlzRmluaXRlKCBudW0gKSA/IG51bSB8fCAwIDogdmFsO1xuXHRcdH1cblxuXHRcdHJldHVybiB2YWw7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJoZWlnaHRcIiwgXCJ3aWR0aFwiIF0sIGZ1bmN0aW9uKCBpLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblxuXHRcdFx0XHQvLyBPbmx5IHJlYWQgc3R5bGVzLnBvc2l0aW9uIGlmIHRoZSB0ZXN0IGhhcyBhIGNoYW5jZSB0byBmYWlsXG5cdFx0XHRcdC8vIHRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3cuXG5cdFx0XHRcdHNjcm9sbGJveFNpemVCdWdneSA9ICFzdXBwb3J0LnNjcm9sbGJveFNpemUoKSAmJlxuXHRcdFx0XHRcdHN0eWxlcy5wb3NpdGlvbiA9PT0gXCJhYnNvbHV0ZVwiLFxuXG5cdFx0XHRcdC8vIFRvIGF2b2lkIGZvcmNpbmcgYSByZWZsb3csIG9ubHkgZmV0Y2ggYm94U2l6aW5nIGlmIHdlIG5lZWQgaXQgKGdoLTM5OTEpXG5cdFx0XHRcdGJveFNpemluZ05lZWRlZCA9IHNjcm9sbGJveFNpemVCdWdneSB8fCBleHRyYSxcblx0XHRcdFx0aXNCb3JkZXJCb3ggPSBib3hTaXppbmdOZWVkZWQgJiZcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhID9cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0XHRcdFx0ZXh0cmEsXG5cdFx0XHRcdFx0XHRpc0JvcmRlckJveCxcblx0XHRcdFx0XHRcdHN0eWxlc1xuXHRcdFx0XHRcdCkgOlxuXHRcdFx0XHRcdDA7XG5cblx0XHRcdC8vIEFjY291bnQgZm9yIHVucmVsaWFibGUgYm9yZGVyLWJveCBkaW1lbnNpb25zIGJ5IGNvbXBhcmluZyBvZmZzZXQqIHRvIGNvbXB1dGVkIGFuZFxuXHRcdFx0Ly8gZmFraW5nIGEgY29udGVudC1ib3ggdG8gZ2V0IGJvcmRlciBhbmQgcGFkZGluZyAoZ2gtMzY5OSlcblx0XHRcdGlmICggaXNCb3JkZXJCb3ggJiYgc2Nyb2xsYm94U2l6ZUJ1Z2d5ICkge1xuXHRcdFx0XHRzdWJ0cmFjdCAtPSBNYXRoLmNlaWwoXG5cdFx0XHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBcImJvcmRlclwiLCBmYWxzZSwgc3R5bGVzICkgLVxuXHRcdFx0XHRcdDAuNVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7XG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5LmNzcyggZWxlbSwgZGltZW5zaW9uICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHQpICsgXCJweFwiO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goIHtcblx0bWFyZ2luOiBcIlwiLFxuXHRwYWRkaW5nOiBcIlwiLFxuXHRib3JkZXI6IFwiV2lkdGhcIlxufSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0ge1xuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGkgPSAwLFxuXHRcdFx0XHRleHBhbmRlZCA9IHt9LFxuXG5cdFx0XHRcdC8vIEFzc3VtZXMgYSBzaW5nbGUgbnVtYmVyIGlmIG5vdCBhIHN0cmluZ1xuXHRcdFx0XHRwYXJ0cyA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlLnNwbGl0KCBcIiBcIiApIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCBwcmVmaXggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWUgKSApIHtcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xuXG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBtYXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDpcblx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApO1xuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuXHRcdFx0Ly8gVXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlLlxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cblx0XHRcdGlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHtcblx0XHRcdFx0alF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSggdHdlZW4gKTtcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKFxuXHRcdFx0XHRcdGpRdWVyeS5jc3NIb29rc1sgdHdlZW4ucHJvcCBdIHx8XG5cdFx0XHRcdFx0dHdlZW4uZWxlbS5zdHlsZVsgZmluYWxQcm9wTmFtZSggdHdlZW4ucHJvcCApIF0gIT0gbnVsbCApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0XHQvLyBUaGUgZmluYWwgc3RlcCBvZiBhIFwiaGlkZVwiIGFuaW1hdGlvbiBpcyBhY3R1YWxseSBoaWRpbmcgdGhlIGVsZW1lbnRcblx0XHRcdFx0aWYgKCAhaGlkZGVuICkge1xuXHRcdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBvcmlnWyBwcm9wIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdC8vIFBlci1wcm9wZXJ0eSBzZXR1cFxuXHRcdHByb3BUd2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xuXHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRwcm9wVHdlZW4uc3RhcnQgPSAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBwcm9wRmlsdGVyKCBwcm9wcywgc3BlY2lhbEVhc2luZyApIHtcblx0dmFyIGluZGV4LCBuYW1lLCBlYXNpbmcsIHZhbHVlLCBob29rcztcblxuXHQvLyBjYW1lbENhc2UsIHNwZWNpYWxFYXNpbmcgYW5kIGV4cGFuZCBjc3NIb29rIHBhc3Ncblx0Zm9yICggaW5kZXggaW4gcHJvcHMgKSB7XG5cdFx0bmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRlYXNpbmcgPSB2YWx1ZVsgMSBdO1xuXHRcdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyAwIF07XG5cdFx0fVxuXG5cdFx0aWYgKCBpbmRleCAhPT0gbmFtZSApIHtcblx0XHRcdHByb3BzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgaW5kZXggXTtcblx0XHR9XG5cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdO1xuXHRcdGlmICggaG9va3MgJiYgXCJleHBhbmRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBuYW1lIF07XG5cblx0XHRcdC8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy5cblx0XHRcdC8vIFJldXNpbmcgJ2luZGV4JyBiZWNhdXNlIHdlIGhhdmUgdGhlIGNvcnJlY3QgXCJuYW1lXCJcblx0XHRcdGZvciAoIGluZGV4IGluIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7XG5cdFx0XHRcdFx0cHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgaW5kZXggXTtcblx0XHRcdFx0XHRzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHNwZWNpYWxFYXNpbmdbIG5hbWUgXSA9IGVhc2luZztcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkge1xuXHR2YXIgcmVzdWx0LFxuXHRcdHN0b3BwZWQsXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCxcblx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIERvbid0IG1hdGNoIGVsZW0gaW4gdGhlIDphbmltYXRlZCBzZWxlY3RvclxuXHRcdFx0ZGVsZXRlIHRpY2suZWxlbTtcblx0XHR9ICksXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR2YXIgY3VycmVudFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxuXHRcdFx0XHQvLyBBcmNoYWljIGNyYXNoIGJ1ZyB3b24ndCBhbGxvdyB1cyB0byB1c2UgYDEgLSAoIDAuNSB8fCAwIClgICgjMTI0OTcpXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcblx0XHRcdFx0cGVyY2VudCA9IDEgLSB0ZW1wLFxuXHRcdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xuXG5cdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0Ly8gSWYgdGhlcmUncyBtb3JlIHRvIGRvLCB5aWVsZFxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgd2FzIGFuIGVtcHR5IGFuaW1hdGlvbiwgc3ludGhlc2l6ZSBhIGZpbmFsIHByb2dyZXNzIG5vdGlmaWNhdGlvblxuXHRcdFx0aWYgKCAhbGVuZ3RoICkge1xuXHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uXG5cdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRzcGVjaWFsRWFzaW5nOiB7fSxcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XG5cdFx0XHR9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gUnVuIHRoZSB0aW1lciBhbmQgc2FmZWx5IHJlbW92ZSBpdCB3aGVuIGRvbmUgKGFsbG93aW5nIGZvciBleHRlcm5hbCByZW1vdmFsKVxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGpRdWVyeS5meC5zdGFydCgpO1xufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGluUHJvZ3Jlc3MgPSB0cnVlO1xuXHRzY2hlZHVsZSgpO1xufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0aW5Qcm9ncmVzcyA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBnZXR0ZXIgPSBhdHRySGFuZGxlWyBuYW1lIF0gfHwgalF1ZXJ5LmZpbmQuYXR0cjtcblxuXHRhdHRySGFuZGxlWyBuYW1lIF0gPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHJldCwgaGFuZGxlLFxuXHRcdFx0bG93ZXJjYXNlTmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHRcdGlmICggIWlzWE1MICkge1xuXG5cdFx0XHQvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wIGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyXG5cdFx0XHRoYW5kbGUgPSBhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF07XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSByZXQ7XG5cdFx0XHRyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkgIT0gbnVsbCA/XG5cdFx0XHRcdGxvd2VyY2FzZU5hbWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gaGFuZGxlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0O1xuXHR9O1xufSApO1xuXG5cblxuXG52YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJjbGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xuXHRcdFx0bmFtZSA9IGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcblx0fSxcblxuXHRwcm9wSG9va3M6IHtcblx0XHR0YWJJbmRleDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0XHRcdC8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZVxuXHRcdFx0XHQvLyBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXRcblx0XHRcdFx0Ly8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTQxMTE2MjMzMzQ3L2h0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCgjMTIwNzIpXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xuXG5cdFx0XHRcdGlmICggdGFiaW5kZXggKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxuXHRcdFx0XHRcdHJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmXG5cdFx0XHRcdFx0ZWxlbS5ocmVmXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH1cbn0gKTtcblxuLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG4vLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHlcbi8vIGZvcmNlcyB0aGUgYnJvd3NlciB0byByZXNwZWN0IHNldHRpbmcgc2VsZWN0ZWRcbi8vIG9uIHRoZSBvcHRpb25cbi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkXG4vLyB3aGVuIGluIGFuIG9wdGdyb3VwXG4vLyBlc2xpbnQgcnVsZSBcIm5vLXVudXNlZC1leHByZXNzaW9uc1wiIGlzIGRpc2FibGVkIGZvciB0aGlzIGNvZGVcbi8vIHNpbmNlIGl0IGNvbnNpZGVycyBzdWNoIGFjY2Vzc2lvbnMgbm9vcFxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcblx0alF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCAmJiBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xuXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxualF1ZXJ5LmVhY2goIFtcblx0XCJ0YWJJbmRleFwiLFxuXHRcInJlYWRPbmx5XCIsXG5cdFwibWF4TGVuZ3RoXCIsXG5cdFwiY2VsbFNwYWNpbmdcIixcblx0XCJjZWxsUGFkZGluZ1wiLFxuXHRcInJvd1NwYW5cIixcblx0XCJjb2xTcGFuXCIsXG5cdFwidXNlTWFwXCIsXG5cdFwiZnJhbWVCb3JkZXJcIixcblx0XCJjb250ZW50RWRpdGFibGVcIlxuXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS5wcm9wRml4WyB0aGlzLnRvTG93ZXJDYXNlKCkgXSA9IHRoaXM7XG59ICk7XG5cblxuXG5cblx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2UgYWNjb3JkaW5nIHRvIEhUTUwgc3BlY1xuXHQvLyBodHRwczovL2luZnJhLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLWFzY2lpLXdoaXRlc3BhY2Vcblx0ZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7XG5cdFx0dmFyIHRva2VucyA9IHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdFx0cmV0dXJuIHRva2Vucy5qb2luKCBcIiBcIiApO1xuXHR9XG5cblxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XG5cdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHwgXCJcIjtcbn1cblxuZnVuY3Rpb24gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICkge1xuXHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9XG5cdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHR9XG5cdHJldHVybiBbXTtcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0cmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZW1vdmVDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgKmFsbCogaW5zdGFuY2VzXG5cdFx0XHRcdFx0XHR3aGlsZSAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgPSBjdXIucmVwbGFjZSggXCIgXCIgKyBjbGF6eiArIFwiIFwiLCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWUsXG5cdFx0XHRpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gXCJib29sZWFuXCIgJiYgaXNWYWxpZFZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnRvZ2dsZUNsYXNzKFxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIHRoaXMsIGksIGdldENsYXNzKCB0aGlzICksIHN0YXRlVmFsICksXG5cdFx0XHRcdFx0c3RhdGVWYWxcblx0XHRcdFx0KTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBjbGFzc05hbWUsIGksIHNlbGYsIGNsYXNzTmFtZXM7XG5cblx0XHRcdGlmICggaXNWYWxpZFZhbHVlICkge1xuXG5cdFx0XHRcdC8vIFRvZ2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRzZWxmID0galF1ZXJ5KCB0aGlzICk7XG5cdFx0XHRcdGNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdC8vIFRvZ2dsZSB3aG9sZSBjbGFzcyBuYW1lXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXHRcdFx0XHRpZiAoIGNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiLCBjbGFzc05hbWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoZSBlbGVtZW50IGhhcyBhIGNsYXNzIG5hbWUgb3IgaWYgd2UncmUgcGFzc2VkIGBmYWxzZWAsXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBwcmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksXG5cdFx0XHRcdC8vIGZhbGxpbmcgYmFjayB0byB0aGUgZW1wdHkgc3RyaW5nIGlmIG5vdGhpbmcgd2FzIHN0b3JlZC5cblx0XHRcdFx0aWYgKCB0aGlzLnNldEF0dHJpYnV0ZSApIHtcblx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLFxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lIHx8IHZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRcdFx0XHRcIlwiIDpcblx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIHJyZXR1cm4gPSAvXFxyL2c7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGhvb2tzLCByZXQsIHZhbHVlSXNGdW5jdGlvbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF07XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHxcblx0XHRcdFx0XHRqUXVlcnkudmFsSG9va3NbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHRcdGlmICggaG9va3MgJiZcblx0XHRcdFx0XHRcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIFwidmFsdWVcIiApICkgIT09IHVuZGVmaW5lZFxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0ID0gZWxlbS52YWx1ZTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzXG5cdFx0XHRcdGlmICggdHlwZW9mIHJldCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0LnJlcGxhY2UoIHJyZXR1cm4sIFwiXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEhhbmRsZSBjYXNlcyB3aGVyZSB2YWx1ZSBpcyBudWxsL3VuZGVmIG9yIG51bWJlclxuXHRcdFx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0dmFyIHZhbDtcblxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsID0gdmFsdWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzIFwiXCI7IGNvbnZlcnQgbnVtYmVycyB0byBzdHJpbmdcblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHZhbCA9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbCArPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0dmFsID0galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cblx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyB0aGlzLnR5cGUgXSB8fCBqUXVlcnkudmFsSG9va3NbIHRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHQvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZ1xuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCBcInZhbHVlXCIgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHR0aGlzLnZhbHVlID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHZhbEhvb2tzOiB7XG5cdFx0b3B0aW9uOiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdHZhciB2YWwgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInZhbHVlXCIgKTtcblx0XHRcdFx0cmV0dXJuIHZhbCAhPSBudWxsID9cblx0XHRcdFx0XHR2YWwgOlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExIG9ubHlcblx0XHRcdFx0XHQvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAoIzE0Njg2LCAjMTQ4NTgpXG5cdFx0XHRcdFx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2Vcblx0XHRcdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFjZVxuXHRcdFx0XHRcdHN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHNlbGVjdDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHZhbHVlLCBvcHRpb24sIGksXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHRpbmRleCA9IGVsZW0uc2VsZWN0ZWRJbmRleCxcblx0XHRcdFx0XHRvbmUgPSBlbGVtLnR5cGUgPT09IFwic2VsZWN0LW9uZVwiLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHRpZiAoIGluZGV4IDwgMCApIHtcblx0XHRcdFx0XHRpID0gbWF4O1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aSA9IG9uZSA/IGluZGV4IDogMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnNcblx0XHRcdFx0Zm9yICggOyBpIDwgbWF4OyBpKysgKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHQvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcblx0XHRcdFx0XHRpZiAoICggb3B0aW9uLnNlbGVjdGVkIHx8IGkgPT09IGluZGV4ICkgJiZcblxuXHRcdFx0XHRcdFx0XHQvLyBEb24ndCByZXR1cm4gb3B0aW9ucyB0aGF0IGFyZSBkaXNhYmxlZCBvciBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHRcdFx0XHRcdCFvcHRpb24uZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRcdFx0KCAhb3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHxcblx0XHRcdFx0XHRcdFx0XHQhbm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBHZXQgdGhlIHNwZWNpZmljIHZhbHVlIGZvciB0aGUgb3B0aW9uXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XG5cblx0XHRcdFx0XHRcdC8vIFdlIGRvbid0IG5lZWQgYW4gYXJyYXkgZm9yIG9uZSBzZWxlY3RzXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBNdWx0aS1TZWxlY3RzIHJldHVybiBhbiBhcnJheVxuXHRcdFx0XHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgb3B0aW9uU2V0LCBvcHRpb24sXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxuXHRcdFx0XHRcdGkgPSBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXG5cdFx0XHRcdFx0aWYgKCBvcHRpb24uc2VsZWN0ZWQgPVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0b3B0aW9uU2V0ID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbmQtYXNzaWduICovXG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBicm93c2VycyB0byBiZWhhdmUgY29uc2lzdGVudGx5IHdoZW4gbm9uLW1hdGNoaW5nIHZhbHVlIGlzIHNldFxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcbmpRdWVyeS5lYWNoKCBbIFwicmFkaW9cIiwgXCJjaGVja2JveFwiIF0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHtcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS5jaGVja2VkID0galF1ZXJ5LmluQXJyYXkoIGpRdWVyeSggZWxlbSApLnZhbCgpLCB2YWx1ZSApID4gLTEgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IG51bGwgPyBcIm9uXCIgOiBlbGVtLnZhbHVlO1xuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbnN1cHBvcnQuZm9jdXNpbiA9IFwib25mb2N1c2luXCIgaW4gd2luZG93O1xuXG5cbnZhciByZm9jdXNNb3JwaCA9IC9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLyxcblx0c3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgPSBmdW5jdGlvbiggZSApIHtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9O1xuXG5qUXVlcnkuZXh0ZW5kKCBqUXVlcnkuZXZlbnQsIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggZXZlbnQsIGRhdGEsIGVsZW0sIG9ubHlIYW5kbGVycyApIHtcblxuXHRcdHZhciBpLCBjdXIsIHRtcCwgYnViYmxlVHlwZSwgb250eXBlLCBoYW5kbGUsIHNwZWNpYWwsIGxhc3RFbGVtZW50LFxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxuXHRcdFx0bmFtZXNwYWNlcyA9IGhhc093bi5jYWxsKCBldmVudCwgXCJuYW1lc3BhY2VcIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCBcIi5cIiApIDogW107XG5cblx0XHRjdXIgPSBsYXN0RWxlbWVudCA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50O1xuXG5cdFx0Ly8gRG9uJ3QgZG8gZXZlbnRzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBmb2N1cy9ibHVyIG1vcnBocyB0byBmb2N1c2luL291dDsgZW5zdXJlIHdlJ3JlIG5vdCBmaXJpbmcgdGhlbSByaWdodCBub3dcblx0XHRpZiAoIHJmb2N1c01vcnBoLnRlc3QoIHR5cGUgKyBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlLmluZGV4T2YoIFwiLlwiICkgPiAtMSApIHtcblxuXHRcdFx0Ly8gTmFtZXNwYWNlZCB0cmlnZ2VyOyBjcmVhdGUgYSByZWdleHAgdG8gbWF0Y2ggZXZlbnQgdHlwZSBpbiBoYW5kbGUoKVxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIFwiLlwiICk7XG5cdFx0XHR0eXBlID0gbmFtZXNwYWNlcy5zaGlmdCgpO1xuXHRcdFx0bmFtZXNwYWNlcy5zb3J0KCk7XG5cdFx0fVxuXHRcdG9udHlwZSA9IHR5cGUuaW5kZXhPZiggXCI6XCIgKSA8IDAgJiYgXCJvblwiICsgdHlwZTtcblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZ1xuXHRcdGV2ZW50ID0gZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0ZXZlbnQgOlxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSBcIm9iamVjdFwiICYmIGV2ZW50ICk7XG5cblx0XHQvLyBUcmlnZ2VyIGJpdG1hc2s6ICYgMSBmb3IgbmF0aXZlIGhhbmRsZXJzOyAmIDIgZm9yIGpRdWVyeSAoYWx3YXlzIHRydWUpXG5cdFx0ZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7XG5cdFx0ZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApO1xuXHRcdGV2ZW50LnJuYW1lc3BhY2UgPSBldmVudC5uYW1lc3BhY2UgP1xuXHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICkgOlxuXHRcdFx0bnVsbDtcblxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxuXHRcdGV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDtcblx0XHRpZiAoICFldmVudC50YXJnZXQgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xuXHRcdH1cblxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3Rcblx0XHRkYXRhID0gZGF0YSA9PSBudWxsID9cblx0XHRcdFsgZXZlbnQgXSA6XG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcblxuXHRcdC8vIEFsbG93IHNwZWNpYWwgZXZlbnRzIHRvIGRyYXcgb3V0c2lkZSB0aGUgbGluZXNcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgZXZlbnQgcHJvcGFnYXRpb24gcGF0aCBpbiBhZHZhbmNlLCBwZXIgVzNDIGV2ZW50cyBzcGVjICgjOTk1MSlcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xuXHRcdFx0XHRjdXIgPSBjdXIucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIGN1ciApO1xuXHRcdFx0XHR0bXAgPSBjdXI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCB0bXAuZGVmYXVsdFZpZXcgfHwgdG1wLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGV2ZW50UGF0aFsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGxhc3RFbGVtZW50ID0gY3VyO1xuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cblx0XHRcdFx0YnViYmxlVHlwZSA6XG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcblxuXHRcdFx0Ly8galF1ZXJ5IGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiZcblx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiaGFuZGxlXCIgKTtcblx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07XG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7XG5cdFx0XHRcdGV2ZW50LnJlc3VsdCA9IGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGV2ZW50LnR5cGUgPSB0eXBlO1xuXG5cdFx0Ly8gSWYgbm9ib2R5IHByZXZlbnRlZCB0aGUgZGVmYXVsdCBhY3Rpb24sIGRvIGl0IG5vd1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XG5cblx0XHRcdGlmICggKCAhc3BlY2lhbC5fZGVmYXVsdCB8fFxuXHRcdFx0XHRzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJlxuXHRcdFx0XHRhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBldmVudC5cblx0XHRcdFx0Ly8gRG9uJ3QgZG8gZGVmYXVsdCBhY3Rpb25zIG9uIHdpbmRvdywgdGhhdCdzIHdoZXJlIGdsb2JhbCB2YXJpYWJsZXMgYmUgKCM2MTcwKVxuXHRcdFx0XHRpZiAoIG9udHlwZSAmJiBpc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0XHRcdC8vIERvbid0IHJlLXRyaWdnZXIgYW4gb25GT08gZXZlbnQgd2hlbiB3ZSBjYWxsIGl0cyBGT08oKSBtZXRob2Rcblx0XHRcdFx0XHR0bXAgPSBlbGVtWyBvbnR5cGUgXTtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSBudWxsO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFByZXZlbnQgcmUtdHJpZ2dlcmluZyBvZiB0aGUgc2FtZSBldmVudCwgc2luY2Ugd2UgYWxyZWFkeSBidWJibGVkIGl0IGFib3ZlXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHR5cGU7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IHRtcDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxuXHQvLyBVc2VkIG9ubHkgZm9yIGBmb2N1cyhpbiB8IG91dClgIGV2ZW50c1xuXHRzaW11bGF0ZTogZnVuY3Rpb24oIHR5cGUsIGVsZW0sIGV2ZW50ICkge1xuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcblx0XHRcdGV2ZW50LFxuXHRcdFx0e1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRpc1NpbXVsYXRlZDogdHJ1ZVxuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggZSwgbnVsbCwgZWxlbSApO1xuXHR9XG5cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTtcblx0XHR9ICk7XG5cdH0sXG5cdHRyaWdnZXJIYW5kbGVyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXTtcblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIGVsZW0sIHRydWUgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG4vLyBTdXBwb3J0OiBGaXJlZm94IDw9NDRcbi8vIEZpcmVmb3ggZG9lc24ndCBoYXZlIGZvY3VzKGluIHwgb3V0KSBldmVudHNcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njg3Nzg3XG4vL1xuLy8gU3VwcG9ydDogQ2hyb21lIDw9NDggLSA0OSwgU2FmYXJpIDw9OS4wIC0gOS4xXG4vLyBmb2N1cyhpbiB8IG91dCkgZXZlbnRzIGZpcmUgYWZ0ZXIgZm9jdXMgJiBibHVyIGV2ZW50cyxcbi8vIHdoaWNoIGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlclxuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NDk4NTdcbmlmICggIXN1cHBvcnQuZm9jdXNpbiApIHtcblx0alF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIGZpeCwgZXZlbnQudGFyZ2V0LCBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApICk7XG5cdFx0fTtcblxuXHRcdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBmaXggXSA9IHtcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5hZGRFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XG5cdFx0XHR9LFxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0gRGF0ZS5ub3coKTtcblxudmFyIHJxdWVyeSA9ICggL1xcPy8gKTtcblxuXG5cbi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHR2YXIgeG1sO1xuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0Ly8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXG5cdHRyeSB7XG5cdFx0eG1sID0gKCBuZXcgd2luZG93LkRPTVBhcnNlcigpICkucGFyc2VGcm9tU3RyaW5nKCBkYXRhLCBcInRleHQveG1sXCIgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0eG1sID0gdW5kZWZpbmVkO1xuXHR9XG5cblx0aWYgKCAheG1sIHx8IHhtbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJwYXJzZXJlcnJvclwiICkubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0aWYgKCBhID09IG51bGwgKSB7XG5cdFx0cmV0dXJuIFwiXCI7XG5cdH1cblxuXHQvLyBJZiBhbiBhcnJheSB3YXMgcGFzc2VkIGluLCBhc3N1bWUgdGhhdCBpdCBpcyBhbiBhcnJheSBvZiBmb3JtIGVsZW1lbnRzLlxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIGEgKSB8fCAoIGEuanF1ZXJ5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggYSApICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcblx0XHRqUXVlcnkuZWFjaCggYSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRhZGQoIHRoaXMubmFtZSwgdGhpcy52YWx1ZSApO1xuXHRcdH0gKTtcblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gSWYgdHJhZGl0aW9uYWwsIGVuY29kZSB0aGUgXCJvbGRcIiB3YXkgKHRoZSB3YXkgMS4zLjIgb3Igb2xkZXJcblx0XHQvLyBkaWQgaXQpLCBvdGhlcndpc2UgZW5jb2RlIHBhcmFtcyByZWN1cnNpdmVseS5cblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXgsIGFbIHByZWZpeCBdLCB0cmFkaXRpb25hbCwgYWRkICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmV0dXJuIHRoZSByZXN1bHRpbmcgc2VyaWFsaXphdGlvblxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRzZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBqUXVlcnkucGFyYW0oIHRoaXMuc2VyaWFsaXplQXJyYXkoKSApO1xuXHR9LFxuXHRzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gQ2FuIGFkZCBwcm9wSG9vayBmb3IgXCJlbGVtZW50c1wiIHRvIGZpbHRlciBvciBhZGQgZm9ybSBlbGVtZW50c1xuXHRcdFx0dmFyIGVsZW1lbnRzID0galF1ZXJ5LnByb3AoIHRoaXMsIFwiZWxlbWVudHNcIiApO1xuXHRcdFx0cmV0dXJuIGVsZW1lbnRzID8galF1ZXJ5Lm1ha2VBcnJheSggZWxlbWVudHMgKSA6IHRoaXM7XG5cdFx0fSApXG5cdFx0LmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdHlwZSA9IHRoaXMudHlwZTtcblxuXHRcdFx0Ly8gVXNlIC5pcyggXCI6ZGlzYWJsZWRcIiApIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXG5cdFx0XHRyZXR1cm4gdGhpcy5uYW1lICYmICFqUXVlcnkoIHRoaXMgKS5pcyggXCI6ZGlzYWJsZWRcIiApICYmXG5cdFx0XHRcdHJzdWJtaXR0YWJsZS50ZXN0KCB0aGlzLm5vZGVOYW1lICkgJiYgIXJzdWJtaXR0ZXJUeXBlcy50ZXN0KCB0eXBlICkgJiZcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xuXHRcdH0gKVxuXHRcdC5tYXAoIGZ1bmN0aW9uKCBpLCBlbGVtICkge1xuXHRcdFx0dmFyIHZhbCA9IGpRdWVyeSggdGhpcyApLnZhbCgpO1xuXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0cmV0dXJuIGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbCApIHtcblx0XHRcdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB7IG5hbWU6IGVsZW0ubmFtZSwgdmFsdWU6IHZhbC5yZXBsYWNlKCByQ1JMRiwgXCJcXHJcXG5cIiApIH07XG5cdFx0fSApLmdldCgpO1xuXHR9XG59ICk7XG5cblxudmFyXG5cdHIyMCA9IC8lMjAvZyxcblx0cmhhc2ggPSAvIy4qJC8sXG5cdHJhbnRpQ2FjaGUgPSAvKFs/Jl0pXz1bXiZdKi8sXG5cdHJoZWFkZXJzID0gL14oLio/KTpbIFxcdF0qKFteXFxyXFxuXSopJC9tZyxcblxuXHQvLyAjNzY1MywgIzgxMjUsICM4MTUyOiBsb2NhbCBwcm90b2NvbCBkZXRlY3Rpb25cblx0cmxvY2FsUHJvdG9jb2wgPSAvXig/OmFib3V0fGFwcHxhcHAtc3RvcmFnZXwuKy1leHRlbnNpb258ZmlsZXxyZXN8d2lkZ2V0KTokLyxcblx0cm5vQ29udGVudCA9IC9eKD86R0VUfEhFQUQpJC8sXG5cdHJwcm90b2NvbCA9IC9eXFwvXFwvLyxcblxuXHQvKiBQcmVmaWx0ZXJzXG5cdCAqIDEpIFRoZXkgYXJlIHVzZWZ1bCB0byBpbnRyb2R1Y2UgY3VzdG9tIGRhdGFUeXBlcyAoc2VlIGFqYXgvanNvbnAuanMgZm9yIGFuIGV4YW1wbGUpXG5cdCAqIDIpIFRoZXNlIGFyZSBjYWxsZWQ6XG5cdCAqICAgIC0gQkVGT1JFIGFza2luZyBmb3IgYSB0cmFuc3BvcnRcblx0ICogICAgLSBBRlRFUiBwYXJhbSBzZXJpYWxpemF0aW9uIChzLmRhdGEgaXMgYSBzdHJpbmcgaWYgcy5wcm9jZXNzRGF0YSBpcyB0cnVlKVxuXHQgKiAzKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDQpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogNSkgZXhlY3V0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gY29udGludWUgZG93biB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHByZWZpbHRlcnMgPSB7fSxcblxuXHQvKiBUcmFuc3BvcnRzIGJpbmRpbmdzXG5cdCAqIDEpIGtleSBpcyB0aGUgZGF0YVR5cGVcblx0ICogMikgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxuXHQgKiAzKSBzZWxlY3Rpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBnbyB0byBcIipcIiBpZiBuZWVkZWRcblx0ICovXG5cdHRyYW5zcG9ydHMgPSB7fSxcblxuXHQvLyBBdm9pZCBjb21tZW50LXByb2xvZyBjaGFyIHNlcXVlbmNlICgjMTAwOTgpOyBtdXN0IGFwcGVhc2UgbGludCBhbmQgZXZhZGUgY29tcHJlc3Npb25cblx0YWxsVHlwZXMgPSBcIiovXCIuY29uY2F0KCBcIipcIiApLFxuXG5cdC8vIEFuY2hvciB0YWcgZm9yIHBhcnNpbmcgdGhlIGRvY3VtZW50IG9yaWdpblxuXHRvcmlnaW5BbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXHRvcmlnaW5BbmNob3IuaHJlZiA9IGxvY2F0aW9uLmhyZWY7XG5cbi8vIEJhc2UgXCJjb25zdHJ1Y3RvclwiIGZvciBqUXVlcnkuYWpheFByZWZpbHRlciBhbmQgalF1ZXJ5LmFqYXhUcmFuc3BvcnRcbmZ1bmN0aW9uIGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlICkge1xuXG5cdC8vIGRhdGFUeXBlRXhwcmVzc2lvbiBpcyBvcHRpb25hbCBhbmQgZGVmYXVsdHMgdG8gXCIqXCJcblx0cmV0dXJuIGZ1bmN0aW9uKCBkYXRhVHlwZUV4cHJlc3Npb24sIGZ1bmMgKSB7XG5cblx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZUV4cHJlc3Npb24gIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRmdW5jID0gZGF0YVR5cGVFeHByZXNzaW9uO1xuXHRcdFx0ZGF0YVR5cGVFeHByZXNzaW9uID0gXCIqXCI7XG5cdFx0fVxuXG5cdFx0dmFyIGRhdGFUeXBlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRkYXRhVHlwZXMgPSBkYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBmdW5jICkgKSB7XG5cblx0XHRcdC8vIEZvciBlYWNoIGRhdGFUeXBlIGluIHRoZSBkYXRhVHlwZUV4cHJlc3Npb25cblx0XHRcdHdoaWxlICggKCBkYXRhVHlwZSA9IGRhdGFUeXBlc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHQvLyBQcmVwZW5kIGlmIHJlcXVlc3RlZFxuXHRcdFx0XHRpZiAoIGRhdGFUeXBlWyAwIF0gPT09IFwiK1wiICkge1xuXHRcdFx0XHRcdGRhdGFUeXBlID0gZGF0YVR5cGUuc2xpY2UoIDEgKSB8fCBcIipcIjtcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnVuc2hpZnQoIGZ1bmMgKTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYXBwZW5kXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS5wdXNoKCBmdW5jICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbi8vIEJhc2UgaW5zcGVjdGlvbiBmdW5jdGlvbiBmb3IgcHJlZmlsdGVycyBhbmQgdHJhbnNwb3J0c1xuZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHtcblxuXHR2YXIgaW5zcGVjdGVkID0ge30sXG5cdFx0c2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0cmFuc3BvcnRzICk7XG5cblx0ZnVuY3Rpb24gaW5zcGVjdCggZGF0YVR5cGUgKSB7XG5cdFx0dmFyIHNlbGVjdGVkO1xuXHRcdGluc3BlY3RlZFsgZGF0YVR5cGUgXSA9IHRydWU7XG5cdFx0alF1ZXJ5LmVhY2goIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSwgZnVuY3Rpb24oIF8sIHByZWZpbHRlck9yRmFjdG9yeSApIHtcblx0XHRcdHZhciBkYXRhVHlwZU9yVHJhbnNwb3J0ID0gcHJlZmlsdGVyT3JGYWN0b3J5KCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICk7XG5cdFx0XHRpZiAoIHR5cGVvZiBkYXRhVHlwZU9yVHJhbnNwb3J0ID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzZWVraW5nVHJhbnNwb3J0ICYmICFpbnNwZWN0ZWRbIGRhdGFUeXBlT3JUcmFuc3BvcnQgXSApIHtcblxuXHRcdFx0XHRvcHRpb25zLmRhdGFUeXBlcy51bnNoaWZ0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdGluc3BlY3QoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSBlbHNlIGlmICggc2Vla2luZ1RyYW5zcG9ydCApIHtcblx0XHRcdFx0cmV0dXJuICEoIHNlbGVjdGVkID0gZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0XHRyZXR1cm4gc2VsZWN0ZWQ7XG5cdH1cblxuXHRyZXR1cm4gaW5zcGVjdCggb3B0aW9ucy5kYXRhVHlwZXNbIDAgXSApIHx8ICFpbnNwZWN0ZWRbIFwiKlwiIF0gJiYgaW5zcGVjdCggXCIqXCIgKTtcbn1cblxuLy8gQSBzcGVjaWFsIGV4dGVuZCBmb3IgYWpheCBvcHRpb25zXG4vLyB0aGF0IHRha2VzIFwiZmxhdFwiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKVxuLy8gRml4ZXMgIzk4ODdcbmZ1bmN0aW9uIGFqYXhFeHRlbmQoIHRhcmdldCwgc3JjICkge1xuXHR2YXIga2V5LCBkZWVwLFxuXHRcdGZsYXRPcHRpb25zID0galF1ZXJ5LmFqYXhTZXR0aW5ncy5mbGF0T3B0aW9ucyB8fCB7fTtcblxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xuXHRcdGlmICggc3JjWyBrZXkgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0KCBmbGF0T3B0aW9uc1sga2V5IF0gPyB0YXJnZXQgOiAoIGRlZXAgfHwgKCBkZWVwID0ge30gKSApIClbIGtleSBdID0gc3JjWyBrZXkgXTtcblx0XHR9XG5cdH1cblx0aWYgKCBkZWVwICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRydWUsIHRhcmdldCwgZGVlcCApO1xuXHR9XG5cblx0cmV0dXJuIHRhcmdldDtcbn1cblxuLyogSGFuZGxlcyByZXNwb25zZXMgdG8gYW4gYWpheCByZXF1ZXN0OlxuICogLSBmaW5kcyB0aGUgcmlnaHQgZGF0YVR5cGUgKG1lZGlhdGVzIGJldHdlZW4gY29udGVudC10eXBlIGFuZCBleHBlY3RlZCBkYXRhVHlwZSlcbiAqIC0gcmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyByZXNwb25zZVxuICovXG5mdW5jdGlvbiBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICkge1xuXG5cdHZhciBjdCwgdHlwZSwgZmluYWxEYXRhVHlwZSwgZmlyc3REYXRhVHlwZSxcblx0XHRjb250ZW50cyA9IHMuY29udGVudHMsXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXM7XG5cblx0Ly8gUmVtb3ZlIGF1dG8gZGF0YVR5cGUgYW5kIGdldCBjb250ZW50LXR5cGUgaW4gdGhlIHByb2Nlc3Ncblx0d2hpbGUgKCBkYXRhVHlwZXNbIDAgXSA9PT0gXCIqXCIgKSB7XG5cdFx0ZGF0YVR5cGVzLnNoaWZ0KCk7XG5cdFx0aWYgKCBjdCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0Y3QgPSBzLm1pbWVUeXBlIHx8IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkNvbnRlbnQtVHlwZVwiICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgd2UncmUgZGVhbGluZyB3aXRoIGEga25vd24gY29udGVudC10eXBlXG5cdGlmICggY3QgKSB7XG5cdFx0Zm9yICggdHlwZSBpbiBjb250ZW50cyApIHtcblx0XHRcdGlmICggY29udGVudHNbIHR5cGUgXSAmJiBjb250ZW50c1sgdHlwZSBdLnRlc3QoIGN0ICkgKSB7XG5cdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0eXBlICk7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIHRvIHNlZSBpZiB3ZSBoYXZlIGEgcmVzcG9uc2UgZm9yIHRoZSBleHBlY3RlZCBkYXRhVHlwZVxuXHRpZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHtcblx0XHRmaW5hbERhdGFUeXBlID0gZGF0YVR5cGVzWyAwIF07XG5cdH0gZWxzZSB7XG5cblx0XHQvLyBUcnkgY29udmVydGlibGUgZGF0YVR5cGVzXG5cdFx0Zm9yICggdHlwZSBpbiByZXNwb25zZXMgKSB7XG5cdFx0XHRpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyBcIiBcIiArIGRhdGFUeXBlc1sgMCBdIF0gKSB7XG5cdFx0XHRcdGZpbmFsRGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggIWZpcnN0RGF0YVR5cGUgKSB7XG5cdFx0XHRcdGZpcnN0RGF0YVR5cGUgPSB0eXBlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE9yIGp1c3QgdXNlIGZpcnN0IG9uZVxuXHRcdGZpbmFsRGF0YVR5cGUgPSBmaW5hbERhdGFUeXBlIHx8IGZpcnN0RGF0YVR5cGU7XG5cdH1cblxuXHQvLyBJZiB3ZSBmb3VuZCBhIGRhdGFUeXBlXG5cdC8vIFdlIGFkZCB0aGUgZGF0YVR5cGUgdG8gdGhlIGxpc3QgaWYgbmVlZGVkXG5cdC8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2Vcblx0aWYgKCBmaW5hbERhdGFUeXBlICkge1xuXHRcdGlmICggZmluYWxEYXRhVHlwZSAhPT0gZGF0YVR5cGVzWyAwIF0gKSB7XG5cdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlwZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gcmVzcG9uc2VzWyBmaW5hbERhdGFUeXBlIF07XG5cdH1cbn1cblxuLyogQ2hhaW4gY29udmVyc2lvbnMgZ2l2ZW4gdGhlIHJlcXVlc3QgYW5kIHRoZSBvcmlnaW5hbCByZXNwb25zZVxuICogQWxzbyBzZXRzIHRoZSByZXNwb25zZVhYWCBmaWVsZHMgb24gdGhlIGpxWEhSIGluc3RhbmNlXG4gKi9cbmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApIHtcblx0dmFyIGNvbnYyLCBjdXJyZW50LCBjb252LCB0bXAsIHByZXYsXG5cdFx0Y29udmVydGVycyA9IHt9LFxuXG5cdFx0Ly8gV29yayB3aXRoIGEgY29weSBvZiBkYXRhVHlwZXMgaW4gY2FzZSB3ZSBuZWVkIHRvIG1vZGlmeSBpdCBmb3IgY29udmVyc2lvblxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzLnNsaWNlKCk7XG5cblx0Ly8gQ3JlYXRlIGNvbnZlcnRlcnMgbWFwIHdpdGggbG93ZXJjYXNlZCBrZXlzXG5cdGlmICggZGF0YVR5cGVzWyAxIF0gKSB7XG5cdFx0Zm9yICggY29udiBpbiBzLmNvbnZlcnRlcnMgKSB7XG5cdFx0XHRjb252ZXJ0ZXJzWyBjb252LnRvTG93ZXJDYXNlKCkgXSA9IHMuY29udmVydGVyc1sgY29udiBdO1xuXHRcdH1cblx0fVxuXG5cdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHQvLyBDb252ZXJ0IHRvIGVhY2ggc2VxdWVudGlhbCBkYXRhVHlwZVxuXHR3aGlsZSAoIGN1cnJlbnQgKSB7XG5cblx0XHRpZiAoIHMucmVzcG9uc2VGaWVsZHNbIGN1cnJlbnQgXSApIHtcblx0XHRcdGpxWEhSWyBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gXSA9IHJlc3BvbnNlO1xuXHRcdH1cblxuXHRcdC8vIEFwcGx5IHRoZSBkYXRhRmlsdGVyIGlmIHByb3ZpZGVkXG5cdFx0aWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkge1xuXHRcdFx0cmVzcG9uc2UgPSBzLmRhdGFGaWx0ZXIoIHJlc3BvbnNlLCBzLmRhdGFUeXBlICk7XG5cdFx0fVxuXG5cdFx0cHJldiA9IGN1cnJlbnQ7XG5cdFx0Y3VycmVudCA9IGRhdGFUeXBlcy5zaGlmdCgpO1xuXG5cdFx0aWYgKCBjdXJyZW50ICkge1xuXG5cdFx0XHQvLyBUaGVyZSdzIG9ubHkgd29yayB0byBkbyBpZiBjdXJyZW50IGRhdGFUeXBlIGlzIG5vbi1hdXRvXG5cdFx0XHRpZiAoIGN1cnJlbnQgPT09IFwiKlwiICkge1xuXG5cdFx0XHRcdGN1cnJlbnQgPSBwcmV2O1xuXG5cdFx0XHQvLyBDb252ZXJ0IHJlc3BvbnNlIGlmIHByZXYgZGF0YVR5cGUgaXMgbm9uLWF1dG8gYW5kIGRpZmZlcnMgZnJvbSBjdXJyZW50XG5cdFx0XHR9IGVsc2UgaWYgKCBwcmV2ICE9PSBcIipcIiAmJiBwcmV2ICE9PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdC8vIFNlZWsgYSBkaXJlY3QgY29udmVydGVyXG5cdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyBjdXJyZW50IF0gfHwgY29udmVydGVyc1sgXCIqIFwiICsgY3VycmVudCBdO1xuXG5cdFx0XHRcdC8vIElmIG5vbmUgZm91bmQsIHNlZWsgYSBwYWlyXG5cdFx0XHRcdGlmICggIWNvbnYgKSB7XG5cdFx0XHRcdFx0Zm9yICggY29udjIgaW4gY29udmVydGVycyApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSWYgY29udjIgb3V0cHV0cyBjdXJyZW50XG5cdFx0XHRcdFx0XHR0bXAgPSBjb252Mi5zcGxpdCggXCIgXCIgKTtcblx0XHRcdFx0XHRcdGlmICggdG1wWyAxIF0gPT09IGN1cnJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gSWYgcHJldiBjYW4gYmUgY29udmVydGVkIHRvIGFjY2VwdGVkIGlucHV0XG5cdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyB0bXBbIDAgXSBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0Y29udmVydGVyc1sgXCIqIFwiICsgdG1wWyAwIF0gXTtcblx0XHRcdFx0XHRcdFx0aWYgKCBjb252ICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ29uZGVuc2UgZXF1aXZhbGVuY2UgY29udmVydGVyc1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY29udiA9PT0gdHJ1ZSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBjb252MiBdO1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBpbnNlcnQgdGhlIGludGVybWVkaWF0ZSBkYXRhVHlwZVxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIGNvbnZlcnRlcnNbIGNvbnYyIF0gIT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50ID0gdG1wWyAwIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdG1wWyAxIF0gKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBBcHBseSBjb252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSlcblx0XHRcdFx0aWYgKCBjb252ICE9PSB0cnVlICkge1xuXG5cdFx0XHRcdFx0Ly8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFuZCByZXR1cm4gdGhlbVxuXHRcdFx0XHRcdGlmICggY29udiAmJiBzLnRocm93cyApIHtcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcblx0XHRcdFx0XHRcdFx0XHRlcnJvcjogY29udiA/IGUgOiBcIk5vIGNvbnZlcnNpb24gZnJvbSBcIiArIHByZXYgKyBcIiB0byBcIiArIGN1cnJlbnRcblx0XHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4geyBzdGF0ZTogXCJzdWNjZXNzXCIsIGRhdGE6IHJlc3BvbnNlIH07XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcblx0YWN0aXZlOiAwLFxuXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3Rcblx0bGFzdE1vZGlmaWVkOiB7fSxcblx0ZXRhZzoge30sXG5cblx0YWpheFNldHRpbmdzOiB7XG5cdFx0dXJsOiBsb2NhdGlvbi5ocmVmLFxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0aXNMb2NhbDogcmxvY2FsUHJvdG9jb2wudGVzdCggbG9jYXRpb24ucHJvdG9jb2wgKSxcblx0XHRnbG9iYWw6IHRydWUsXG5cdFx0cHJvY2Vzc0RhdGE6IHRydWUsXG5cdFx0YXN5bmM6IHRydWUsXG5cdFx0Y29udGVudFR5cGU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsXG5cblx0XHQvKlxuXHRcdHRpbWVvdXQ6IDAsXG5cdFx0ZGF0YTogbnVsbCxcblx0XHRkYXRhVHlwZTogbnVsbCxcblx0XHR1c2VybmFtZTogbnVsbCxcblx0XHRwYXNzd29yZDogbnVsbCxcblx0XHRjYWNoZTogbnVsbCxcblx0XHR0aHJvd3M6IGZhbHNlLFxuXHRcdHRyYWRpdGlvbmFsOiBmYWxzZSxcblx0XHRoZWFkZXJzOiB7fSxcblx0XHQqL1xuXG5cdFx0YWNjZXB0czoge1xuXHRcdFx0XCIqXCI6IGFsbFR5cGVzLFxuXHRcdFx0dGV4dDogXCJ0ZXh0L3BsYWluXCIsXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxuXHRcdFx0eG1sOiBcImFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWxcIixcblx0XHRcdGpzb246IFwiYXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0XCJcblx0XHR9LFxuXG5cdFx0Y29udGVudHM6IHtcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXG5cdFx0XHRodG1sOiAvXFxiaHRtbC8sXG5cdFx0XHRqc29uOiAvXFxianNvblxcYi9cblx0XHR9LFxuXG5cdFx0cmVzcG9uc2VGaWVsZHM6IHtcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxuXHRcdFx0dGV4dDogXCJyZXNwb25zZVRleHRcIixcblx0XHRcdGpzb246IFwicmVzcG9uc2VKU09OXCJcblx0XHR9LFxuXG5cdFx0Ly8gRGF0YSBjb252ZXJ0ZXJzXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxuXHRcdGNvbnZlcnRlcnM6IHtcblxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XG5cdFx0XHRcIiogdGV4dFwiOiBTdHJpbmcsXG5cblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxuXHRcdFx0XCJ0ZXh0IGh0bWxcIjogdHJ1ZSxcblxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxuXHRcdFx0XCJ0ZXh0IGpzb25cIjogSlNPTi5wYXJzZSxcblxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcblx0XHRcdFwidGV4dCB4bWxcIjogalF1ZXJ5LnBhcnNlWE1MXG5cdFx0fSxcblxuXHRcdC8vIEZvciBvcHRpb25zIHRoYXQgc2hvdWxkbid0IGJlIGRlZXAgZXh0ZW5kZWQ6XG5cdFx0Ly8geW91IGNhbiBhZGQgeW91ciBvd24gY3VzdG9tIG9wdGlvbnMgaGVyZSBpZlxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXG5cdFx0Ly8gZGVlcCBleHRlbmRlZCAoc2VlIGFqYXhFeHRlbmQpXG5cdFx0ZmxhdE9wdGlvbnM6IHtcblx0XHRcdHVybDogdHJ1ZSxcblx0XHRcdGNvbnRleHQ6IHRydWVcblx0XHR9XG5cdH0sXG5cblx0Ly8gQ3JlYXRlcyBhIGZ1bGwgZmxlZGdlZCBzZXR0aW5ncyBvYmplY3QgaW50byB0YXJnZXRcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxuXHQvLyBJZiB0YXJnZXQgaXMgb21pdHRlZCwgd3JpdGVzIGludG8gYWpheFNldHRpbmdzLlxuXHRhamF4U2V0dXA6IGZ1bmN0aW9uKCB0YXJnZXQsIHNldHRpbmdzICkge1xuXHRcdHJldHVybiBzZXR0aW5ncyA/XG5cblx0XHRcdC8vIEJ1aWxkaW5nIGEgc2V0dGluZ3Mgb2JqZWN0XG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XG5cblx0XHRcdC8vIEV4dGVuZGluZyBhamF4U2V0dGluZ3Ncblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xuXHR9LFxuXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxuXHRhamF4VHJhbnNwb3J0OiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMgKSxcblxuXHQvLyBNYWluIG1ldGhvZFxuXHRhamF4OiBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcblx0XHRpZiAoIHR5cGVvZiB1cmwgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRvcHRpb25zID0gdXJsO1xuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XG5cdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0XHR2YXIgdHJhbnNwb3J0LFxuXG5cdFx0XHQvLyBVUkwgd2l0aG91dCBhbnRpLWNhY2hlIHBhcmFtXG5cdFx0XHRjYWNoZVVSTCxcblxuXHRcdFx0Ly8gUmVzcG9uc2UgaGVhZGVyc1xuXHRcdFx0cmVzcG9uc2VIZWFkZXJzU3RyaW5nLFxuXHRcdFx0cmVzcG9uc2VIZWFkZXJzLFxuXG5cdFx0XHQvLyB0aW1lb3V0IGhhbmRsZVxuXHRcdFx0dGltZW91dFRpbWVyLFxuXG5cdFx0XHQvLyBVcmwgY2xlYW51cCB2YXJcblx0XHRcdHVybEFuY2hvcixcblxuXHRcdFx0Ly8gUmVxdWVzdCBzdGF0ZSAoYmVjb21lcyBmYWxzZSB1cG9uIHNlbmQgYW5kIHRydWUgdXBvbiBjb21wbGV0aW9uKVxuXHRcdFx0Y29tcGxldGVkLFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIGdsb2JhbCBldmVudHMgYXJlIHRvIGJlIGRpc3BhdGNoZWRcblx0XHRcdGZpcmVHbG9iYWxzLFxuXG5cdFx0XHQvLyBMb29wIHZhcmlhYmxlXG5cdFx0XHRpLFxuXG5cdFx0XHQvLyB1bmNhY2hlZCBwYXJ0IG9mIHRoZSB1cmxcblx0XHRcdHVuY2FjaGVkLFxuXG5cdFx0XHQvLyBDcmVhdGUgdGhlIGZpbmFsIG9wdGlvbnMgb2JqZWN0XG5cdFx0XHRzID0galF1ZXJ5LmFqYXhTZXR1cCgge30sIG9wdGlvbnMgKSxcblxuXHRcdFx0Ly8gQ2FsbGJhY2tzIGNvbnRleHRcblx0XHRcdGNhbGxiYWNrQ29udGV4dCA9IHMuY29udGV4dCB8fCBzLFxuXG5cdFx0XHQvLyBDb250ZXh0IGZvciBnbG9iYWwgZXZlbnRzIGlzIGNhbGxiYWNrQ29udGV4dCBpZiBpdCBpcyBhIERPTSBub2RlIG9yIGpRdWVyeSBjb2xsZWN0aW9uXG5cdFx0XHRnbG9iYWxFdmVudENvbnRleHQgPSBzLmNvbnRleHQgJiZcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cblx0XHRcdFx0XHRqUXVlcnkoIGNhbGxiYWNrQ29udGV4dCApIDpcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQsXG5cblx0XHRcdC8vIERlZmVycmVkc1xuXHRcdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXG5cblx0XHRcdC8vIEhlYWRlcnMgKHRoZXkgYXJlIHNlbnQgYWxsIGF0IG9uY2UpXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxuXHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lcyA9IHt9LFxuXG5cdFx0XHQvLyBEZWZhdWx0IGFib3J0IG1lc3NhZ2Vcblx0XHRcdHN0ckFib3J0ID0gXCJjYW5jZWxlZFwiLFxuXG5cdFx0XHQvLyBGYWtlIHhoclxuXHRcdFx0anFYSFIgPSB7XG5cdFx0XHRcdHJlYWR5U3RhdGU6IDAsXG5cblx0XHRcdFx0Ly8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZFxuXHRcdFx0XHRnZXRSZXNwb25zZUhlYWRlcjogZnVuY3Rpb24oIGtleSApIHtcblx0XHRcdFx0XHR2YXIgbWF0Y2g7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICFyZXNwb25zZUhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoICggbWF0Y2ggPSByaGVhZGVycy5leGVjKCByZXNwb25zZUhlYWRlcnNTdHJpbmcgKSApICkge1xuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSA9XG5cdFx0XHRcdFx0XHRcdFx0XHQoIHJlc3BvbnNlSGVhZGVyc1sgbWF0Y2hbIDEgXS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXSB8fCBbXSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5jb25jYXQoIG1hdGNoWyAyIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpICsgXCIgXCIgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoID09IG51bGwgPyBudWxsIDogbWF0Y2guam9pbiggXCIsIFwiICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gUmF3IHN0cmluZ1xuXHRcdFx0XHRnZXRBbGxSZXNwb25zZUhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBjb21wbGV0ZWQgPyByZXNwb25zZUhlYWRlcnNTdHJpbmcgOiBudWxsO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIENhY2hlcyB0aGUgaGVhZGVyXG5cdFx0XHRcdHNldFJlcXVlc3RIZWFkZXI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdFx0XHRpZiAoIGNvbXBsZXRlZCA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdID1cblx0XHRcdFx0XHRcdFx0cmVxdWVzdEhlYWRlcnNOYW1lc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHwgbmFtZTtcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGVzIHJlc3BvbnNlIGNvbnRlbnQtdHlwZSBoZWFkZXJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdHMubWltZVR5cGUgPSB0eXBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0XHRzdGF0dXNDb2RlOiBmdW5jdGlvbiggbWFwICkge1xuXHRcdFx0XHRcdHZhciBjb2RlO1xuXHRcdFx0XHRcdGlmICggbWFwICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gRXhlY3V0ZSB0aGUgYXBwcm9wcmlhdGUgY2FsbGJhY2tzXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBMYXp5LWFkZCB0aGUgbmV3IGNhbGxiYWNrcyBpbiBhIHdheSB0aGF0IHByZXNlcnZlcyBvbGQgb25lc1xuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3Rcblx0XHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCBzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHZhciBmaW5hbFRleHQgPSBzdGF0dXNUZXh0IHx8IHN0ckFib3J0O1xuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xuXHRcdFx0XHRcdFx0dHJhbnNwb3J0LmFib3J0KCBmaW5hbFRleHQgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHQvLyBBdHRhY2ggZGVmZXJyZWRzXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKTtcblxuXHRcdC8vIEFkZCBwcm90b2NvbCBpZiBub3QgcHJvdmlkZWQgKHByZWZpbHRlcnMgbWlnaHQgZXhwZWN0IGl0KVxuXHRcdC8vIEhhbmRsZSBmYWxzeSB1cmwgaW4gdGhlIHNldHRpbmdzIG9iamVjdCAoIzEwMDkzOiBjb25zaXN0ZW5jeSB3aXRoIG9sZCBzaWduYXR1cmUpXG5cdFx0Ly8gV2UgYWxzbyB1c2UgdGhlIHVybCBwYXJhbWV0ZXIgaWYgYXZhaWxhYmxlXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGxvY2F0aW9uLmhyZWYgKSArIFwiXCIgKVxuXHRcdFx0LnJlcGxhY2UoIHJwcm90b2NvbCwgbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKTtcblxuXHRcdC8vIEFsaWFzIG1ldGhvZCBvcHRpb24gdG8gdHlwZSBhcyBwZXIgdGlja2V0ICMxMjAwNFxuXHRcdHMudHlwZSA9IG9wdGlvbnMubWV0aG9kIHx8IG9wdGlvbnMudHlwZSB8fCBzLm1ldGhvZCB8fCBzLnR5cGU7XG5cblx0XHQvLyBFeHRyYWN0IGRhdGFUeXBlcyBsaXN0XG5cdFx0cy5kYXRhVHlwZXMgPSAoIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgWyBcIlwiIF07XG5cblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gdGhlIG9yaWdpbiBkb2Vzbid0IG1hdGNoIHRoZSBjdXJyZW50IG9yaWdpbi5cblx0XHRpZiAoIHMuY3Jvc3NEb21haW4gPT0gbnVsbCApIHtcblx0XHRcdHVybEFuY2hvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiYVwiICk7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExLCBFZGdlIDEyIC0gMTVcblx0XHRcdC8vIElFIHRocm93cyBleGNlcHRpb24gb24gYWNjZXNzaW5nIHRoZSBocmVmIHByb3BlcnR5IGlmIHVybCBpcyBtYWxmb3JtZWQsXG5cdFx0XHQvLyBlLmcuIGh0dHA6Ly9leGFtcGxlLmNvbTo4MHgvXG5cdFx0XHR0cnkge1xuXHRcdFx0XHR1cmxBbmNob3IuaHJlZiA9IHMudXJsO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCAtIDExIG9ubHlcblx0XHRcdFx0Ly8gQW5jaG9yJ3MgaG9zdCBwcm9wZXJ0eSBpc24ndCBjb3JyZWN0bHkgc2V0IHdoZW4gcy51cmwgaXMgcmVsYXRpdmVcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSB1cmxBbmNob3IuaHJlZjtcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IG9yaWdpbkFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIG9yaWdpbkFuY2hvci5ob3N0ICE9PVxuXHRcdFx0XHRcdHVybEFuY2hvci5wcm90b2NvbCArIFwiLy9cIiArIHVybEFuY2hvci5ob3N0O1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYW4gZXJyb3IgcGFyc2luZyB0aGUgVVJMLCBhc3N1bWUgaXQgaXMgY3Jvc3NEb21haW4sXG5cdFx0XHRcdC8vIGl0IGNhbiBiZSByZWplY3RlZCBieSB0aGUgdHJhbnNwb3J0IGlmIGl0IGlzIGludmFsaWRcblx0XHRcdFx0cy5jcm9zc0RvbWFpbiA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXG5cdFx0aWYgKCBzLmRhdGEgJiYgcy5wcm9jZXNzRGF0YSAmJiB0eXBlb2Ygcy5kYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0cy5kYXRhID0galF1ZXJ5LnBhcmFtKCBzLmRhdGEsIHMudHJhZGl0aW9uYWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwcmVmaWx0ZXJzXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhIHByZWZpbHRlciwgc3RvcCB0aGVyZVxuXHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdH1cblxuXHRcdC8vIFdlIGNhbiBmaXJlIGdsb2JhbCBldmVudHMgYXMgb2Ygbm93IGlmIGFza2VkIHRvXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcblx0XHRmaXJlR2xvYmFscyA9IGpRdWVyeS5ldmVudCAmJiBzLmdsb2JhbDtcblxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcblx0XHRpZiAoIGZpcmVHbG9iYWxzICYmIGpRdWVyeS5hY3RpdmUrKyA9PT0gMCApIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdGFydFwiICk7XG5cdFx0fVxuXG5cdFx0Ly8gVXBwZXJjYXNlIHRoZSB0eXBlXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XG5cblx0XHQvLyBEZXRlcm1pbmUgaWYgcmVxdWVzdCBoYXMgY29udGVudFxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xuXG5cdFx0Ly8gU2F2ZSB0aGUgVVJMIGluIGNhc2Ugd2UncmUgdG95aW5nIHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggdG8gc2ltcGxpZnkgdXJsIG1hbmlwdWxhdGlvblxuXHRcdGNhY2hlVVJMID0gcy51cmwucmVwbGFjZSggcmhhc2gsIFwiXCIgKTtcblxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XG5cdFx0aWYgKCAhcy5oYXNDb250ZW50ICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgaGFzaCBzbyB3ZSBjYW4gcHV0IGl0IGJhY2tcblx0XHRcdHVuY2FjaGVkID0gcy51cmwuc2xpY2UoIGNhY2hlVVJMLmxlbmd0aCApO1xuXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSBhbmQgc2hvdWxkIGJlIHByb2Nlc3NlZCwgYXBwZW5kIGRhdGEgdG8gdXJsXG5cdFx0XHRpZiAoIHMuZGF0YSAmJiAoIHMucHJvY2Vzc0RhdGEgfHwgdHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiApICkge1xuXHRcdFx0XHRjYWNoZVVSTCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhO1xuXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcblx0XHRcdFx0ZGVsZXRlIHMuZGF0YTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWRkIG9yIHVwZGF0ZSBhbnRpLWNhY2hlIHBhcmFtIGlmIG5lZWRlZFxuXHRcdFx0aWYgKCBzLmNhY2hlID09PSBmYWxzZSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgPSBjYWNoZVVSTC5yZXBsYWNlKCByYW50aUNhY2hlLCBcIiQxXCIgKTtcblx0XHRcdFx0dW5jYWNoZWQgPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgXCJfPVwiICsgKCBub25jZSsrICkgKyB1bmNhY2hlZDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUHV0IGhhc2ggYW5kIGFudGktY2FjaGUgb24gdGhlIFVSTCB0aGF0IHdpbGwgYmUgcmVxdWVzdGVkIChnaC0xNzMyKVxuXHRcdFx0cy51cmwgPSBjYWNoZVVSTCArIHVuY2FjaGVkO1xuXG5cdFx0Ly8gQ2hhbmdlICclMjAnIHRvICcrJyBpZiB0aGlzIGlzIGVuY29kZWQgZm9ybSBib2R5IGNvbnRlbnQgKGdoLTI2NTgpXG5cdFx0fSBlbHNlIGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiZcblx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiICkuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICkge1xuXHRcdFx0cy5kYXRhID0gcy5kYXRhLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0aWYgKCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKSB7XG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgY29ycmVjdCBoZWFkZXIsIGlmIGRhdGEgaXMgYmVpbmcgc2VudFxuXHRcdGlmICggcy5kYXRhICYmIHMuaGFzQ29udGVudCAmJiBzLmNvbnRlbnRUeXBlICE9PSBmYWxzZSB8fCBvcHRpb25zLmNvbnRlbnRUeXBlICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xuXHRcdH1cblxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcblx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKFxuXHRcdFx0XCJBY2NlcHRcIixcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gP1xuXHRcdFx0XHRzLmFjY2VwdHNbIHMuZGF0YVR5cGVzWyAwIF0gXSArXG5cdFx0XHRcdFx0KCBzLmRhdGFUeXBlc1sgMCBdICE9PSBcIipcIiA/IFwiLCBcIiArIGFsbFR5cGVzICsgXCI7IHE9MC4wMVwiIDogXCJcIiApIDpcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXG5cdFx0KTtcblxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxuXHRcdGZvciAoIGkgaW4gcy5oZWFkZXJzICkge1xuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggaSwgcy5oZWFkZXJzWyBpIF0gKTtcblx0XHR9XG5cblx0XHQvLyBBbGxvdyBjdXN0b20gaGVhZGVycy9taW1ldHlwZXMgYW5kIGVhcmx5IGFib3J0XG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiZcblx0XHRcdCggcy5iZWZvcmVTZW5kLmNhbGwoIGNhbGxiYWNrQ29udGV4dCwganFYSFIsIHMgKSA9PT0gZmFsc2UgfHwgY29tcGxldGVkICkgKSB7XG5cblx0XHRcdC8vIEFib3J0IGlmIG5vdCBkb25lIGFscmVhZHkgYW5kIHJldHVyblxuXHRcdFx0cmV0dXJuIGpxWEhSLmFib3J0KCk7XG5cdFx0fVxuXG5cdFx0Ly8gQWJvcnRpbmcgaXMgbm8gbG9uZ2VyIGEgY2FuY2VsbGF0aW9uXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrcyBvbiBkZWZlcnJlZHNcblx0XHRjb21wbGV0ZURlZmVycmVkLmFkZCggcy5jb21wbGV0ZSApO1xuXHRcdGpxWEhSLmRvbmUoIHMuc3VjY2VzcyApO1xuXHRcdGpxWEhSLmZhaWwoIHMuZXJyb3IgKTtcblxuXHRcdC8vIEdldCB0cmFuc3BvcnRcblx0XHR0cmFuc3BvcnQgPSBpbnNwZWN0UHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cywgcywgb3B0aW9ucywganFYSFIgKTtcblxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxuXHRcdGlmICggIXRyYW5zcG9ydCApIHtcblx0XHRcdGRvbmUoIC0xLCBcIk5vIFRyYW5zcG9ydFwiICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSAxO1xuXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheFNlbmRcIiwgWyBqcVhIUiwgcyBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHJlcXVlc3Qgd2FzIGFib3J0ZWQgaW5zaWRlIGFqYXhTZW5kLCBzdG9wIHRoZXJlXG5cdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0cmV0dXJuIGpxWEhSO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaW1lb3V0XG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcblx0XHRcdFx0dGltZW91dFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGpxWEhSLmFib3J0KCBcInRpbWVvdXRcIiApO1xuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcblx0XHRcdH1cblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0Y29tcGxldGVkID0gZmFsc2U7XG5cdFx0XHRcdHRyYW5zcG9ydC5zZW5kKCByZXF1ZXN0SGVhZGVycywgZG9uZSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0Ly8gUmV0aHJvdyBwb3N0LWNvbXBsZXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUHJvcGFnYXRlIG90aGVycyBhcyByZXN1bHRzXG5cdFx0XHRcdGRvbmUoIC0xLCBlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsbGJhY2sgZm9yIHdoZW4gZXZlcnl0aGluZyBpcyBkb25lXG5cdFx0ZnVuY3Rpb24gZG9uZSggc3RhdHVzLCBuYXRpdmVTdGF0dXNUZXh0LCByZXNwb25zZXMsIGhlYWRlcnMgKSB7XG5cdFx0XHR2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVkLFxuXHRcdFx0XHRzdGF0dXNUZXh0ID0gbmF0aXZlU3RhdHVzVGV4dDtcblxuXHRcdFx0Ly8gSWdub3JlIHJlcGVhdCBpbnZvY2F0aW9uc1xuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Y29tcGxldGVkID0gdHJ1ZTtcblxuXHRcdFx0Ly8gQ2xlYXIgdGltZW91dCBpZiBpdCBleGlzdHNcblx0XHRcdGlmICggdGltZW91dFRpbWVyICkge1xuXHRcdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb25cblx0XHRcdC8vIChubyBtYXR0ZXIgaG93IGxvbmcgdGhlIGpxWEhSIG9iamVjdCB3aWxsIGJlIHVzZWQpXG5cdFx0XHR0cmFuc3BvcnQgPSB1bmRlZmluZWQ7XG5cblx0XHRcdC8vIENhY2hlIHJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyA9IGhlYWRlcnMgfHwgXCJcIjtcblxuXHRcdFx0Ly8gU2V0IHJlYWR5U3RhdGVcblx0XHRcdGpxWEhSLnJlYWR5U3RhdGUgPSBzdGF0dXMgPiAwID8gNCA6IDA7XG5cblx0XHRcdC8vIERldGVybWluZSBpZiBzdWNjZXNzZnVsXG5cdFx0XHRpc1N1Y2Nlc3MgPSBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMCB8fCBzdGF0dXMgPT09IDMwNDtcblxuXHRcdFx0Ly8gR2V0IHJlc3BvbnNlIGRhdGFcblx0XHRcdGlmICggcmVzcG9uc2VzICkge1xuXHRcdFx0XHRyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxuXHRcdFx0cmVzcG9uc2UgPSBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKTtcblxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXG5cdFx0XHRcdGlmICggcy5pZk1vZGlmaWVkICkge1xuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiTGFzdC1Nb2RpZmllZFwiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcblx0XHRcdFx0XHRpZiAoIG1vZGlmaWVkICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gPSBtb2RpZmllZDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XG5cdFx0XHRcdGlmICggc3RhdHVzID09PSAyMDQgfHwgcy50eXBlID09PSBcIkhFQURcIiApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJub2NvbnRlbnRcIjtcblxuXHRcdFx0XHQvLyBpZiBub3QgbW9kaWZpZWRcblx0XHRcdFx0fSBlbHNlIGlmICggc3RhdHVzID09PSAzMDQgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcblxuXHRcdFx0XHQvLyBJZiB3ZSBoYXZlIGRhdGEsIGxldCdzIGNvbnZlcnQgaXRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gcmVzcG9uc2Uuc3RhdGU7XG5cdFx0XHRcdFx0c3VjY2VzcyA9IHJlc3BvbnNlLmRhdGE7XG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcblx0XHRcdFx0XHRpc1N1Y2Nlc3MgPSAhZXJyb3I7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0Ly8gRXh0cmFjdCBlcnJvciBmcm9tIHN0YXR1c1RleHQgYW5kIG5vcm1hbGl6ZSBmb3Igbm9uLWFib3J0c1xuXHRcdFx0XHRlcnJvciA9IHN0YXR1c1RleHQ7XG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcImVycm9yXCI7XG5cdFx0XHRcdFx0aWYgKCBzdGF0dXMgPCAwICkge1xuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IGRhdGEgZm9yIHRoZSBmYWtlIHhociBvYmplY3Rcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcblx0XHRcdGpxWEhSLnN0YXR1c1RleHQgPSAoIG5hdGl2ZVN0YXR1c1RleHQgfHwgc3RhdHVzVGV4dCApICsgXCJcIjtcblxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsgc3VjY2Vzcywgc3RhdHVzVGV4dCwganFYSFIgXSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0V2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0LCBlcnJvciBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRqcVhIUi5zdGF0dXNDb2RlKCBzdGF0dXNDb2RlICk7XG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcblx0XHRcdFx0XHRbIGpxWEhSLCBzLCBpc1N1Y2Nlc3MgPyBzdWNjZXNzIDogZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb21wbGV0ZVxuXHRcdFx0Y29tcGxldGVEZWZlcnJlZC5maXJlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIGpxWEhSLCBzdGF0dXNUZXh0IF0gKTtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIFwiYWpheENvbXBsZXRlXCIsIFsganFYSFIsIHMgXSApO1xuXG5cdFx0XHRcdC8vIEhhbmRsZSB0aGUgZ2xvYmFsIEFKQVggY291bnRlclxuXHRcdFx0XHRpZiAoICEoIC0talF1ZXJ5LmFjdGl2ZSApICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBqcVhIUjtcblx0fSxcblxuXHRnZXRKU09OOiBmdW5jdGlvbiggdXJsLCBkYXRhLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcblx0fSxcblxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ2V0KCB1cmwsIHVuZGVmaW5lZCwgY2FsbGJhY2ssIFwic2NyaXB0XCIgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcImdldFwiLCBcInBvc3RcIiBdLCBmdW5jdGlvbiggaSwgbWV0aG9kICkge1xuXHRqUXVlcnlbIG1ldGhvZCBdID0gZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2ssIHR5cGUgKSB7XG5cblx0XHQvLyBTaGlmdCBhcmd1bWVudHMgaWYgZGF0YSBhcmd1bWVudCB3YXMgb21pdHRlZFxuXHRcdGlmICggaXNGdW5jdGlvbiggZGF0YSApICkge1xuXHRcdFx0dHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7XG5cdFx0XHRjYWxsYmFjayA9IGRhdGE7XG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xuXHRcdH1cblxuXHRcdC8vIFRoZSB1cmwgY2FuIGJlIGFuIG9wdGlvbnMgb2JqZWN0ICh3aGljaCB0aGVuIG11c3QgaGF2ZSAudXJsKVxuXHRcdHJldHVybiBqUXVlcnkuYWpheCggalF1ZXJ5LmV4dGVuZCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cdFx0XHR0eXBlOiBtZXRob2QsXG5cdFx0XHRkYXRhVHlwZTogdHlwZSxcblx0XHRcdGRhdGE6IGRhdGEsXG5cdFx0XHRzdWNjZXNzOiBjYWxsYmFja1xuXHRcdH0sIGpRdWVyeS5pc1BsYWluT2JqZWN0KCB1cmwgKSAmJiB1cmwgKSApO1xuXHR9O1xufSApO1xuXG5cbmpRdWVyeS5fZXZhbFVybCA9IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7XG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xuXHRcdHVybDogdXJsLFxuXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICgjMTEyNjQpXG5cdFx0dHlwZTogXCJHRVRcIixcblx0XHRkYXRhVHlwZTogXCJzY3JpcHRcIixcblx0XHRjYWNoZTogdHJ1ZSxcblx0XHRhc3luYzogZmFsc2UsXG5cdFx0Z2xvYmFsOiBmYWxzZSxcblxuXHRcdC8vIE9ubHkgZXZhbHVhdGUgdGhlIHJlc3BvbnNlIGlmIGl0IGlzIHN1Y2Nlc3NmdWwgKGdoLTQxMjYpXG5cdFx0Ly8gZGF0YUZpbHRlciBpcyBub3QgaW52b2tlZCBmb3IgZmFpbHVyZSByZXNwb25zZXMsIHNvIHVzaW5nIGl0IGluc3RlYWRcblx0XHQvLyBvZiB0aGUgZGVmYXVsdCBjb252ZXJ0ZXIgaXMga2x1ZGd5IGJ1dCBpdCB3b3Jrcy5cblx0XHRjb252ZXJ0ZXJzOiB7XG5cdFx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCkge31cblx0XHR9LFxuXHRcdGRhdGFGaWx0ZXI6IGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCByZXNwb25zZSwgb3B0aW9ucyApO1xuXHRcdH1cblx0fSApO1xufTtcblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHdyYXBBbGw6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciB3cmFwO1xuXG5cdFx0aWYgKCB0aGlzWyAwIF0gKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdFx0aHRtbCA9IGh0bWwuY2FsbCggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRoZSBlbGVtZW50cyB0byB3cmFwIHRoZSB0YXJnZXQgYXJvdW5kXG5cdFx0XHR3cmFwID0galF1ZXJ5KCBodG1sLCB0aGlzWyAwIF0ub3duZXJEb2N1bWVudCApLmVxKCAwICkuY2xvbmUoIHRydWUgKTtcblxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0d3JhcC5pbnNlcnRCZWZvcmUoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHR3cmFwLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBlbGVtID0gdGhpcztcblxuXHRcdFx0XHR3aGlsZSAoIGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQgKSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGVsZW0uZmlyc3RFbGVtZW50Q2hpbGQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcblx0XHRcdH0gKS5hcHBlbmQoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fSxcblxuXHR3cmFwSW5uZXI6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBzZWxmID0galF1ZXJ5KCB0aGlzICksXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xuXG5cdFx0XHRpZiAoIGNvbnRlbnRzLmxlbmd0aCApIHtcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHR3cmFwOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgaHRtbElzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCBodG1sICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGh0bWxJc0Z1bmN0aW9uID8gaHRtbC5jYWxsKCB0aGlzLCBpICkgOiBodG1sICk7XG5cdFx0fSApO1xuXHR9LFxuXG5cdHVud3JhcDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHRoaXMucGFyZW50KCBzZWxlY3RvciApLm5vdCggXCJib2R5XCIgKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeSggdGhpcyApLnJlcGxhY2VXaXRoKCB0aGlzLmNoaWxkTm9kZXMgKTtcblx0XHR9ICk7XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmhpZGRlbiA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gIWpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSggZWxlbSApO1xufTtcbmpRdWVyeS5leHByLnBzZXVkb3MudmlzaWJsZSA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRyZXR1cm4gISEoIGVsZW0ub2Zmc2V0V2lkdGggfHwgZWxlbS5vZmZzZXRIZWlnaHQgfHwgZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApO1xufTtcblxuXG5cblxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSBmdW5jdGlvbigpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdCgpO1xuXHR9IGNhdGNoICggZSApIHt9XG59O1xuXG52YXIgeGhyU3VjY2Vzc1N0YXR1cyA9IHtcblxuXHRcdC8vIEZpbGUgcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgY29kZSAwLCBhc3N1bWUgMjAwXG5cdFx0MDogMjAwLFxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHQvLyAjMTQ1MDogc29tZXRpbWVzIElFIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDRcblx0XHQxMjIzOiAyMDRcblx0fSxcblx0eGhyU3VwcG9ydGVkID0galF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIoKTtcblxuc3VwcG9ydC5jb3JzID0gISF4aHJTdXBwb3J0ZWQgJiYgKCBcIndpdGhDcmVkZW50aWFsc1wiIGluIHhoclN1cHBvcnRlZCApO1xuc3VwcG9ydC5hamF4ID0geGhyU3VwcG9ydGVkID0gISF4aHJTdXBwb3J0ZWQ7XG5cbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBmdW5jdGlvbiggb3B0aW9ucyApIHtcblx0dmFyIGNhbGxiYWNrLCBlcnJvckNhbGxiYWNrO1xuXG5cdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3Rcblx0aWYgKCBzdXBwb3J0LmNvcnMgfHwgeGhyU3VwcG9ydGVkICYmICFvcHRpb25zLmNyb3NzRG9tYWluICkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHZhciBpLFxuXHRcdFx0XHRcdHhociA9IG9wdGlvbnMueGhyKCk7XG5cblx0XHRcdFx0eGhyLm9wZW4oXG5cdFx0XHRcdFx0b3B0aW9ucy50eXBlLFxuXHRcdFx0XHRcdG9wdGlvbnMudXJsLFxuXHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXG5cdFx0XHRcdFx0b3B0aW9ucy51c2VybmFtZSxcblx0XHRcdFx0XHRvcHRpb25zLnBhc3N3b3JkXG5cdFx0XHRcdCk7XG5cblx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdGZvciAoIGkgaW4gb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gT3ZlcnJpZGUgbWltZSB0eXBlIGlmIG5lZWRlZFxuXHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XG5cdFx0XHRcdFx0eGhyLm92ZXJyaWRlTWltZVR5cGUoIG9wdGlvbnMubWltZVR5cGUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFgtUmVxdWVzdGVkLVdpdGggaGVhZGVyXG5cdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcblx0XHRcdFx0Ly8gYWtpbiB0byBhIGppZ3NhdyBwdXp6bGUsIHdlIHNpbXBseSBuZXZlciBzZXQgaXQgdG8gYmUgc3VyZS5cblx0XHRcdFx0Ly8gKGl0IGNhbiBhbHdheXMgYmUgc2V0IG9uIGEgcGVyLXJlcXVlc3QgYmFzaXMgb3IgZXZlbiB1c2luZyBhamF4U2V0dXApXG5cdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxuXHRcdFx0XHRpZiAoICFvcHRpb25zLmNyb3NzRG9tYWluICYmICFoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdICkge1xuXHRcdFx0XHRcdGhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gPSBcIlhNTEh0dHBSZXF1ZXN0XCI7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xuXHRcdFx0XHRmb3IgKCBpIGluIGhlYWRlcnMgKSB7XG5cdFx0XHRcdFx0eGhyLnNldFJlcXVlc3RIZWFkZXIoIGksIGhlYWRlcnNbIGkgXSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggdHlwZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRjYWxsYmFjayA9IGVycm9yQ2FsbGJhY2sgPSB4aHIub25sb2FkID1cblx0XHRcdFx0XHRcdFx0XHR4aHIub25lcnJvciA9IHhoci5vbmFib3J0ID0geGhyLm9udGltZW91dCA9XG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcblxuXHRcdFx0XHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiYWJvcnRcIiApIHtcblx0XHRcdFx0XHRcdFx0XHR4aHIuYWJvcnQoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJlcnJvclwiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBPbiBhIG1hbnVhbCBuYXRpdmUgYWJvcnQsIElFOSB0aHJvd3Ncblx0XHRcdFx0XHRcdFx0XHQvLyBlcnJvcnMgb24gYW55IHByb3BlcnR5IGFjY2VzcyB0aGF0IGlzIG5vdCByZWFkeVN0YXRlXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlb2YgeGhyLnN0YXR1cyAhPT0gXCJudW1iZXJcIiApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCAwLCBcImVycm9yXCIgKTtcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gRmlsZTogcHJvdG9jb2wgYWx3YXlzIHlpZWxkcyBzdGF0dXMgMDsgc2VlICM4NjA1LCAjMTQyMDdcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHRcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyU3VjY2Vzc1N0YXR1c1sgeGhyLnN0YXR1cyBdIHx8IHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dCxcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElFOSBoYXMgbm8gWEhSMiBidXQgdGhyb3dzIG9uIGJpbmFyeSAodHJhYy0xMTQyNilcblx0XHRcdFx0XHRcdFx0XHRcdC8vIEZvciBYSFIyIG5vbi10ZXh0LCBsZXQgdGhlIGNhbGxlciBoYW5kbGUgaXQgKGdoLTI0OTgpXG5cdFx0XHRcdFx0XHRcdFx0XHQoIHhoci5yZXNwb25zZVR5cGUgfHwgXCJ0ZXh0XCIgKSAhPT0gXCJ0ZXh0XCIgIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCAhPT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgYmluYXJ5OiB4aHIucmVzcG9uc2UgfSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgdGV4dDogeGhyLnJlc3BvbnNlVGV4dCB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmdldEFsbFJlc3BvbnNlSGVhZGVycygpXG5cdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH07XG5cblx0XHRcdFx0Ly8gTGlzdGVuIHRvIGV2ZW50c1xuXHRcdFx0XHR4aHIub25sb2FkID0gY2FsbGJhY2soKTtcblx0XHRcdFx0ZXJyb3JDYWxsYmFjayA9IHhoci5vbmVycm9yID0geGhyLm9udGltZW91dCA9IGNhbGxiYWNrKCBcImVycm9yXCIgKTtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHRcdFx0Ly8gVXNlIG9ucmVhZHlzdGF0ZWNoYW5nZSB0byByZXBsYWNlIG9uYWJvcnRcblx0XHRcdFx0Ly8gdG8gaGFuZGxlIHVuY2F1Z2h0IGFib3J0c1xuXHRcdFx0XHRpZiAoIHhoci5vbmFib3J0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0eGhyLm9uYWJvcnQgPSBlcnJvckNhbGxiYWNrO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2hlY2sgcmVhZHlTdGF0ZSBiZWZvcmUgdGltZW91dCBhcyBpdCBjaGFuZ2VzXG5cdFx0XHRcdFx0XHRpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFsbG93IG9uZXJyb3IgdG8gYmUgY2FsbGVkIGZpcnN0LFxuXHRcdFx0XHRcdFx0XHQvLyBidXQgdGhhdCB3aWxsIG5vdCBoYW5kbGUgYSBuYXRpdmUgYWJvcnRcblx0XHRcdFx0XHRcdFx0Ly8gQWxzbywgc2F2ZSBlcnJvckNhbGxiYWNrIHRvIGEgdmFyaWFibGVcblx0XHRcdFx0XHRcdFx0Ly8gYXMgeGhyLm9uZXJyb3IgY2Fubm90IGJlIGFjY2Vzc2VkXG5cdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3JDYWxsYmFjaygpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH07XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDcmVhdGUgdGhlIGFib3J0IGNhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gY2FsbGJhY2soIFwiYWJvcnRcIiApO1xuXG5cdFx0XHRcdHRyeSB7XG5cblx0XHRcdFx0XHQvLyBEbyBzZW5kIHRoZSByZXF1ZXN0ICh0aGlzIG1heSByYWlzZSBhbiBleGNlcHRpb24pXG5cdFx0XHRcdFx0eGhyLnNlbmQoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEgfHwgbnVsbCApO1xuXHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdC8vICMxNDY4MzogT25seSByZXRocm93IGlmIHRoaXMgaGFzbid0IGJlZW4gbm90aWZpZWQgYXMgYW4gZXJyb3IgeWV0XG5cdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdHRocm93IGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUHJldmVudCBhdXRvLWV4ZWN1dGlvbiBvZiBzY3JpcHRzIHdoZW4gbm8gZXhwbGljaXQgZGF0YVR5cGUgd2FzIHByb3ZpZGVkIChTZWUgZ2gtMjQzMilcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMuY29udGVudHMuc2NyaXB0ID0gZmFsc2U7XG5cdH1cbn0gKTtcblxuLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGVcbmpRdWVyeS5hamF4U2V0dXAoIHtcblx0YWNjZXB0czoge1xuXHRcdHNjcmlwdDogXCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIFwiICtcblx0XHRcdFwiYXBwbGljYXRpb24vZWNtYXNjcmlwdCwgYXBwbGljYXRpb24veC1lY21hc2NyaXB0XCJcblx0fSxcblx0Y29udGVudHM6IHtcblx0XHRzY3JpcHQ6IC9cXGIoPzpqYXZhfGVjbWEpc2NyaXB0XFxiL1xuXHR9LFxuXHRjb252ZXJ0ZXJzOiB7XG5cdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdGpRdWVyeS5nbG9iYWxFdmFsKCB0ZXh0ICk7XG5cdFx0XHRyZXR1cm4gdGV4dDtcblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSGFuZGxlIGNhY2hlJ3Mgc3BlY2lhbCBjYXNlIGFuZCBjcm9zc0RvbWFpblxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRzLmNhY2hlID0gZmFsc2U7XG5cdH1cblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xuXHRcdHMudHlwZSA9IFwiR0VUXCI7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBzY3JpcHQgdGFnIGhhY2sgdHJhbnNwb3J0XG5qUXVlcnkuYWpheFRyYW5zcG9ydCggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cblx0Ly8gVGhpcyB0cmFuc3BvcnQgb25seSBkZWFscyB3aXRoIGNyb3NzIGRvbWFpbiBvciBmb3JjZWQtYnktYXR0cnMgcmVxdWVzdHNcblx0aWYgKCBzLmNyb3NzRG9tYWluIHx8IHMuc2NyaXB0QXR0cnMgKSB7XG5cdFx0dmFyIHNjcmlwdCwgY2FsbGJhY2s7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBfLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0c2NyaXB0ID0galF1ZXJ5KCBcIjxzY3JpcHQ+XCIgKVxuXHRcdFx0XHRcdC5hdHRyKCBzLnNjcmlwdEF0dHJzIHx8IHt9IClcblx0XHRcdFx0XHQucHJvcCggeyBjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsIHNyYzogcy51cmwgfSApXG5cdFx0XHRcdFx0Lm9uKCBcImxvYWQgZXJyb3JcIiwgY2FsbGJhY2sgPSBmdW5jdGlvbiggZXZ0ICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0LnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xuXHRcdFx0XHRcdFx0aWYgKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBldnQudHlwZSA9PT0gXCJlcnJvclwiID8gNDA0IDogMjAwLCBldnQudHlwZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0gKTtcblxuXHRcdFx0XHQvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnlcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0WyAwIF0gKTtcblx0XHRcdH0sXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcblx0XHRcdFx0b3ZlcndyaXR0ZW4oIHJlc3BvbnNlQ29udGFpbmVyWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBvdmVyd3JpdHRlbiA9IHVuZGVmaW5lZDtcblx0XHR9ICk7XG5cblx0XHQvLyBEZWxlZ2F0ZSB0byBzY3JpcHRcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcblx0fVxufSApO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcblx0fVxuXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxuXHRpZiAoIGlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXG5qUXVlcnkuZWFjaCggW1xuXHRcImFqYXhTdGFydFwiLFxuXHRcImFqYXhTdG9wXCIsXG5cdFwiYWpheENvbXBsZXRlXCIsXG5cdFwiYWpheEVycm9yXCIsXG5cdFwiYWpheFN1Y2Nlc3NcIixcblx0XCJhamF4U2VuZFwiXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJFbGVtLmNzcyggcHJvcHMgKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0dGhpcyA6XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHZhciByZWN0LCB3aW4sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0aWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9O1xuXHRcdH1cblxuXHRcdC8vIEdldCBkb2N1bWVudC1yZWxhdGl2ZSBwb3NpdGlvbiBieSBhZGRpbmcgdmlld3BvcnQgc2Nyb2xsIHRvIHZpZXdwb3J0LXJlbGF0aXZlIGdCQ1Jcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR3aW4gPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXG5cdFx0XHRsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXRcblx0XHR9O1xuXHR9LFxuXG5cdC8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94XG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB0aGUgKnJlYWwqIG9mZnNldCBwYXJlbnQsIHdoaWNoIGNhbiBiZSB0aGUgZG9jdW1lbnQgb3IgaXRzIHJvb3QgZWxlbWVudFxuXHRcdFx0Ly8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWRcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHRcdG9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50IHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJlxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGlmICggb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudCAhPT0gZWxlbSAmJiBvZmZzZXRQYXJlbnQubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgYm9yZGVycyBpbnRvIGl0cyBvZmZzZXQsIHNpbmNlIHRoZXkgYXJlIG91dHNpZGUgaXRzIGNvbnRlbnQgb3JpZ2luXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlckxlZnRXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VidHJhY3QgcGFyZW50IG9mZnNldHMgYW5kIGVsZW1lbnQgbWFyZ2luc1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IG9mZnNldC50b3AgLSBwYXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5Ub3BcIiwgdHJ1ZSApLFxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcblx0XHR9O1xuXHR9LFxuXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxuXHQvLyAxKSBGb3IgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuXG5cdC8vICAgIGRvY3VtZW50RWxlbWVudCBvZiB0aGUgcGFyZW50IHdpbmRvd1xuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XG5cdC8vIDMpIEZvciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBpdCB3aWxsIHJldHVybiBpdHNlbGZcblx0Ly9cblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXG5cdC8vIGFuZCBtaWdodCBiZSBjb25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLlxuXHQvL1xuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XG5cblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcblx0dmFyIHRvcCA9IFwicGFnZVlPZmZzZXRcIiA9PT0gcHJvcDtcblxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbWV0aG9kLCB2YWwgKSB7XG5cblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xuXHRcdFx0dmFyIHdpbjtcblx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0d2luID0gZWxlbTtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW0uZGVmYXVsdFZpZXc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdpbiApIHtcblx0XHRcdFx0d2luLnNjcm9sbFRvKFxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiB3aW4ucGFnZVhPZmZzZXQsXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XG5cdFx0XHRcdCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1bIG1ldGhvZCBdID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH07XG59ICk7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA8PTcgLSA5LjEsIENocm9tZSA8PTM3IC0gNDlcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NTg5MzQ3XG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBpLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4iLCIvKmdsb2JhbCB3aW5kb3csIGdsb2JhbCovXG52YXIgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpXG52YXIgYXNzZXJ0ID0gcmVxdWlyZShcImFzc2VydFwiKVxudmFyIG5vdyA9IHJlcXVpcmUoXCJkYXRlLW5vd1wiKVxuXG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2VcbnZhciBjb25zb2xlXG52YXIgdGltZXMgPSB7fVxuXG5pZiAodHlwZW9mIGdsb2JhbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBnbG9iYWwuY29uc29sZSkge1xuICAgIGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZVxufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5jb25zb2xlKSB7XG4gICAgY29uc29sZSA9IHdpbmRvdy5jb25zb2xlXG59IGVsc2Uge1xuICAgIGNvbnNvbGUgPSB7fVxufVxuXG52YXIgZnVuY3Rpb25zID0gW1xuICAgIFtsb2csIFwibG9nXCJdLFxuICAgIFtpbmZvLCBcImluZm9cIl0sXG4gICAgW3dhcm4sIFwid2FyblwiXSxcbiAgICBbZXJyb3IsIFwiZXJyb3JcIl0sXG4gICAgW3RpbWUsIFwidGltZVwiXSxcbiAgICBbdGltZUVuZCwgXCJ0aW1lRW5kXCJdLFxuICAgIFt0cmFjZSwgXCJ0cmFjZVwiXSxcbiAgICBbZGlyLCBcImRpclwiXSxcbiAgICBbY29uc29sZUFzc2VydCwgXCJhc3NlcnRcIl1cbl1cblxuZm9yICh2YXIgaSA9IDA7IGkgPCBmdW5jdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgdHVwbGUgPSBmdW5jdGlvbnNbaV1cbiAgICB2YXIgZiA9IHR1cGxlWzBdXG4gICAgdmFyIG5hbWUgPSB0dXBsZVsxXVxuXG4gICAgaWYgKCFjb25zb2xlW25hbWVdKSB7XG4gICAgICAgIGNvbnNvbGVbbmFtZV0gPSBmXG4gICAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnNvbGVcblxuZnVuY3Rpb24gbG9nKCkge31cblxuZnVuY3Rpb24gaW5mbygpIHtcbiAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpXG59XG5cbmZ1bmN0aW9uIHdhcm4oKSB7XG4gICAgY29uc29sZS5sb2cuYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKVxufVxuXG5mdW5jdGlvbiBlcnJvcigpIHtcbiAgICBjb25zb2xlLndhcm4uYXBwbHkoY29uc29sZSwgYXJndW1lbnRzKVxufVxuXG5mdW5jdGlvbiB0aW1lKGxhYmVsKSB7XG4gICAgdGltZXNbbGFiZWxdID0gbm93KClcbn1cblxuZnVuY3Rpb24gdGltZUVuZChsYWJlbCkge1xuICAgIHZhciB0aW1lID0gdGltZXNbbGFiZWxdXG4gICAgaWYgKCF0aW1lKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHN1Y2ggbGFiZWw6IFwiICsgbGFiZWwpXG4gICAgfVxuXG4gICAgdmFyIGR1cmF0aW9uID0gbm93KCkgLSB0aW1lXG4gICAgY29uc29sZS5sb2cobGFiZWwgKyBcIjogXCIgKyBkdXJhdGlvbiArIFwibXNcIilcbn1cblxuZnVuY3Rpb24gdHJhY2UoKSB7XG4gICAgdmFyIGVyciA9IG5ldyBFcnJvcigpXG4gICAgZXJyLm5hbWUgPSBcIlRyYWNlXCJcbiAgICBlcnIubWVzc2FnZSA9IHV0aWwuZm9ybWF0LmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICBjb25zb2xlLmVycm9yKGVyci5zdGFjaylcbn1cblxuZnVuY3Rpb24gZGlyKG9iamVjdCkge1xuICAgIGNvbnNvbGUubG9nKHV0aWwuaW5zcGVjdChvYmplY3QpICsgXCJcXG5cIilcbn1cblxuZnVuY3Rpb24gY29uc29sZUFzc2VydChleHByZXNzaW9uKSB7XG4gICAgaWYgKCFleHByZXNzaW9uKSB7XG4gICAgICAgIHZhciBhcnIgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSlcbiAgICAgICAgYXNzZXJ0Lm9rKGZhbHNlLCB1dGlsLmZvcm1hdC5hcHBseShudWxsLCBhcnIpKVxuICAgIH1cbn1cbiIsInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiIsIi8qISBqUXVlcnkgdjMuNC4xIHwgKGMpIEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyB8IGpxdWVyeS5vcmcvbGljZW5zZSAqL1xuIWZ1bmN0aW9uKGUsdCl7XCJ1c2Ugc3RyaWN0XCI7XCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZSYmXCJvYmplY3RcIj09dHlwZW9mIG1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWUuZG9jdW1lbnQ/dChlLCEwKTpmdW5jdGlvbihlKXtpZighZS5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIpO3JldHVybiB0KGUpfTp0KGUpfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp0aGlzLGZ1bmN0aW9uKEMsZSl7XCJ1c2Ugc3RyaWN0XCI7dmFyIHQ9W10sRT1DLmRvY3VtZW50LHI9T2JqZWN0LmdldFByb3RvdHlwZU9mLHM9dC5zbGljZSxnPXQuY29uY2F0LHU9dC5wdXNoLGk9dC5pbmRleE9mLG49e30sbz1uLnRvU3RyaW5nLHY9bi5oYXNPd25Qcm9wZXJ0eSxhPXYudG9TdHJpbmcsbD1hLmNhbGwoT2JqZWN0KSx5PXt9LG09ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZSYmXCJudW1iZXJcIiE9dHlwZW9mIGUubm9kZVR5cGV9LHg9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGwhPWUmJmU9PT1lLndpbmRvd30sYz17dHlwZTohMCxzcmM6ITAsbm9uY2U6ITAsbm9Nb2R1bGU6ITB9O2Z1bmN0aW9uIGIoZSx0LG4pe3ZhciByLGksbz0obj1ufHxFKS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO2lmKG8udGV4dD1lLHQpZm9yKHIgaW4gYykoaT10W3JdfHx0LmdldEF0dHJpYnV0ZSYmdC5nZXRBdHRyaWJ1dGUocikpJiZvLnNldEF0dHJpYnV0ZShyLGkpO24uaGVhZC5hcHBlbmRDaGlsZChvKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG8pfWZ1bmN0aW9uIHcoZSl7cmV0dXJuIG51bGw9PWU/ZStcIlwiOlwib2JqZWN0XCI9PXR5cGVvZiBlfHxcImZ1bmN0aW9uXCI9PXR5cGVvZiBlP25bby5jYWxsKGUpXXx8XCJvYmplY3RcIjp0eXBlb2YgZX12YXIgZj1cIjMuNC4xXCIsaz1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgay5mbi5pbml0KGUsdCl9LHA9L15bXFxzXFx1RkVGRlxceEEwXSt8W1xcc1xcdUZFRkZcXHhBMF0rJC9nO2Z1bmN0aW9uIGQoZSl7dmFyIHQ9ISFlJiZcImxlbmd0aFwiaW4gZSYmZS5sZW5ndGgsbj13KGUpO3JldHVybiFtKGUpJiYheChlKSYmKFwiYXJyYXlcIj09PW58fDA9PT10fHxcIm51bWJlclwiPT10eXBlb2YgdCYmMDx0JiZ0LTEgaW4gZSl9ay5mbj1rLnByb3RvdHlwZT17anF1ZXJ5OmYsY29uc3RydWN0b3I6ayxsZW5ndGg6MCx0b0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHMuY2FsbCh0aGlzKX0sZ2V0OmZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lP3MuY2FsbCh0aGlzKTplPDA/dGhpc1tlK3RoaXMubGVuZ3RoXTp0aGlzW2VdfSxwdXNoU3RhY2s6ZnVuY3Rpb24oZSl7dmFyIHQ9ay5tZXJnZSh0aGlzLmNvbnN0cnVjdG9yKCksZSk7cmV0dXJuIHQucHJldk9iamVjdD10aGlzLHR9LGVhY2g6ZnVuY3Rpb24oZSl7cmV0dXJuIGsuZWFjaCh0aGlzLGUpfSxtYXA6ZnVuY3Rpb24obil7cmV0dXJuIHRoaXMucHVzaFN0YWNrKGsubWFwKHRoaXMsZnVuY3Rpb24oZSx0KXtyZXR1cm4gbi5jYWxsKGUsdCxlKX0pKX0sc2xpY2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wdXNoU3RhY2socy5hcHBseSh0aGlzLGFyZ3VtZW50cykpfSxmaXJzdDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVxKDApfSxsYXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXEoLTEpfSxlcTpmdW5jdGlvbihlKXt2YXIgdD10aGlzLmxlbmd0aCxuPStlKyhlPDA/dDowKTtyZXR1cm4gdGhpcy5wdXNoU3RhY2soMDw9biYmbjx0P1t0aGlzW25dXTpbXSl9LGVuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnByZXZPYmplY3R8fHRoaXMuY29uc3RydWN0b3IoKX0scHVzaDp1LHNvcnQ6dC5zb3J0LHNwbGljZTp0LnNwbGljZX0say5leHRlbmQ9ay5mbi5leHRlbmQ9ZnVuY3Rpb24oKXt2YXIgZSx0LG4scixpLG8sYT1hcmd1bWVudHNbMF18fHt9LHM9MSx1PWFyZ3VtZW50cy5sZW5ndGgsbD0hMTtmb3IoXCJib29sZWFuXCI9PXR5cGVvZiBhJiYobD1hLGE9YXJndW1lbnRzW3NdfHx7fSxzKyspLFwib2JqZWN0XCI9PXR5cGVvZiBhfHxtKGEpfHwoYT17fSkscz09PXUmJihhPXRoaXMscy0tKTtzPHU7cysrKWlmKG51bGwhPShlPWFyZ3VtZW50c1tzXSkpZm9yKHQgaW4gZSlyPWVbdF0sXCJfX3Byb3RvX19cIiE9PXQmJmEhPT1yJiYobCYmciYmKGsuaXNQbGFpbk9iamVjdChyKXx8KGk9QXJyYXkuaXNBcnJheShyKSkpPyhuPWFbdF0sbz1pJiYhQXJyYXkuaXNBcnJheShuKT9bXTppfHxrLmlzUGxhaW5PYmplY3Qobik/bjp7fSxpPSExLGFbdF09ay5leHRlbmQobCxvLHIpKTp2b2lkIDAhPT1yJiYoYVt0XT1yKSk7cmV0dXJuIGF9LGsuZXh0ZW5kKHtleHBhbmRvOlwialF1ZXJ5XCIrKGYrTWF0aC5yYW5kb20oKSkucmVwbGFjZSgvXFxEL2csXCJcIiksaXNSZWFkeTohMCxlcnJvcjpmdW5jdGlvbihlKXt0aHJvdyBuZXcgRXJyb3IoZSl9LG5vb3A6ZnVuY3Rpb24oKXt9LGlzUGxhaW5PYmplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQsbjtyZXR1cm4hKCFlfHxcIltvYmplY3QgT2JqZWN0XVwiIT09by5jYWxsKGUpKSYmKCEodD1yKGUpKXx8XCJmdW5jdGlvblwiPT10eXBlb2Yobj12LmNhbGwodCxcImNvbnN0cnVjdG9yXCIpJiZ0LmNvbnN0cnVjdG9yKSYmYS5jYWxsKG4pPT09bCl9LGlzRW1wdHlPYmplY3Q6ZnVuY3Rpb24oZSl7dmFyIHQ7Zm9yKHQgaW4gZSlyZXR1cm4hMTtyZXR1cm4hMH0sZ2xvYmFsRXZhbDpmdW5jdGlvbihlLHQpe2IoZSx7bm9uY2U6dCYmdC5ub25jZX0pfSxlYWNoOmZ1bmN0aW9uKGUsdCl7dmFyIG4scj0wO2lmKGQoZSkpe2ZvcihuPWUubGVuZ3RoO3I8bjtyKyspaWYoITE9PT10LmNhbGwoZVtyXSxyLGVbcl0pKWJyZWFrfWVsc2UgZm9yKHIgaW4gZSlpZighMT09PXQuY2FsbChlW3JdLHIsZVtyXSkpYnJlYWs7cmV0dXJuIGV9LHRyaW06ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWU/XCJcIjooZStcIlwiKS5yZXBsYWNlKHAsXCJcIil9LG1ha2VBcnJheTpmdW5jdGlvbihlLHQpe3ZhciBuPXR8fFtdO3JldHVybiBudWxsIT1lJiYoZChPYmplY3QoZSkpP2subWVyZ2UobixcInN0cmluZ1wiPT10eXBlb2YgZT9bZV06ZSk6dS5jYWxsKG4sZSkpLG59LGluQXJyYXk6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBudWxsPT10Py0xOmkuY2FsbCh0LGUsbil9LG1lcmdlOmZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPSt0Lmxlbmd0aCxyPTAsaT1lLmxlbmd0aDtyPG47cisrKWVbaSsrXT10W3JdO3JldHVybiBlLmxlbmd0aD1pLGV9LGdyZXA6ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj1bXSxpPTAsbz1lLmxlbmd0aCxhPSFuO2k8bztpKyspIXQoZVtpXSxpKSE9PWEmJnIucHVzaChlW2ldKTtyZXR1cm4gcn0sbWFwOmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89MCxhPVtdO2lmKGQoZSkpZm9yKHI9ZS5sZW5ndGg7bzxyO28rKyludWxsIT0oaT10KGVbb10sbyxuKSkmJmEucHVzaChpKTtlbHNlIGZvcihvIGluIGUpbnVsbCE9KGk9dChlW29dLG8sbikpJiZhLnB1c2goaSk7cmV0dXJuIGcuYXBwbHkoW10sYSl9LGd1aWQ6MSxzdXBwb3J0Onl9KSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJihrLmZuW1N5bWJvbC5pdGVyYXRvcl09dFtTeW1ib2wuaXRlcmF0b3JdKSxrLmVhY2goXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KFwiIFwiKSxmdW5jdGlvbihlLHQpe25bXCJbb2JqZWN0IFwiK3QrXCJdXCJdPXQudG9Mb3dlckNhc2UoKX0pO3ZhciBoPWZ1bmN0aW9uKG4pe3ZhciBlLGQsYixvLGksaCxmLGcsdyx1LGwsVCxDLGEsRSx2LHMsYyx5LGs9XCJzaXp6bGVcIisxKm5ldyBEYXRlLG09bi5kb2N1bWVudCxTPTAscj0wLHA9dWUoKSx4PXVlKCksTj11ZSgpLEE9dWUoKSxEPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9PT10JiYobD0hMCksMH0saj17fS5oYXNPd25Qcm9wZXJ0eSx0PVtdLHE9dC5wb3AsTD10LnB1c2gsSD10LnB1c2gsTz10LnNsaWNlLFA9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49MCxyPWUubGVuZ3RoO248cjtuKyspaWYoZVtuXT09PXQpcmV0dXJuIG47cmV0dXJuLTF9LFI9XCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLE09XCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLEk9XCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXDAtXFxcXHhhMF0pK1wiLFc9XCJcXFxcW1wiK00rXCIqKFwiK0krXCIpKD86XCIrTStcIiooWypeJHwhfl0/PSlcIitNK1wiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIrSStcIikpfClcIitNK1wiKlxcXFxdXCIsJD1cIjooXCIrSStcIikoPzpcXFxcKCgoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXwoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIrVytcIikqKXwuKilcXFxcKXwpXCIsRj1uZXcgUmVnRXhwKE0rXCIrXCIsXCJnXCIpLEI9bmV3IFJlZ0V4cChcIl5cIitNK1wiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIitNK1wiKyRcIixcImdcIiksXz1uZXcgUmVnRXhwKFwiXlwiK00rXCIqLFwiK00rXCIqXCIpLHo9bmV3IFJlZ0V4cChcIl5cIitNK1wiKihbPit+XXxcIitNK1wiKVwiK00rXCIqXCIpLFU9bmV3IFJlZ0V4cChNK1wifD5cIiksWD1uZXcgUmVnRXhwKCQpLFY9bmV3IFJlZ0V4cChcIl5cIitJK1wiJFwiKSxHPXtJRDpuZXcgUmVnRXhwKFwiXiMoXCIrSStcIilcIiksQ0xBU1M6bmV3IFJlZ0V4cChcIl5cXFxcLihcIitJK1wiKVwiKSxUQUc6bmV3IFJlZ0V4cChcIl4oXCIrSStcInxbKl0pXCIpLEFUVFI6bmV3IFJlZ0V4cChcIl5cIitXKSxQU0VVRE86bmV3IFJlZ0V4cChcIl5cIiskKSxDSElMRDpuZXcgUmVnRXhwKFwiXjoob25seXxmaXJzdHxsYXN0fG50aHxudGgtbGFzdCktKGNoaWxkfG9mLXR5cGUpKD86XFxcXChcIitNK1wiKihldmVufG9kZHwoKFsrLV18KShcXFxcZCopbnwpXCIrTStcIiooPzooWystXXwpXCIrTStcIiooXFxcXGQrKXwpKVwiK00rXCIqXFxcXCl8KVwiLFwiaVwiKSxib29sOm5ldyBSZWdFeHAoXCJeKD86XCIrUitcIikkXCIsXCJpXCIpLG5lZWRzQ29udGV4dDpuZXcgUmVnRXhwKFwiXlwiK00rXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiK00rXCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiK00rXCIqXFxcXCl8KSg/PVteLV18JClcIixcImlcIil9LFk9L0hUTUwkL2ksUT0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLEo9L15oXFxkJC9pLEs9L15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxaPS9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLGVlPS9bK35dLyx0ZT1uZXcgUmVnRXhwKFwiXFxcXFxcXFwoW1xcXFxkYS1mXXsxLDZ9XCIrTStcIj98KFwiK00rXCIpfC4pXCIsXCJpZ1wiKSxuZT1mdW5jdGlvbihlLHQsbil7dmFyIHI9XCIweFwiK3QtNjU1MzY7cmV0dXJuIHIhPXJ8fG4/dDpyPDA/U3RyaW5nLmZyb21DaGFyQ29kZShyKzY1NTM2KTpTdHJpbmcuZnJvbUNoYXJDb2RlKHI+PjEwfDU1Mjk2LDEwMjMmcnw1NjMyMCl9LHJlPS8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxcMC1cXHgxZlxceDdmLVxcdUZGRkZcXHctXS9nLGllPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQ/XCJcXDBcIj09PWU/XCJcXHVmZmZkXCI6ZS5zbGljZSgwLC0xKStcIlxcXFxcIitlLmNoYXJDb2RlQXQoZS5sZW5ndGgtMSkudG9TdHJpbmcoMTYpK1wiIFwiOlwiXFxcXFwiK2V9LG9lPWZ1bmN0aW9uKCl7VCgpfSxhZT1iZShmdW5jdGlvbihlKXtyZXR1cm4hMD09PWUuZGlzYWJsZWQmJlwiZmllbGRzZXRcIj09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKX0se2RpcjpcInBhcmVudE5vZGVcIixuZXh0OlwibGVnZW5kXCJ9KTt0cnl7SC5hcHBseSh0PU8uY2FsbChtLmNoaWxkTm9kZXMpLG0uY2hpbGROb2RlcyksdFttLmNoaWxkTm9kZXMubGVuZ3RoXS5ub2RlVHlwZX1jYXRjaChlKXtIPXthcHBseTp0Lmxlbmd0aD9mdW5jdGlvbihlLHQpe0wuYXBwbHkoZSxPLmNhbGwodCkpfTpmdW5jdGlvbihlLHQpe3ZhciBuPWUubGVuZ3RoLHI9MDt3aGlsZShlW24rK109dFtyKytdKTtlLmxlbmd0aD1uLTF9fX1mdW5jdGlvbiBzZSh0LGUsbixyKXt2YXIgaSxvLGEscyx1LGwsYyxmPWUmJmUub3duZXJEb2N1bWVudCxwPWU/ZS5ub2RlVHlwZTo5O2lmKG49bnx8W10sXCJzdHJpbmdcIiE9dHlwZW9mIHR8fCF0fHwxIT09cCYmOSE9PXAmJjExIT09cClyZXR1cm4gbjtpZighciYmKChlP2Uub3duZXJEb2N1bWVudHx8ZTptKSE9PUMmJlQoZSksZT1lfHxDLEUpKXtpZigxMSE9PXAmJih1PVouZXhlYyh0KSkpaWYoaT11WzFdKXtpZig5PT09cCl7aWYoIShhPWUuZ2V0RWxlbWVudEJ5SWQoaSkpKXJldHVybiBuO2lmKGEuaWQ9PT1pKXJldHVybiBuLnB1c2goYSksbn1lbHNlIGlmKGYmJihhPWYuZ2V0RWxlbWVudEJ5SWQoaSkpJiZ5KGUsYSkmJmEuaWQ9PT1pKXJldHVybiBuLnB1c2goYSksbn1lbHNle2lmKHVbMl0pcmV0dXJuIEguYXBwbHkobixlLmdldEVsZW1lbnRzQnlUYWdOYW1lKHQpKSxuO2lmKChpPXVbM10pJiZkLmdldEVsZW1lbnRzQnlDbGFzc05hbWUmJmUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSlyZXR1cm4gSC5hcHBseShuLGUuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShpKSksbn1pZihkLnFzYSYmIUFbdCtcIiBcIl0mJighdnx8IXYudGVzdCh0KSkmJigxIT09cHx8XCJvYmplY3RcIiE9PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkpe2lmKGM9dCxmPWUsMT09PXAmJlUudGVzdCh0KSl7KHM9ZS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSk/cz1zLnJlcGxhY2UocmUsaWUpOmUuc2V0QXR0cmlidXRlKFwiaWRcIixzPWspLG89KGw9aCh0KSkubGVuZ3RoO3doaWxlKG8tLSlsW29dPVwiI1wiK3MrXCIgXCIreGUobFtvXSk7Yz1sLmpvaW4oXCIsXCIpLGY9ZWUudGVzdCh0KSYmeWUoZS5wYXJlbnROb2RlKXx8ZX10cnl7cmV0dXJuIEguYXBwbHkobixmLnF1ZXJ5U2VsZWN0b3JBbGwoYykpLG59Y2F0Y2goZSl7QSh0LCEwKX1maW5hbGx5e3M9PT1rJiZlLnJlbW92ZUF0dHJpYnV0ZShcImlkXCIpfX19cmV0dXJuIGcodC5yZXBsYWNlKEIsXCIkMVwiKSxlLG4scil9ZnVuY3Rpb24gdWUoKXt2YXIgcj1bXTtyZXR1cm4gZnVuY3Rpb24gZSh0LG4pe3JldHVybiByLnB1c2godCtcIiBcIik+Yi5jYWNoZUxlbmd0aCYmZGVsZXRlIGVbci5zaGlmdCgpXSxlW3QrXCIgXCJdPW59fWZ1bmN0aW9uIGxlKGUpe3JldHVybiBlW2tdPSEwLGV9ZnVuY3Rpb24gY2UoZSl7dmFyIHQ9Qy5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIik7dHJ5e3JldHVybiEhZSh0KX1jYXRjaChlKXtyZXR1cm4hMX1maW5hbGx5e3QucGFyZW50Tm9kZSYmdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHQpLHQ9bnVsbH19ZnVuY3Rpb24gZmUoZSx0KXt2YXIgbj1lLnNwbGl0KFwifFwiKSxyPW4ubGVuZ3RoO3doaWxlKHItLSliLmF0dHJIYW5kbGVbbltyXV09dH1mdW5jdGlvbiBwZShlLHQpe3ZhciBuPXQmJmUscj1uJiYxPT09ZS5ub2RlVHlwZSYmMT09PXQubm9kZVR5cGUmJmUuc291cmNlSW5kZXgtdC5zb3VyY2VJbmRleDtpZihyKXJldHVybiByO2lmKG4pd2hpbGUobj1uLm5leHRTaWJsaW5nKWlmKG49PT10KXJldHVybi0xO3JldHVybiBlPzE6LTF9ZnVuY3Rpb24gZGUodCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVyblwiaW5wdXRcIj09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmZS50eXBlPT09dH19ZnVuY3Rpb24gaGUobil7cmV0dXJuIGZ1bmN0aW9uKGUpe3ZhciB0PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4oXCJpbnB1dFwiPT09dHx8XCJidXR0b25cIj09PXQpJiZlLnR5cGU9PT1ufX1mdW5jdGlvbiBnZSh0KXtyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuXCJmb3JtXCJpbiBlP2UucGFyZW50Tm9kZSYmITE9PT1lLmRpc2FibGVkP1wibGFiZWxcImluIGU/XCJsYWJlbFwiaW4gZS5wYXJlbnROb2RlP2UucGFyZW50Tm9kZS5kaXNhYmxlZD09PXQ6ZS5kaXNhYmxlZD09PXQ6ZS5pc0Rpc2FibGVkPT09dHx8ZS5pc0Rpc2FibGVkIT09IXQmJmFlKGUpPT09dDplLmRpc2FibGVkPT09dDpcImxhYmVsXCJpbiBlJiZlLmRpc2FibGVkPT09dH19ZnVuY3Rpb24gdmUoYSl7cmV0dXJuIGxlKGZ1bmN0aW9uKG8pe3JldHVybiBvPStvLGxlKGZ1bmN0aW9uKGUsdCl7dmFyIG4scj1hKFtdLGUubGVuZ3RoLG8pLGk9ci5sZW5ndGg7d2hpbGUoaS0tKWVbbj1yW2ldXSYmKGVbbl09ISh0W25dPWVbbl0pKX0pfSl9ZnVuY3Rpb24geWUoZSl7cmV0dXJuIGUmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBlLmdldEVsZW1lbnRzQnlUYWdOYW1lJiZlfWZvcihlIGluIGQ9c2Uuc3VwcG9ydD17fSxpPXNlLmlzWE1MPWZ1bmN0aW9uKGUpe3ZhciB0PWUubmFtZXNwYWNlVVJJLG49KGUub3duZXJEb2N1bWVudHx8ZSkuZG9jdW1lbnRFbGVtZW50O3JldHVybiFZLnRlc3QodHx8biYmbi5ub2RlTmFtZXx8XCJIVE1MXCIpfSxUPXNlLnNldERvY3VtZW50PWZ1bmN0aW9uKGUpe3ZhciB0LG4scj1lP2Uub3duZXJEb2N1bWVudHx8ZTptO3JldHVybiByIT09QyYmOT09PXIubm9kZVR5cGUmJnIuZG9jdW1lbnRFbGVtZW50JiYoYT0oQz1yKS5kb2N1bWVudEVsZW1lbnQsRT0haShDKSxtIT09QyYmKG49Qy5kZWZhdWx0VmlldykmJm4udG9wIT09biYmKG4uYWRkRXZlbnRMaXN0ZW5lcj9uLmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmxvYWRcIixvZSwhMSk6bi5hdHRhY2hFdmVudCYmbi5hdHRhY2hFdmVudChcIm9udW5sb2FkXCIsb2UpKSxkLmF0dHJpYnV0ZXM9Y2UoZnVuY3Rpb24oZSl7cmV0dXJuIGUuY2xhc3NOYW1lPVwiaVwiLCFlLmdldEF0dHJpYnV0ZShcImNsYXNzTmFtZVwiKX0pLGQuZ2V0RWxlbWVudHNCeVRhZ05hbWU9Y2UoZnVuY3Rpb24oZSl7cmV0dXJuIGUuYXBwZW5kQ2hpbGQoQy5jcmVhdGVDb21tZW50KFwiXCIpKSwhZS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RofSksZC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lPUsudGVzdChDLmdldEVsZW1lbnRzQnlDbGFzc05hbWUpLGQuZ2V0QnlJZD1jZShmdW5jdGlvbihlKXtyZXR1cm4gYS5hcHBlbmRDaGlsZChlKS5pZD1rLCFDLmdldEVsZW1lbnRzQnlOYW1lfHwhQy5nZXRFbGVtZW50c0J5TmFtZShrKS5sZW5ndGh9KSxkLmdldEJ5SWQ/KGIuZmlsdGVyLklEPWZ1bmN0aW9uKGUpe3ZhciB0PWUucmVwbGFjZSh0ZSxuZSk7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlLmdldEF0dHJpYnV0ZShcImlkXCIpPT09dH19LGIuZmluZC5JRD1mdW5jdGlvbihlLHQpe2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiB0LmdldEVsZW1lbnRCeUlkJiZFKXt2YXIgbj10LmdldEVsZW1lbnRCeUlkKGUpO3JldHVybiBuP1tuXTpbXX19KTooYi5maWx0ZXIuSUQ9ZnVuY3Rpb24oZSl7dmFyIG49ZS5yZXBsYWNlKHRlLG5lKTtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGUuZ2V0QXR0cmlidXRlTm9kZSYmZS5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIik7cmV0dXJuIHQmJnQudmFsdWU9PT1ufX0sYi5maW5kLklEPWZ1bmN0aW9uKGUsdCl7aWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHQuZ2V0RWxlbWVudEJ5SWQmJkUpe3ZhciBuLHIsaSxvPXQuZ2V0RWxlbWVudEJ5SWQoZSk7aWYobyl7aWYoKG49by5nZXRBdHRyaWJ1dGVOb2RlKFwiaWRcIikpJiZuLnZhbHVlPT09ZSlyZXR1cm5bb107aT10LmdldEVsZW1lbnRzQnlOYW1lKGUpLHI9MDt3aGlsZShvPWlbcisrXSlpZigobj1vLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKSkmJm4udmFsdWU9PT1lKXJldHVybltvXX1yZXR1cm5bXX19KSxiLmZpbmQuVEFHPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWU/ZnVuY3Rpb24oZSx0KXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgdC5nZXRFbGVtZW50c0J5VGFnTmFtZT90LmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpOmQucXNhP3QucXVlcnlTZWxlY3RvckFsbChlKTp2b2lkIDB9OmZ1bmN0aW9uKGUsdCl7dmFyIG4scj1bXSxpPTAsbz10LmdldEVsZW1lbnRzQnlUYWdOYW1lKGUpO2lmKFwiKlwiPT09ZSl7d2hpbGUobj1vW2krK10pMT09PW4ubm9kZVR5cGUmJnIucHVzaChuKTtyZXR1cm4gcn1yZXR1cm4gb30sYi5maW5kLkNMQVNTPWQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSYmZnVuY3Rpb24oZSx0KXtpZihcInVuZGVmaW5lZFwiIT10eXBlb2YgdC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lJiZFKXJldHVybiB0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoZSl9LHM9W10sdj1bXSwoZC5xc2E9Sy50ZXN0KEMucXVlcnlTZWxlY3RvckFsbCkpJiYoY2UoZnVuY3Rpb24oZSl7YS5hcHBlbmRDaGlsZChlKS5pbm5lckhUTUw9XCI8YSBpZD0nXCIraytcIic+PC9hPjxzZWxlY3QgaWQ9J1wiK2srXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+PG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIixlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGgmJnYucHVzaChcIlsqXiRdPVwiK00rXCIqKD86Jyd8XFxcIlxcXCIpXCIpLGUucXVlcnlTZWxlY3RvckFsbChcIltzZWxlY3RlZF1cIikubGVuZ3RofHx2LnB1c2goXCJcXFxcW1wiK00rXCIqKD86dmFsdWV8XCIrUitcIilcIiksZS5xdWVyeVNlbGVjdG9yQWxsKFwiW2lkfj1cIitrK1wiLV1cIikubGVuZ3RofHx2LnB1c2goXCJ+PVwiKSxlLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGh8fHYucHVzaChcIjpjaGVja2VkXCIpLGUucXVlcnlTZWxlY3RvckFsbChcImEjXCIraytcIisqXCIpLmxlbmd0aHx8di5wdXNoKFwiLiMuK1srfl1cIil9KSxjZShmdW5jdGlvbihlKXtlLmlubmVySFRNTD1cIjxhIGhyZWY9JycgZGlzYWJsZWQ9J2Rpc2FibGVkJz48L2E+PHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO3ZhciB0PUMuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO3Quc2V0QXR0cmlidXRlKFwidHlwZVwiLFwiaGlkZGVuXCIpLGUuYXBwZW5kQ2hpbGQodCkuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwiRFwiKSxlLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbmFtZT1kXVwiKS5sZW5ndGgmJnYucHVzaChcIm5hbWVcIitNK1wiKlsqXiR8IX5dPz1cIiksMiE9PWUucXVlcnlTZWxlY3RvckFsbChcIjplbmFibGVkXCIpLmxlbmd0aCYmdi5wdXNoKFwiOmVuYWJsZWRcIixcIjpkaXNhYmxlZFwiKSxhLmFwcGVuZENoaWxkKGUpLmRpc2FibGVkPSEwLDIhPT1lLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoJiZ2LnB1c2goXCI6ZW5hYmxlZFwiLFwiOmRpc2FibGVkXCIpLGUucXVlcnlTZWxlY3RvckFsbChcIiosOnhcIiksdi5wdXNoKFwiLC4qOlwiKX0pKSwoZC5tYXRjaGVzU2VsZWN0b3I9Sy50ZXN0KGM9YS5tYXRjaGVzfHxhLndlYmtpdE1hdGNoZXNTZWxlY3Rvcnx8YS5tb3pNYXRjaGVzU2VsZWN0b3J8fGEub01hdGNoZXNTZWxlY3Rvcnx8YS5tc01hdGNoZXNTZWxlY3RvcikpJiZjZShmdW5jdGlvbihlKXtkLmRpc2Nvbm5lY3RlZE1hdGNoPWMuY2FsbChlLFwiKlwiKSxjLmNhbGwoZSxcIltzIT0nJ106eFwiKSxzLnB1c2goXCIhPVwiLCQpfSksdj12Lmxlbmd0aCYmbmV3IFJlZ0V4cCh2LmpvaW4oXCJ8XCIpKSxzPXMubGVuZ3RoJiZuZXcgUmVnRXhwKHMuam9pbihcInxcIikpLHQ9Sy50ZXN0KGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24pLHk9dHx8Sy50ZXN0KGEuY29udGFpbnMpP2Z1bmN0aW9uKGUsdCl7dmFyIG49OT09PWUubm9kZVR5cGU/ZS5kb2N1bWVudEVsZW1lbnQ6ZSxyPXQmJnQucGFyZW50Tm9kZTtyZXR1cm4gZT09PXJ8fCEoIXJ8fDEhPT1yLm5vZGVUeXBlfHwhKG4uY29udGFpbnM/bi5jb250YWlucyhyKTplLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uJiYxNiZlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHIpKSl9OmZ1bmN0aW9uKGUsdCl7aWYodCl3aGlsZSh0PXQucGFyZW50Tm9kZSlpZih0PT09ZSlyZXR1cm4hMDtyZXR1cm4hMX0sRD10P2Z1bmN0aW9uKGUsdCl7aWYoZT09PXQpcmV0dXJuIGw9ITAsMDt2YXIgbj0hZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbi0hdC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtyZXR1cm4gbnx8KDEmKG49KGUub3duZXJEb2N1bWVudHx8ZSk9PT0odC5vd25lckRvY3VtZW50fHx0KT9lLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHQpOjEpfHwhZC5zb3J0RGV0YWNoZWQmJnQuY29tcGFyZURvY3VtZW50UG9zaXRpb24oZSk9PT1uP2U9PT1DfHxlLm93bmVyRG9jdW1lbnQ9PT1tJiZ5KG0sZSk/LTE6dD09PUN8fHQub3duZXJEb2N1bWVudD09PW0mJnkobSx0KT8xOnU/UCh1LGUpLVAodSx0KTowOjQmbj8tMToxKX06ZnVuY3Rpb24oZSx0KXtpZihlPT09dClyZXR1cm4gbD0hMCwwO3ZhciBuLHI9MCxpPWUucGFyZW50Tm9kZSxvPXQucGFyZW50Tm9kZSxhPVtlXSxzPVt0XTtpZighaXx8IW8pcmV0dXJuIGU9PT1DPy0xOnQ9PT1DPzE6aT8tMTpvPzE6dT9QKHUsZSktUCh1LHQpOjA7aWYoaT09PW8pcmV0dXJuIHBlKGUsdCk7bj1lO3doaWxlKG49bi5wYXJlbnROb2RlKWEudW5zaGlmdChuKTtuPXQ7d2hpbGUobj1uLnBhcmVudE5vZGUpcy51bnNoaWZ0KG4pO3doaWxlKGFbcl09PT1zW3JdKXIrKztyZXR1cm4gcj9wZShhW3JdLHNbcl0pOmFbcl09PT1tPy0xOnNbcl09PT1tPzE6MH0pLEN9LHNlLm1hdGNoZXM9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gc2UoZSxudWxsLG51bGwsdCl9LHNlLm1hdGNoZXNTZWxlY3Rvcj1mdW5jdGlvbihlLHQpe2lmKChlLm93bmVyRG9jdW1lbnR8fGUpIT09QyYmVChlKSxkLm1hdGNoZXNTZWxlY3RvciYmRSYmIUFbdCtcIiBcIl0mJighc3x8IXMudGVzdCh0KSkmJighdnx8IXYudGVzdCh0KSkpdHJ5e3ZhciBuPWMuY2FsbChlLHQpO2lmKG58fGQuZGlzY29ubmVjdGVkTWF0Y2h8fGUuZG9jdW1lbnQmJjExIT09ZS5kb2N1bWVudC5ub2RlVHlwZSlyZXR1cm4gbn1jYXRjaChlKXtBKHQsITApfXJldHVybiAwPHNlKHQsQyxudWxsLFtlXSkubGVuZ3RofSxzZS5jb250YWlucz1mdW5jdGlvbihlLHQpe3JldHVybihlLm93bmVyRG9jdW1lbnR8fGUpIT09QyYmVChlKSx5KGUsdCl9LHNlLmF0dHI9ZnVuY3Rpb24oZSx0KXsoZS5vd25lckRvY3VtZW50fHxlKSE9PUMmJlQoZSk7dmFyIG49Yi5hdHRySGFuZGxlW3QudG9Mb3dlckNhc2UoKV0scj1uJiZqLmNhbGwoYi5hdHRySGFuZGxlLHQudG9Mb3dlckNhc2UoKSk/bihlLHQsIUUpOnZvaWQgMDtyZXR1cm4gdm9pZCAwIT09cj9yOmQuYXR0cmlidXRlc3x8IUU/ZS5nZXRBdHRyaWJ1dGUodCk6KHI9ZS5nZXRBdHRyaWJ1dGVOb2RlKHQpKSYmci5zcGVjaWZpZWQ/ci52YWx1ZTpudWxsfSxzZS5lc2NhcGU9ZnVuY3Rpb24oZSl7cmV0dXJuKGUrXCJcIikucmVwbGFjZShyZSxpZSl9LHNlLmVycm9yPWZ1bmN0aW9uKGUpe3Rocm93IG5ldyBFcnJvcihcIlN5bnRheCBlcnJvciwgdW5yZWNvZ25pemVkIGV4cHJlc3Npb246IFwiK2UpfSxzZS51bmlxdWVTb3J0PWZ1bmN0aW9uKGUpe3ZhciB0LG49W10scj0wLGk9MDtpZihsPSFkLmRldGVjdER1cGxpY2F0ZXMsdT0hZC5zb3J0U3RhYmxlJiZlLnNsaWNlKDApLGUuc29ydChEKSxsKXt3aGlsZSh0PWVbaSsrXSl0PT09ZVtpXSYmKHI9bi5wdXNoKGkpKTt3aGlsZShyLS0pZS5zcGxpY2UobltyXSwxKX1yZXR1cm4gdT1udWxsLGV9LG89c2UuZ2V0VGV4dD1mdW5jdGlvbihlKXt2YXIgdCxuPVwiXCIscj0wLGk9ZS5ub2RlVHlwZTtpZihpKXtpZigxPT09aXx8OT09PWl8fDExPT09aSl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUudGV4dENvbnRlbnQpcmV0dXJuIGUudGV4dENvbnRlbnQ7Zm9yKGU9ZS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKW4rPW8oZSl9ZWxzZSBpZigzPT09aXx8ND09PWkpcmV0dXJuIGUubm9kZVZhbHVlfWVsc2Ugd2hpbGUodD1lW3IrK10pbis9byh0KTtyZXR1cm4gbn0sKGI9c2Uuc2VsZWN0b3JzPXtjYWNoZUxlbmd0aDo1MCxjcmVhdGVQc2V1ZG86bGUsbWF0Y2g6RyxhdHRySGFuZGxlOnt9LGZpbmQ6e30scmVsYXRpdmU6e1wiPlwiOntkaXI6XCJwYXJlbnROb2RlXCIsZmlyc3Q6ITB9LFwiIFwiOntkaXI6XCJwYXJlbnROb2RlXCJ9LFwiK1wiOntkaXI6XCJwcmV2aW91c1NpYmxpbmdcIixmaXJzdDohMH0sXCJ+XCI6e2RpcjpcInByZXZpb3VzU2libGluZ1wifX0scHJlRmlsdGVyOntBVFRSOmZ1bmN0aW9uKGUpe3JldHVybiBlWzFdPWVbMV0ucmVwbGFjZSh0ZSxuZSksZVszXT0oZVszXXx8ZVs0XXx8ZVs1XXx8XCJcIikucmVwbGFjZSh0ZSxuZSksXCJ+PVwiPT09ZVsyXSYmKGVbM109XCIgXCIrZVszXStcIiBcIiksZS5zbGljZSgwLDQpfSxDSElMRDpmdW5jdGlvbihlKXtyZXR1cm4gZVsxXT1lWzFdLnRvTG93ZXJDYXNlKCksXCJudGhcIj09PWVbMV0uc2xpY2UoMCwzKT8oZVszXXx8c2UuZXJyb3IoZVswXSksZVs0XT0rKGVbNF0/ZVs1XSsoZVs2XXx8MSk6MiooXCJldmVuXCI9PT1lWzNdfHxcIm9kZFwiPT09ZVszXSkpLGVbNV09KyhlWzddK2VbOF18fFwib2RkXCI9PT1lWzNdKSk6ZVszXSYmc2UuZXJyb3IoZVswXSksZX0sUFNFVURPOmZ1bmN0aW9uKGUpe3ZhciB0LG49IWVbNl0mJmVbMl07cmV0dXJuIEcuQ0hJTEQudGVzdChlWzBdKT9udWxsOihlWzNdP2VbMl09ZVs0XXx8ZVs1XXx8XCJcIjpuJiZYLnRlc3QobikmJih0PWgobiwhMCkpJiYodD1uLmluZGV4T2YoXCIpXCIsbi5sZW5ndGgtdCktbi5sZW5ndGgpJiYoZVswXT1lWzBdLnNsaWNlKDAsdCksZVsyXT1uLnNsaWNlKDAsdCkpLGUuc2xpY2UoMCwzKSl9fSxmaWx0ZXI6e1RBRzpmdW5jdGlvbihlKXt2YXIgdD1lLnJlcGxhY2UodGUsbmUpLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCIqXCI9PT1lP2Z1bmN0aW9uKCl7cmV0dXJuITB9OmZ1bmN0aW9uKGUpe3JldHVybiBlLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT10fX0sQ0xBU1M6ZnVuY3Rpb24oZSl7dmFyIHQ9cFtlK1wiIFwiXTtyZXR1cm4gdHx8KHQ9bmV3IFJlZ0V4cChcIihefFwiK00rXCIpXCIrZStcIihcIitNK1wifCQpXCIpKSYmcChlLGZ1bmN0aW9uKGUpe3JldHVybiB0LnRlc3QoXCJzdHJpbmdcIj09dHlwZW9mIGUuY2xhc3NOYW1lJiZlLmNsYXNzTmFtZXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGUuZ2V0QXR0cmlidXRlJiZlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwiKX0pfSxBVFRSOmZ1bmN0aW9uKG4scixpKXtyZXR1cm4gZnVuY3Rpb24oZSl7dmFyIHQ9c2UuYXR0cihlLG4pO3JldHVybiBudWxsPT10P1wiIT1cIj09PXI6IXJ8fCh0Kz1cIlwiLFwiPVwiPT09cj90PT09aTpcIiE9XCI9PT1yP3QhPT1pOlwiXj1cIj09PXI/aSYmMD09PXQuaW5kZXhPZihpKTpcIio9XCI9PT1yP2kmJi0xPHQuaW5kZXhPZihpKTpcIiQ9XCI9PT1yP2kmJnQuc2xpY2UoLWkubGVuZ3RoKT09PWk6XCJ+PVwiPT09cj8tMTwoXCIgXCIrdC5yZXBsYWNlKEYsXCIgXCIpK1wiIFwiKS5pbmRleE9mKGkpOlwifD1cIj09PXImJih0PT09aXx8dC5zbGljZSgwLGkubGVuZ3RoKzEpPT09aStcIi1cIikpfX0sQ0hJTEQ6ZnVuY3Rpb24oaCxlLHQsZyx2KXt2YXIgeT1cIm50aFwiIT09aC5zbGljZSgwLDMpLG09XCJsYXN0XCIhPT1oLnNsaWNlKC00KSx4PVwib2YtdHlwZVwiPT09ZTtyZXR1cm4gMT09PWcmJjA9PT12P2Z1bmN0aW9uKGUpe3JldHVybiEhZS5wYXJlbnROb2RlfTpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEscyx1LGw9eSE9PW0/XCJuZXh0U2libGluZ1wiOlwicHJldmlvdXNTaWJsaW5nXCIsYz1lLnBhcmVudE5vZGUsZj14JiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkscD0hbiYmIXgsZD0hMTtpZihjKXtpZih5KXt3aGlsZShsKXthPWU7d2hpbGUoYT1hW2xdKWlmKHg/YS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPT09ZjoxPT09YS5ub2RlVHlwZSlyZXR1cm4hMTt1PWw9XCJvbmx5XCI9PT1oJiYhdSYmXCJuZXh0U2libGluZ1wifXJldHVybiEwfWlmKHU9W20/Yy5maXJzdENoaWxkOmMubGFzdENoaWxkXSxtJiZwKXtkPShzPShyPShpPShvPShhPWMpW2tdfHwoYVtrXT17fSkpW2EudW5pcXVlSURdfHwob1thLnVuaXF1ZUlEXT17fSkpW2hdfHxbXSlbMF09PT1TJiZyWzFdKSYmclsyXSxhPXMmJmMuY2hpbGROb2Rlc1tzXTt3aGlsZShhPSsrcyYmYSYmYVtsXXx8KGQ9cz0wKXx8dS5wb3AoKSlpZigxPT09YS5ub2RlVHlwZSYmKytkJiZhPT09ZSl7aVtoXT1bUyxzLGRdO2JyZWFrfX1lbHNlIGlmKHAmJihkPXM9KHI9KGk9KG89KGE9ZSlba118fChhW2tdPXt9KSlbYS51bmlxdWVJRF18fChvW2EudW5pcXVlSURdPXt9KSlbaF18fFtdKVswXT09PVMmJnJbMV0pLCExPT09ZCl3aGlsZShhPSsrcyYmYSYmYVtsXXx8KGQ9cz0wKXx8dS5wb3AoKSlpZigoeD9hLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT1mOjE9PT1hLm5vZGVUeXBlKSYmKytkJiYocCYmKChpPShvPWFba118fChhW2tdPXt9KSlbYS51bmlxdWVJRF18fChvW2EudW5pcXVlSURdPXt9KSlbaF09W1MsZF0pLGE9PT1lKSlicmVhaztyZXR1cm4oZC09dik9PT1nfHxkJWc9PTAmJjA8PWQvZ319fSxQU0VVRE86ZnVuY3Rpb24oZSxvKXt2YXIgdCxhPWIucHNldWRvc1tlXXx8Yi5zZXRGaWx0ZXJzW2UudG9Mb3dlckNhc2UoKV18fHNlLmVycm9yKFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIitlKTtyZXR1cm4gYVtrXT9hKG8pOjE8YS5sZW5ndGg/KHQ9W2UsZSxcIlwiLG9dLGIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eShlLnRvTG93ZXJDYXNlKCkpP2xlKGZ1bmN0aW9uKGUsdCl7dmFyIG4scj1hKGUsbyksaT1yLmxlbmd0aDt3aGlsZShpLS0pZVtuPVAoZSxyW2ldKV09ISh0W25dPXJbaV0pfSk6ZnVuY3Rpb24oZSl7cmV0dXJuIGEoZSwwLHQpfSk6YX19LHBzZXVkb3M6e25vdDpsZShmdW5jdGlvbihlKXt2YXIgcj1bXSxpPVtdLHM9ZihlLnJlcGxhY2UoQixcIiQxXCIpKTtyZXR1cm4gc1trXT9sZShmdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvPXMoZSxudWxsLHIsW10pLGE9ZS5sZW5ndGg7d2hpbGUoYS0tKShpPW9bYV0pJiYoZVthXT0hKHRbYV09aSkpfSk6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiByWzBdPWUscyhyLG51bGwsbixpKSxyWzBdPW51bGwsIWkucG9wKCl9fSksaGFzOmxlKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gMDxzZSh0LGUpLmxlbmd0aH19KSxjb250YWluczpsZShmdW5jdGlvbih0KXtyZXR1cm4gdD10LnJlcGxhY2UodGUsbmUpLGZ1bmN0aW9uKGUpe3JldHVybi0xPChlLnRleHRDb250ZW50fHxvKGUpKS5pbmRleE9mKHQpfX0pLGxhbmc6bGUoZnVuY3Rpb24obil7cmV0dXJuIFYudGVzdChufHxcIlwiKXx8c2UuZXJyb3IoXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIituKSxuPW4ucmVwbGFjZSh0ZSxuZSkudG9Mb3dlckNhc2UoKSxmdW5jdGlvbihlKXt2YXIgdDtkb3tpZih0PUU/ZS5sYW5nOmUuZ2V0QXR0cmlidXRlKFwieG1sOmxhbmdcIil8fGUuZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSlyZXR1cm4odD10LnRvTG93ZXJDYXNlKCkpPT09bnx8MD09PXQuaW5kZXhPZihuK1wiLVwiKX13aGlsZSgoZT1lLnBhcmVudE5vZGUpJiYxPT09ZS5ub2RlVHlwZSk7cmV0dXJuITF9fSksdGFyZ2V0OmZ1bmN0aW9uKGUpe3ZhciB0PW4ubG9jYXRpb24mJm4ubG9jYXRpb24uaGFzaDtyZXR1cm4gdCYmdC5zbGljZSgxKT09PWUuaWR9LHJvb3Q6ZnVuY3Rpb24oZSl7cmV0dXJuIGU9PT1hfSxmb2N1czpmdW5jdGlvbihlKXtyZXR1cm4gZT09PUMuYWN0aXZlRWxlbWVudCYmKCFDLmhhc0ZvY3VzfHxDLmhhc0ZvY3VzKCkpJiYhIShlLnR5cGV8fGUuaHJlZnx8fmUudGFiSW5kZXgpfSxlbmFibGVkOmdlKCExKSxkaXNhYmxlZDpnZSghMCksY2hlY2tlZDpmdW5jdGlvbihlKXt2YXIgdD1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09dCYmISFlLmNoZWNrZWR8fFwib3B0aW9uXCI9PT10JiYhIWUuc2VsZWN0ZWR9LHNlbGVjdGVkOmZ1bmN0aW9uKGUpe3JldHVybiBlLnBhcmVudE5vZGUmJmUucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LCEwPT09ZS5zZWxlY3RlZH0sZW1wdHk6ZnVuY3Rpb24oZSl7Zm9yKGU9ZS5maXJzdENoaWxkO2U7ZT1lLm5leHRTaWJsaW5nKWlmKGUubm9kZVR5cGU8NilyZXR1cm4hMTtyZXR1cm4hMH0scGFyZW50OmZ1bmN0aW9uKGUpe3JldHVybiFiLnBzZXVkb3MuZW1wdHkoZSl9LGhlYWRlcjpmdW5jdGlvbihlKXtyZXR1cm4gSi50ZXN0KGUubm9kZU5hbWUpfSxpbnB1dDpmdW5jdGlvbihlKXtyZXR1cm4gUS50ZXN0KGUubm9kZU5hbWUpfSxidXR0b246ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PXQmJlwiYnV0dG9uXCI9PT1lLnR5cGV8fFwiYnV0dG9uXCI9PT10fSx0ZXh0OmZ1bmN0aW9uKGUpe3ZhciB0O3JldHVyblwiaW5wdXRcIj09PWUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmXCJ0ZXh0XCI9PT1lLnR5cGUmJihudWxsPT0odD1lLmdldEF0dHJpYnV0ZShcInR5cGVcIikpfHxcInRleHRcIj09PXQudG9Mb3dlckNhc2UoKSl9LGZpcnN0OnZlKGZ1bmN0aW9uKCl7cmV0dXJuWzBdfSksbGFzdDp2ZShmdW5jdGlvbihlLHQpe3JldHVyblt0LTFdfSksZXE6dmUoZnVuY3Rpb24oZSx0LG4pe3JldHVybltuPDA/bit0Om5dfSksZXZlbjp2ZShmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0wO248dDtuKz0yKWUucHVzaChuKTtyZXR1cm4gZX0pLG9kZDp2ZShmdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0xO248dDtuKz0yKWUucHVzaChuKTtyZXR1cm4gZX0pLGx0OnZlKGZ1bmN0aW9uKGUsdCxuKXtmb3IodmFyIHI9bjwwP24rdDp0PG4/dDpuOzA8PS0tcjspZS5wdXNoKHIpO3JldHVybiBlfSksZ3Q6dmUoZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj1uPDA/bit0Om47KytyPHQ7KWUucHVzaChyKTtyZXR1cm4gZX0pfX0pLnBzZXVkb3MubnRoPWIucHNldWRvcy5lcSx7cmFkaW86ITAsY2hlY2tib3g6ITAsZmlsZTohMCxwYXNzd29yZDohMCxpbWFnZTohMH0pYi5wc2V1ZG9zW2VdPWRlKGUpO2ZvcihlIGlue3N1Ym1pdDohMCxyZXNldDohMH0pYi5wc2V1ZG9zW2VdPWhlKGUpO2Z1bmN0aW9uIG1lKCl7fWZ1bmN0aW9uIHhlKGUpe2Zvcih2YXIgdD0wLG49ZS5sZW5ndGgscj1cIlwiO3Q8bjt0Kyspcis9ZVt0XS52YWx1ZTtyZXR1cm4gcn1mdW5jdGlvbiBiZShzLGUsdCl7dmFyIHU9ZS5kaXIsbD1lLm5leHQsYz1sfHx1LGY9dCYmXCJwYXJlbnROb2RlXCI9PT1jLHA9cisrO3JldHVybiBlLmZpcnN0P2Z1bmN0aW9uKGUsdCxuKXt3aGlsZShlPWVbdV0paWYoMT09PWUubm9kZVR5cGV8fGYpcmV0dXJuIHMoZSx0LG4pO3JldHVybiExfTpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGE9W1MscF07aWYobil7d2hpbGUoZT1lW3VdKWlmKCgxPT09ZS5ub2RlVHlwZXx8ZikmJnMoZSx0LG4pKXJldHVybiEwfWVsc2Ugd2hpbGUoZT1lW3VdKWlmKDE9PT1lLm5vZGVUeXBlfHxmKWlmKGk9KG89ZVtrXXx8KGVba109e30pKVtlLnVuaXF1ZUlEXXx8KG9bZS51bmlxdWVJRF09e30pLGwmJmw9PT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpZT1lW3VdfHxlO2Vsc2V7aWYoKHI9aVtjXSkmJnJbMF09PT1TJiZyWzFdPT09cClyZXR1cm4gYVsyXT1yWzJdO2lmKChpW2NdPWEpWzJdPXMoZSx0LG4pKXJldHVybiEwfXJldHVybiExfX1mdW5jdGlvbiB3ZShpKXtyZXR1cm4gMTxpLmxlbmd0aD9mdW5jdGlvbihlLHQsbil7dmFyIHI9aS5sZW5ndGg7d2hpbGUoci0tKWlmKCFpW3JdKGUsdCxuKSlyZXR1cm4hMTtyZXR1cm4hMH06aVswXX1mdW5jdGlvbiBUZShlLHQsbixyLGkpe2Zvcih2YXIgbyxhPVtdLHM9MCx1PWUubGVuZ3RoLGw9bnVsbCE9dDtzPHU7cysrKShvPWVbc10pJiYobiYmIW4obyxyLGkpfHwoYS5wdXNoKG8pLGwmJnQucHVzaChzKSkpO3JldHVybiBhfWZ1bmN0aW9uIENlKGQsaCxnLHYseSxlKXtyZXR1cm4gdiYmIXZba10mJih2PUNlKHYpKSx5JiYheVtrXSYmKHk9Q2UoeSxlKSksbGUoZnVuY3Rpb24oZSx0LG4scil7dmFyIGksbyxhLHM9W10sdT1bXSxsPXQubGVuZ3RoLGM9ZXx8ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcj0wLGk9dC5sZW5ndGg7cjxpO3IrKylzZShlLHRbcl0sbik7cmV0dXJuIG59KGh8fFwiKlwiLG4ubm9kZVR5cGU/W25dOm4sW10pLGY9IWR8fCFlJiZoP2M6VGUoYyxzLGQsbixyKSxwPWc/eXx8KGU/ZDpsfHx2KT9bXTp0OmY7aWYoZyYmZyhmLHAsbixyKSx2KXtpPVRlKHAsdSksdihpLFtdLG4sciksbz1pLmxlbmd0aDt3aGlsZShvLS0pKGE9aVtvXSkmJihwW3Vbb11dPSEoZlt1W29dXT1hKSl9aWYoZSl7aWYoeXx8ZCl7aWYoeSl7aT1bXSxvPXAubGVuZ3RoO3doaWxlKG8tLSkoYT1wW29dKSYmaS5wdXNoKGZbb109YSk7eShudWxsLHA9W10saSxyKX1vPXAubGVuZ3RoO3doaWxlKG8tLSkoYT1wW29dKSYmLTE8KGk9eT9QKGUsYSk6c1tvXSkmJihlW2ldPSEodFtpXT1hKSl9fWVsc2UgcD1UZShwPT09dD9wLnNwbGljZShsLHAubGVuZ3RoKTpwKSx5P3kobnVsbCx0LHAscik6SC5hcHBseSh0LHApfSl9ZnVuY3Rpb24gRWUoZSl7Zm9yKHZhciBpLHQsbixyPWUubGVuZ3RoLG89Yi5yZWxhdGl2ZVtlWzBdLnR5cGVdLGE9b3x8Yi5yZWxhdGl2ZVtcIiBcIl0scz1vPzE6MCx1PWJlKGZ1bmN0aW9uKGUpe3JldHVybiBlPT09aX0sYSwhMCksbD1iZShmdW5jdGlvbihlKXtyZXR1cm4tMTxQKGksZSl9LGEsITApLGM9W2Z1bmN0aW9uKGUsdCxuKXt2YXIgcj0hbyYmKG58fHQhPT13KXx8KChpPXQpLm5vZGVUeXBlP3UoZSx0LG4pOmwoZSx0LG4pKTtyZXR1cm4gaT1udWxsLHJ9XTtzPHI7cysrKWlmKHQ9Yi5yZWxhdGl2ZVtlW3NdLnR5cGVdKWM9W2JlKHdlKGMpLHQpXTtlbHNle2lmKCh0PWIuZmlsdGVyW2Vbc10udHlwZV0uYXBwbHkobnVsbCxlW3NdLm1hdGNoZXMpKVtrXSl7Zm9yKG49KytzO248cjtuKyspaWYoYi5yZWxhdGl2ZVtlW25dLnR5cGVdKWJyZWFrO3JldHVybiBDZSgxPHMmJndlKGMpLDE8cyYmeGUoZS5zbGljZSgwLHMtMSkuY29uY2F0KHt2YWx1ZTpcIiBcIj09PWVbcy0yXS50eXBlP1wiKlwiOlwiXCJ9KSkucmVwbGFjZShCLFwiJDFcIiksdCxzPG4mJkVlKGUuc2xpY2UocyxuKSksbjxyJiZFZShlPWUuc2xpY2UobikpLG48ciYmeGUoZSkpfWMucHVzaCh0KX1yZXR1cm4gd2UoYyl9cmV0dXJuIG1lLnByb3RvdHlwZT1iLmZpbHRlcnM9Yi5wc2V1ZG9zLGIuc2V0RmlsdGVycz1uZXcgbWUsaD1zZS50b2tlbml6ZT1mdW5jdGlvbihlLHQpe3ZhciBuLHIsaSxvLGEscyx1LGw9eFtlK1wiIFwiXTtpZihsKXJldHVybiB0PzA6bC5zbGljZSgwKTthPWUscz1bXSx1PWIucHJlRmlsdGVyO3doaWxlKGEpe2ZvcihvIGluIG4mJiEocj1fLmV4ZWMoYSkpfHwociYmKGE9YS5zbGljZShyWzBdLmxlbmd0aCl8fGEpLHMucHVzaChpPVtdKSksbj0hMSwocj16LmV4ZWMoYSkpJiYobj1yLnNoaWZ0KCksaS5wdXNoKHt2YWx1ZTpuLHR5cGU6clswXS5yZXBsYWNlKEIsXCIgXCIpfSksYT1hLnNsaWNlKG4ubGVuZ3RoKSksYi5maWx0ZXIpIShyPUdbb10uZXhlYyhhKSl8fHVbb10mJiEocj11W29dKHIpKXx8KG49ci5zaGlmdCgpLGkucHVzaCh7dmFsdWU6bix0eXBlOm8sbWF0Y2hlczpyfSksYT1hLnNsaWNlKG4ubGVuZ3RoKSk7aWYoIW4pYnJlYWt9cmV0dXJuIHQ/YS5sZW5ndGg6YT9zZS5lcnJvcihlKTp4KGUscykuc2xpY2UoMCl9LGY9c2UuY29tcGlsZT1mdW5jdGlvbihlLHQpe3ZhciBuLHYseSxtLHgscixpPVtdLG89W10sYT1OW2UrXCIgXCJdO2lmKCFhKXt0fHwodD1oKGUpKSxuPXQubGVuZ3RoO3doaWxlKG4tLSkoYT1FZSh0W25dKSlba10/aS5wdXNoKGEpOm8ucHVzaChhKTsoYT1OKGUsKHY9byxtPTA8KHk9aSkubGVuZ3RoLHg9MDx2Lmxlbmd0aCxyPWZ1bmN0aW9uKGUsdCxuLHIsaSl7dmFyIG8sYSxzLHU9MCxsPVwiMFwiLGM9ZSYmW10sZj1bXSxwPXcsZD1lfHx4JiZiLmZpbmQuVEFHKFwiKlwiLGkpLGg9Uys9bnVsbD09cD8xOk1hdGgucmFuZG9tKCl8fC4xLGc9ZC5sZW5ndGg7Zm9yKGkmJih3PXQ9PT1DfHx0fHxpKTtsIT09ZyYmbnVsbCE9KG89ZFtsXSk7bCsrKXtpZih4JiZvKXthPTAsdHx8by5vd25lckRvY3VtZW50PT09Q3x8KFQobyksbj0hRSk7d2hpbGUocz12W2ErK10paWYocyhvLHR8fEMsbikpe3IucHVzaChvKTticmVha31pJiYoUz1oKX1tJiYoKG89IXMmJm8pJiZ1LS0sZSYmYy5wdXNoKG8pKX1pZih1Kz1sLG0mJmwhPT11KXthPTA7d2hpbGUocz15W2ErK10pcyhjLGYsdCxuKTtpZihlKXtpZigwPHUpd2hpbGUobC0tKWNbbF18fGZbbF18fChmW2xdPXEuY2FsbChyKSk7Zj1UZShmKX1ILmFwcGx5KHIsZiksaSYmIWUmJjA8Zi5sZW5ndGgmJjE8dSt5Lmxlbmd0aCYmc2UudW5pcXVlU29ydChyKX1yZXR1cm4gaSYmKFM9aCx3PXApLGN9LG0/bGUocik6cikpKS5zZWxlY3Rvcj1lfXJldHVybiBhfSxnPXNlLnNlbGVjdD1mdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvLGEscyx1LGw9XCJmdW5jdGlvblwiPT10eXBlb2YgZSYmZSxjPSFyJiZoKGU9bC5zZWxlY3Rvcnx8ZSk7aWYobj1ufHxbXSwxPT09Yy5sZW5ndGgpe2lmKDI8KG89Y1swXT1jWzBdLnNsaWNlKDApKS5sZW5ndGgmJlwiSURcIj09PShhPW9bMF0pLnR5cGUmJjk9PT10Lm5vZGVUeXBlJiZFJiZiLnJlbGF0aXZlW29bMV0udHlwZV0pe2lmKCEodD0oYi5maW5kLklEKGEubWF0Y2hlc1swXS5yZXBsYWNlKHRlLG5lKSx0KXx8W10pWzBdKSlyZXR1cm4gbjtsJiYodD10LnBhcmVudE5vZGUpLGU9ZS5zbGljZShvLnNoaWZ0KCkudmFsdWUubGVuZ3RoKX1pPUcubmVlZHNDb250ZXh0LnRlc3QoZSk/MDpvLmxlbmd0aDt3aGlsZShpLS0pe2lmKGE9b1tpXSxiLnJlbGF0aXZlW3M9YS50eXBlXSlicmVhaztpZigodT1iLmZpbmRbc10pJiYocj11KGEubWF0Y2hlc1swXS5yZXBsYWNlKHRlLG5lKSxlZS50ZXN0KG9bMF0udHlwZSkmJnllKHQucGFyZW50Tm9kZSl8fHQpKSl7aWYoby5zcGxpY2UoaSwxKSwhKGU9ci5sZW5ndGgmJnhlKG8pKSlyZXR1cm4gSC5hcHBseShuLHIpLG47YnJlYWt9fX1yZXR1cm4obHx8ZihlLGMpKShyLHQsIUUsbiwhdHx8ZWUudGVzdChlKSYmeWUodC5wYXJlbnROb2RlKXx8dCksbn0sZC5zb3J0U3RhYmxlPWsuc3BsaXQoXCJcIikuc29ydChEKS5qb2luKFwiXCIpPT09ayxkLmRldGVjdER1cGxpY2F0ZXM9ISFsLFQoKSxkLnNvcnREZXRhY2hlZD1jZShmdW5jdGlvbihlKXtyZXR1cm4gMSZlLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKEMuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpKX0pLGNlKGZ1bmN0aW9uKGUpe3JldHVybiBlLmlubmVySFRNTD1cIjxhIGhyZWY9JyMnPjwvYT5cIixcIiNcIj09PWUuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpfSl8fGZlKFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLGZ1bmN0aW9uKGUsdCxuKXtpZighbilyZXR1cm4gZS5nZXRBdHRyaWJ1dGUodCxcInR5cGVcIj09PXQudG9Mb3dlckNhc2UoKT8xOjIpfSksZC5hdHRyaWJ1dGVzJiZjZShmdW5jdGlvbihlKXtyZXR1cm4gZS5pbm5lckhUTUw9XCI8aW5wdXQvPlwiLGUuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIpLFwiXCI9PT1lLmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKFwidmFsdWVcIil9KXx8ZmUoXCJ2YWx1ZVwiLGZ1bmN0aW9uKGUsdCxuKXtpZighbiYmXCJpbnB1dFwiPT09ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpKXJldHVybiBlLmRlZmF1bHRWYWx1ZX0pLGNlKGZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT1lLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpfSl8fGZlKFIsZnVuY3Rpb24oZSx0LG4pe3ZhciByO2lmKCFuKXJldHVybiEwPT09ZVt0XT90LnRvTG93ZXJDYXNlKCk6KHI9ZS5nZXRBdHRyaWJ1dGVOb2RlKHQpKSYmci5zcGVjaWZpZWQ/ci52YWx1ZTpudWxsfSksc2V9KEMpO2suZmluZD1oLGsuZXhwcj1oLnNlbGVjdG9ycyxrLmV4cHJbXCI6XCJdPWsuZXhwci5wc2V1ZG9zLGsudW5pcXVlU29ydD1rLnVuaXF1ZT1oLnVuaXF1ZVNvcnQsay50ZXh0PWguZ2V0VGV4dCxrLmlzWE1MRG9jPWguaXNYTUwsay5jb250YWlucz1oLmNvbnRhaW5zLGsuZXNjYXBlU2VsZWN0b3I9aC5lc2NhcGU7dmFyIFQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPVtdLGk9dm9pZCAwIT09bjt3aGlsZSgoZT1lW3RdKSYmOSE9PWUubm9kZVR5cGUpaWYoMT09PWUubm9kZVR5cGUpe2lmKGkmJmsoZSkuaXMobikpYnJlYWs7ci5wdXNoKGUpfXJldHVybiByfSxTPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtdO2U7ZT1lLm5leHRTaWJsaW5nKTE9PT1lLm5vZGVUeXBlJiZlIT09dCYmbi5wdXNoKGUpO3JldHVybiBufSxOPWsuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7ZnVuY3Rpb24gQShlLHQpe3JldHVybiBlLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk9PT10LnRvTG93ZXJDYXNlKCl9dmFyIEQ9L148KFthLXpdW15cXC9cXDA+OlxceDIwXFx0XFxyXFxuXFxmXSopW1xceDIwXFx0XFxyXFxuXFxmXSpcXC8/Pig/OjxcXC9cXDE+fCkkL2k7ZnVuY3Rpb24gaihlLG4scil7cmV0dXJuIG0obik/ay5ncmVwKGUsZnVuY3Rpb24oZSx0KXtyZXR1cm4hIW4uY2FsbChlLHQsZSkhPT1yfSk6bi5ub2RlVHlwZT9rLmdyZXAoZSxmdW5jdGlvbihlKXtyZXR1cm4gZT09PW4hPT1yfSk6XCJzdHJpbmdcIiE9dHlwZW9mIG4/ay5ncmVwKGUsZnVuY3Rpb24oZSl7cmV0dXJuLTE8aS5jYWxsKG4sZSkhPT1yfSk6ay5maWx0ZXIobixlLHIpfWsuZmlsdGVyPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10WzBdO3JldHVybiBuJiYoZT1cIjpub3QoXCIrZStcIilcIiksMT09PXQubGVuZ3RoJiYxPT09ci5ub2RlVHlwZT9rLmZpbmQubWF0Y2hlc1NlbGVjdG9yKHIsZSk/W3JdOltdOmsuZmluZC5tYXRjaGVzKGUsay5ncmVwKHQsZnVuY3Rpb24oZSl7cmV0dXJuIDE9PT1lLm5vZGVUeXBlfSkpfSxrLmZuLmV4dGVuZCh7ZmluZDpmdW5jdGlvbihlKXt2YXIgdCxuLHI9dGhpcy5sZW5ndGgsaT10aGlzO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlKXJldHVybiB0aGlzLnB1c2hTdGFjayhrKGUpLmZpbHRlcihmdW5jdGlvbigpe2Zvcih0PTA7dDxyO3QrKylpZihrLmNvbnRhaW5zKGlbdF0sdGhpcykpcmV0dXJuITB9KSk7Zm9yKG49dGhpcy5wdXNoU3RhY2soW10pLHQ9MDt0PHI7dCsrKWsuZmluZChlLGlbdF0sbik7cmV0dXJuIDE8cj9rLnVuaXF1ZVNvcnQobik6bn0sZmlsdGVyOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnB1c2hTdGFjayhqKHRoaXMsZXx8W10sITEpKX0sbm90OmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnB1c2hTdGFjayhqKHRoaXMsZXx8W10sITApKX0saXM6ZnVuY3Rpb24oZSl7cmV0dXJuISFqKHRoaXMsXCJzdHJpbmdcIj09dHlwZW9mIGUmJk4udGVzdChlKT9rKGUpOmV8fFtdLCExKS5sZW5ndGh9fSk7dmFyIHEsTD0vXig/OlxccyooPFtcXHdcXFddKz4pW14+XSp8IyhbXFx3LV0rKSkkLzsoay5mbi5pbml0PWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpO2lmKCFlKXJldHVybiB0aGlzO2lmKG49bnx8cSxcInN0cmluZ1wiPT10eXBlb2YgZSl7aWYoIShyPVwiPFwiPT09ZVswXSYmXCI+XCI9PT1lW2UubGVuZ3RoLTFdJiYzPD1lLmxlbmd0aD9bbnVsbCxlLG51bGxdOkwuZXhlYyhlKSl8fCFyWzFdJiZ0KXJldHVybiF0fHx0LmpxdWVyeT8odHx8bikuZmluZChlKTp0aGlzLmNvbnN0cnVjdG9yKHQpLmZpbmQoZSk7aWYoclsxXSl7aWYodD10IGluc3RhbmNlb2Ygaz90WzBdOnQsay5tZXJnZSh0aGlzLGsucGFyc2VIVE1MKHJbMV0sdCYmdC5ub2RlVHlwZT90Lm93bmVyRG9jdW1lbnR8fHQ6RSwhMCkpLEQudGVzdChyWzFdKSYmay5pc1BsYWluT2JqZWN0KHQpKWZvcihyIGluIHQpbSh0aGlzW3JdKT90aGlzW3JdKHRbcl0pOnRoaXMuYXR0cihyLHRbcl0pO3JldHVybiB0aGlzfXJldHVybihpPUUuZ2V0RWxlbWVudEJ5SWQoclsyXSkpJiYodGhpc1swXT1pLHRoaXMubGVuZ3RoPTEpLHRoaXN9cmV0dXJuIGUubm9kZVR5cGU/KHRoaXNbMF09ZSx0aGlzLmxlbmd0aD0xLHRoaXMpOm0oZSk/dm9pZCAwIT09bi5yZWFkeT9uLnJlYWR5KGUpOmUoayk6ay5tYWtlQXJyYXkoZSx0aGlzKX0pLnByb3RvdHlwZT1rLmZuLHE9ayhFKTt2YXIgSD0vXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxPPXtjaGlsZHJlbjohMCxjb250ZW50czohMCxuZXh0OiEwLHByZXY6ITB9O2Z1bmN0aW9uIFAoZSx0KXt3aGlsZSgoZT1lW3RdKSYmMSE9PWUubm9kZVR5cGUpO3JldHVybiBlfWsuZm4uZXh0ZW5kKHtoYXM6ZnVuY3Rpb24oZSl7dmFyIHQ9ayhlLHRoaXMpLG49dC5sZW5ndGg7cmV0dXJuIHRoaXMuZmlsdGVyKGZ1bmN0aW9uKCl7Zm9yKHZhciBlPTA7ZTxuO2UrKylpZihrLmNvbnRhaW5zKHRoaXMsdFtlXSkpcmV0dXJuITB9KX0sY2xvc2VzdDpmdW5jdGlvbihlLHQpe3ZhciBuLHI9MCxpPXRoaXMubGVuZ3RoLG89W10sYT1cInN0cmluZ1wiIT10eXBlb2YgZSYmayhlKTtpZighTi50ZXN0KGUpKWZvcig7cjxpO3IrKylmb3Iobj10aGlzW3JdO24mJm4hPT10O249bi5wYXJlbnROb2RlKWlmKG4ubm9kZVR5cGU8MTEmJihhPy0xPGEuaW5kZXgobik6MT09PW4ubm9kZVR5cGUmJmsuZmluZC5tYXRjaGVzU2VsZWN0b3IobixlKSkpe28ucHVzaChuKTticmVha31yZXR1cm4gdGhpcy5wdXNoU3RhY2soMTxvLmxlbmd0aD9rLnVuaXF1ZVNvcnQobyk6byl9LGluZGV4OmZ1bmN0aW9uKGUpe3JldHVybiBlP1wic3RyaW5nXCI9PXR5cGVvZiBlP2kuY2FsbChrKGUpLHRoaXNbMF0pOmkuY2FsbCh0aGlzLGUuanF1ZXJ5P2VbMF06ZSk6dGhpc1swXSYmdGhpc1swXS5wYXJlbnROb2RlP3RoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoOi0xfSxhZGQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5wdXNoU3RhY2soay51bmlxdWVTb3J0KGsubWVyZ2UodGhpcy5nZXQoKSxrKGUsdCkpKSl9LGFkZEJhY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuYWRkKG51bGw9PWU/dGhpcy5wcmV2T2JqZWN0OnRoaXMucHJldk9iamVjdC5maWx0ZXIoZSkpfX0pLGsuZWFjaCh7cGFyZW50OmZ1bmN0aW9uKGUpe3ZhciB0PWUucGFyZW50Tm9kZTtyZXR1cm4gdCYmMTEhPT10Lm5vZGVUeXBlP3Q6bnVsbH0scGFyZW50czpmdW5jdGlvbihlKXtyZXR1cm4gVChlLFwicGFyZW50Tm9kZVwiKX0scGFyZW50c1VudGlsOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gVChlLFwicGFyZW50Tm9kZVwiLG4pfSxuZXh0OmZ1bmN0aW9uKGUpe3JldHVybiBQKGUsXCJuZXh0U2libGluZ1wiKX0scHJldjpmdW5jdGlvbihlKXtyZXR1cm4gUChlLFwicHJldmlvdXNTaWJsaW5nXCIpfSxuZXh0QWxsOmZ1bmN0aW9uKGUpe3JldHVybiBUKGUsXCJuZXh0U2libGluZ1wiKX0scHJldkFsbDpmdW5jdGlvbihlKXtyZXR1cm4gVChlLFwicHJldmlvdXNTaWJsaW5nXCIpfSxuZXh0VW50aWw6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBUKGUsXCJuZXh0U2libGluZ1wiLG4pfSxwcmV2VW50aWw6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBUKGUsXCJwcmV2aW91c1NpYmxpbmdcIixuKX0sc2libGluZ3M6ZnVuY3Rpb24oZSl7cmV0dXJuIFMoKGUucGFyZW50Tm9kZXx8e30pLmZpcnN0Q2hpbGQsZSl9LGNoaWxkcmVuOmZ1bmN0aW9uKGUpe3JldHVybiBTKGUuZmlyc3RDaGlsZCl9LGNvbnRlbnRzOmZ1bmN0aW9uKGUpe3JldHVyblwidW5kZWZpbmVkXCIhPXR5cGVvZiBlLmNvbnRlbnREb2N1bWVudD9lLmNvbnRlbnREb2N1bWVudDooQShlLFwidGVtcGxhdGVcIikmJihlPWUuY29udGVudHx8ZSksay5tZXJnZShbXSxlLmNoaWxkTm9kZXMpKX19LGZ1bmN0aW9uKHIsaSl7ay5mbltyXT1mdW5jdGlvbihlLHQpe3ZhciBuPWsubWFwKHRoaXMsaSxlKTtyZXR1cm5cIlVudGlsXCIhPT1yLnNsaWNlKC01KSYmKHQ9ZSksdCYmXCJzdHJpbmdcIj09dHlwZW9mIHQmJihuPWsuZmlsdGVyKHQsbikpLDE8dGhpcy5sZW5ndGgmJihPW3JdfHxrLnVuaXF1ZVNvcnQobiksSC50ZXN0KHIpJiZuLnJldmVyc2UoKSksdGhpcy5wdXNoU3RhY2sobil9fSk7dmFyIFI9L1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nO2Z1bmN0aW9uIE0oZSl7cmV0dXJuIGV9ZnVuY3Rpb24gSShlKXt0aHJvdyBlfWZ1bmN0aW9uIFcoZSx0LG4scil7dmFyIGk7dHJ5e2UmJm0oaT1lLnByb21pc2UpP2kuY2FsbChlKS5kb25lKHQpLmZhaWwobik6ZSYmbShpPWUudGhlbik/aS5jYWxsKGUsdCxuKTp0LmFwcGx5KHZvaWQgMCxbZV0uc2xpY2UocikpfWNhdGNoKGUpe24uYXBwbHkodm9pZCAwLFtlXSl9fWsuQ2FsbGJhY2tzPWZ1bmN0aW9uKHIpe3ZhciBlLG47cj1cInN0cmluZ1wiPT10eXBlb2Ygcj8oZT1yLG49e30say5lYWNoKGUubWF0Y2goUil8fFtdLGZ1bmN0aW9uKGUsdCl7blt0XT0hMH0pLG4pOmsuZXh0ZW5kKHt9LHIpO3ZhciBpLHQsbyxhLHM9W10sdT1bXSxsPS0xLGM9ZnVuY3Rpb24oKXtmb3IoYT1hfHxyLm9uY2Usbz1pPSEwO3UubGVuZ3RoO2w9LTEpe3Q9dS5zaGlmdCgpO3doaWxlKCsrbDxzLmxlbmd0aCkhMT09PXNbbF0uYXBwbHkodFswXSx0WzFdKSYmci5zdG9wT25GYWxzZSYmKGw9cy5sZW5ndGgsdD0hMSl9ci5tZW1vcnl8fCh0PSExKSxpPSExLGEmJihzPXQ/W106XCJcIil9LGY9e2FkZDpmdW5jdGlvbigpe3JldHVybiBzJiYodCYmIWkmJihsPXMubGVuZ3RoLTEsdS5wdXNoKHQpKSxmdW5jdGlvbiBuKGUpe2suZWFjaChlLGZ1bmN0aW9uKGUsdCl7bSh0KT9yLnVuaXF1ZSYmZi5oYXModCl8fHMucHVzaCh0KTp0JiZ0Lmxlbmd0aCYmXCJzdHJpbmdcIiE9PXcodCkmJm4odCl9KX0oYXJndW1lbnRzKSx0JiYhaSYmYygpKSx0aGlzfSxyZW1vdmU6ZnVuY3Rpb24oKXtyZXR1cm4gay5lYWNoKGFyZ3VtZW50cyxmdW5jdGlvbihlLHQpe3ZhciBuO3doaWxlKC0xPChuPWsuaW5BcnJheSh0LHMsbikpKXMuc3BsaWNlKG4sMSksbjw9bCYmbC0tfSksdGhpc30saGFzOmZ1bmN0aW9uKGUpe3JldHVybiBlPy0xPGsuaW5BcnJheShlLHMpOjA8cy5sZW5ndGh9LGVtcHR5OmZ1bmN0aW9uKCl7cmV0dXJuIHMmJihzPVtdKSx0aGlzfSxkaXNhYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIGE9dT1bXSxzPXQ9XCJcIix0aGlzfSxkaXNhYmxlZDpmdW5jdGlvbigpe3JldHVybiFzfSxsb2NrOmZ1bmN0aW9uKCl7cmV0dXJuIGE9dT1bXSx0fHxpfHwocz10PVwiXCIpLHRoaXN9LGxvY2tlZDpmdW5jdGlvbigpe3JldHVybiEhYX0sZmlyZVdpdGg6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gYXx8KHQ9W2UsKHQ9dHx8W10pLnNsaWNlP3Quc2xpY2UoKTp0XSx1LnB1c2godCksaXx8YygpKSx0aGlzfSxmaXJlOmZ1bmN0aW9uKCl7cmV0dXJuIGYuZmlyZVdpdGgodGhpcyxhcmd1bWVudHMpLHRoaXN9LGZpcmVkOmZ1bmN0aW9uKCl7cmV0dXJuISFvfX07cmV0dXJuIGZ9LGsuZXh0ZW5kKHtEZWZlcnJlZDpmdW5jdGlvbihlKXt2YXIgbz1bW1wibm90aWZ5XCIsXCJwcm9ncmVzc1wiLGsuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLGsuQ2FsbGJhY2tzKFwibWVtb3J5XCIpLDJdLFtcInJlc29sdmVcIixcImRvbmVcIixrLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLGsuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksMCxcInJlc29sdmVkXCJdLFtcInJlamVjdFwiLFwiZmFpbFwiLGsuQ2FsbGJhY2tzKFwib25jZSBtZW1vcnlcIiksay5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKSwxLFwicmVqZWN0ZWRcIl1dLGk9XCJwZW5kaW5nXCIsYT17c3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gaX0sYWx3YXlzOmZ1bmN0aW9uKCl7cmV0dXJuIHMuZG9uZShhcmd1bWVudHMpLmZhaWwoYXJndW1lbnRzKSx0aGlzfSxcImNhdGNoXCI6ZnVuY3Rpb24oZSl7cmV0dXJuIGEudGhlbihudWxsLGUpfSxwaXBlOmZ1bmN0aW9uKCl7dmFyIGk9YXJndW1lbnRzO3JldHVybiBrLkRlZmVycmVkKGZ1bmN0aW9uKHIpe2suZWFjaChvLGZ1bmN0aW9uKGUsdCl7dmFyIG49bShpW3RbNF1dKSYmaVt0WzRdXTtzW3RbMV1dKGZ1bmN0aW9uKCl7dmFyIGU9biYmbi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7ZSYmbShlLnByb21pc2UpP2UucHJvbWlzZSgpLnByb2dyZXNzKHIubm90aWZ5KS5kb25lKHIucmVzb2x2ZSkuZmFpbChyLnJlamVjdCk6clt0WzBdK1wiV2l0aFwiXSh0aGlzLG4/W2VdOmFyZ3VtZW50cyl9KX0pLGk9bnVsbH0pLnByb21pc2UoKX0sdGhlbjpmdW5jdGlvbih0LG4scil7dmFyIHU9MDtmdW5jdGlvbiBsKGksbyxhLHMpe3JldHVybiBmdW5jdGlvbigpe3ZhciBuPXRoaXMscj1hcmd1bWVudHMsZT1mdW5jdGlvbigpe3ZhciBlLHQ7aWYoIShpPHUpKXtpZigoZT1hLmFwcGx5KG4scikpPT09by5wcm9taXNlKCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlRoZW5hYmxlIHNlbGYtcmVzb2x1dGlvblwiKTt0PWUmJihcIm9iamVjdFwiPT10eXBlb2YgZXx8XCJmdW5jdGlvblwiPT10eXBlb2YgZSkmJmUudGhlbixtKHQpP3M/dC5jYWxsKGUsbCh1LG8sTSxzKSxsKHUsbyxJLHMpKToodSsrLHQuY2FsbChlLGwodSxvLE0scyksbCh1LG8sSSxzKSxsKHUsbyxNLG8ubm90aWZ5V2l0aCkpKTooYSE9PU0mJihuPXZvaWQgMCxyPVtlXSksKHN8fG8ucmVzb2x2ZVdpdGgpKG4scikpfX0sdD1zP2U6ZnVuY3Rpb24oKXt0cnl7ZSgpfWNhdGNoKGUpe2suRGVmZXJyZWQuZXhjZXB0aW9uSG9vayYmay5EZWZlcnJlZC5leGNlcHRpb25Ib29rKGUsdC5zdGFja1RyYWNlKSx1PD1pKzEmJihhIT09SSYmKG49dm9pZCAwLHI9W2VdKSxvLnJlamVjdFdpdGgobixyKSl9fTtpP3QoKTooay5EZWZlcnJlZC5nZXRTdGFja0hvb2smJih0LnN0YWNrVHJhY2U9ay5EZWZlcnJlZC5nZXRTdGFja0hvb2soKSksQy5zZXRUaW1lb3V0KHQpKX19cmV0dXJuIGsuRGVmZXJyZWQoZnVuY3Rpb24oZSl7b1swXVszXS5hZGQobCgwLGUsbShyKT9yOk0sZS5ub3RpZnlXaXRoKSksb1sxXVszXS5hZGQobCgwLGUsbSh0KT90Ok0pKSxvWzJdWzNdLmFkZChsKDAsZSxtKG4pP246SSkpfSkucHJvbWlzZSgpfSxwcm9taXNlOmZ1bmN0aW9uKGUpe3JldHVybiBudWxsIT1lP2suZXh0ZW5kKGUsYSk6YX19LHM9e307cmV0dXJuIGsuZWFjaChvLGZ1bmN0aW9uKGUsdCl7dmFyIG49dFsyXSxyPXRbNV07YVt0WzFdXT1uLmFkZCxyJiZuLmFkZChmdW5jdGlvbigpe2k9cn0sb1szLWVdWzJdLmRpc2FibGUsb1szLWVdWzNdLmRpc2FibGUsb1swXVsyXS5sb2NrLG9bMF1bM10ubG9jayksbi5hZGQodFszXS5maXJlKSxzW3RbMF1dPWZ1bmN0aW9uKCl7cmV0dXJuIHNbdFswXStcIldpdGhcIl0odGhpcz09PXM/dm9pZCAwOnRoaXMsYXJndW1lbnRzKSx0aGlzfSxzW3RbMF0rXCJXaXRoXCJdPW4uZmlyZVdpdGh9KSxhLnByb21pc2UocyksZSYmZS5jYWxsKHMscyksc30sd2hlbjpmdW5jdGlvbihlKXt2YXIgbj1hcmd1bWVudHMubGVuZ3RoLHQ9bixyPUFycmF5KHQpLGk9cy5jYWxsKGFyZ3VtZW50cyksbz1rLkRlZmVycmVkKCksYT1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7clt0XT10aGlzLGlbdF09MTxhcmd1bWVudHMubGVuZ3RoP3MuY2FsbChhcmd1bWVudHMpOmUsLS1ufHxvLnJlc29sdmVXaXRoKHIsaSl9fTtpZihuPD0xJiYoVyhlLG8uZG9uZShhKHQpKS5yZXNvbHZlLG8ucmVqZWN0LCFuKSxcInBlbmRpbmdcIj09PW8uc3RhdGUoKXx8bShpW3RdJiZpW3RdLnRoZW4pKSlyZXR1cm4gby50aGVuKCk7d2hpbGUodC0tKVcoaVt0XSxhKHQpLG8ucmVqZWN0KTtyZXR1cm4gby5wcm9taXNlKCl9fSk7dmFyICQ9L14oRXZhbHxJbnRlcm5hbHxSYW5nZXxSZWZlcmVuY2V8U3ludGF4fFR5cGV8VVJJKUVycm9yJC87ay5EZWZlcnJlZC5leGNlcHRpb25Ib29rPWZ1bmN0aW9uKGUsdCl7Qy5jb25zb2xlJiZDLmNvbnNvbGUud2FybiYmZSYmJC50ZXN0KGUubmFtZSkmJkMuY29uc29sZS53YXJuKFwialF1ZXJ5LkRlZmVycmVkIGV4Y2VwdGlvbjogXCIrZS5tZXNzYWdlLGUuc3RhY2ssdCl9LGsucmVhZHlFeGNlcHRpb249ZnVuY3Rpb24oZSl7Qy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZX0pfTt2YXIgRj1rLkRlZmVycmVkKCk7ZnVuY3Rpb24gQigpe0UucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNvbnRlbnRMb2FkZWRcIixCKSxDLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJsb2FkXCIsQiksay5yZWFkeSgpfWsuZm4ucmVhZHk9ZnVuY3Rpb24oZSl7cmV0dXJuIEYudGhlbihlKVtcImNhdGNoXCJdKGZ1bmN0aW9uKGUpe2sucmVhZHlFeGNlcHRpb24oZSl9KSx0aGlzfSxrLmV4dGVuZCh7aXNSZWFkeTohMSxyZWFkeVdhaXQ6MSxyZWFkeTpmdW5jdGlvbihlKXsoITA9PT1lPy0tay5yZWFkeVdhaXQ6ay5pc1JlYWR5KXx8KGsuaXNSZWFkeT0hMCkhPT1lJiYwPC0tay5yZWFkeVdhaXR8fEYucmVzb2x2ZVdpdGgoRSxba10pfX0pLGsucmVhZHkudGhlbj1GLnRoZW4sXCJjb21wbGV0ZVwiPT09RS5yZWFkeVN0YXRlfHxcImxvYWRpbmdcIiE9PUUucmVhZHlTdGF0ZSYmIUUuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsP0Muc2V0VGltZW91dChrLnJlYWR5KTooRS5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLEIpLEMuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRcIixCKSk7dmFyIF89ZnVuY3Rpb24oZSx0LG4scixpLG8sYSl7dmFyIHM9MCx1PWUubGVuZ3RoLGw9bnVsbD09bjtpZihcIm9iamVjdFwiPT09dyhuKSlmb3IocyBpbiBpPSEwLG4pXyhlLHQscyxuW3NdLCEwLG8sYSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYoaT0hMCxtKHIpfHwoYT0hMCksbCYmKGE/KHQuY2FsbChlLHIpLHQ9bnVsbCk6KGw9dCx0PWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gbC5jYWxsKGsoZSksbil9KSksdCkpZm9yKDtzPHU7cysrKXQoZVtzXSxuLGE/cjpyLmNhbGwoZVtzXSxzLHQoZVtzXSxuKSkpO3JldHVybiBpP2U6bD90LmNhbGwoZSk6dT90KGVbMF0sbik6b30sej0vXi1tcy0vLFU9Ly0oW2Etel0pL2c7ZnVuY3Rpb24gWChlLHQpe3JldHVybiB0LnRvVXBwZXJDYXNlKCl9ZnVuY3Rpb24gVihlKXtyZXR1cm4gZS5yZXBsYWNlKHosXCJtcy1cIikucmVwbGFjZShVLFgpfXZhciBHPWZ1bmN0aW9uKGUpe3JldHVybiAxPT09ZS5ub2RlVHlwZXx8OT09PWUubm9kZVR5cGV8fCErZS5ub2RlVHlwZX07ZnVuY3Rpb24gWSgpe3RoaXMuZXhwYW5kbz1rLmV4cGFuZG8rWS51aWQrK31ZLnVpZD0xLFkucHJvdG90eXBlPXtjYWNoZTpmdW5jdGlvbihlKXt2YXIgdD1lW3RoaXMuZXhwYW5kb107cmV0dXJuIHR8fCh0PXt9LEcoZSkmJihlLm5vZGVUeXBlP2VbdGhpcy5leHBhbmRvXT10Ok9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHRoaXMuZXhwYW5kbyx7dmFsdWU6dCxjb25maWd1cmFibGU6ITB9KSkpLHR9LHNldDpmdW5jdGlvbihlLHQsbil7dmFyIHIsaT10aGlzLmNhY2hlKGUpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KWlbVih0KV09bjtlbHNlIGZvcihyIGluIHQpaVtWKHIpXT10W3JdO3JldHVybiBpfSxnZXQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdm9pZCAwPT09dD90aGlzLmNhY2hlKGUpOmVbdGhpcy5leHBhbmRvXSYmZVt0aGlzLmV4cGFuZG9dW1YodCldfSxhY2Nlc3M6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB2b2lkIDA9PT10fHx0JiZcInN0cmluZ1wiPT10eXBlb2YgdCYmdm9pZCAwPT09bj90aGlzLmdldChlLHQpOih0aGlzLnNldChlLHQsbiksdm9pZCAwIT09bj9uOnQpfSxyZW1vdmU6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPWVbdGhpcy5leHBhbmRvXTtpZih2b2lkIDAhPT1yKXtpZih2b2lkIDAhPT10KXtuPSh0PUFycmF5LmlzQXJyYXkodCk/dC5tYXAoVik6KHQ9Vih0KSlpbiByP1t0XTp0Lm1hdGNoKFIpfHxbXSkubGVuZ3RoO3doaWxlKG4tLSlkZWxldGUgclt0W25dXX0odm9pZCAwPT09dHx8ay5pc0VtcHR5T2JqZWN0KHIpKSYmKGUubm9kZVR5cGU/ZVt0aGlzLmV4cGFuZG9dPXZvaWQgMDpkZWxldGUgZVt0aGlzLmV4cGFuZG9dKX19LGhhc0RhdGE6ZnVuY3Rpb24oZSl7dmFyIHQ9ZVt0aGlzLmV4cGFuZG9dO3JldHVybiB2b2lkIDAhPT10JiYhay5pc0VtcHR5T2JqZWN0KHQpfX07dmFyIFE9bmV3IFksSj1uZXcgWSxLPS9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxaPS9bQS1aXS9nO2Z1bmN0aW9uIGVlKGUsdCxuKXt2YXIgcixpO2lmKHZvaWQgMD09PW4mJjE9PT1lLm5vZGVUeXBlKWlmKHI9XCJkYXRhLVwiK3QucmVwbGFjZShaLFwiLSQmXCIpLnRvTG93ZXJDYXNlKCksXCJzdHJpbmdcIj09dHlwZW9mKG49ZS5nZXRBdHRyaWJ1dGUocikpKXt0cnl7bj1cInRydWVcIj09PShpPW4pfHxcImZhbHNlXCIhPT1pJiYoXCJudWxsXCI9PT1pP251bGw6aT09PStpK1wiXCI/K2k6Sy50ZXN0KGkpP0pTT04ucGFyc2UoaSk6aSl9Y2F0Y2goZSl7fUouc2V0KGUsdCxuKX1lbHNlIG49dm9pZCAwO3JldHVybiBufWsuZXh0ZW5kKHtoYXNEYXRhOmZ1bmN0aW9uKGUpe3JldHVybiBKLmhhc0RhdGEoZSl8fFEuaGFzRGF0YShlKX0sZGF0YTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIEouYWNjZXNzKGUsdCxuKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihlLHQpe0oucmVtb3ZlKGUsdCl9LF9kYXRhOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gUS5hY2Nlc3MoZSx0LG4pfSxfcmVtb3ZlRGF0YTpmdW5jdGlvbihlLHQpe1EucmVtb3ZlKGUsdCl9fSksay5mbi5leHRlbmQoe2RhdGE6ZnVuY3Rpb24obixlKXt2YXIgdCxyLGksbz10aGlzWzBdLGE9byYmby5hdHRyaWJ1dGVzO2lmKHZvaWQgMD09PW4pe2lmKHRoaXMubGVuZ3RoJiYoaT1KLmdldChvKSwxPT09by5ub2RlVHlwZSYmIVEuZ2V0KG8sXCJoYXNEYXRhQXR0cnNcIikpKXt0PWEubGVuZ3RoO3doaWxlKHQtLSlhW3RdJiYwPT09KHI9YVt0XS5uYW1lKS5pbmRleE9mKFwiZGF0YS1cIikmJihyPVYoci5zbGljZSg1KSksZWUobyxyLGlbcl0pKTtRLnNldChvLFwiaGFzRGF0YUF0dHJzXCIsITApfXJldHVybiBpfXJldHVyblwib2JqZWN0XCI9PXR5cGVvZiBuP3RoaXMuZWFjaChmdW5jdGlvbigpe0ouc2V0KHRoaXMsbil9KTpfKHRoaXMsZnVuY3Rpb24oZSl7dmFyIHQ7aWYobyYmdm9pZCAwPT09ZSlyZXR1cm4gdm9pZCAwIT09KHQ9Si5nZXQobyxuKSk/dDp2b2lkIDAhPT0odD1lZShvLG4pKT90OnZvaWQgMDt0aGlzLmVhY2goZnVuY3Rpb24oKXtKLnNldCh0aGlzLG4sZSl9KX0sbnVsbCxlLDE8YXJndW1lbnRzLmxlbmd0aCxudWxsLCEwKX0scmVtb3ZlRGF0YTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7Si5yZW1vdmUodGhpcyxlKX0pfX0pLGsuZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbihlLHQsbil7dmFyIHI7aWYoZSlyZXR1cm4gdD0odHx8XCJmeFwiKStcInF1ZXVlXCIscj1RLmdldChlLHQpLG4mJighcnx8QXJyYXkuaXNBcnJheShuKT9yPVEuYWNjZXNzKGUsdCxrLm1ha2VBcnJheShuKSk6ci5wdXNoKG4pKSxyfHxbXX0sZGVxdWV1ZTpmdW5jdGlvbihlLHQpe3Q9dHx8XCJmeFwiO3ZhciBuPWsucXVldWUoZSx0KSxyPW4ubGVuZ3RoLGk9bi5zaGlmdCgpLG89ay5fcXVldWVIb29rcyhlLHQpO1wiaW5wcm9ncmVzc1wiPT09aSYmKGk9bi5zaGlmdCgpLHItLSksaSYmKFwiZnhcIj09PXQmJm4udW5zaGlmdChcImlucHJvZ3Jlc3NcIiksZGVsZXRlIG8uc3RvcCxpLmNhbGwoZSxmdW5jdGlvbigpe2suZGVxdWV1ZShlLHQpfSxvKSksIXImJm8mJm8uZW1wdHkuZmlyZSgpfSxfcXVldWVIb29rczpmdW5jdGlvbihlLHQpe3ZhciBuPXQrXCJxdWV1ZUhvb2tzXCI7cmV0dXJuIFEuZ2V0KGUsbil8fFEuYWNjZXNzKGUsbix7ZW1wdHk6ay5DYWxsYmFja3MoXCJvbmNlIG1lbW9yeVwiKS5hZGQoZnVuY3Rpb24oKXtRLnJlbW92ZShlLFt0K1wicXVldWVcIixuXSl9KX0pfX0pLGsuZm4uZXh0ZW5kKHtxdWV1ZTpmdW5jdGlvbih0LG4pe3ZhciBlPTI7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIHQmJihuPXQsdD1cImZ4XCIsZS0tKSxhcmd1bWVudHMubGVuZ3RoPGU/ay5xdWV1ZSh0aGlzWzBdLHQpOnZvaWQgMD09PW4/dGhpczp0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT1rLnF1ZXVlKHRoaXMsdCxuKTtrLl9xdWV1ZUhvb2tzKHRoaXMsdCksXCJmeFwiPT09dCYmXCJpbnByb2dyZXNzXCIhPT1lWzBdJiZrLmRlcXVldWUodGhpcyx0KX0pfSxkZXF1ZXVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtrLmRlcXVldWUodGhpcyxlKX0pfSxjbGVhclF1ZXVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnF1ZXVlKGV8fFwiZnhcIixbXSl9LHByb21pc2U6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPTEsaT1rLkRlZmVycmVkKCksbz10aGlzLGE9dGhpcy5sZW5ndGgscz1mdW5jdGlvbigpey0tcnx8aS5yZXNvbHZlV2l0aChvLFtvXSl9O1wic3RyaW5nXCIhPXR5cGVvZiBlJiYodD1lLGU9dm9pZCAwKSxlPWV8fFwiZnhcIjt3aGlsZShhLS0pKG49US5nZXQob1thXSxlK1wicXVldWVIb29rc1wiKSkmJm4uZW1wdHkmJihyKyssbi5lbXB0eS5hZGQocykpO3JldHVybiBzKCksaS5wcm9taXNlKHQpfX0pO3ZhciB0ZT0vWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLy5zb3VyY2UsbmU9bmV3IFJlZ0V4cChcIl4oPzooWystXSk9fCkoXCIrdGUrXCIpKFthLXolXSopJFwiLFwiaVwiKSxyZT1bXCJUb3BcIixcIlJpZ2h0XCIsXCJCb3R0b21cIixcIkxlZnRcIl0saWU9RS5kb2N1bWVudEVsZW1lbnQsb2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGsuY29udGFpbnMoZS5vd25lckRvY3VtZW50LGUpfSxhZT17Y29tcG9zZWQ6ITB9O2llLmdldFJvb3ROb2RlJiYob2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGsuY29udGFpbnMoZS5vd25lckRvY3VtZW50LGUpfHxlLmdldFJvb3ROb2RlKGFlKT09PWUub3duZXJEb2N1bWVudH0pO3ZhciBzZT1mdW5jdGlvbihlLHQpe3JldHVyblwibm9uZVwiPT09KGU9dHx8ZSkuc3R5bGUuZGlzcGxheXx8XCJcIj09PWUuc3R5bGUuZGlzcGxheSYmb2UoZSkmJlwibm9uZVwiPT09ay5jc3MoZSxcImRpc3BsYXlcIil9LHVlPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBpLG8sYT17fTtmb3IobyBpbiB0KWFbb109ZS5zdHlsZVtvXSxlLnN0eWxlW29dPXRbb107Zm9yKG8gaW4gaT1uLmFwcGx5KGUscnx8W10pLHQpZS5zdHlsZVtvXT1hW29dO3JldHVybiBpfTtmdW5jdGlvbiBsZShlLHQsbixyKXt2YXIgaSxvLGE9MjAscz1yP2Z1bmN0aW9uKCl7cmV0dXJuIHIuY3VyKCl9OmZ1bmN0aW9uKCl7cmV0dXJuIGsuY3NzKGUsdCxcIlwiKX0sdT1zKCksbD1uJiZuWzNdfHwoay5jc3NOdW1iZXJbdF0/XCJcIjpcInB4XCIpLGM9ZS5ub2RlVHlwZSYmKGsuY3NzTnVtYmVyW3RdfHxcInB4XCIhPT1sJiYrdSkmJm5lLmV4ZWMoay5jc3MoZSx0KSk7aWYoYyYmY1szXSE9PWwpe3UvPTIsbD1sfHxjWzNdLGM9K3V8fDE7d2hpbGUoYS0tKWsuc3R5bGUoZSx0LGMrbCksKDEtbykqKDEtKG89cygpL3V8fC41KSk8PTAmJihhPTApLGMvPW87Yyo9MixrLnN0eWxlKGUsdCxjK2wpLG49bnx8W119cmV0dXJuIG4mJihjPStjfHwrdXx8MCxpPW5bMV0/YysoblsxXSsxKSpuWzJdOituWzJdLHImJihyLnVuaXQ9bCxyLnN0YXJ0PWMsci5lbmQ9aSkpLGl9dmFyIGNlPXt9O2Z1bmN0aW9uIGZlKGUsdCl7Zm9yKHZhciBuLHIsaSxvLGEscyx1LGw9W10sYz0wLGY9ZS5sZW5ndGg7YzxmO2MrKykocj1lW2NdKS5zdHlsZSYmKG49ci5zdHlsZS5kaXNwbGF5LHQ/KFwibm9uZVwiPT09biYmKGxbY109US5nZXQocixcImRpc3BsYXlcIil8fG51bGwsbFtjXXx8KHIuc3R5bGUuZGlzcGxheT1cIlwiKSksXCJcIj09PXIuc3R5bGUuZGlzcGxheSYmc2UocikmJihsW2NdPSh1PWE9bz12b2lkIDAsYT0oaT1yKS5vd25lckRvY3VtZW50LHM9aS5ub2RlTmFtZSwodT1jZVtzXSl8fChvPWEuYm9keS5hcHBlbmRDaGlsZChhLmNyZWF0ZUVsZW1lbnQocykpLHU9ay5jc3MobyxcImRpc3BsYXlcIiksby5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG8pLFwibm9uZVwiPT09dSYmKHU9XCJibG9ja1wiKSxjZVtzXT11KSkpKTpcIm5vbmVcIiE9PW4mJihsW2NdPVwibm9uZVwiLFEuc2V0KHIsXCJkaXNwbGF5XCIsbikpKTtmb3IoYz0wO2M8ZjtjKyspbnVsbCE9bFtjXSYmKGVbY10uc3R5bGUuZGlzcGxheT1sW2NdKTtyZXR1cm4gZX1rLmZuLmV4dGVuZCh7c2hvdzpmdW5jdGlvbigpe3JldHVybiBmZSh0aGlzLCEwKX0saGlkZTpmdW5jdGlvbigpe3JldHVybiBmZSh0aGlzKX0sdG9nZ2xlOmZ1bmN0aW9uKGUpe3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgZT9lP3RoaXMuc2hvdygpOnRoaXMuaGlkZSgpOnRoaXMuZWFjaChmdW5jdGlvbigpe3NlKHRoaXMpP2sodGhpcykuc2hvdygpOmsodGhpcykuaGlkZSgpfSl9fSk7dmFyIHBlPS9eKD86Y2hlY2tib3h8cmFkaW8pJC9pLGRlPS88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKikvaSxoZT0vXiR8Xm1vZHVsZSR8XFwvKD86amF2YXxlY21hKXNjcmlwdC9pLGdlPXtvcHRpb246WzEsXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsXCI8L3NlbGVjdD5cIl0sdGhlYWQ6WzEsXCI8dGFibGU+XCIsXCI8L3RhYmxlPlwiXSxjb2w6WzIsXCI8dGFibGU+PGNvbGdyb3VwPlwiLFwiPC9jb2xncm91cD48L3RhYmxlPlwiXSx0cjpbMixcIjx0YWJsZT48dGJvZHk+XCIsXCI8L3Rib2R5PjwvdGFibGU+XCJdLHRkOlszLFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsXCI8L3RyPjwvdGJvZHk+PC90YWJsZT5cIl0sX2RlZmF1bHQ6WzAsXCJcIixcIlwiXX07ZnVuY3Rpb24gdmUoZSx0KXt2YXIgbjtyZXR1cm4gbj1cInVuZGVmaW5lZFwiIT10eXBlb2YgZS5nZXRFbGVtZW50c0J5VGFnTmFtZT9lLmdldEVsZW1lbnRzQnlUYWdOYW1lKHR8fFwiKlwiKTpcInVuZGVmaW5lZFwiIT10eXBlb2YgZS5xdWVyeVNlbGVjdG9yQWxsP2UucXVlcnlTZWxlY3RvckFsbCh0fHxcIipcIik6W10sdm9pZCAwPT09dHx8dCYmQShlLHQpP2subWVyZ2UoW2VdLG4pOm59ZnVuY3Rpb24geWUoZSx0KXtmb3IodmFyIG49MCxyPWUubGVuZ3RoO248cjtuKyspUS5zZXQoZVtuXSxcImdsb2JhbEV2YWxcIiwhdHx8US5nZXQodFtuXSxcImdsb2JhbEV2YWxcIikpfWdlLm9wdGdyb3VwPWdlLm9wdGlvbixnZS50Ym9keT1nZS50Zm9vdD1nZS5jb2xncm91cD1nZS5jYXB0aW9uPWdlLnRoZWFkLGdlLnRoPWdlLnRkO3ZhciBtZSx4ZSxiZT0vPHwmIz9cXHcrOy87ZnVuY3Rpb24gd2UoZSx0LG4scixpKXtmb3IodmFyIG8sYSxzLHUsbCxjLGY9dC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscD1bXSxkPTAsaD1lLmxlbmd0aDtkPGg7ZCsrKWlmKChvPWVbZF0pfHwwPT09bylpZihcIm9iamVjdFwiPT09dyhvKSlrLm1lcmdlKHAsby5ub2RlVHlwZT9bb106byk7ZWxzZSBpZihiZS50ZXN0KG8pKXthPWF8fGYuYXBwZW5kQ2hpbGQodC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKSxzPShkZS5leGVjKG8pfHxbXCJcIixcIlwiXSlbMV0udG9Mb3dlckNhc2UoKSx1PWdlW3NdfHxnZS5fZGVmYXVsdCxhLmlubmVySFRNTD11WzFdK2suaHRtbFByZWZpbHRlcihvKSt1WzJdLGM9dVswXTt3aGlsZShjLS0pYT1hLmxhc3RDaGlsZDtrLm1lcmdlKHAsYS5jaGlsZE5vZGVzKSwoYT1mLmZpcnN0Q2hpbGQpLnRleHRDb250ZW50PVwiXCJ9ZWxzZSBwLnB1c2godC5jcmVhdGVUZXh0Tm9kZShvKSk7Zi50ZXh0Q29udGVudD1cIlwiLGQ9MDt3aGlsZShvPXBbZCsrXSlpZihyJiYtMTxrLmluQXJyYXkobyxyKSlpJiZpLnB1c2gobyk7ZWxzZSBpZihsPW9lKG8pLGE9dmUoZi5hcHBlbmRDaGlsZChvKSxcInNjcmlwdFwiKSxsJiZ5ZShhKSxuKXtjPTA7d2hpbGUobz1hW2MrK10paGUudGVzdChvLnR5cGV8fFwiXCIpJiZuLnB1c2gobyl9cmV0dXJuIGZ9bWU9RS5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkuYXBwZW5kQ2hpbGQoRS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpKSwoeGU9RS5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIikpLnNldEF0dHJpYnV0ZShcInR5cGVcIixcInJhZGlvXCIpLHhlLnNldEF0dHJpYnV0ZShcImNoZWNrZWRcIixcImNoZWNrZWRcIikseGUuc2V0QXR0cmlidXRlKFwibmFtZVwiLFwidFwiKSxtZS5hcHBlbmRDaGlsZCh4ZSkseS5jaGVja0Nsb25lPW1lLmNsb25lTm9kZSghMCkuY2xvbmVOb2RlKCEwKS5sYXN0Q2hpbGQuY2hlY2tlZCxtZS5pbm5lckhUTUw9XCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCIseS5ub0Nsb25lQ2hlY2tlZD0hIW1lLmNsb25lTm9kZSghMCkubGFzdENoaWxkLmRlZmF1bHRWYWx1ZTt2YXIgVGU9L15rZXkvLENlPS9eKD86bW91c2V8cG9pbnRlcnxjb250ZXh0bWVudXxkcmFnfGRyb3ApfGNsaWNrLyxFZT0vXihbXi5dKikoPzpcXC4oLispfCkvO2Z1bmN0aW9uIGtlKCl7cmV0dXJuITB9ZnVuY3Rpb24gU2UoKXtyZXR1cm4hMX1mdW5jdGlvbiBOZShlLHQpe3JldHVybiBlPT09ZnVuY3Rpb24oKXt0cnl7cmV0dXJuIEUuYWN0aXZlRWxlbWVudH1jYXRjaChlKXt9fSgpPT0oXCJmb2N1c1wiPT09dCl9ZnVuY3Rpb24gQWUoZSx0LG4scixpLG8pe3ZhciBhLHM7aWYoXCJvYmplY3RcIj09dHlwZW9mIHQpe2ZvcihzIGluXCJzdHJpbmdcIiE9dHlwZW9mIG4mJihyPXJ8fG4sbj12b2lkIDApLHQpQWUoZSxzLG4scix0W3NdLG8pO3JldHVybiBlfWlmKG51bGw9PXImJm51bGw9PWk/KGk9bixyPW49dm9pZCAwKTpudWxsPT1pJiYoXCJzdHJpbmdcIj09dHlwZW9mIG4/KGk9cixyPXZvaWQgMCk6KGk9cixyPW4sbj12b2lkIDApKSwhMT09PWkpaT1TZTtlbHNlIGlmKCFpKXJldHVybiBlO3JldHVybiAxPT09byYmKGE9aSwoaT1mdW5jdGlvbihlKXtyZXR1cm4gaygpLm9mZihlKSxhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLmd1aWQ9YS5ndWlkfHwoYS5ndWlkPWsuZ3VpZCsrKSksZS5lYWNoKGZ1bmN0aW9uKCl7ay5ldmVudC5hZGQodGhpcyx0LGkscixuKX0pfWZ1bmN0aW9uIERlKGUsaSxvKXtvPyhRLnNldChlLGksITEpLGsuZXZlbnQuYWRkKGUsaSx7bmFtZXNwYWNlOiExLGhhbmRsZXI6ZnVuY3Rpb24oZSl7dmFyIHQsbixyPVEuZ2V0KHRoaXMsaSk7aWYoMSZlLmlzVHJpZ2dlciYmdGhpc1tpXSl7aWYoci5sZW5ndGgpKGsuZXZlbnQuc3BlY2lhbFtpXXx8e30pLmRlbGVnYXRlVHlwZSYmZS5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKHI9cy5jYWxsKGFyZ3VtZW50cyksUS5zZXQodGhpcyxpLHIpLHQ9byh0aGlzLGkpLHRoaXNbaV0oKSxyIT09KG49US5nZXQodGhpcyxpKSl8fHQ/US5zZXQodGhpcyxpLCExKTpuPXt9LHIhPT1uKXJldHVybiBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLGUucHJldmVudERlZmF1bHQoKSxuLnZhbHVlfWVsc2Ugci5sZW5ndGgmJihRLnNldCh0aGlzLGkse3ZhbHVlOmsuZXZlbnQudHJpZ2dlcihrLmV4dGVuZChyWzBdLGsuRXZlbnQucHJvdG90eXBlKSxyLnNsaWNlKDEpLHRoaXMpfSksZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKSl9fSkpOnZvaWQgMD09PVEuZ2V0KGUsaSkmJmsuZXZlbnQuYWRkKGUsaSxrZSl9ay5ldmVudD17Z2xvYmFsOnt9LGFkZDpmdW5jdGlvbih0LGUsbixyLGkpe3ZhciBvLGEscyx1LGwsYyxmLHAsZCxoLGcsdj1RLmdldCh0KTtpZih2KXtuLmhhbmRsZXImJihuPShvPW4pLmhhbmRsZXIsaT1vLnNlbGVjdG9yKSxpJiZrLmZpbmQubWF0Y2hlc1NlbGVjdG9yKGllLGkpLG4uZ3VpZHx8KG4uZ3VpZD1rLmd1aWQrKyksKHU9di5ldmVudHMpfHwodT12LmV2ZW50cz17fSksKGE9di5oYW5kbGUpfHwoYT12LmhhbmRsZT1mdW5jdGlvbihlKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgayYmay5ldmVudC50cmlnZ2VyZWQhPT1lLnR5cGU/ay5ldmVudC5kaXNwYXRjaC5hcHBseSh0LGFyZ3VtZW50cyk6dm9pZCAwfSksbD0oZT0oZXx8XCJcIikubWF0Y2goUil8fFtcIlwiXSkubGVuZ3RoO3doaWxlKGwtLSlkPWc9KHM9RWUuZXhlYyhlW2xdKXx8W10pWzFdLGg9KHNbMl18fFwiXCIpLnNwbGl0KFwiLlwiKS5zb3J0KCksZCYmKGY9ay5ldmVudC5zcGVjaWFsW2RdfHx7fSxkPShpP2YuZGVsZWdhdGVUeXBlOmYuYmluZFR5cGUpfHxkLGY9ay5ldmVudC5zcGVjaWFsW2RdfHx7fSxjPWsuZXh0ZW5kKHt0eXBlOmQsb3JpZ1R5cGU6ZyxkYXRhOnIsaGFuZGxlcjpuLGd1aWQ6bi5ndWlkLHNlbGVjdG9yOmksbmVlZHNDb250ZXh0OmkmJmsuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdChpKSxuYW1lc3BhY2U6aC5qb2luKFwiLlwiKX0sbyksKHA9dVtkXSl8fCgocD11W2RdPVtdKS5kZWxlZ2F0ZUNvdW50PTAsZi5zZXR1cCYmITEhPT1mLnNldHVwLmNhbGwodCxyLGgsYSl8fHQuYWRkRXZlbnRMaXN0ZW5lciYmdC5hZGRFdmVudExpc3RlbmVyKGQsYSkpLGYuYWRkJiYoZi5hZGQuY2FsbCh0LGMpLGMuaGFuZGxlci5ndWlkfHwoYy5oYW5kbGVyLmd1aWQ9bi5ndWlkKSksaT9wLnNwbGljZShwLmRlbGVnYXRlQ291bnQrKywwLGMpOnAucHVzaChjKSxrLmV2ZW50Lmdsb2JhbFtkXT0hMCl9fSxyZW1vdmU6ZnVuY3Rpb24oZSx0LG4scixpKXt2YXIgbyxhLHMsdSxsLGMsZixwLGQsaCxnLHY9US5oYXNEYXRhKGUpJiZRLmdldChlKTtpZih2JiYodT12LmV2ZW50cykpe2w9KHQ9KHR8fFwiXCIpLm1hdGNoKFIpfHxbXCJcIl0pLmxlbmd0aDt3aGlsZShsLS0paWYoZD1nPShzPUVlLmV4ZWModFtsXSl8fFtdKVsxXSxoPShzWzJdfHxcIlwiKS5zcGxpdChcIi5cIikuc29ydCgpLGQpe2Y9ay5ldmVudC5zcGVjaWFsW2RdfHx7fSxwPXVbZD0ocj9mLmRlbGVnYXRlVHlwZTpmLmJpbmRUeXBlKXx8ZF18fFtdLHM9c1syXSYmbmV3IFJlZ0V4cChcIihefFxcXFwuKVwiK2guam9pbihcIlxcXFwuKD86LipcXFxcLnwpXCIpK1wiKFxcXFwufCQpXCIpLGE9bz1wLmxlbmd0aDt3aGlsZShvLS0pYz1wW29dLCFpJiZnIT09Yy5vcmlnVHlwZXx8biYmbi5ndWlkIT09Yy5ndWlkfHxzJiYhcy50ZXN0KGMubmFtZXNwYWNlKXx8ciYmciE9PWMuc2VsZWN0b3ImJihcIioqXCIhPT1yfHwhYy5zZWxlY3Rvcil8fChwLnNwbGljZShvLDEpLGMuc2VsZWN0b3ImJnAuZGVsZWdhdGVDb3VudC0tLGYucmVtb3ZlJiZmLnJlbW92ZS5jYWxsKGUsYykpO2EmJiFwLmxlbmd0aCYmKGYudGVhcmRvd24mJiExIT09Zi50ZWFyZG93bi5jYWxsKGUsaCx2LmhhbmRsZSl8fGsucmVtb3ZlRXZlbnQoZSxkLHYuaGFuZGxlKSxkZWxldGUgdVtkXSl9ZWxzZSBmb3IoZCBpbiB1KWsuZXZlbnQucmVtb3ZlKGUsZCt0W2xdLG4sciwhMCk7ay5pc0VtcHR5T2JqZWN0KHUpJiZRLnJlbW92ZShlLFwiaGFuZGxlIGV2ZW50c1wiKX19LGRpc3BhdGNoOmZ1bmN0aW9uKGUpe3ZhciB0LG4scixpLG8sYSxzPWsuZXZlbnQuZml4KGUpLHU9bmV3IEFycmF5KGFyZ3VtZW50cy5sZW5ndGgpLGw9KFEuZ2V0KHRoaXMsXCJldmVudHNcIil8fHt9KVtzLnR5cGVdfHxbXSxjPWsuZXZlbnQuc3BlY2lhbFtzLnR5cGVdfHx7fTtmb3IodVswXT1zLHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXVbdF09YXJndW1lbnRzW3RdO2lmKHMuZGVsZWdhdGVUYXJnZXQ9dGhpcywhYy5wcmVEaXNwYXRjaHx8ITEhPT1jLnByZURpc3BhdGNoLmNhbGwodGhpcyxzKSl7YT1rLmV2ZW50LmhhbmRsZXJzLmNhbGwodGhpcyxzLGwpLHQ9MDt3aGlsZSgoaT1hW3QrK10pJiYhcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKXtzLmN1cnJlbnRUYXJnZXQ9aS5lbGVtLG49MDt3aGlsZSgobz1pLmhhbmRsZXJzW24rK10pJiYhcy5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpKXMucm5hbWVzcGFjZSYmITEhPT1vLm5hbWVzcGFjZSYmIXMucm5hbWVzcGFjZS50ZXN0KG8ubmFtZXNwYWNlKXx8KHMuaGFuZGxlT2JqPW8scy5kYXRhPW8uZGF0YSx2b2lkIDAhPT0ocj0oKGsuZXZlbnQuc3BlY2lhbFtvLm9yaWdUeXBlXXx8e30pLmhhbmRsZXx8by5oYW5kbGVyKS5hcHBseShpLmVsZW0sdSkpJiYhMT09PShzLnJlc3VsdD1yKSYmKHMucHJldmVudERlZmF1bHQoKSxzLnN0b3BQcm9wYWdhdGlvbigpKSl9cmV0dXJuIGMucG9zdERpc3BhdGNoJiZjLnBvc3REaXNwYXRjaC5jYWxsKHRoaXMscykscy5yZXN1bHR9fSxoYW5kbGVyczpmdW5jdGlvbihlLHQpe3ZhciBuLHIsaSxvLGEscz1bXSx1PXQuZGVsZWdhdGVDb3VudCxsPWUudGFyZ2V0O2lmKHUmJmwubm9kZVR5cGUmJiEoXCJjbGlja1wiPT09ZS50eXBlJiYxPD1lLmJ1dHRvbikpZm9yKDtsIT09dGhpcztsPWwucGFyZW50Tm9kZXx8dGhpcylpZigxPT09bC5ub2RlVHlwZSYmKFwiY2xpY2tcIiE9PWUudHlwZXx8ITAhPT1sLmRpc2FibGVkKSl7Zm9yKG89W10sYT17fSxuPTA7bjx1O24rKyl2b2lkIDA9PT1hW2k9KHI9dFtuXSkuc2VsZWN0b3IrXCIgXCJdJiYoYVtpXT1yLm5lZWRzQ29udGV4dD8tMTxrKGksdGhpcykuaW5kZXgobCk6ay5maW5kKGksdGhpcyxudWxsLFtsXSkubGVuZ3RoKSxhW2ldJiZvLnB1c2gocik7by5sZW5ndGgmJnMucHVzaCh7ZWxlbTpsLGhhbmRsZXJzOm99KX1yZXR1cm4gbD10aGlzLHU8dC5sZW5ndGgmJnMucHVzaCh7ZWxlbTpsLGhhbmRsZXJzOnQuc2xpY2UodSl9KSxzfSxhZGRQcm9wOmZ1bmN0aW9uKHQsZSl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGsuRXZlbnQucHJvdG90eXBlLHQse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLGdldDptKGUpP2Z1bmN0aW9uKCl7aWYodGhpcy5vcmlnaW5hbEV2ZW50KXJldHVybiBlKHRoaXMub3JpZ2luYWxFdmVudCl9OmZ1bmN0aW9uKCl7aWYodGhpcy5vcmlnaW5hbEV2ZW50KXJldHVybiB0aGlzLm9yaWdpbmFsRXZlbnRbdF19LHNldDpmdW5jdGlvbihlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyx0LHtlbnVtZXJhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTplfSl9fSl9LGZpeDpmdW5jdGlvbihlKXtyZXR1cm4gZVtrLmV4cGFuZG9dP2U6bmV3IGsuRXZlbnQoZSl9LHNwZWNpYWw6e2xvYWQ6e25vQnViYmxlOiEwfSxjbGljazp7c2V0dXA6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpc3x8ZTtyZXR1cm4gcGUudGVzdCh0LnR5cGUpJiZ0LmNsaWNrJiZBKHQsXCJpbnB1dFwiKSYmRGUodCxcImNsaWNrXCIsa2UpLCExfSx0cmlnZ2VyOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXN8fGU7cmV0dXJuIHBlLnRlc3QodC50eXBlKSYmdC5jbGljayYmQSh0LFwiaW5wdXRcIikmJkRlKHQsXCJjbGlja1wiKSwhMH0sX2RlZmF1bHQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS50YXJnZXQ7cmV0dXJuIHBlLnRlc3QodC50eXBlKSYmdC5jbGljayYmQSh0LFwiaW5wdXRcIikmJlEuZ2V0KHQsXCJjbGlja1wiKXx8QSh0LFwiYVwiKX19LGJlZm9yZXVubG9hZDp7cG9zdERpc3BhdGNoOmZ1bmN0aW9uKGUpe3ZvaWQgMCE9PWUucmVzdWx0JiZlLm9yaWdpbmFsRXZlbnQmJihlLm9yaWdpbmFsRXZlbnQucmV0dXJuVmFsdWU9ZS5yZXN1bHQpfX19fSxrLnJlbW92ZUV2ZW50PWZ1bmN0aW9uKGUsdCxuKXtlLnJlbW92ZUV2ZW50TGlzdGVuZXImJmUucmVtb3ZlRXZlbnRMaXN0ZW5lcih0LG4pfSxrLkV2ZW50PWZ1bmN0aW9uKGUsdCl7aWYoISh0aGlzIGluc3RhbmNlb2Ygay5FdmVudCkpcmV0dXJuIG5ldyBrLkV2ZW50KGUsdCk7ZSYmZS50eXBlPyh0aGlzLm9yaWdpbmFsRXZlbnQ9ZSx0aGlzLnR5cGU9ZS50eXBlLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPWUuZGVmYXVsdFByZXZlbnRlZHx8dm9pZCAwPT09ZS5kZWZhdWx0UHJldmVudGVkJiYhMT09PWUucmV0dXJuVmFsdWU/a2U6U2UsdGhpcy50YXJnZXQ9ZS50YXJnZXQmJjM9PT1lLnRhcmdldC5ub2RlVHlwZT9lLnRhcmdldC5wYXJlbnROb2RlOmUudGFyZ2V0LHRoaXMuY3VycmVudFRhcmdldD1lLmN1cnJlbnRUYXJnZXQsdGhpcy5yZWxhdGVkVGFyZ2V0PWUucmVsYXRlZFRhcmdldCk6dGhpcy50eXBlPWUsdCYmay5leHRlbmQodGhpcyx0KSx0aGlzLnRpbWVTdGFtcD1lJiZlLnRpbWVTdGFtcHx8RGF0ZS5ub3coKSx0aGlzW2suZXhwYW5kb109ITB9LGsuRXZlbnQucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjprLkV2ZW50LGlzRGVmYXVsdFByZXZlbnRlZDpTZSxpc1Byb3BhZ2F0aW9uU3RvcHBlZDpTZSxpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDpTZSxpc1NpbXVsYXRlZDohMSxwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3JpZ2luYWxFdmVudDt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1rZSxlJiYhdGhpcy5pc1NpbXVsYXRlZCYmZS5wcmV2ZW50RGVmYXVsdCgpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9yaWdpbmFsRXZlbnQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1rZSxlJiYhdGhpcy5pc1NpbXVsYXRlZCYmZS5zdG9wUHJvcGFnYXRpb24oKX0sc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcmlnaW5hbEV2ZW50O3RoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ9a2UsZSYmIXRoaXMuaXNTaW11bGF0ZWQmJmUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCksdGhpcy5zdG9wUHJvcGFnYXRpb24oKX19LGsuZWFjaCh7YWx0S2V5OiEwLGJ1YmJsZXM6ITAsY2FuY2VsYWJsZTohMCxjaGFuZ2VkVG91Y2hlczohMCxjdHJsS2V5OiEwLGRldGFpbDohMCxldmVudFBoYXNlOiEwLG1ldGFLZXk6ITAscGFnZVg6ITAscGFnZVk6ITAsc2hpZnRLZXk6ITAsdmlldzohMCxcImNoYXJcIjohMCxjb2RlOiEwLGNoYXJDb2RlOiEwLGtleTohMCxrZXlDb2RlOiEwLGJ1dHRvbjohMCxidXR0b25zOiEwLGNsaWVudFg6ITAsY2xpZW50WTohMCxvZmZzZXRYOiEwLG9mZnNldFk6ITAscG9pbnRlcklkOiEwLHBvaW50ZXJUeXBlOiEwLHNjcmVlblg6ITAsc2NyZWVuWTohMCx0YXJnZXRUb3VjaGVzOiEwLHRvRWxlbWVudDohMCx0b3VjaGVzOiEwLHdoaWNoOmZ1bmN0aW9uKGUpe3ZhciB0PWUuYnV0dG9uO3JldHVybiBudWxsPT1lLndoaWNoJiZUZS50ZXN0KGUudHlwZSk/bnVsbCE9ZS5jaGFyQ29kZT9lLmNoYXJDb2RlOmUua2V5Q29kZTohZS53aGljaCYmdm9pZCAwIT09dCYmQ2UudGVzdChlLnR5cGUpPzEmdD8xOjImdD8zOjQmdD8yOjA6ZS53aGljaH19LGsuZXZlbnQuYWRkUHJvcCksay5lYWNoKHtmb2N1czpcImZvY3VzaW5cIixibHVyOlwiZm9jdXNvdXRcIn0sZnVuY3Rpb24oZSx0KXtrLmV2ZW50LnNwZWNpYWxbZV09e3NldHVwOmZ1bmN0aW9uKCl7cmV0dXJuIERlKHRoaXMsZSxOZSksITF9LHRyaWdnZXI6ZnVuY3Rpb24oKXtyZXR1cm4gRGUodGhpcyxlKSwhMH0sZGVsZWdhdGVUeXBlOnR9fSksay5lYWNoKHttb3VzZWVudGVyOlwibW91c2VvdmVyXCIsbW91c2VsZWF2ZTpcIm1vdXNlb3V0XCIscG9pbnRlcmVudGVyOlwicG9pbnRlcm92ZXJcIixwb2ludGVybGVhdmU6XCJwb2ludGVyb3V0XCJ9LGZ1bmN0aW9uKGUsaSl7ay5ldmVudC5zcGVjaWFsW2VdPXtkZWxlZ2F0ZVR5cGU6aSxiaW5kVHlwZTppLGhhbmRsZTpmdW5jdGlvbihlKXt2YXIgdCxuPWUucmVsYXRlZFRhcmdldCxyPWUuaGFuZGxlT2JqO3JldHVybiBuJiYobj09PXRoaXN8fGsuY29udGFpbnModGhpcyxuKSl8fChlLnR5cGU9ci5vcmlnVHlwZSx0PXIuaGFuZGxlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksZS50eXBlPWkpLHR9fX0pLGsuZm4uZXh0ZW5kKHtvbjpmdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gQWUodGhpcyxlLHQsbixyKX0sb25lOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiBBZSh0aGlzLGUsdCxuLHIsMSl9LG9mZjpmdW5jdGlvbihlLHQsbil7dmFyIHIsaTtpZihlJiZlLnByZXZlbnREZWZhdWx0JiZlLmhhbmRsZU9iailyZXR1cm4gcj1lLmhhbmRsZU9iaixrKGUuZGVsZWdhdGVUYXJnZXQpLm9mZihyLm5hbWVzcGFjZT9yLm9yaWdUeXBlK1wiLlwiK3IubmFtZXNwYWNlOnIub3JpZ1R5cGUsci5zZWxlY3RvcixyLmhhbmRsZXIpLHRoaXM7aWYoXCJvYmplY3RcIj09dHlwZW9mIGUpe2ZvcihpIGluIGUpdGhpcy5vZmYoaSx0LGVbaV0pO3JldHVybiB0aGlzfXJldHVybiExIT09dCYmXCJmdW5jdGlvblwiIT10eXBlb2YgdHx8KG49dCx0PXZvaWQgMCksITE9PT1uJiYobj1TZSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7ay5ldmVudC5yZW1vdmUodGhpcyxlLG4sdCl9KX19KTt2YXIgamU9LzwoPyFhcmVhfGJyfGNvbHxlbWJlZHxocnxpbWd8aW5wdXR8bGlua3xtZXRhfHBhcmFtKSgoW2Etel1bXlxcL1xcMD5cXHgyMFxcdFxcclxcblxcZl0qKVtePl0qKVxcLz4vZ2kscWU9LzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksTGU9L2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxIZT0vXlxccyo8ISg/OlxcW0NEQVRBXFxbfC0tKXwoPzpcXF1cXF18LS0pPlxccyokL2c7ZnVuY3Rpb24gT2UoZSx0KXtyZXR1cm4gQShlLFwidGFibGVcIikmJkEoMTEhPT10Lm5vZGVUeXBlP3Q6dC5maXJzdENoaWxkLFwidHJcIikmJmsoZSkuY2hpbGRyZW4oXCJ0Ym9keVwiKVswXXx8ZX1mdW5jdGlvbiBQZShlKXtyZXR1cm4gZS50eXBlPShudWxsIT09ZS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKStcIi9cIitlLnR5cGUsZX1mdW5jdGlvbiBSZShlKXtyZXR1cm5cInRydWUvXCI9PT0oZS50eXBlfHxcIlwiKS5zbGljZSgwLDUpP2UudHlwZT1lLnR5cGUuc2xpY2UoNSk6ZS5yZW1vdmVBdHRyaWJ1dGUoXCJ0eXBlXCIpLGV9ZnVuY3Rpb24gTWUoZSx0KXt2YXIgbixyLGksbyxhLHMsdSxsO2lmKDE9PT10Lm5vZGVUeXBlKXtpZihRLmhhc0RhdGEoZSkmJihvPVEuYWNjZXNzKGUpLGE9US5zZXQodCxvKSxsPW8uZXZlbnRzKSlmb3IoaSBpbiBkZWxldGUgYS5oYW5kbGUsYS5ldmVudHM9e30sbClmb3Iobj0wLHI9bFtpXS5sZW5ndGg7bjxyO24rKylrLmV2ZW50LmFkZCh0LGksbFtpXVtuXSk7Si5oYXNEYXRhKGUpJiYocz1KLmFjY2VzcyhlKSx1PWsuZXh0ZW5kKHt9LHMpLEouc2V0KHQsdSkpfX1mdW5jdGlvbiBJZShuLHIsaSxvKXtyPWcuYXBwbHkoW10scik7dmFyIGUsdCxhLHMsdSxsLGM9MCxmPW4ubGVuZ3RoLHA9Zi0xLGQ9clswXSxoPW0oZCk7aWYoaHx8MTxmJiZcInN0cmluZ1wiPT10eXBlb2YgZCYmIXkuY2hlY2tDbG9uZSYmTGUudGVzdChkKSlyZXR1cm4gbi5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0PW4uZXEoZSk7aCYmKHJbMF09ZC5jYWxsKHRoaXMsZSx0Lmh0bWwoKSkpLEllKHQscixpLG8pfSk7aWYoZiYmKHQ9KGU9d2UocixuWzBdLm93bmVyRG9jdW1lbnQsITEsbixvKSkuZmlyc3RDaGlsZCwxPT09ZS5jaGlsZE5vZGVzLmxlbmd0aCYmKGU9dCksdHx8bykpe2ZvcihzPShhPWsubWFwKHZlKGUsXCJzY3JpcHRcIiksUGUpKS5sZW5ndGg7YzxmO2MrKyl1PWUsYyE9PXAmJih1PWsuY2xvbmUodSwhMCwhMCkscyYmay5tZXJnZShhLHZlKHUsXCJzY3JpcHRcIikpKSxpLmNhbGwobltjXSx1LGMpO2lmKHMpZm9yKGw9YVthLmxlbmd0aC0xXS5vd25lckRvY3VtZW50LGsubWFwKGEsUmUpLGM9MDtjPHM7YysrKXU9YVtjXSxoZS50ZXN0KHUudHlwZXx8XCJcIikmJiFRLmFjY2Vzcyh1LFwiZ2xvYmFsRXZhbFwiKSYmay5jb250YWlucyhsLHUpJiYodS5zcmMmJlwibW9kdWxlXCIhPT0odS50eXBlfHxcIlwiKS50b0xvd2VyQ2FzZSgpP2suX2V2YWxVcmwmJiF1Lm5vTW9kdWxlJiZrLl9ldmFsVXJsKHUuc3JjLHtub25jZTp1Lm5vbmNlfHx1LmdldEF0dHJpYnV0ZShcIm5vbmNlXCIpfSk6Yih1LnRleHRDb250ZW50LnJlcGxhY2UoSGUsXCJcIiksdSxsKSl9cmV0dXJuIG59ZnVuY3Rpb24gV2UoZSx0LG4pe2Zvcih2YXIgcixpPXQ/ay5maWx0ZXIodCxlKTplLG89MDtudWxsIT0ocj1pW29dKTtvKyspbnx8MSE9PXIubm9kZVR5cGV8fGsuY2xlYW5EYXRhKHZlKHIpKSxyLnBhcmVudE5vZGUmJihuJiZvZShyKSYmeWUodmUocixcInNjcmlwdFwiKSksci5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHIpKTtyZXR1cm4gZX1rLmV4dGVuZCh7aHRtbFByZWZpbHRlcjpmdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKGplLFwiPCQxPjwvJDI+XCIpfSxjbG9uZTpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEscyx1LGwsYz1lLmNsb25lTm9kZSghMCksZj1vZShlKTtpZighKHkubm9DbG9uZUNoZWNrZWR8fDEhPT1lLm5vZGVUeXBlJiYxMSE9PWUubm9kZVR5cGV8fGsuaXNYTUxEb2MoZSkpKWZvcihhPXZlKGMpLHI9MCxpPShvPXZlKGUpKS5sZW5ndGg7cjxpO3IrKylzPW9bcl0sdT1hW3JdLHZvaWQgMCxcImlucHV0XCI9PT0obD11Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpJiZwZS50ZXN0KHMudHlwZSk/dS5jaGVja2VkPXMuY2hlY2tlZDpcImlucHV0XCIhPT1sJiZcInRleHRhcmVhXCIhPT1sfHwodS5kZWZhdWx0VmFsdWU9cy5kZWZhdWx0VmFsdWUpO2lmKHQpaWYobilmb3Iobz1vfHx2ZShlKSxhPWF8fHZlKGMpLHI9MCxpPW8ubGVuZ3RoO3I8aTtyKyspTWUob1tyXSxhW3JdKTtlbHNlIE1lKGUsYyk7cmV0dXJuIDA8KGE9dmUoYyxcInNjcmlwdFwiKSkubGVuZ3RoJiZ5ZShhLCFmJiZ2ZShlLFwic2NyaXB0XCIpKSxjfSxjbGVhbkRhdGE6ZnVuY3Rpb24oZSl7Zm9yKHZhciB0LG4scixpPWsuZXZlbnQuc3BlY2lhbCxvPTA7dm9pZCAwIT09KG49ZVtvXSk7bysrKWlmKEcobikpe2lmKHQ9bltRLmV4cGFuZG9dKXtpZih0LmV2ZW50cylmb3IociBpbiB0LmV2ZW50cylpW3JdP2suZXZlbnQucmVtb3ZlKG4scik6ay5yZW1vdmVFdmVudChuLHIsdC5oYW5kbGUpO25bUS5leHBhbmRvXT12b2lkIDB9bltKLmV4cGFuZG9dJiYobltKLmV4cGFuZG9dPXZvaWQgMCl9fX0pLGsuZm4uZXh0ZW5kKHtkZXRhY2g6ZnVuY3Rpb24oZSl7cmV0dXJuIFdlKHRoaXMsZSwhMCl9LHJlbW92ZTpmdW5jdGlvbihlKXtyZXR1cm4gV2UodGhpcyxlKX0sdGV4dDpmdW5jdGlvbihlKXtyZXR1cm4gXyh0aGlzLGZ1bmN0aW9uKGUpe3JldHVybiB2b2lkIDA9PT1lP2sudGV4dCh0aGlzKTp0aGlzLmVtcHR5KCkuZWFjaChmdW5jdGlvbigpezEhPT10aGlzLm5vZGVUeXBlJiYxMSE9PXRoaXMubm9kZVR5cGUmJjkhPT10aGlzLm5vZGVUeXBlfHwodGhpcy50ZXh0Q29udGVudD1lKX0pfSxudWxsLGUsYXJndW1lbnRzLmxlbmd0aCl9LGFwcGVuZDpmdW5jdGlvbigpe3JldHVybiBJZSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlKXsxIT09dGhpcy5ub2RlVHlwZSYmMTEhPT10aGlzLm5vZGVUeXBlJiY5IT09dGhpcy5ub2RlVHlwZXx8T2UodGhpcyxlKS5hcHBlbmRDaGlsZChlKX0pfSxwcmVwZW5kOmZ1bmN0aW9uKCl7cmV0dXJuIEllKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGUpe2lmKDE9PT10aGlzLm5vZGVUeXBlfHwxMT09PXRoaXMubm9kZVR5cGV8fDk9PT10aGlzLm5vZGVUeXBlKXt2YXIgdD1PZSh0aGlzLGUpO3QuaW5zZXJ0QmVmb3JlKGUsdC5maXJzdENoaWxkKX19KX0sYmVmb3JlOmZ1bmN0aW9uKCl7cmV0dXJuIEllKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGUpe3RoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlLHRoaXMpfSl9LGFmdGVyOmZ1bmN0aW9uKCl7cmV0dXJuIEllKHRoaXMsYXJndW1lbnRzLGZ1bmN0aW9uKGUpe3RoaXMucGFyZW50Tm9kZSYmdGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShlLHRoaXMubmV4dFNpYmxpbmcpfSl9LGVtcHR5OmZ1bmN0aW9uKCl7Zm9yKHZhciBlLHQ9MDtudWxsIT0oZT10aGlzW3RdKTt0KyspMT09PWUubm9kZVR5cGUmJihrLmNsZWFuRGF0YSh2ZShlLCExKSksZS50ZXh0Q29udGVudD1cIlwiKTtyZXR1cm4gdGhpc30sY2xvbmU6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1udWxsIT1lJiZlLHQ9bnVsbD09dD9lOnQsdGhpcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gay5jbG9uZSh0aGlzLGUsdCl9KX0saHRtbDpmdW5jdGlvbihlKXtyZXR1cm4gXyh0aGlzLGZ1bmN0aW9uKGUpe3ZhciB0PXRoaXNbMF18fHt9LG49MCxyPXRoaXMubGVuZ3RoO2lmKHZvaWQgMD09PWUmJjE9PT10Lm5vZGVUeXBlKXJldHVybiB0LmlubmVySFRNTDtpZihcInN0cmluZ1wiPT10eXBlb2YgZSYmIXFlLnRlc3QoZSkmJiFnZVsoZGUuZXhlYyhlKXx8W1wiXCIsXCJcIl0pWzFdLnRvTG93ZXJDYXNlKCldKXtlPWsuaHRtbFByZWZpbHRlcihlKTt0cnl7Zm9yKDtuPHI7bisrKTE9PT0odD10aGlzW25dfHx7fSkubm9kZVR5cGUmJihrLmNsZWFuRGF0YSh2ZSh0LCExKSksdC5pbm5lckhUTUw9ZSk7dD0wfWNhdGNoKGUpe319dCYmdGhpcy5lbXB0eSgpLmFwcGVuZChlKX0sbnVsbCxlLGFyZ3VtZW50cy5sZW5ndGgpfSxyZXBsYWNlV2l0aDpmdW5jdGlvbigpe3ZhciBuPVtdO3JldHVybiBJZSh0aGlzLGFyZ3VtZW50cyxmdW5jdGlvbihlKXt2YXIgdD10aGlzLnBhcmVudE5vZGU7ay5pbkFycmF5KHRoaXMsbik8MCYmKGsuY2xlYW5EYXRhKHZlKHRoaXMpKSx0JiZ0LnJlcGxhY2VDaGlsZChlLHRoaXMpKX0sbil9fSksay5lYWNoKHthcHBlbmRUbzpcImFwcGVuZFwiLHByZXBlbmRUbzpcInByZXBlbmRcIixpbnNlcnRCZWZvcmU6XCJiZWZvcmVcIixpbnNlcnRBZnRlcjpcImFmdGVyXCIscmVwbGFjZUFsbDpcInJlcGxhY2VXaXRoXCJ9LGZ1bmN0aW9uKGUsYSl7ay5mbltlXT1mdW5jdGlvbihlKXtmb3IodmFyIHQsbj1bXSxyPWsoZSksaT1yLmxlbmd0aC0xLG89MDtvPD1pO28rKyl0PW89PT1pP3RoaXM6dGhpcy5jbG9uZSghMCksayhyW29dKVthXSh0KSx1LmFwcGx5KG4sdC5nZXQoKSk7cmV0dXJuIHRoaXMucHVzaFN0YWNrKG4pfX0pO3ZhciAkZT1uZXcgUmVnRXhwKFwiXihcIit0ZStcIikoPyFweClbYS16JV0rJFwiLFwiaVwiKSxGZT1mdW5jdGlvbihlKXt2YXIgdD1lLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7cmV0dXJuIHQmJnQub3BlbmVyfHwodD1DKSx0LmdldENvbXB1dGVkU3R5bGUoZSl9LEJlPW5ldyBSZWdFeHAocmUuam9pbihcInxcIiksXCJpXCIpO2Z1bmN0aW9uIF9lKGUsdCxuKXt2YXIgcixpLG8sYSxzPWUuc3R5bGU7cmV0dXJuKG49bnx8RmUoZSkpJiYoXCJcIiE9PShhPW4uZ2V0UHJvcGVydHlWYWx1ZSh0KXx8blt0XSl8fG9lKGUpfHwoYT1rLnN0eWxlKGUsdCkpLCF5LnBpeGVsQm94U3R5bGVzKCkmJiRlLnRlc3QoYSkmJkJlLnRlc3QodCkmJihyPXMud2lkdGgsaT1zLm1pbldpZHRoLG89cy5tYXhXaWR0aCxzLm1pbldpZHRoPXMubWF4V2lkdGg9cy53aWR0aD1hLGE9bi53aWR0aCxzLndpZHRoPXIscy5taW5XaWR0aD1pLHMubWF4V2lkdGg9bykpLHZvaWQgMCE9PWE/YStcIlwiOmF9ZnVuY3Rpb24gemUoZSx0KXtyZXR1cm57Z2V0OmZ1bmN0aW9uKCl7aWYoIWUoKSlyZXR1cm4odGhpcy5nZXQ9dCkuYXBwbHkodGhpcyxhcmd1bWVudHMpO2RlbGV0ZSB0aGlzLmdldH19fSFmdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXtpZih1KXtzLnN0eWxlLmNzc1RleHQ9XCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7bWFyZ2luLXRvcDoxcHg7cGFkZGluZzowO2JvcmRlcjowXCIsdS5zdHlsZS5jc3NUZXh0PVwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO21hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7d2lkdGg6NjAlO3RvcDoxJVwiLGllLmFwcGVuZENoaWxkKHMpLmFwcGVuZENoaWxkKHUpO3ZhciBlPUMuZ2V0Q29tcHV0ZWRTdHlsZSh1KTtuPVwiMSVcIiE9PWUudG9wLGE9MTI9PT10KGUubWFyZ2luTGVmdCksdS5zdHlsZS5yaWdodD1cIjYwJVwiLG89MzY9PT10KGUucmlnaHQpLHI9MzY9PT10KGUud2lkdGgpLHUuc3R5bGUucG9zaXRpb249XCJhYnNvbHV0ZVwiLGk9MTI9PT10KHUub2Zmc2V0V2lkdGgvMyksaWUucmVtb3ZlQ2hpbGQocyksdT1udWxsfX1mdW5jdGlvbiB0KGUpe3JldHVybiBNYXRoLnJvdW5kKHBhcnNlRmxvYXQoZSkpfXZhciBuLHIsaSxvLGEscz1FLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksdT1FLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7dS5zdHlsZSYmKHUuc3R5bGUuYmFja2dyb3VuZENsaXA9XCJjb250ZW50LWJveFwiLHUuY2xvbmVOb2RlKCEwKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcD1cIlwiLHkuY2xlYXJDbG9uZVN0eWxlPVwiY29udGVudC1ib3hcIj09PXUuc3R5bGUuYmFja2dyb3VuZENsaXAsay5leHRlbmQoeSx7Ym94U2l6aW5nUmVsaWFibGU6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLHJ9LHBpeGVsQm94U3R5bGVzOmZ1bmN0aW9uKCl7cmV0dXJuIGUoKSxvfSxwaXhlbFBvc2l0aW9uOmZ1bmN0aW9uKCl7cmV0dXJuIGUoKSxufSxyZWxpYWJsZU1hcmdpbkxlZnQ6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLGF9LHNjcm9sbGJveFNpemU6ZnVuY3Rpb24oKXtyZXR1cm4gZSgpLGl9fSkpfSgpO3ZhciBVZT1bXCJXZWJraXRcIixcIk1velwiLFwibXNcIl0sWGU9RS5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFZlPXt9O2Z1bmN0aW9uIEdlKGUpe3ZhciB0PWsuY3NzUHJvcHNbZV18fFZlW2VdO3JldHVybiB0fHwoZSBpbiBYZT9lOlZlW2VdPWZ1bmN0aW9uKGUpe3ZhciB0PWVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpLG49VWUubGVuZ3RoO3doaWxlKG4tLSlpZigoZT1VZVtuXSt0KWluIFhlKXJldHVybiBlfShlKXx8ZSl9dmFyIFllPS9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxRZT0vXi0tLyxKZT17cG9zaXRpb246XCJhYnNvbHV0ZVwiLHZpc2liaWxpdHk6XCJoaWRkZW5cIixkaXNwbGF5OlwiYmxvY2tcIn0sS2U9e2xldHRlclNwYWNpbmc6XCIwXCIsZm9udFdlaWdodDpcIjQwMFwifTtmdW5jdGlvbiBaZShlLHQsbil7dmFyIHI9bmUuZXhlYyh0KTtyZXR1cm4gcj9NYXRoLm1heCgwLHJbMl0tKG58fDApKSsoclszXXx8XCJweFwiKTp0fWZ1bmN0aW9uIGV0KGUsdCxuLHIsaSxvKXt2YXIgYT1cIndpZHRoXCI9PT10PzE6MCxzPTAsdT0wO2lmKG49PT0ocj9cImJvcmRlclwiOlwiY29udGVudFwiKSlyZXR1cm4gMDtmb3IoO2E8NDthKz0yKVwibWFyZ2luXCI9PT1uJiYodSs9ay5jc3MoZSxuK3JlW2FdLCEwLGkpKSxyPyhcImNvbnRlbnRcIj09PW4mJih1LT1rLmNzcyhlLFwicGFkZGluZ1wiK3JlW2FdLCEwLGkpKSxcIm1hcmdpblwiIT09biYmKHUtPWsuY3NzKGUsXCJib3JkZXJcIityZVthXStcIldpZHRoXCIsITAsaSkpKToodSs9ay5jc3MoZSxcInBhZGRpbmdcIityZVthXSwhMCxpKSxcInBhZGRpbmdcIiE9PW4/dSs9ay5jc3MoZSxcImJvcmRlclwiK3JlW2FdK1wiV2lkdGhcIiwhMCxpKTpzKz1rLmNzcyhlLFwiYm9yZGVyXCIrcmVbYV0rXCJXaWR0aFwiLCEwLGkpKTtyZXR1cm4hciYmMDw9byYmKHUrPU1hdGgubWF4KDAsTWF0aC5jZWlsKGVbXCJvZmZzZXRcIit0WzBdLnRvVXBwZXJDYXNlKCkrdC5zbGljZSgxKV0tby11LXMtLjUpKXx8MCksdX1mdW5jdGlvbiB0dChlLHQsbil7dmFyIHI9RmUoZSksaT0oIXkuYm94U2l6aW5nUmVsaWFibGUoKXx8bikmJlwiYm9yZGVyLWJveFwiPT09ay5jc3MoZSxcImJveFNpemluZ1wiLCExLHIpLG89aSxhPV9lKGUsdCxyKSxzPVwib2Zmc2V0XCIrdFswXS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSk7aWYoJGUudGVzdChhKSl7aWYoIW4pcmV0dXJuIGE7YT1cImF1dG9cIn1yZXR1cm4oIXkuYm94U2l6aW5nUmVsaWFibGUoKSYmaXx8XCJhdXRvXCI9PT1hfHwhcGFyc2VGbG9hdChhKSYmXCJpbmxpbmVcIj09PWsuY3NzKGUsXCJkaXNwbGF5XCIsITEscikpJiZlLmdldENsaWVudFJlY3RzKCkubGVuZ3RoJiYoaT1cImJvcmRlci1ib3hcIj09PWsuY3NzKGUsXCJib3hTaXppbmdcIiwhMSxyKSwobz1zIGluIGUpJiYoYT1lW3NdKSksKGE9cGFyc2VGbG9hdChhKXx8MCkrZXQoZSx0LG58fChpP1wiYm9yZGVyXCI6XCJjb250ZW50XCIpLG8scixhKStcInB4XCJ9ZnVuY3Rpb24gbnQoZSx0LG4scixpKXtyZXR1cm4gbmV3IG50LnByb3RvdHlwZS5pbml0KGUsdCxuLHIsaSl9ay5leHRlbmQoe2Nzc0hvb2tzOntvcGFjaXR5OntnZXQ6ZnVuY3Rpb24oZSx0KXtpZih0KXt2YXIgbj1fZShlLFwib3BhY2l0eVwiKTtyZXR1cm5cIlwiPT09bj9cIjFcIjpufX19fSxjc3NOdW1iZXI6e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGNvbHVtbkNvdW50OiEwLGZpbGxPcGFjaXR5OiEwLGZsZXhHcm93OiEwLGZsZXhTaHJpbms6ITAsZm9udFdlaWdodDohMCxncmlkQXJlYTohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3RhcnQ6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwfSxjc3NQcm9wczp7fSxzdHlsZTpmdW5jdGlvbihlLHQsbixyKXtpZihlJiYzIT09ZS5ub2RlVHlwZSYmOCE9PWUubm9kZVR5cGUmJmUuc3R5bGUpe3ZhciBpLG8sYSxzPVYodCksdT1RZS50ZXN0KHQpLGw9ZS5zdHlsZTtpZih1fHwodD1HZShzKSksYT1rLmNzc0hvb2tzW3RdfHxrLmNzc0hvb2tzW3NdLHZvaWQgMD09PW4pcmV0dXJuIGEmJlwiZ2V0XCJpbiBhJiZ2b2lkIDAhPT0oaT1hLmdldChlLCExLHIpKT9pOmxbdF07XCJzdHJpbmdcIj09PShvPXR5cGVvZiBuKSYmKGk9bmUuZXhlYyhuKSkmJmlbMV0mJihuPWxlKGUsdCxpKSxvPVwibnVtYmVyXCIpLG51bGwhPW4mJm49PW4mJihcIm51bWJlclwiIT09b3x8dXx8KG4rPWkmJmlbM118fChrLmNzc051bWJlcltzXT9cIlwiOlwicHhcIikpLHkuY2xlYXJDbG9uZVN0eWxlfHxcIlwiIT09bnx8MCE9PXQuaW5kZXhPZihcImJhY2tncm91bmRcIil8fChsW3RdPVwiaW5oZXJpdFwiKSxhJiZcInNldFwiaW4gYSYmdm9pZCAwPT09KG49YS5zZXQoZSxuLHIpKXx8KHU/bC5zZXRQcm9wZXJ0eSh0LG4pOmxbdF09bikpfX0sY3NzOmZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBpLG8sYSxzPVYodCk7cmV0dXJuIFFlLnRlc3QodCl8fCh0PUdlKHMpKSwoYT1rLmNzc0hvb2tzW3RdfHxrLmNzc0hvb2tzW3NdKSYmXCJnZXRcImluIGEmJihpPWEuZ2V0KGUsITAsbikpLHZvaWQgMD09PWkmJihpPV9lKGUsdCxyKSksXCJub3JtYWxcIj09PWkmJnQgaW4gS2UmJihpPUtlW3RdKSxcIlwiPT09bnx8bj8obz1wYXJzZUZsb2F0KGkpLCEwPT09bnx8aXNGaW5pdGUobyk/b3x8MDppKTppfX0pLGsuZWFjaChbXCJoZWlnaHRcIixcIndpZHRoXCJdLGZ1bmN0aW9uKGUsdSl7ay5jc3NIb29rc1t1XT17Z2V0OmZ1bmN0aW9uKGUsdCxuKXtpZih0KXJldHVybiFZZS50ZXN0KGsuY3NzKGUsXCJkaXNwbGF5XCIpKXx8ZS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCYmZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aD90dChlLHUsbik6dWUoZSxKZSxmdW5jdGlvbigpe3JldHVybiB0dChlLHUsbil9KX0sc2V0OmZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpPUZlKGUpLG89IXkuc2Nyb2xsYm94U2l6ZSgpJiZcImFic29sdXRlXCI9PT1pLnBvc2l0aW9uLGE9KG98fG4pJiZcImJvcmRlci1ib3hcIj09PWsuY3NzKGUsXCJib3hTaXppbmdcIiwhMSxpKSxzPW4/ZXQoZSx1LG4sYSxpKTowO3JldHVybiBhJiZvJiYocy09TWF0aC5jZWlsKGVbXCJvZmZzZXRcIit1WzBdLnRvVXBwZXJDYXNlKCkrdS5zbGljZSgxKV0tcGFyc2VGbG9hdChpW3VdKS1ldChlLHUsXCJib3JkZXJcIiwhMSxpKS0uNSkpLHMmJihyPW5lLmV4ZWModCkpJiZcInB4XCIhPT0oclszXXx8XCJweFwiKSYmKGUuc3R5bGVbdV09dCx0PWsuY3NzKGUsdSkpLFplKDAsdCxzKX19fSksay5jc3NIb29rcy5tYXJnaW5MZWZ0PXplKHkucmVsaWFibGVNYXJnaW5MZWZ0LGZ1bmN0aW9uKGUsdCl7aWYodClyZXR1cm4ocGFyc2VGbG9hdChfZShlLFwibWFyZ2luTGVmdFwiKSl8fGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdC11ZShlLHttYXJnaW5MZWZ0OjB9LGZ1bmN0aW9uKCl7cmV0dXJuIGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdH0pKStcInB4XCJ9KSxrLmVhY2goe21hcmdpbjpcIlwiLHBhZGRpbmc6XCJcIixib3JkZXI6XCJXaWR0aFwifSxmdW5jdGlvbihpLG8pe2suY3NzSG9va3NbaStvXT17ZXhwYW5kOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLG49e30scj1cInN0cmluZ1wiPT10eXBlb2YgZT9lLnNwbGl0KFwiIFwiKTpbZV07dDw0O3QrKyluW2krcmVbdF0rb109clt0XXx8clt0LTJdfHxyWzBdO3JldHVybiBufX0sXCJtYXJnaW5cIiE9PWkmJihrLmNzc0hvb2tzW2krb10uc2V0PVplKX0pLGsuZm4uZXh0ZW5kKHtjc3M6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gXyh0aGlzLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89e30sYT0wO2lmKEFycmF5LmlzQXJyYXkodCkpe2ZvcihyPUZlKGUpLGk9dC5sZW5ndGg7YTxpO2ErKylvW3RbYV1dPWsuY3NzKGUsdFthXSwhMSxyKTtyZXR1cm4gb31yZXR1cm4gdm9pZCAwIT09bj9rLnN0eWxlKGUsdCxuKTprLmNzcyhlLHQpfSxlLHQsMTxhcmd1bWVudHMubGVuZ3RoKX19KSwoKGsuVHdlZW49bnQpLnByb3RvdHlwZT17Y29uc3RydWN0b3I6bnQsaW5pdDpmdW5jdGlvbihlLHQsbixyLGksbyl7dGhpcy5lbGVtPWUsdGhpcy5wcm9wPW4sdGhpcy5lYXNpbmc9aXx8ay5lYXNpbmcuX2RlZmF1bHQsdGhpcy5vcHRpb25zPXQsdGhpcy5zdGFydD10aGlzLm5vdz10aGlzLmN1cigpLHRoaXMuZW5kPXIsdGhpcy51bml0PW98fChrLmNzc051bWJlcltuXT9cIlwiOlwicHhcIil9LGN1cjpmdW5jdGlvbigpe3ZhciBlPW50LnByb3BIb29rc1t0aGlzLnByb3BdO3JldHVybiBlJiZlLmdldD9lLmdldCh0aGlzKTpudC5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KHRoaXMpfSxydW46ZnVuY3Rpb24oZSl7dmFyIHQsbj1udC5wcm9wSG9va3NbdGhpcy5wcm9wXTtyZXR1cm4gdGhpcy5vcHRpb25zLmR1cmF0aW9uP3RoaXMucG9zPXQ9ay5lYXNpbmdbdGhpcy5lYXNpbmddKGUsdGhpcy5vcHRpb25zLmR1cmF0aW9uKmUsMCwxLHRoaXMub3B0aW9ucy5kdXJhdGlvbik6dGhpcy5wb3M9dD1lLHRoaXMubm93PSh0aGlzLmVuZC10aGlzLnN0YXJ0KSp0K3RoaXMuc3RhcnQsdGhpcy5vcHRpb25zLnN0ZXAmJnRoaXMub3B0aW9ucy5zdGVwLmNhbGwodGhpcy5lbGVtLHRoaXMubm93LHRoaXMpLG4mJm4uc2V0P24uc2V0KHRoaXMpOm50LnByb3BIb29rcy5fZGVmYXVsdC5zZXQodGhpcyksdGhpc319KS5pbml0LnByb3RvdHlwZT1udC5wcm90b3R5cGUsKG50LnByb3BIb29rcz17X2RlZmF1bHQ6e2dldDpmdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gMSE9PWUuZWxlbS5ub2RlVHlwZXx8bnVsbCE9ZS5lbGVtW2UucHJvcF0mJm51bGw9PWUuZWxlbS5zdHlsZVtlLnByb3BdP2UuZWxlbVtlLnByb3BdOih0PWsuY3NzKGUuZWxlbSxlLnByb3AsXCJcIikpJiZcImF1dG9cIiE9PXQ/dDowfSxzZXQ6ZnVuY3Rpb24oZSl7ay5meC5zdGVwW2UucHJvcF0/ay5meC5zdGVwW2UucHJvcF0oZSk6MSE9PWUuZWxlbS5ub2RlVHlwZXx8IWsuY3NzSG9va3NbZS5wcm9wXSYmbnVsbD09ZS5lbGVtLnN0eWxlW0dlKGUucHJvcCldP2UuZWxlbVtlLnByb3BdPWUubm93Omsuc3R5bGUoZS5lbGVtLGUucHJvcCxlLm5vdytlLnVuaXQpfX19KS5zY3JvbGxUb3A9bnQucHJvcEhvb2tzLnNjcm9sbExlZnQ9e3NldDpmdW5jdGlvbihlKXtlLmVsZW0ubm9kZVR5cGUmJmUuZWxlbS5wYXJlbnROb2RlJiYoZS5lbGVtW2UucHJvcF09ZS5ub3cpfX0say5lYXNpbmc9e2xpbmVhcjpmdW5jdGlvbihlKXtyZXR1cm4gZX0sc3dpbmc6ZnVuY3Rpb24oZSl7cmV0dXJuLjUtTWF0aC5jb3MoZSpNYXRoLlBJKS8yfSxfZGVmYXVsdDpcInN3aW5nXCJ9LGsuZng9bnQucHJvdG90eXBlLmluaXQsay5meC5zdGVwPXt9O3ZhciBydCxpdCxvdCxhdCxzdD0vXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sdXQ9L3F1ZXVlSG9va3MkLztmdW5jdGlvbiBsdCgpe2l0JiYoITE9PT1FLmhpZGRlbiYmQy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWU/Qy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUobHQpOkMuc2V0VGltZW91dChsdCxrLmZ4LmludGVydmFsKSxrLmZ4LnRpY2soKSl9ZnVuY3Rpb24gY3QoKXtyZXR1cm4gQy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cnQ9dm9pZCAwfSkscnQ9RGF0ZS5ub3coKX1mdW5jdGlvbiBmdChlLHQpe3ZhciBuLHI9MCxpPXtoZWlnaHQ6ZX07Zm9yKHQ9dD8xOjA7cjw0O3IrPTItdClpW1wibWFyZ2luXCIrKG49cmVbcl0pXT1pW1wicGFkZGluZ1wiK25dPWU7cmV0dXJuIHQmJihpLm9wYWNpdHk9aS53aWR0aD1lKSxpfWZ1bmN0aW9uIHB0KGUsdCxuKXtmb3IodmFyIHIsaT0oZHQudHdlZW5lcnNbdF18fFtdKS5jb25jYXQoZHQudHdlZW5lcnNbXCIqXCJdKSxvPTAsYT1pLmxlbmd0aDtvPGE7bysrKWlmKHI9aVtvXS5jYWxsKG4sdCxlKSlyZXR1cm4gcn1mdW5jdGlvbiBkdChvLGUsdCl7dmFyIG4sYSxyPTAsaT1kdC5wcmVmaWx0ZXJzLmxlbmd0aCxzPWsuRGVmZXJyZWQoKS5hbHdheXMoZnVuY3Rpb24oKXtkZWxldGUgdS5lbGVtfSksdT1mdW5jdGlvbigpe2lmKGEpcmV0dXJuITE7Zm9yKHZhciBlPXJ0fHxjdCgpLHQ9TWF0aC5tYXgoMCxsLnN0YXJ0VGltZStsLmR1cmF0aW9uLWUpLG49MS0odC9sLmR1cmF0aW9ufHwwKSxyPTAsaT1sLnR3ZWVucy5sZW5ndGg7cjxpO3IrKylsLnR3ZWVuc1tyXS5ydW4obik7cmV0dXJuIHMubm90aWZ5V2l0aChvLFtsLG4sdF0pLG48MSYmaT90OihpfHxzLm5vdGlmeVdpdGgobyxbbCwxLDBdKSxzLnJlc29sdmVXaXRoKG8sW2xdKSwhMSl9LGw9cy5wcm9taXNlKHtlbGVtOm8scHJvcHM6ay5leHRlbmQoe30sZSksb3B0czprLmV4dGVuZCghMCx7c3BlY2lhbEVhc2luZzp7fSxlYXNpbmc6ay5lYXNpbmcuX2RlZmF1bHR9LHQpLG9yaWdpbmFsUHJvcGVydGllczplLG9yaWdpbmFsT3B0aW9uczp0LHN0YXJ0VGltZTpydHx8Y3QoKSxkdXJhdGlvbjp0LmR1cmF0aW9uLHR3ZWVuczpbXSxjcmVhdGVUd2VlbjpmdW5jdGlvbihlLHQpe3ZhciBuPWsuVHdlZW4obyxsLm9wdHMsZSx0LGwub3B0cy5zcGVjaWFsRWFzaW5nW2VdfHxsLm9wdHMuZWFzaW5nKTtyZXR1cm4gbC50d2VlbnMucHVzaChuKSxufSxzdG9wOmZ1bmN0aW9uKGUpe3ZhciB0PTAsbj1lP2wudHdlZW5zLmxlbmd0aDowO2lmKGEpcmV0dXJuIHRoaXM7Zm9yKGE9ITA7dDxuO3QrKylsLnR3ZWVuc1t0XS5ydW4oMSk7cmV0dXJuIGU/KHMubm90aWZ5V2l0aChvLFtsLDEsMF0pLHMucmVzb2x2ZVdpdGgobyxbbCxlXSkpOnMucmVqZWN0V2l0aChvLFtsLGVdKSx0aGlzfX0pLGM9bC5wcm9wcztmb3IoIWZ1bmN0aW9uKGUsdCl7dmFyIG4scixpLG8sYTtmb3IobiBpbiBlKWlmKGk9dFtyPVYobildLG89ZVtuXSxBcnJheS5pc0FycmF5KG8pJiYoaT1vWzFdLG89ZVtuXT1vWzBdKSxuIT09ciYmKGVbcl09byxkZWxldGUgZVtuXSksKGE9ay5jc3NIb29rc1tyXSkmJlwiZXhwYW5kXCJpbiBhKWZvcihuIGluIG89YS5leHBhbmQobyksZGVsZXRlIGVbcl0sbyluIGluIGV8fChlW25dPW9bbl0sdFtuXT1pKTtlbHNlIHRbcl09aX0oYyxsLm9wdHMuc3BlY2lhbEVhc2luZyk7cjxpO3IrKylpZihuPWR0LnByZWZpbHRlcnNbcl0uY2FsbChsLG8sYyxsLm9wdHMpKXJldHVybiBtKG4uc3RvcCkmJihrLl9xdWV1ZUhvb2tzKGwuZWxlbSxsLm9wdHMucXVldWUpLnN0b3A9bi5zdG9wLmJpbmQobikpLG47cmV0dXJuIGsubWFwKGMscHQsbCksbShsLm9wdHMuc3RhcnQpJiZsLm9wdHMuc3RhcnQuY2FsbChvLGwpLGwucHJvZ3Jlc3MobC5vcHRzLnByb2dyZXNzKS5kb25lKGwub3B0cy5kb25lLGwub3B0cy5jb21wbGV0ZSkuZmFpbChsLm9wdHMuZmFpbCkuYWx3YXlzKGwub3B0cy5hbHdheXMpLGsuZngudGltZXIoay5leHRlbmQodSx7ZWxlbTpvLGFuaW06bCxxdWV1ZTpsLm9wdHMucXVldWV9KSksbH1rLkFuaW1hdGlvbj1rLmV4dGVuZChkdCx7dHdlZW5lcnM6e1wiKlwiOltmdW5jdGlvbihlLHQpe3ZhciBuPXRoaXMuY3JlYXRlVHdlZW4oZSx0KTtyZXR1cm4gbGUobi5lbGVtLGUsbmUuZXhlYyh0KSxuKSxufV19LHR3ZWVuZXI6ZnVuY3Rpb24oZSx0KXttKGUpPyh0PWUsZT1bXCIqXCJdKTplPWUubWF0Y2goUik7Zm9yKHZhciBuLHI9MCxpPWUubGVuZ3RoO3I8aTtyKyspbj1lW3JdLGR0LnR3ZWVuZXJzW25dPWR0LnR3ZWVuZXJzW25dfHxbXSxkdC50d2VlbmVyc1tuXS51bnNoaWZ0KHQpfSxwcmVmaWx0ZXJzOltmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEscyx1LGwsYyxmPVwid2lkdGhcImluIHR8fFwiaGVpZ2h0XCJpbiB0LHA9dGhpcyxkPXt9LGg9ZS5zdHlsZSxnPWUubm9kZVR5cGUmJnNlKGUpLHY9US5nZXQoZSxcImZ4c2hvd1wiKTtmb3IociBpbiBuLnF1ZXVlfHwobnVsbD09KGE9ay5fcXVldWVIb29rcyhlLFwiZnhcIikpLnVucXVldWVkJiYoYS51bnF1ZXVlZD0wLHM9YS5lbXB0eS5maXJlLGEuZW1wdHkuZmlyZT1mdW5jdGlvbigpe2EudW5xdWV1ZWR8fHMoKX0pLGEudW5xdWV1ZWQrKyxwLmFsd2F5cyhmdW5jdGlvbigpe3AuYWx3YXlzKGZ1bmN0aW9uKCl7YS51bnF1ZXVlZC0tLGsucXVldWUoZSxcImZ4XCIpLmxlbmd0aHx8YS5lbXB0eS5maXJlKCl9KX0pKSx0KWlmKGk9dFtyXSxzdC50ZXN0KGkpKXtpZihkZWxldGUgdFtyXSxvPW98fFwidG9nZ2xlXCI9PT1pLGk9PT0oZz9cImhpZGVcIjpcInNob3dcIikpe2lmKFwic2hvd1wiIT09aXx8IXZ8fHZvaWQgMD09PXZbcl0pY29udGludWU7Zz0hMH1kW3JdPXYmJnZbcl18fGsuc3R5bGUoZSxyKX1pZigodT0hay5pc0VtcHR5T2JqZWN0KHQpKXx8IWsuaXNFbXB0eU9iamVjdChkKSlmb3IociBpbiBmJiYxPT09ZS5ub2RlVHlwZSYmKG4ub3ZlcmZsb3c9W2gub3ZlcmZsb3csaC5vdmVyZmxvd1gsaC5vdmVyZmxvd1ldLG51bGw9PShsPXYmJnYuZGlzcGxheSkmJihsPVEuZ2V0KGUsXCJkaXNwbGF5XCIpKSxcIm5vbmVcIj09PShjPWsuY3NzKGUsXCJkaXNwbGF5XCIpKSYmKGw/Yz1sOihmZShbZV0sITApLGw9ZS5zdHlsZS5kaXNwbGF5fHxsLGM9ay5jc3MoZSxcImRpc3BsYXlcIiksZmUoW2VdKSkpLChcImlubGluZVwiPT09Y3x8XCJpbmxpbmUtYmxvY2tcIj09PWMmJm51bGwhPWwpJiZcIm5vbmVcIj09PWsuY3NzKGUsXCJmbG9hdFwiKSYmKHV8fChwLmRvbmUoZnVuY3Rpb24oKXtoLmRpc3BsYXk9bH0pLG51bGw9PWwmJihjPWguZGlzcGxheSxsPVwibm9uZVwiPT09Yz9cIlwiOmMpKSxoLmRpc3BsYXk9XCJpbmxpbmUtYmxvY2tcIikpLG4ub3ZlcmZsb3cmJihoLm92ZXJmbG93PVwiaGlkZGVuXCIscC5hbHdheXMoZnVuY3Rpb24oKXtoLm92ZXJmbG93PW4ub3ZlcmZsb3dbMF0saC5vdmVyZmxvd1g9bi5vdmVyZmxvd1sxXSxoLm92ZXJmbG93WT1uLm92ZXJmbG93WzJdfSkpLHU9ITEsZCl1fHwodj9cImhpZGRlblwiaW4gdiYmKGc9di5oaWRkZW4pOnY9US5hY2Nlc3MoZSxcImZ4c2hvd1wiLHtkaXNwbGF5Omx9KSxvJiYodi5oaWRkZW49IWcpLGcmJmZlKFtlXSwhMCkscC5kb25lKGZ1bmN0aW9uKCl7Zm9yKHIgaW4gZ3x8ZmUoW2VdKSxRLnJlbW92ZShlLFwiZnhzaG93XCIpLGQpay5zdHlsZShlLHIsZFtyXSl9KSksdT1wdChnP3Zbcl06MCxyLHApLHIgaW4gdnx8KHZbcl09dS5zdGFydCxnJiYodS5lbmQ9dS5zdGFydCx1LnN0YXJ0PTApKX1dLHByZWZpbHRlcjpmdW5jdGlvbihlLHQpe3Q/ZHQucHJlZmlsdGVycy51bnNoaWZ0KGUpOmR0LnByZWZpbHRlcnMucHVzaChlKX19KSxrLnNwZWVkPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1lJiZcIm9iamVjdFwiPT10eXBlb2YgZT9rLmV4dGVuZCh7fSxlKTp7Y29tcGxldGU6bnx8IW4mJnR8fG0oZSkmJmUsZHVyYXRpb246ZSxlYXNpbmc6biYmdHx8dCYmIW0odCkmJnR9O3JldHVybiBrLmZ4Lm9mZj9yLmR1cmF0aW9uPTA6XCJudW1iZXJcIiE9dHlwZW9mIHIuZHVyYXRpb24mJihyLmR1cmF0aW9uIGluIGsuZnguc3BlZWRzP3IuZHVyYXRpb249ay5meC5zcGVlZHNbci5kdXJhdGlvbl06ci5kdXJhdGlvbj1rLmZ4LnNwZWVkcy5fZGVmYXVsdCksbnVsbCE9ci5xdWV1ZSYmITAhPT1yLnF1ZXVlfHwoci5xdWV1ZT1cImZ4XCIpLHIub2xkPXIuY29tcGxldGUsci5jb21wbGV0ZT1mdW5jdGlvbigpe20oci5vbGQpJiZyLm9sZC5jYWxsKHRoaXMpLHIucXVldWUmJmsuZGVxdWV1ZSh0aGlzLHIucXVldWUpfSxyfSxrLmZuLmV4dGVuZCh7ZmFkZVRvOmZ1bmN0aW9uKGUsdCxuLHIpe3JldHVybiB0aGlzLmZpbHRlcihzZSkuY3NzKFwib3BhY2l0eVwiLDApLnNob3coKS5lbmQoKS5hbmltYXRlKHtvcGFjaXR5OnR9LGUsbixyKX0sYW5pbWF0ZTpmdW5jdGlvbih0LGUsbixyKXt2YXIgaT1rLmlzRW1wdHlPYmplY3QodCksbz1rLnNwZWVkKGUsbixyKSxhPWZ1bmN0aW9uKCl7dmFyIGU9ZHQodGhpcyxrLmV4dGVuZCh7fSx0KSxvKTsoaXx8US5nZXQodGhpcyxcImZpbmlzaFwiKSkmJmUuc3RvcCghMCl9O3JldHVybiBhLmZpbmlzaD1hLGl8fCExPT09by5xdWV1ZT90aGlzLmVhY2goYSk6dGhpcy5xdWV1ZShvLnF1ZXVlLGEpfSxzdG9wOmZ1bmN0aW9uKGksZSxvKXt2YXIgYT1mdW5jdGlvbihlKXt2YXIgdD1lLnN0b3A7ZGVsZXRlIGUuc3RvcCx0KG8pfTtyZXR1cm5cInN0cmluZ1wiIT10eXBlb2YgaSYmKG89ZSxlPWksaT12b2lkIDApLGUmJiExIT09aSYmdGhpcy5xdWV1ZShpfHxcImZ4XCIsW10pLHRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBlPSEwLHQ9bnVsbCE9aSYmaStcInF1ZXVlSG9va3NcIixuPWsudGltZXJzLHI9US5nZXQodGhpcyk7aWYodClyW3RdJiZyW3RdLnN0b3AmJmEoclt0XSk7ZWxzZSBmb3IodCBpbiByKXJbdF0mJnJbdF0uc3RvcCYmdXQudGVzdCh0KSYmYShyW3RdKTtmb3IodD1uLmxlbmd0aDt0LS07KW5bdF0uZWxlbSE9PXRoaXN8fG51bGwhPWkmJm5bdF0ucXVldWUhPT1pfHwoblt0XS5hbmltLnN0b3AobyksZT0hMSxuLnNwbGljZSh0LDEpKTshZSYmb3x8ay5kZXF1ZXVlKHRoaXMsaSl9KX0sZmluaXNoOmZ1bmN0aW9uKGEpe3JldHVybiExIT09YSYmKGE9YXx8XCJmeFwiKSx0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZSx0PVEuZ2V0KHRoaXMpLG49dFthK1wicXVldWVcIl0scj10W2ErXCJxdWV1ZUhvb2tzXCJdLGk9ay50aW1lcnMsbz1uP24ubGVuZ3RoOjA7Zm9yKHQuZmluaXNoPSEwLGsucXVldWUodGhpcyxhLFtdKSxyJiZyLnN0b3AmJnIuc3RvcC5jYWxsKHRoaXMsITApLGU9aS5sZW5ndGg7ZS0tOylpW2VdLmVsZW09PT10aGlzJiZpW2VdLnF1ZXVlPT09YSYmKGlbZV0uYW5pbS5zdG9wKCEwKSxpLnNwbGljZShlLDEpKTtmb3IoZT0wO2U8bztlKyspbltlXSYmbltlXS5maW5pc2gmJm5bZV0uZmluaXNoLmNhbGwodGhpcyk7ZGVsZXRlIHQuZmluaXNofSl9fSksay5lYWNoKFtcInRvZ2dsZVwiLFwic2hvd1wiLFwiaGlkZVwiXSxmdW5jdGlvbihlLHIpe3ZhciBpPWsuZm5bcl07ay5mbltyXT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIG51bGw9PWV8fFwiYm9vbGVhblwiPT10eXBlb2YgZT9pLmFwcGx5KHRoaXMsYXJndW1lbnRzKTp0aGlzLmFuaW1hdGUoZnQociwhMCksZSx0LG4pfX0pLGsuZWFjaCh7c2xpZGVEb3duOmZ0KFwic2hvd1wiKSxzbGlkZVVwOmZ0KFwiaGlkZVwiKSxzbGlkZVRvZ2dsZTpmdChcInRvZ2dsZVwiKSxmYWRlSW46e29wYWNpdHk6XCJzaG93XCJ9LGZhZGVPdXQ6e29wYWNpdHk6XCJoaWRlXCJ9LGZhZGVUb2dnbGU6e29wYWNpdHk6XCJ0b2dnbGVcIn19LGZ1bmN0aW9uKGUscil7ay5mbltlXT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHRoaXMuYW5pbWF0ZShyLGUsdCxuKX19KSxrLnRpbWVycz1bXSxrLmZ4LnRpY2s9ZnVuY3Rpb24oKXt2YXIgZSx0PTAsbj1rLnRpbWVycztmb3IocnQ9RGF0ZS5ub3coKTt0PG4ubGVuZ3RoO3QrKykoZT1uW3RdKSgpfHxuW3RdIT09ZXx8bi5zcGxpY2UodC0tLDEpO24ubGVuZ3RofHxrLmZ4LnN0b3AoKSxydD12b2lkIDB9LGsuZngudGltZXI9ZnVuY3Rpb24oZSl7ay50aW1lcnMucHVzaChlKSxrLmZ4LnN0YXJ0KCl9LGsuZnguaW50ZXJ2YWw9MTMsay5meC5zdGFydD1mdW5jdGlvbigpe2l0fHwoaXQ9ITAsbHQoKSl9LGsuZnguc3RvcD1mdW5jdGlvbigpe2l0PW51bGx9LGsuZnguc3BlZWRzPXtzbG93OjYwMCxmYXN0OjIwMCxfZGVmYXVsdDo0MDB9LGsuZm4uZGVsYXk9ZnVuY3Rpb24ocixlKXtyZXR1cm4gcj1rLmZ4JiZrLmZ4LnNwZWVkc1tyXXx8cixlPWV8fFwiZnhcIix0aGlzLnF1ZXVlKGUsZnVuY3Rpb24oZSx0KXt2YXIgbj1DLnNldFRpbWVvdXQoZSxyKTt0LnN0b3A9ZnVuY3Rpb24oKXtDLmNsZWFyVGltZW91dChuKX19KX0sb3Q9RS5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiksYXQ9RS5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpLmFwcGVuZENoaWxkKEUuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKSksb3QudHlwZT1cImNoZWNrYm94XCIseS5jaGVja09uPVwiXCIhPT1vdC52YWx1ZSx5Lm9wdFNlbGVjdGVkPWF0LnNlbGVjdGVkLChvdD1FLmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKSkudmFsdWU9XCJ0XCIsb3QudHlwZT1cInJhZGlvXCIseS5yYWRpb1ZhbHVlPVwidFwiPT09b3QudmFsdWU7dmFyIGh0LGd0PWsuZXhwci5hdHRySGFuZGxlO2suZm4uZXh0ZW5kKHthdHRyOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIF8odGhpcyxrLmF0dHIsZSx0LDE8YXJndW1lbnRzLmxlbmd0aCl9LHJlbW92ZUF0dHI6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2sucmVtb3ZlQXR0cih0aGlzLGUpfSl9fSksay5leHRlbmQoe2F0dHI6ZnVuY3Rpb24oZSx0LG4pe3ZhciByLGksbz1lLm5vZGVUeXBlO2lmKDMhPT1vJiY4IT09byYmMiE9PW8pcmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGUuZ2V0QXR0cmlidXRlP2sucHJvcChlLHQsbik6KDE9PT1vJiZrLmlzWE1MRG9jKGUpfHwoaT1rLmF0dHJIb29rc1t0LnRvTG93ZXJDYXNlKCldfHwoay5leHByLm1hdGNoLmJvb2wudGVzdCh0KT9odDp2b2lkIDApKSx2b2lkIDAhPT1uP251bGw9PT1uP3ZvaWQgay5yZW1vdmVBdHRyKGUsdCk6aSYmXCJzZXRcImluIGkmJnZvaWQgMCE9PShyPWkuc2V0KGUsbix0KSk/cjooZS5zZXRBdHRyaWJ1dGUodCxuK1wiXCIpLG4pOmkmJlwiZ2V0XCJpbiBpJiZudWxsIT09KHI9aS5nZXQoZSx0KSk/cjpudWxsPT0ocj1rLmZpbmQuYXR0cihlLHQpKT92b2lkIDA6cil9LGF0dHJIb29rczp7dHlwZTp7c2V0OmZ1bmN0aW9uKGUsdCl7aWYoIXkucmFkaW9WYWx1ZSYmXCJyYWRpb1wiPT09dCYmQShlLFwiaW5wdXRcIikpe3ZhciBuPWUudmFsdWU7cmV0dXJuIGUuc2V0QXR0cmlidXRlKFwidHlwZVwiLHQpLG4mJihlLnZhbHVlPW4pLHR9fX19LHJlbW92ZUF0dHI6ZnVuY3Rpb24oZSx0KXt2YXIgbixyPTAsaT10JiZ0Lm1hdGNoKFIpO2lmKGkmJjE9PT1lLm5vZGVUeXBlKXdoaWxlKG49aVtyKytdKWUucmVtb3ZlQXR0cmlidXRlKG4pfX0pLGh0PXtzZXQ6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiExPT09dD9rLnJlbW92ZUF0dHIoZSxuKTplLnNldEF0dHJpYnV0ZShuLG4pLG59fSxrLmVhY2goay5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKC9cXHcrL2cpLGZ1bmN0aW9uKGUsdCl7dmFyIGE9Z3RbdF18fGsuZmluZC5hdHRyO2d0W3RdPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG89dC50b0xvd2VyQ2FzZSgpO3JldHVybiBufHwoaT1ndFtvXSxndFtvXT1yLHI9bnVsbCE9YShlLHQsbik/bzpudWxsLGd0W29dPWkpLHJ9fSk7dmFyIHZ0PS9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2kseXQ9L14oPzphfGFyZWEpJC9pO2Z1bmN0aW9uIG10KGUpe3JldHVybihlLm1hdGNoKFIpfHxbXSkuam9pbihcIiBcIil9ZnVuY3Rpb24geHQoZSl7cmV0dXJuIGUuZ2V0QXR0cmlidXRlJiZlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpfHxcIlwifWZ1bmN0aW9uIGJ0KGUpe3JldHVybiBBcnJheS5pc0FycmF5KGUpP2U6XCJzdHJpbmdcIj09dHlwZW9mIGUmJmUubWF0Y2goUil8fFtdfWsuZm4uZXh0ZW5kKHtwcm9wOmZ1bmN0aW9uKGUsdCl7cmV0dXJuIF8odGhpcyxrLnByb3AsZSx0LDE8YXJndW1lbnRzLmxlbmd0aCl9LHJlbW92ZVByb3A6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpe2RlbGV0ZSB0aGlzW2sucHJvcEZpeFtlXXx8ZV19KX19KSxrLmV4dGVuZCh7cHJvcDpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvPWUubm9kZVR5cGU7aWYoMyE9PW8mJjghPT1vJiYyIT09bylyZXR1cm4gMT09PW8mJmsuaXNYTUxEb2MoZSl8fCh0PWsucHJvcEZpeFt0XXx8dCxpPWsucHJvcEhvb2tzW3RdKSx2b2lkIDAhPT1uP2kmJlwic2V0XCJpbiBpJiZ2b2lkIDAhPT0ocj1pLnNldChlLG4sdCkpP3I6ZVt0XT1uOmkmJlwiZ2V0XCJpbiBpJiZudWxsIT09KHI9aS5nZXQoZSx0KSk/cjplW3RdfSxwcm9wSG9va3M6e3RhYkluZGV4OntnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ay5maW5kLmF0dHIoZSxcInRhYmluZGV4XCIpO3JldHVybiB0P3BhcnNlSW50KHQsMTApOnZ0LnRlc3QoZS5ub2RlTmFtZSl8fHl0LnRlc3QoZS5ub2RlTmFtZSkmJmUuaHJlZj8wOi0xfX19LHByb3BGaXg6e1wiZm9yXCI6XCJodG1sRm9yXCIsXCJjbGFzc1wiOlwiY2xhc3NOYW1lXCJ9fSkseS5vcHRTZWxlY3RlZHx8KGsucHJvcEhvb2tzLnNlbGVjdGVkPXtnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZS5wYXJlbnROb2RlO3JldHVybiB0JiZ0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4LG51bGx9LHNldDpmdW5jdGlvbihlKXt2YXIgdD1lLnBhcmVudE5vZGU7dCYmKHQuc2VsZWN0ZWRJbmRleCx0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4KX19KSxrLmVhY2goW1widGFiSW5kZXhcIixcInJlYWRPbmx5XCIsXCJtYXhMZW5ndGhcIixcImNlbGxTcGFjaW5nXCIsXCJjZWxsUGFkZGluZ1wiLFwicm93U3BhblwiLFwiY29sU3BhblwiLFwidXNlTWFwXCIsXCJmcmFtZUJvcmRlclwiLFwiY29udGVudEVkaXRhYmxlXCJdLGZ1bmN0aW9uKCl7ay5wcm9wRml4W3RoaXMudG9Mb3dlckNhc2UoKV09dGhpc30pLGsuZm4uZXh0ZW5kKHthZGRDbGFzczpmdW5jdGlvbih0KXt2YXIgZSxuLHIsaSxvLGEscyx1PTA7aWYobSh0KSlyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe2sodGhpcykuYWRkQ2xhc3ModC5jYWxsKHRoaXMsZSx4dCh0aGlzKSkpfSk7aWYoKGU9YnQodCkpLmxlbmd0aCl3aGlsZShuPXRoaXNbdSsrXSlpZihpPXh0KG4pLHI9MT09PW4ubm9kZVR5cGUmJlwiIFwiK210KGkpK1wiIFwiKXthPTA7d2hpbGUobz1lW2ErK10pci5pbmRleE9mKFwiIFwiK28rXCIgXCIpPDAmJihyKz1vK1wiIFwiKTtpIT09KHM9bXQocikpJiZuLnNldEF0dHJpYnV0ZShcImNsYXNzXCIscyl9cmV0dXJuIHRoaXN9LHJlbW92ZUNsYXNzOmZ1bmN0aW9uKHQpe3ZhciBlLG4scixpLG8sYSxzLHU9MDtpZihtKHQpKXJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oZSl7ayh0aGlzKS5yZW1vdmVDbGFzcyh0LmNhbGwodGhpcyxlLHh0KHRoaXMpKSl9KTtpZighYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5hdHRyKFwiY2xhc3NcIixcIlwiKTtpZigoZT1idCh0KSkubGVuZ3RoKXdoaWxlKG49dGhpc1t1KytdKWlmKGk9eHQobikscj0xPT09bi5ub2RlVHlwZSYmXCIgXCIrbXQoaSkrXCIgXCIpe2E9MDt3aGlsZShvPWVbYSsrXSl3aGlsZSgtMTxyLmluZGV4T2YoXCIgXCIrbytcIiBcIikpcj1yLnJlcGxhY2UoXCIgXCIrbytcIiBcIixcIiBcIik7aSE9PShzPW10KHIpKSYmbi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLHMpfXJldHVybiB0aGlzfSx0b2dnbGVDbGFzczpmdW5jdGlvbihpLHQpe3ZhciBvPXR5cGVvZiBpLGE9XCJzdHJpbmdcIj09PW98fEFycmF5LmlzQXJyYXkoaSk7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0JiZhP3Q/dGhpcy5hZGRDbGFzcyhpKTp0aGlzLnJlbW92ZUNsYXNzKGkpOm0oaSk/dGhpcy5lYWNoKGZ1bmN0aW9uKGUpe2sodGhpcykudG9nZ2xlQ2xhc3MoaS5jYWxsKHRoaXMsZSx4dCh0aGlzKSx0KSx0KX0pOnRoaXMuZWFjaChmdW5jdGlvbigpe3ZhciBlLHQsbixyO2lmKGEpe3Q9MCxuPWsodGhpcykscj1idChpKTt3aGlsZShlPXJbdCsrXSluLmhhc0NsYXNzKGUpP24ucmVtb3ZlQ2xhc3MoZSk6bi5hZGRDbGFzcyhlKX1lbHNlIHZvaWQgMCE9PWkmJlwiYm9vbGVhblwiIT09b3x8KChlPXh0KHRoaXMpKSYmUS5zZXQodGhpcyxcIl9fY2xhc3NOYW1lX19cIixlKSx0aGlzLnNldEF0dHJpYnV0ZSYmdGhpcy5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLGV8fCExPT09aT9cIlwiOlEuZ2V0KHRoaXMsXCJfX2NsYXNzTmFtZV9fXCIpfHxcIlwiKSl9KX0saGFzQ2xhc3M6ZnVuY3Rpb24oZSl7dmFyIHQsbixyPTA7dD1cIiBcIitlK1wiIFwiO3doaWxlKG49dGhpc1tyKytdKWlmKDE9PT1uLm5vZGVUeXBlJiYtMTwoXCIgXCIrbXQoeHQobikpK1wiIFwiKS5pbmRleE9mKHQpKXJldHVybiEwO3JldHVybiExfX0pO3ZhciB3dD0vXFxyL2c7ay5mbi5leHRlbmQoe3ZhbDpmdW5jdGlvbihuKXt2YXIgcixlLGksdD10aGlzWzBdO3JldHVybiBhcmd1bWVudHMubGVuZ3RoPyhpPW0obiksdGhpcy5lYWNoKGZ1bmN0aW9uKGUpe3ZhciB0OzE9PT10aGlzLm5vZGVUeXBlJiYobnVsbD09KHQ9aT9uLmNhbGwodGhpcyxlLGsodGhpcykudmFsKCkpOm4pP3Q9XCJcIjpcIm51bWJlclwiPT10eXBlb2YgdD90Kz1cIlwiOkFycmF5LmlzQXJyYXkodCkmJih0PWsubWFwKHQsZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWU/XCJcIjplK1wiXCJ9KSksKHI9ay52YWxIb29rc1t0aGlzLnR5cGVdfHxrLnZhbEhvb2tzW3RoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKV0pJiZcInNldFwiaW4gciYmdm9pZCAwIT09ci5zZXQodGhpcyx0LFwidmFsdWVcIil8fCh0aGlzLnZhbHVlPXQpKX0pKTp0PyhyPWsudmFsSG9va3NbdC50eXBlXXx8ay52YWxIb29rc1t0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCldKSYmXCJnZXRcImluIHImJnZvaWQgMCE9PShlPXIuZ2V0KHQsXCJ2YWx1ZVwiKSk/ZTpcInN0cmluZ1wiPT10eXBlb2YoZT10LnZhbHVlKT9lLnJlcGxhY2Uod3QsXCJcIik6bnVsbD09ZT9cIlwiOmU6dm9pZCAwfX0pLGsuZXh0ZW5kKHt2YWxIb29rczp7b3B0aW9uOntnZXQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ay5maW5kLmF0dHIoZSxcInZhbHVlXCIpO3JldHVybiBudWxsIT10P3Q6bXQoay50ZXh0KGUpKX19LHNlbGVjdDp7Z2V0OmZ1bmN0aW9uKGUpe3ZhciB0LG4scixpPWUub3B0aW9ucyxvPWUuc2VsZWN0ZWRJbmRleCxhPVwic2VsZWN0LW9uZVwiPT09ZS50eXBlLHM9YT9udWxsOltdLHU9YT9vKzE6aS5sZW5ndGg7Zm9yKHI9bzwwP3U6YT9vOjA7cjx1O3IrKylpZigoKG49aVtyXSkuc2VsZWN0ZWR8fHI9PT1vKSYmIW4uZGlzYWJsZWQmJighbi5wYXJlbnROb2RlLmRpc2FibGVkfHwhQShuLnBhcmVudE5vZGUsXCJvcHRncm91cFwiKSkpe2lmKHQ9ayhuKS52YWwoKSxhKXJldHVybiB0O3MucHVzaCh0KX1yZXR1cm4gc30sc2V0OmZ1bmN0aW9uKGUsdCl7dmFyIG4scixpPWUub3B0aW9ucyxvPWsubWFrZUFycmF5KHQpLGE9aS5sZW5ndGg7d2hpbGUoYS0tKSgocj1pW2FdKS5zZWxlY3RlZD0tMTxrLmluQXJyYXkoay52YWxIb29rcy5vcHRpb24uZ2V0KHIpLG8pKSYmKG49ITApO3JldHVybiBufHwoZS5zZWxlY3RlZEluZGV4PS0xKSxvfX19fSksay5lYWNoKFtcInJhZGlvXCIsXCJjaGVja2JveFwiXSxmdW5jdGlvbigpe2sudmFsSG9va3NbdGhpc109e3NldDpmdW5jdGlvbihlLHQpe2lmKEFycmF5LmlzQXJyYXkodCkpcmV0dXJuIGUuY2hlY2tlZD0tMTxrLmluQXJyYXkoayhlKS52YWwoKSx0KX19LHkuY2hlY2tPbnx8KGsudmFsSG9va3NbdGhpc10uZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiBudWxsPT09ZS5nZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKT9cIm9uXCI6ZS52YWx1ZX0pfSkseS5mb2N1c2luPVwib25mb2N1c2luXCJpbiBDO3ZhciBUdD0vXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sQ3Q9ZnVuY3Rpb24oZSl7ZS5zdG9wUHJvcGFnYXRpb24oKX07ay5leHRlbmQoay5ldmVudCx7dHJpZ2dlcjpmdW5jdGlvbihlLHQsbixyKXt2YXIgaSxvLGEscyx1LGwsYyxmLHA9W258fEVdLGQ9di5jYWxsKGUsXCJ0eXBlXCIpP2UudHlwZTplLGg9di5jYWxsKGUsXCJuYW1lc3BhY2VcIik/ZS5uYW1lc3BhY2Uuc3BsaXQoXCIuXCIpOltdO2lmKG89Zj1hPW49bnx8RSwzIT09bi5ub2RlVHlwZSYmOCE9PW4ubm9kZVR5cGUmJiFUdC50ZXN0KGQray5ldmVudC50cmlnZ2VyZWQpJiYoLTE8ZC5pbmRleE9mKFwiLlwiKSYmKGQ9KGg9ZC5zcGxpdChcIi5cIikpLnNoaWZ0KCksaC5zb3J0KCkpLHU9ZC5pbmRleE9mKFwiOlwiKTwwJiZcIm9uXCIrZCwoZT1lW2suZXhwYW5kb10/ZTpuZXcgay5FdmVudChkLFwib2JqZWN0XCI9PXR5cGVvZiBlJiZlKSkuaXNUcmlnZ2VyPXI/MjozLGUubmFtZXNwYWNlPWguam9pbihcIi5cIiksZS5ybmFtZXNwYWNlPWUubmFtZXNwYWNlP25ldyBSZWdFeHAoXCIoXnxcXFxcLilcIitoLmpvaW4oXCJcXFxcLig/Oi4qXFxcXC58KVwiKStcIihcXFxcLnwkKVwiKTpudWxsLGUucmVzdWx0PXZvaWQgMCxlLnRhcmdldHx8KGUudGFyZ2V0PW4pLHQ9bnVsbD09dD9bZV06ay5tYWtlQXJyYXkodCxbZV0pLGM9ay5ldmVudC5zcGVjaWFsW2RdfHx7fSxyfHwhYy50cmlnZ2VyfHwhMSE9PWMudHJpZ2dlci5hcHBseShuLHQpKSl7aWYoIXImJiFjLm5vQnViYmxlJiYheChuKSl7Zm9yKHM9Yy5kZWxlZ2F0ZVR5cGV8fGQsVHQudGVzdChzK2QpfHwobz1vLnBhcmVudE5vZGUpO287bz1vLnBhcmVudE5vZGUpcC5wdXNoKG8pLGE9bzthPT09KG4ub3duZXJEb2N1bWVudHx8RSkmJnAucHVzaChhLmRlZmF1bHRWaWV3fHxhLnBhcmVudFdpbmRvd3x8Qyl9aT0wO3doaWxlKChvPXBbaSsrXSkmJiFlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpZj1vLGUudHlwZT0xPGk/czpjLmJpbmRUeXBlfHxkLChsPShRLmdldChvLFwiZXZlbnRzXCIpfHx7fSlbZS50eXBlXSYmUS5nZXQobyxcImhhbmRsZVwiKSkmJmwuYXBwbHkobyx0KSwobD11JiZvW3VdKSYmbC5hcHBseSYmRyhvKSYmKGUucmVzdWx0PWwuYXBwbHkobyx0KSwhMT09PWUucmVzdWx0JiZlLnByZXZlbnREZWZhdWx0KCkpO3JldHVybiBlLnR5cGU9ZCxyfHxlLmlzRGVmYXVsdFByZXZlbnRlZCgpfHxjLl9kZWZhdWx0JiYhMSE9PWMuX2RlZmF1bHQuYXBwbHkocC5wb3AoKSx0KXx8IUcobil8fHUmJm0obltkXSkmJiF4KG4pJiYoKGE9blt1XSkmJihuW3VdPW51bGwpLGsuZXZlbnQudHJpZ2dlcmVkPWQsZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpJiZmLmFkZEV2ZW50TGlzdGVuZXIoZCxDdCksbltkXSgpLGUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSYmZi5yZW1vdmVFdmVudExpc3RlbmVyKGQsQ3QpLGsuZXZlbnQudHJpZ2dlcmVkPXZvaWQgMCxhJiYoblt1XT1hKSksZS5yZXN1bHR9fSxzaW11bGF0ZTpmdW5jdGlvbihlLHQsbil7dmFyIHI9ay5leHRlbmQobmV3IGsuRXZlbnQsbix7dHlwZTplLGlzU2ltdWxhdGVkOiEwfSk7ay5ldmVudC50cmlnZ2VyKHIsbnVsbCx0KX19KSxrLmZuLmV4dGVuZCh7dHJpZ2dlcjpmdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXtrLmV2ZW50LnRyaWdnZXIoZSx0LHRoaXMpfSl9LHRyaWdnZXJIYW5kbGVyOmZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpc1swXTtpZihuKXJldHVybiBrLmV2ZW50LnRyaWdnZXIoZSx0LG4sITApfX0pLHkuZm9jdXNpbnx8ay5lYWNoKHtmb2N1czpcImZvY3VzaW5cIixibHVyOlwiZm9jdXNvdXRcIn0sZnVuY3Rpb24obixyKXt2YXIgaT1mdW5jdGlvbihlKXtrLmV2ZW50LnNpbXVsYXRlKHIsZS50YXJnZXQsay5ldmVudC5maXgoZSkpfTtrLmV2ZW50LnNwZWNpYWxbcl09e3NldHVwOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vd25lckRvY3VtZW50fHx0aGlzLHQ9US5hY2Nlc3MoZSxyKTt0fHxlLmFkZEV2ZW50TGlzdGVuZXIobixpLCEwKSxRLmFjY2VzcyhlLHIsKHR8fDApKzEpfSx0ZWFyZG93bjpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3duZXJEb2N1bWVudHx8dGhpcyx0PVEuYWNjZXNzKGUsciktMTt0P1EuYWNjZXNzKGUscix0KTooZS5yZW1vdmVFdmVudExpc3RlbmVyKG4saSwhMCksUS5yZW1vdmUoZSxyKSl9fX0pO3ZhciBFdD1DLmxvY2F0aW9uLGt0PURhdGUubm93KCksU3Q9L1xcPy87ay5wYXJzZVhNTD1mdW5jdGlvbihlKXt2YXIgdDtpZighZXx8XCJzdHJpbmdcIiE9dHlwZW9mIGUpcmV0dXJuIG51bGw7dHJ5e3Q9KG5ldyBDLkRPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKGUsXCJ0ZXh0L3htbFwiKX1jYXRjaChlKXt0PXZvaWQgMH1yZXR1cm4gdCYmIXQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJwYXJzZXJlcnJvclwiKS5sZW5ndGh8fGsuZXJyb3IoXCJJbnZhbGlkIFhNTDogXCIrZSksdH07dmFyIE50PS9cXFtcXF0kLyxBdD0vXFxyP1xcbi9nLER0PS9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxqdD0vXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxrZXlnZW4pL2k7ZnVuY3Rpb24gcXQobixlLHIsaSl7dmFyIHQ7aWYoQXJyYXkuaXNBcnJheShlKSlrLmVhY2goZSxmdW5jdGlvbihlLHQpe3J8fE50LnRlc3Qobik/aShuLHQpOnF0KG4rXCJbXCIrKFwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT10P2U6XCJcIikrXCJdXCIsdCxyLGkpfSk7ZWxzZSBpZihyfHxcIm9iamVjdFwiIT09dyhlKSlpKG4sZSk7ZWxzZSBmb3IodCBpbiBlKXF0KG4rXCJbXCIrdCtcIl1cIixlW3RdLHIsaSl9ay5wYXJhbT1mdW5jdGlvbihlLHQpe3ZhciBuLHI9W10saT1mdW5jdGlvbihlLHQpe3ZhciBuPW0odCk/dCgpOnQ7cltyLmxlbmd0aF09ZW5jb2RlVVJJQ29tcG9uZW50KGUpK1wiPVwiK2VuY29kZVVSSUNvbXBvbmVudChudWxsPT1uP1wiXCI6bil9O2lmKG51bGw9PWUpcmV0dXJuXCJcIjtpZihBcnJheS5pc0FycmF5KGUpfHxlLmpxdWVyeSYmIWsuaXNQbGFpbk9iamVjdChlKSlrLmVhY2goZSxmdW5jdGlvbigpe2kodGhpcy5uYW1lLHRoaXMudmFsdWUpfSk7ZWxzZSBmb3IobiBpbiBlKXF0KG4sZVtuXSx0LGkpO3JldHVybiByLmpvaW4oXCImXCIpfSxrLmZuLmV4dGVuZCh7c2VyaWFsaXplOmZ1bmN0aW9uKCl7cmV0dXJuIGsucGFyYW0odGhpcy5zZXJpYWxpemVBcnJheSgpKX0sc2VyaWFsaXplQXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgZT1rLnByb3AodGhpcyxcImVsZW1lbnRzXCIpO3JldHVybiBlP2subWFrZUFycmF5KGUpOnRoaXN9KS5maWx0ZXIoZnVuY3Rpb24oKXt2YXIgZT10aGlzLnR5cGU7cmV0dXJuIHRoaXMubmFtZSYmIWsodGhpcykuaXMoXCI6ZGlzYWJsZWRcIikmJmp0LnRlc3QodGhpcy5ub2RlTmFtZSkmJiFEdC50ZXN0KGUpJiYodGhpcy5jaGVja2VkfHwhcGUudGVzdChlKSl9KS5tYXAoZnVuY3Rpb24oZSx0KXt2YXIgbj1rKHRoaXMpLnZhbCgpO3JldHVybiBudWxsPT1uP251bGw6QXJyYXkuaXNBcnJheShuKT9rLm1hcChuLGZ1bmN0aW9uKGUpe3JldHVybntuYW1lOnQubmFtZSx2YWx1ZTplLnJlcGxhY2UoQXQsXCJcXHJcXG5cIil9fSk6e25hbWU6dC5uYW1lLHZhbHVlOm4ucmVwbGFjZShBdCxcIlxcclxcblwiKX19KS5nZXQoKX19KTt2YXIgTHQ9LyUyMC9nLEh0PS8jLiokLyxPdD0vKFs/Jl0pXz1bXiZdKi8sUHQ9L14oLio/KTpbIFxcdF0qKFteXFxyXFxuXSopJC9nbSxSdD0vXig/OkdFVHxIRUFEKSQvLE10PS9eXFwvXFwvLyxJdD17fSxXdD17fSwkdD1cIiovXCIuY29uY2F0KFwiKlwiKSxGdD1FLmNyZWF0ZUVsZW1lbnQoXCJhXCIpO2Z1bmN0aW9uIEJ0KG8pe3JldHVybiBmdW5jdGlvbihlLHQpe1wic3RyaW5nXCIhPXR5cGVvZiBlJiYodD1lLGU9XCIqXCIpO3ZhciBuLHI9MCxpPWUudG9Mb3dlckNhc2UoKS5tYXRjaChSKXx8W107aWYobSh0KSl3aGlsZShuPWlbcisrXSlcIitcIj09PW5bMF0/KG49bi5zbGljZSgxKXx8XCIqXCIsKG9bbl09b1tuXXx8W10pLnVuc2hpZnQodCkpOihvW25dPW9bbl18fFtdKS5wdXNoKHQpfX1mdW5jdGlvbiBfdCh0LGksbyxhKXt2YXIgcz17fSx1PXQ9PT1XdDtmdW5jdGlvbiBsKGUpe3ZhciByO3JldHVybiBzW2VdPSEwLGsuZWFjaCh0W2VdfHxbXSxmdW5jdGlvbihlLHQpe3ZhciBuPXQoaSxvLGEpO3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBufHx1fHxzW25dP3U/IShyPW4pOnZvaWQgMDooaS5kYXRhVHlwZXMudW5zaGlmdChuKSxsKG4pLCExKX0pLHJ9cmV0dXJuIGwoaS5kYXRhVHlwZXNbMF0pfHwhc1tcIipcIl0mJmwoXCIqXCIpfWZ1bmN0aW9uIHp0KGUsdCl7dmFyIG4scixpPWsuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zfHx7fTtmb3IobiBpbiB0KXZvaWQgMCE9PXRbbl0mJigoaVtuXT9lOnJ8fChyPXt9KSlbbl09dFtuXSk7cmV0dXJuIHImJmsuZXh0ZW5kKCEwLGUsciksZX1GdC5ocmVmPUV0LmhyZWYsay5leHRlbmQoe2FjdGl2ZTowLGxhc3RNb2RpZmllZDp7fSxldGFnOnt9LGFqYXhTZXR0aW5nczp7dXJsOkV0LmhyZWYsdHlwZTpcIkdFVFwiLGlzTG9jYWw6L14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8udGVzdChFdC5wcm90b2NvbCksZ2xvYmFsOiEwLHByb2Nlc3NEYXRhOiEwLGFzeW5jOiEwLGNvbnRlbnRUeXBlOlwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsYWNjZXB0czp7XCIqXCI6JHQsdGV4dDpcInRleHQvcGxhaW5cIixodG1sOlwidGV4dC9odG1sXCIseG1sOlwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLGpzb246XCJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHRcIn0sY29udGVudHM6e3htbDovXFxieG1sXFxiLyxodG1sOi9cXGJodG1sLyxqc29uOi9cXGJqc29uXFxiL30scmVzcG9uc2VGaWVsZHM6e3htbDpcInJlc3BvbnNlWE1MXCIsdGV4dDpcInJlc3BvbnNlVGV4dFwiLGpzb246XCJyZXNwb25zZUpTT05cIn0sY29udmVydGVyczp7XCIqIHRleHRcIjpTdHJpbmcsXCJ0ZXh0IGh0bWxcIjohMCxcInRleHQganNvblwiOkpTT04ucGFyc2UsXCJ0ZXh0IHhtbFwiOmsucGFyc2VYTUx9LGZsYXRPcHRpb25zOnt1cmw6ITAsY29udGV4dDohMH19LGFqYXhTZXR1cDpmdW5jdGlvbihlLHQpe3JldHVybiB0P3p0KHp0KGUsay5hamF4U2V0dGluZ3MpLHQpOnp0KGsuYWpheFNldHRpbmdzLGUpfSxhamF4UHJlZmlsdGVyOkJ0KEl0KSxhamF4VHJhbnNwb3J0OkJ0KFd0KSxhamF4OmZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGUmJih0PWUsZT12b2lkIDApLHQ9dHx8e307dmFyIGMsZixwLG4sZCxyLGgsZyxpLG8sdj1rLmFqYXhTZXR1cCh7fSx0KSx5PXYuY29udGV4dHx8dixtPXYuY29udGV4dCYmKHkubm9kZVR5cGV8fHkuanF1ZXJ5KT9rKHkpOmsuZXZlbnQseD1rLkRlZmVycmVkKCksYj1rLkNhbGxiYWNrcyhcIm9uY2UgbWVtb3J5XCIpLHc9di5zdGF0dXNDb2RlfHx7fSxhPXt9LHM9e30sdT1cImNhbmNlbGVkXCIsVD17cmVhZHlTdGF0ZTowLGdldFJlc3BvbnNlSGVhZGVyOmZ1bmN0aW9uKGUpe3ZhciB0O2lmKGgpe2lmKCFuKXtuPXt9O3doaWxlKHQ9UHQuZXhlYyhwKSluW3RbMV0udG9Mb3dlckNhc2UoKStcIiBcIl09KG5bdFsxXS50b0xvd2VyQ2FzZSgpK1wiIFwiXXx8W10pLmNvbmNhdCh0WzJdKX10PW5bZS50b0xvd2VyQ2FzZSgpK1wiIFwiXX1yZXR1cm4gbnVsbD09dD9udWxsOnQuam9pbihcIiwgXCIpfSxnZXRBbGxSZXNwb25zZUhlYWRlcnM6ZnVuY3Rpb24oKXtyZXR1cm4gaD9wOm51bGx9LHNldFJlcXVlc3RIZWFkZXI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gbnVsbD09aCYmKGU9c1tlLnRvTG93ZXJDYXNlKCldPXNbZS50b0xvd2VyQ2FzZSgpXXx8ZSxhW2VdPXQpLHRoaXN9LG92ZXJyaWRlTWltZVR5cGU6ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWgmJih2Lm1pbWVUeXBlPWUpLHRoaXN9LHN0YXR1c0NvZGU6ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoZSlpZihoKVQuYWx3YXlzKGVbVC5zdGF0dXNdKTtlbHNlIGZvcih0IGluIGUpd1t0XT1bd1t0XSxlW3RdXTtyZXR1cm4gdGhpc30sYWJvcnQ6ZnVuY3Rpb24oZSl7dmFyIHQ9ZXx8dTtyZXR1cm4gYyYmYy5hYm9ydCh0KSxsKDAsdCksdGhpc319O2lmKHgucHJvbWlzZShUKSx2LnVybD0oKGV8fHYudXJsfHxFdC5ocmVmKStcIlwiKS5yZXBsYWNlKE10LEV0LnByb3RvY29sK1wiLy9cIiksdi50eXBlPXQubWV0aG9kfHx0LnR5cGV8fHYubWV0aG9kfHx2LnR5cGUsdi5kYXRhVHlwZXM9KHYuZGF0YVR5cGV8fFwiKlwiKS50b0xvd2VyQ2FzZSgpLm1hdGNoKFIpfHxbXCJcIl0sbnVsbD09di5jcm9zc0RvbWFpbil7cj1FLmNyZWF0ZUVsZW1lbnQoXCJhXCIpO3RyeXtyLmhyZWY9di51cmwsci5ocmVmPXIuaHJlZix2LmNyb3NzRG9tYWluPUZ0LnByb3RvY29sK1wiLy9cIitGdC5ob3N0IT1yLnByb3RvY29sK1wiLy9cIityLmhvc3R9Y2F0Y2goZSl7di5jcm9zc0RvbWFpbj0hMH19aWYodi5kYXRhJiZ2LnByb2Nlc3NEYXRhJiZcInN0cmluZ1wiIT10eXBlb2Ygdi5kYXRhJiYodi5kYXRhPWsucGFyYW0odi5kYXRhLHYudHJhZGl0aW9uYWwpKSxfdChJdCx2LHQsVCksaClyZXR1cm4gVDtmb3IoaSBpbihnPWsuZXZlbnQmJnYuZ2xvYmFsKSYmMD09ay5hY3RpdmUrKyYmay5ldmVudC50cmlnZ2VyKFwiYWpheFN0YXJ0XCIpLHYudHlwZT12LnR5cGUudG9VcHBlckNhc2UoKSx2Lmhhc0NvbnRlbnQ9IVJ0LnRlc3Qodi50eXBlKSxmPXYudXJsLnJlcGxhY2UoSHQsXCJcIiksdi5oYXNDb250ZW50P3YuZGF0YSYmdi5wcm9jZXNzRGF0YSYmMD09PSh2LmNvbnRlbnRUeXBlfHxcIlwiKS5pbmRleE9mKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpJiYodi5kYXRhPXYuZGF0YS5yZXBsYWNlKEx0LFwiK1wiKSk6KG89di51cmwuc2xpY2UoZi5sZW5ndGgpLHYuZGF0YSYmKHYucHJvY2Vzc0RhdGF8fFwic3RyaW5nXCI9PXR5cGVvZiB2LmRhdGEpJiYoZis9KFN0LnRlc3QoZik/XCImXCI6XCI/XCIpK3YuZGF0YSxkZWxldGUgdi5kYXRhKSwhMT09PXYuY2FjaGUmJihmPWYucmVwbGFjZShPdCxcIiQxXCIpLG89KFN0LnRlc3QoZik/XCImXCI6XCI/XCIpK1wiXz1cIitrdCsrK28pLHYudXJsPWYrbyksdi5pZk1vZGlmaWVkJiYoay5sYXN0TW9kaWZpZWRbZl0mJlQuc2V0UmVxdWVzdEhlYWRlcihcIklmLU1vZGlmaWVkLVNpbmNlXCIsay5sYXN0TW9kaWZpZWRbZl0pLGsuZXRhZ1tmXSYmVC5zZXRSZXF1ZXN0SGVhZGVyKFwiSWYtTm9uZS1NYXRjaFwiLGsuZXRhZ1tmXSkpLCh2LmRhdGEmJnYuaGFzQ29udGVudCYmITEhPT12LmNvbnRlbnRUeXBlfHx0LmNvbnRlbnRUeXBlKSYmVC5zZXRSZXF1ZXN0SGVhZGVyKFwiQ29udGVudC1UeXBlXCIsdi5jb250ZW50VHlwZSksVC5zZXRSZXF1ZXN0SGVhZGVyKFwiQWNjZXB0XCIsdi5kYXRhVHlwZXNbMF0mJnYuYWNjZXB0c1t2LmRhdGFUeXBlc1swXV0/di5hY2NlcHRzW3YuZGF0YVR5cGVzWzBdXSsoXCIqXCIhPT12LmRhdGFUeXBlc1swXT9cIiwgXCIrJHQrXCI7IHE9MC4wMVwiOlwiXCIpOnYuYWNjZXB0c1tcIipcIl0pLHYuaGVhZGVycylULnNldFJlcXVlc3RIZWFkZXIoaSx2LmhlYWRlcnNbaV0pO2lmKHYuYmVmb3JlU2VuZCYmKCExPT09di5iZWZvcmVTZW5kLmNhbGwoeSxULHYpfHxoKSlyZXR1cm4gVC5hYm9ydCgpO2lmKHU9XCJhYm9ydFwiLGIuYWRkKHYuY29tcGxldGUpLFQuZG9uZSh2LnN1Y2Nlc3MpLFQuZmFpbCh2LmVycm9yKSxjPV90KFd0LHYsdCxUKSl7aWYoVC5yZWFkeVN0YXRlPTEsZyYmbS50cmlnZ2VyKFwiYWpheFNlbmRcIixbVCx2XSksaClyZXR1cm4gVDt2LmFzeW5jJiYwPHYudGltZW91dCYmKGQ9Qy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7VC5hYm9ydChcInRpbWVvdXRcIil9LHYudGltZW91dCkpO3RyeXtoPSExLGMuc2VuZChhLGwpfWNhdGNoKGUpe2lmKGgpdGhyb3cgZTtsKC0xLGUpfX1lbHNlIGwoLTEsXCJObyBUcmFuc3BvcnRcIik7ZnVuY3Rpb24gbChlLHQsbixyKXt2YXIgaSxvLGEscyx1LGw9dDtofHwoaD0hMCxkJiZDLmNsZWFyVGltZW91dChkKSxjPXZvaWQgMCxwPXJ8fFwiXCIsVC5yZWFkeVN0YXRlPTA8ZT80OjAsaT0yMDA8PWUmJmU8MzAwfHwzMDQ9PT1lLG4mJihzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcixpLG8sYSxzPWUuY29udGVudHMsdT1lLmRhdGFUeXBlczt3aGlsZShcIipcIj09PXVbMF0pdS5zaGlmdCgpLHZvaWQgMD09PXImJihyPWUubWltZVR5cGV8fHQuZ2V0UmVzcG9uc2VIZWFkZXIoXCJDb250ZW50LVR5cGVcIikpO2lmKHIpZm9yKGkgaW4gcylpZihzW2ldJiZzW2ldLnRlc3Qocikpe3UudW5zaGlmdChpKTticmVha31pZih1WzBdaW4gbilvPXVbMF07ZWxzZXtmb3IoaSBpbiBuKXtpZighdVswXXx8ZS5jb252ZXJ0ZXJzW2krXCIgXCIrdVswXV0pe289aTticmVha31hfHwoYT1pKX1vPW98fGF9aWYobylyZXR1cm4gbyE9PXVbMF0mJnUudW5zaGlmdChvKSxuW29dfSh2LFQsbikpLHM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIGksbyxhLHMsdSxsPXt9LGM9ZS5kYXRhVHlwZXMuc2xpY2UoKTtpZihjWzFdKWZvcihhIGluIGUuY29udmVydGVycylsW2EudG9Mb3dlckNhc2UoKV09ZS5jb252ZXJ0ZXJzW2FdO289Yy5zaGlmdCgpO3doaWxlKG8paWYoZS5yZXNwb25zZUZpZWxkc1tvXSYmKG5bZS5yZXNwb25zZUZpZWxkc1tvXV09dCksIXUmJnImJmUuZGF0YUZpbHRlciYmKHQ9ZS5kYXRhRmlsdGVyKHQsZS5kYXRhVHlwZSkpLHU9byxvPWMuc2hpZnQoKSlpZihcIipcIj09PW8pbz11O2Vsc2UgaWYoXCIqXCIhPT11JiZ1IT09byl7aWYoIShhPWxbdStcIiBcIitvXXx8bFtcIiogXCIrb10pKWZvcihpIGluIGwpaWYoKHM9aS5zcGxpdChcIiBcIikpWzFdPT09byYmKGE9bFt1K1wiIFwiK3NbMF1dfHxsW1wiKiBcIitzWzBdXSkpeyEwPT09YT9hPWxbaV06ITAhPT1sW2ldJiYobz1zWzBdLGMudW5zaGlmdChzWzFdKSk7YnJlYWt9aWYoITAhPT1hKWlmKGEmJmVbXCJ0aHJvd3NcIl0pdD1hKHQpO2Vsc2UgdHJ5e3Q9YSh0KX1jYXRjaChlKXtyZXR1cm57c3RhdGU6XCJwYXJzZXJlcnJvclwiLGVycm9yOmE/ZTpcIk5vIGNvbnZlcnNpb24gZnJvbSBcIit1K1wiIHRvIFwiK299fX1yZXR1cm57c3RhdGU6XCJzdWNjZXNzXCIsZGF0YTp0fX0odixzLFQsaSksaT8odi5pZk1vZGlmaWVkJiYoKHU9VC5nZXRSZXNwb25zZUhlYWRlcihcIkxhc3QtTW9kaWZpZWRcIikpJiYoay5sYXN0TW9kaWZpZWRbZl09dSksKHU9VC5nZXRSZXNwb25zZUhlYWRlcihcImV0YWdcIikpJiYoay5ldGFnW2ZdPXUpKSwyMDQ9PT1lfHxcIkhFQURcIj09PXYudHlwZT9sPVwibm9jb250ZW50XCI6MzA0PT09ZT9sPVwibm90bW9kaWZpZWRcIjoobD1zLnN0YXRlLG89cy5kYXRhLGk9IShhPXMuZXJyb3IpKSk6KGE9bCwhZSYmbHx8KGw9XCJlcnJvclwiLGU8MCYmKGU9MCkpKSxULnN0YXR1cz1lLFQuc3RhdHVzVGV4dD0odHx8bCkrXCJcIixpP3gucmVzb2x2ZVdpdGgoeSxbbyxsLFRdKTp4LnJlamVjdFdpdGgoeSxbVCxsLGFdKSxULnN0YXR1c0NvZGUodyksdz12b2lkIDAsZyYmbS50cmlnZ2VyKGk/XCJhamF4U3VjY2Vzc1wiOlwiYWpheEVycm9yXCIsW1QsdixpP286YV0pLGIuZmlyZVdpdGgoeSxbVCxsXSksZyYmKG0udHJpZ2dlcihcImFqYXhDb21wbGV0ZVwiLFtULHZdKSwtLWsuYWN0aXZlfHxrLmV2ZW50LnRyaWdnZXIoXCJhamF4U3RvcFwiKSkpfXJldHVybiBUfSxnZXRKU09OOmZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gay5nZXQoZSx0LG4sXCJqc29uXCIpfSxnZXRTY3JpcHQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gay5nZXQoZSx2b2lkIDAsdCxcInNjcmlwdFwiKX19KSxrLmVhY2goW1wiZ2V0XCIsXCJwb3N0XCJdLGZ1bmN0aW9uKGUsaSl7a1tpXT1mdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gbSh0KSYmKHI9cnx8bixuPXQsdD12b2lkIDApLGsuYWpheChrLmV4dGVuZCh7dXJsOmUsdHlwZTppLGRhdGFUeXBlOnIsZGF0YTp0LHN1Y2Nlc3M6bn0say5pc1BsYWluT2JqZWN0KGUpJiZlKSl9fSksay5fZXZhbFVybD1mdW5jdGlvbihlLHQpe3JldHVybiBrLmFqYXgoe3VybDplLHR5cGU6XCJHRVRcIixkYXRhVHlwZTpcInNjcmlwdFwiLGNhY2hlOiEwLGFzeW5jOiExLGdsb2JhbDohMSxjb252ZXJ0ZXJzOntcInRleHQgc2NyaXB0XCI6ZnVuY3Rpb24oKXt9fSxkYXRhRmlsdGVyOmZ1bmN0aW9uKGUpe2suZ2xvYmFsRXZhbChlLHQpfX0pfSxrLmZuLmV4dGVuZCh7d3JhcEFsbDpmdW5jdGlvbihlKXt2YXIgdDtyZXR1cm4gdGhpc1swXSYmKG0oZSkmJihlPWUuY2FsbCh0aGlzWzBdKSksdD1rKGUsdGhpc1swXS5vd25lckRvY3VtZW50KS5lcSgwKS5jbG9uZSghMCksdGhpc1swXS5wYXJlbnROb2RlJiZ0Lmluc2VydEJlZm9yZSh0aGlzWzBdKSx0Lm1hcChmdW5jdGlvbigpe3ZhciBlPXRoaXM7d2hpbGUoZS5maXJzdEVsZW1lbnRDaGlsZCllPWUuZmlyc3RFbGVtZW50Q2hpbGQ7cmV0dXJuIGV9KS5hcHBlbmQodGhpcykpLHRoaXN9LHdyYXBJbm5lcjpmdW5jdGlvbihuKXtyZXR1cm4gbShuKT90aGlzLmVhY2goZnVuY3Rpb24oZSl7ayh0aGlzKS53cmFwSW5uZXIobi5jYWxsKHRoaXMsZSkpfSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9ayh0aGlzKSx0PWUuY29udGVudHMoKTt0Lmxlbmd0aD90LndyYXBBbGwobik6ZS5hcHBlbmQobil9KX0sd3JhcDpmdW5jdGlvbih0KXt2YXIgbj1tKHQpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oZSl7ayh0aGlzKS53cmFwQWxsKG4/dC5jYWxsKHRoaXMsZSk6dCl9KX0sdW53cmFwOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnBhcmVudChlKS5ub3QoXCJib2R5XCIpLmVhY2goZnVuY3Rpb24oKXtrKHRoaXMpLnJlcGxhY2VXaXRoKHRoaXMuY2hpbGROb2Rlcyl9KSx0aGlzfX0pLGsuZXhwci5wc2V1ZG9zLmhpZGRlbj1mdW5jdGlvbihlKXtyZXR1cm4hay5leHByLnBzZXVkb3MudmlzaWJsZShlKX0say5leHByLnBzZXVkb3MudmlzaWJsZT1mdW5jdGlvbihlKXtyZXR1cm4hIShlLm9mZnNldFdpZHRofHxlLm9mZnNldEhlaWdodHx8ZS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCl9LGsuYWpheFNldHRpbmdzLnhocj1mdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IEMuWE1MSHR0cFJlcXVlc3R9Y2F0Y2goZSl7fX07dmFyIFV0PXswOjIwMCwxMjIzOjIwNH0sWHQ9ay5hamF4U2V0dGluZ3MueGhyKCk7eS5jb3JzPSEhWHQmJlwid2l0aENyZWRlbnRpYWxzXCJpbiBYdCx5LmFqYXg9WHQ9ISFYdCxrLmFqYXhUcmFuc3BvcnQoZnVuY3Rpb24oaSl7dmFyIG8sYTtpZih5LmNvcnN8fFh0JiYhaS5jcm9zc0RvbWFpbilyZXR1cm57c2VuZDpmdW5jdGlvbihlLHQpe3ZhciBuLHI9aS54aHIoKTtpZihyLm9wZW4oaS50eXBlLGkudXJsLGkuYXN5bmMsaS51c2VybmFtZSxpLnBhc3N3b3JkKSxpLnhockZpZWxkcylmb3IobiBpbiBpLnhockZpZWxkcylyW25dPWkueGhyRmllbGRzW25dO2ZvcihuIGluIGkubWltZVR5cGUmJnIub3ZlcnJpZGVNaW1lVHlwZSYmci5vdmVycmlkZU1pbWVUeXBlKGkubWltZVR5cGUpLGkuY3Jvc3NEb21haW58fGVbXCJYLVJlcXVlc3RlZC1XaXRoXCJdfHwoZVtcIlgtUmVxdWVzdGVkLVdpdGhcIl09XCJYTUxIdHRwUmVxdWVzdFwiKSxlKXIuc2V0UmVxdWVzdEhlYWRlcihuLGVbbl0pO289ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7byYmKG89YT1yLm9ubG9hZD1yLm9uZXJyb3I9ci5vbmFib3J0PXIub250aW1lb3V0PXIub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsXCJhYm9ydFwiPT09ZT9yLmFib3J0KCk6XCJlcnJvclwiPT09ZT9cIm51bWJlclwiIT10eXBlb2Ygci5zdGF0dXM/dCgwLFwiZXJyb3JcIik6dChyLnN0YXR1cyxyLnN0YXR1c1RleHQpOnQoVXRbci5zdGF0dXNdfHxyLnN0YXR1cyxyLnN0YXR1c1RleHQsXCJ0ZXh0XCIhPT0oci5yZXNwb25zZVR5cGV8fFwidGV4dFwiKXx8XCJzdHJpbmdcIiE9dHlwZW9mIHIucmVzcG9uc2VUZXh0P3tiaW5hcnk6ci5yZXNwb25zZX06e3RleHQ6ci5yZXNwb25zZVRleHR9LHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpKX19LHIub25sb2FkPW8oKSxhPXIub25lcnJvcj1yLm9udGltZW91dD1vKFwiZXJyb3JcIiksdm9pZCAwIT09ci5vbmFib3J0P3Iub25hYm9ydD1hOnIub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7ND09PXIucmVhZHlTdGF0ZSYmQy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7byYmYSgpfSl9LG89byhcImFib3J0XCIpO3RyeXtyLnNlbmQoaS5oYXNDb250ZW50JiZpLmRhdGF8fG51bGwpfWNhdGNoKGUpe2lmKG8pdGhyb3cgZX19LGFib3J0OmZ1bmN0aW9uKCl7byYmbygpfX19KSxrLmFqYXhQcmVmaWx0ZXIoZnVuY3Rpb24oZSl7ZS5jcm9zc0RvbWFpbiYmKGUuY29udGVudHMuc2NyaXB0PSExKX0pLGsuYWpheFNldHVwKHthY2NlcHRzOntzY3JpcHQ6XCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwifSxjb250ZW50czp7c2NyaXB0Oi9cXGIoPzpqYXZhfGVjbWEpc2NyaXB0XFxiL30sY29udmVydGVyczp7XCJ0ZXh0IHNjcmlwdFwiOmZ1bmN0aW9uKGUpe3JldHVybiBrLmdsb2JhbEV2YWwoZSksZX19fSksay5hamF4UHJlZmlsdGVyKFwic2NyaXB0XCIsZnVuY3Rpb24oZSl7dm9pZCAwPT09ZS5jYWNoZSYmKGUuY2FjaGU9ITEpLGUuY3Jvc3NEb21haW4mJihlLnR5cGU9XCJHRVRcIil9KSxrLmFqYXhUcmFuc3BvcnQoXCJzY3JpcHRcIixmdW5jdGlvbihuKXt2YXIgcixpO2lmKG4uY3Jvc3NEb21haW58fG4uc2NyaXB0QXR0cnMpcmV0dXJue3NlbmQ6ZnVuY3Rpb24oZSx0KXtyPWsoXCI8c2NyaXB0PlwiKS5hdHRyKG4uc2NyaXB0QXR0cnN8fHt9KS5wcm9wKHtjaGFyc2V0Om4uc2NyaXB0Q2hhcnNldCxzcmM6bi51cmx9KS5vbihcImxvYWQgZXJyb3JcIixpPWZ1bmN0aW9uKGUpe3IucmVtb3ZlKCksaT1udWxsLGUmJnQoXCJlcnJvclwiPT09ZS50eXBlPzQwNDoyMDAsZS50eXBlKX0pLEUuaGVhZC5hcHBlbmRDaGlsZChyWzBdKX0sYWJvcnQ6ZnVuY3Rpb24oKXtpJiZpKCl9fX0pO3ZhciBWdCxHdD1bXSxZdD0vKD0pXFw/KD89JnwkKXxcXD9cXD8vO2suYWpheFNldHVwKHtqc29ucDpcImNhbGxiYWNrXCIsanNvbnBDYWxsYmFjazpmdW5jdGlvbigpe3ZhciBlPUd0LnBvcCgpfHxrLmV4cGFuZG8rXCJfXCIra3QrKztyZXR1cm4gdGhpc1tlXT0hMCxlfX0pLGsuYWpheFByZWZpbHRlcihcImpzb24ganNvbnBcIixmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGE9ITEhPT1lLmpzb25wJiYoWXQudGVzdChlLnVybCk/XCJ1cmxcIjpcInN0cmluZ1wiPT10eXBlb2YgZS5kYXRhJiYwPT09KGUuY29udGVudFR5cGV8fFwiXCIpLmluZGV4T2YoXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikmJll0LnRlc3QoZS5kYXRhKSYmXCJkYXRhXCIpO2lmKGF8fFwianNvbnBcIj09PWUuZGF0YVR5cGVzWzBdKXJldHVybiByPWUuanNvbnBDYWxsYmFjaz1tKGUuanNvbnBDYWxsYmFjayk/ZS5qc29ucENhbGxiYWNrKCk6ZS5qc29ucENhbGxiYWNrLGE/ZVthXT1lW2FdLnJlcGxhY2UoWXQsXCIkMVwiK3IpOiExIT09ZS5qc29ucCYmKGUudXJsKz0oU3QudGVzdChlLnVybCk/XCImXCI6XCI/XCIpK2UuanNvbnArXCI9XCIrciksZS5jb252ZXJ0ZXJzW1wic2NyaXB0IGpzb25cIl09ZnVuY3Rpb24oKXtyZXR1cm4gb3x8ay5lcnJvcihyK1wiIHdhcyBub3QgY2FsbGVkXCIpLG9bMF19LGUuZGF0YVR5cGVzWzBdPVwianNvblwiLGk9Q1tyXSxDW3JdPWZ1bmN0aW9uKCl7bz1hcmd1bWVudHN9LG4uYWx3YXlzKGZ1bmN0aW9uKCl7dm9pZCAwPT09aT9rKEMpLnJlbW92ZVByb3Aocik6Q1tyXT1pLGVbcl0mJihlLmpzb25wQ2FsbGJhY2s9dC5qc29ucENhbGxiYWNrLEd0LnB1c2gocikpLG8mJm0oaSkmJmkob1swXSksbz1pPXZvaWQgMH0pLFwic2NyaXB0XCJ9KSx5LmNyZWF0ZUhUTUxEb2N1bWVudD0oKFZ0PUUuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KFwiXCIpLmJvZHkpLmlubmVySFRNTD1cIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCIsMj09PVZ0LmNoaWxkTm9kZXMubGVuZ3RoKSxrLnBhcnNlSFRNTD1mdW5jdGlvbihlLHQsbil7cmV0dXJuXCJzdHJpbmdcIiE9dHlwZW9mIGU/W106KFwiYm9vbGVhblwiPT10eXBlb2YgdCYmKG49dCx0PSExKSx0fHwoeS5jcmVhdGVIVE1MRG9jdW1lbnQ/KChyPSh0PUUuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KFwiXCIpKS5jcmVhdGVFbGVtZW50KFwiYmFzZVwiKSkuaHJlZj1FLmxvY2F0aW9uLmhyZWYsdC5oZWFkLmFwcGVuZENoaWxkKHIpKTp0PUUpLG89IW4mJltdLChpPUQuZXhlYyhlKSk/W3QuY3JlYXRlRWxlbWVudChpWzFdKV06KGk9d2UoW2VdLHQsbyksbyYmby5sZW5ndGgmJmsobykucmVtb3ZlKCksay5tZXJnZShbXSxpLmNoaWxkTm9kZXMpKSk7dmFyIHIsaSxvfSxrLmZuLmxvYWQ9ZnVuY3Rpb24oZSx0LG4pe3ZhciByLGksbyxhPXRoaXMscz1lLmluZGV4T2YoXCIgXCIpO3JldHVybi0xPHMmJihyPW10KGUuc2xpY2UocykpLGU9ZS5zbGljZSgwLHMpKSxtKHQpPyhuPXQsdD12b2lkIDApOnQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiYoaT1cIlBPU1RcIiksMDxhLmxlbmd0aCYmay5hamF4KHt1cmw6ZSx0eXBlOml8fFwiR0VUXCIsZGF0YVR5cGU6XCJodG1sXCIsZGF0YTp0fSkuZG9uZShmdW5jdGlvbihlKXtvPWFyZ3VtZW50cyxhLmh0bWwocj9rKFwiPGRpdj5cIikuYXBwZW5kKGsucGFyc2VIVE1MKGUpKS5maW5kKHIpOmUpfSkuYWx3YXlzKG4mJmZ1bmN0aW9uKGUsdCl7YS5lYWNoKGZ1bmN0aW9uKCl7bi5hcHBseSh0aGlzLG98fFtlLnJlc3BvbnNlVGV4dCx0LGVdKX0pfSksdGhpc30say5lYWNoKFtcImFqYXhTdGFydFwiLFwiYWpheFN0b3BcIixcImFqYXhDb21wbGV0ZVwiLFwiYWpheEVycm9yXCIsXCJhamF4U3VjY2Vzc1wiLFwiYWpheFNlbmRcIl0sZnVuY3Rpb24oZSx0KXtrLmZuW3RdPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm9uKHQsZSl9fSksay5leHByLnBzZXVkb3MuYW5pbWF0ZWQ9ZnVuY3Rpb24odCl7cmV0dXJuIGsuZ3JlcChrLnRpbWVycyxmdW5jdGlvbihlKXtyZXR1cm4gdD09PWUuZWxlbX0pLmxlbmd0aH0say5vZmZzZXQ9e3NldE9mZnNldDpmdW5jdGlvbihlLHQsbil7dmFyIHIsaSxvLGEscyx1LGw9ay5jc3MoZSxcInBvc2l0aW9uXCIpLGM9ayhlKSxmPXt9O1wic3RhdGljXCI9PT1sJiYoZS5zdHlsZS5wb3NpdGlvbj1cInJlbGF0aXZlXCIpLHM9Yy5vZmZzZXQoKSxvPWsuY3NzKGUsXCJ0b3BcIiksdT1rLmNzcyhlLFwibGVmdFwiKSwoXCJhYnNvbHV0ZVwiPT09bHx8XCJmaXhlZFwiPT09bCkmJi0xPChvK3UpLmluZGV4T2YoXCJhdXRvXCIpPyhhPShyPWMucG9zaXRpb24oKSkudG9wLGk9ci5sZWZ0KTooYT1wYXJzZUZsb2F0KG8pfHwwLGk9cGFyc2VGbG9hdCh1KXx8MCksbSh0KSYmKHQ9dC5jYWxsKGUsbixrLmV4dGVuZCh7fSxzKSkpLG51bGwhPXQudG9wJiYoZi50b3A9dC50b3Atcy50b3ArYSksbnVsbCE9dC5sZWZ0JiYoZi5sZWZ0PXQubGVmdC1zLmxlZnQraSksXCJ1c2luZ1wiaW4gdD90LnVzaW5nLmNhbGwoZSxmKTpjLmNzcyhmKX19LGsuZm4uZXh0ZW5kKHtvZmZzZXQ6ZnVuY3Rpb24odCl7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdm9pZCAwPT09dD90aGlzOnRoaXMuZWFjaChmdW5jdGlvbihlKXtrLm9mZnNldC5zZXRPZmZzZXQodGhpcyx0LGUpfSk7dmFyIGUsbixyPXRoaXNbMF07cmV0dXJuIHI/ci5nZXRDbGllbnRSZWN0cygpLmxlbmd0aD8oZT1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLG49ci5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3LHt0b3A6ZS50b3Arbi5wYWdlWU9mZnNldCxsZWZ0OmUubGVmdCtuLnBhZ2VYT2Zmc2V0fSk6e3RvcDowLGxlZnQ6MH06dm9pZCAwfSxwb3NpdGlvbjpmdW5jdGlvbigpe2lmKHRoaXNbMF0pe3ZhciBlLHQsbixyPXRoaXNbMF0saT17dG9wOjAsbGVmdDowfTtpZihcImZpeGVkXCI9PT1rLmNzcyhyLFwicG9zaXRpb25cIikpdD1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2Vsc2V7dD10aGlzLm9mZnNldCgpLG49ci5vd25lckRvY3VtZW50LGU9ci5vZmZzZXRQYXJlbnR8fG4uZG9jdW1lbnRFbGVtZW50O3doaWxlKGUmJihlPT09bi5ib2R5fHxlPT09bi5kb2N1bWVudEVsZW1lbnQpJiZcInN0YXRpY1wiPT09ay5jc3MoZSxcInBvc2l0aW9uXCIpKWU9ZS5wYXJlbnROb2RlO2UmJmUhPT1yJiYxPT09ZS5ub2RlVHlwZSYmKChpPWsoZSkub2Zmc2V0KCkpLnRvcCs9ay5jc3MoZSxcImJvcmRlclRvcFdpZHRoXCIsITApLGkubGVmdCs9ay5jc3MoZSxcImJvcmRlckxlZnRXaWR0aFwiLCEwKSl9cmV0dXJue3RvcDp0LnRvcC1pLnRvcC1rLmNzcyhyLFwibWFyZ2luVG9wXCIsITApLGxlZnQ6dC5sZWZ0LWkubGVmdC1rLmNzcyhyLFwibWFyZ2luTGVmdFwiLCEwKX19fSxvZmZzZXRQYXJlbnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9mZnNldFBhcmVudDt3aGlsZShlJiZcInN0YXRpY1wiPT09ay5jc3MoZSxcInBvc2l0aW9uXCIpKWU9ZS5vZmZzZXRQYXJlbnQ7cmV0dXJuIGV8fGllfSl9fSksay5lYWNoKHtzY3JvbGxMZWZ0OlwicGFnZVhPZmZzZXRcIixzY3JvbGxUb3A6XCJwYWdlWU9mZnNldFwifSxmdW5jdGlvbih0LGkpe3ZhciBvPVwicGFnZVlPZmZzZXRcIj09PWk7ay5mblt0XT1mdW5jdGlvbihlKXtyZXR1cm4gXyh0aGlzLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcjtpZih4KGUpP3I9ZTo5PT09ZS5ub2RlVHlwZSYmKHI9ZS5kZWZhdWx0Vmlldyksdm9pZCAwPT09bilyZXR1cm4gcj9yW2ldOmVbdF07cj9yLnNjcm9sbFRvKG8/ci5wYWdlWE9mZnNldDpuLG8/bjpyLnBhZ2VZT2Zmc2V0KTplW3RdPW59LHQsZSxhcmd1bWVudHMubGVuZ3RoKX19KSxrLmVhY2goW1widG9wXCIsXCJsZWZ0XCJdLGZ1bmN0aW9uKGUsbil7ay5jc3NIb29rc1tuXT16ZSh5LnBpeGVsUG9zaXRpb24sZnVuY3Rpb24oZSx0KXtpZih0KXJldHVybiB0PV9lKGUsbiksJGUudGVzdCh0KT9rKGUpLnBvc2l0aW9uKClbbl0rXCJweFwiOnR9KX0pLGsuZWFjaCh7SGVpZ2h0OlwiaGVpZ2h0XCIsV2lkdGg6XCJ3aWR0aFwifSxmdW5jdGlvbihhLHMpe2suZWFjaCh7cGFkZGluZzpcImlubmVyXCIrYSxjb250ZW50OnMsXCJcIjpcIm91dGVyXCIrYX0sZnVuY3Rpb24ocixvKXtrLmZuW29dPWZ1bmN0aW9uKGUsdCl7dmFyIG49YXJndW1lbnRzLmxlbmd0aCYmKHJ8fFwiYm9vbGVhblwiIT10eXBlb2YgZSksaT1yfHwoITA9PT1lfHwhMD09PXQ/XCJtYXJnaW5cIjpcImJvcmRlclwiKTtyZXR1cm4gXyh0aGlzLGZ1bmN0aW9uKGUsdCxuKXt2YXIgcjtyZXR1cm4geChlKT8wPT09by5pbmRleE9mKFwib3V0ZXJcIik/ZVtcImlubmVyXCIrYV06ZS5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnRbXCJjbGllbnRcIithXTo5PT09ZS5ub2RlVHlwZT8ocj1lLmRvY3VtZW50RWxlbWVudCxNYXRoLm1heChlLmJvZHlbXCJzY3JvbGxcIithXSxyW1wic2Nyb2xsXCIrYV0sZS5ib2R5W1wib2Zmc2V0XCIrYV0scltcIm9mZnNldFwiK2FdLHJbXCJjbGllbnRcIithXSkpOnZvaWQgMD09PW4/ay5jc3MoZSx0LGkpOmsuc3R5bGUoZSx0LG4saSl9LHMsbj9lOnZvaWQgMCxuKX19KX0pLGsuZWFjaChcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrIG1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIGNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgY29udGV4dG1lbnVcIi5zcGxpdChcIiBcIiksZnVuY3Rpb24oZSxuKXtrLmZuW25dPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIDA8YXJndW1lbnRzLmxlbmd0aD90aGlzLm9uKG4sbnVsbCxlLHQpOnRoaXMudHJpZ2dlcihuKX19KSxrLmZuLmV4dGVuZCh7aG92ZXI6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5tb3VzZWVudGVyKGUpLm1vdXNlbGVhdmUodHx8ZSl9fSksay5mbi5leHRlbmQoe2JpbmQ6ZnVuY3Rpb24oZSx0LG4pe3JldHVybiB0aGlzLm9uKGUsbnVsbCx0LG4pfSx1bmJpbmQ6ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdGhpcy5vZmYoZSxudWxsLHQpfSxkZWxlZ2F0ZTpmdW5jdGlvbihlLHQsbixyKXtyZXR1cm4gdGhpcy5vbih0LGUsbixyKX0sdW5kZWxlZ2F0ZTpmdW5jdGlvbihlLHQsbil7cmV0dXJuIDE9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMub2ZmKGUsXCIqKlwiKTp0aGlzLm9mZih0LGV8fFwiKipcIixuKX19KSxrLnByb3h5PWZ1bmN0aW9uKGUsdCl7dmFyIG4scixpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiYobj1lW3RdLHQ9ZSxlPW4pLG0oZSkpcmV0dXJuIHI9cy5jYWxsKGFyZ3VtZW50cywyKSwoaT1mdW5jdGlvbigpe3JldHVybiBlLmFwcGx5KHR8fHRoaXMsci5jb25jYXQocy5jYWxsKGFyZ3VtZW50cykpKX0pLmd1aWQ9ZS5ndWlkPWUuZ3VpZHx8ay5ndWlkKyssaX0say5ob2xkUmVhZHk9ZnVuY3Rpb24oZSl7ZT9rLnJlYWR5V2FpdCsrOmsucmVhZHkoITApfSxrLmlzQXJyYXk9QXJyYXkuaXNBcnJheSxrLnBhcnNlSlNPTj1KU09OLnBhcnNlLGsubm9kZU5hbWU9QSxrLmlzRnVuY3Rpb249bSxrLmlzV2luZG93PXgsay5jYW1lbENhc2U9VixrLnR5cGU9dyxrLm5vdz1EYXRlLm5vdyxrLmlzTnVtZXJpYz1mdW5jdGlvbihlKXt2YXIgdD1rLnR5cGUoZSk7cmV0dXJuKFwibnVtYmVyXCI9PT10fHxcInN0cmluZ1wiPT09dCkmJiFpc05hTihlLXBhcnNlRmxvYXQoZSkpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQmJmRlZmluZShcImpxdWVyeVwiLFtdLGZ1bmN0aW9uKCl7cmV0dXJuIGt9KTt2YXIgUXQ9Qy5qUXVlcnksSnQ9Qy4kO3JldHVybiBrLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oZSl7cmV0dXJuIEMuJD09PWsmJihDLiQ9SnQpLGUmJkMualF1ZXJ5PT09ayYmKEMualF1ZXJ5PVF0KSxrfSxlfHwoQy5qUXVlcnk9Qy4kPWspLGt9KTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnJlc29sdmVkXG5jb25zdCBqcXVlcnkgPSByZXF1aXJlKCAnLi4vLi4vbm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5taW4nICk7XG5cbmdsb2JhbC5qUXVlcnkgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG5jb25zdCB1c2VyU3RhdGVTZWxlY3Rpb24gPSAkKCAnI3VzZXJfc3RhdGUnICk7XG5jb25zdCBzaGlwcGluZ1N0YXRlU2VsZWN0aW9uID0gJCggJyNzaGlwcGluZ191c2VyX3N0YXRlJyApO1xuXG5mdW5jdGlvbiBzZXRTdGF0ZVNlbGVjdCggc3RhdGVzICkge1xuICBmb3IgKCBsZXQgaW5kZXggPSAwOyBpbmRleCA8IHN0YXRlcy5sZW5ndGg7IGluZGV4ICs9IDEgKSB7XG4gICAgdXNlclN0YXRlU2VsZWN0aW9uLmFwcGVuZCggJCggJzxvcHRpb24+PC9vcHRpb24+JyApXG4gICAgICAudmFsKCBpbmRleCArIDEgKVxuICAgICAgLmh0bWwoIHN0YXRlc1sgaW5kZXggXS5uYW1lICkgKTtcbiAgICBzaGlwcGluZ1N0YXRlU2VsZWN0aW9uLmFwcGVuZCggJCggJzxvcHRpb24+PC9vcHRpb24+JyApXG4gICAgICAudmFsKCBpbmRleCArIDEgKVxuICAgICAgLmh0bWwoIHN0YXRlc1sgaW5kZXggXS5uYW1lICkgKTtcbiAgfVxufVxuXG4kKCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKCAnQXR0ZW1wdGluZyB0byBHRVQgc3RhdGVzLi4uJyApO1xuXG4gICQuYWpheCh7XG4gICAgdXJsOiAnL3N0YXRlcycsXG4gICAgdHlwZTogJ0dFVCcsXG4gICAgc3VjY2VzczogKCBzdGF0ZXMgKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyggc3RhdGVzICk7XG4gICAgICBjb25zb2xlLmxvZyggc3RhdGVzLnN0YXRlcy5sZW5ndGggKTtcbiAgICAgIGNvbnNvbGUubG9nKCBzdGF0ZXMuc3RhdGVzWyAwIF0ubmFtZSApO1xuXG4gICAgICBzZXRTdGF0ZVNlbGVjdCggc3RhdGVzLnN0YXRlcyApO1xuICAgIH0sXG4gICAgZXJyb3IoIHgsIGUgKSB7XG4gICAgICBjb25zb2xlLmxvZyggZSwgeCApO1xuICAgIH1cbiAgfSk7XG5cbiAgLy8gJC5lYWNoKCBzdGF0ZXNBcnJheSwgKCB2YWx1ZSwgc3RhdGUgKSA9PiB7XG4gIC8vICAgdXNlclN0YXRlU2VsZWN0aW9uLmFwcGVuZCggJCggJzxvcHRpb24+PC9vcHRpb24+JyApLnZhbCggdmFsdWUgKVxuICAvLyAgICAgLmh0bWwoIGAke3N0YXRlLm5hbWV9YCApICk7XG4gIC8vICAgc2hpcHBpbmdTdGF0ZVNlbGVjdGlvbi5hcHBlbmQoICQoICc8b3B0aW9uPjwvb3B0aW9uPicgKS52YWwoIHZhbHVlIClcbiAgLy8gICAgIC5odG1sKCBgJHtzdGF0ZS5uYW1lfWAgKSApO1xuICAvLyB9KTtcblxufSk7XG4iLCJpbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkubWluJztcbmltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL2pxdWVyeS11aS1kaXN0L2pxdWVyeS11aS5taW4nO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9uby11bnJlc29sdmVkXG5pbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9qcXVlcnktdWktZGlzdC9qcXVlcnktdWkubWluLmNzcyc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgaW1wb3J0L25vLXVucmVzb2x2ZWRcbmltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL2pxdWVyeS12YWxpZGF0aW9uL2Rpc3QvanF1ZXJ5LnZhbGlkYXRlLm1pbic7XG5cblxuaW1wb3J0ICcuLi9hc3NldHMvSW1hZ2VzL2NyZWF0ZS1hY2NvdW50LWljb24uanBnJztcbmltcG9ydCAnLi4vYXNzZXRzL0ltYWdlcy9zaWduLWludG8tYWNjb3VudC1pY29uLmpwZyc7XG5cbi8vIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tdWx0aS1hc3NpZ25cbi8vIHdpbmRvdy4kID0gd2luZG93LmpRdWVyeSA9IHJlcXVpcmUoICdqcXVlcnknICk7XG5cbmltcG9ydCBsb2FkUHJvZHVjdHMgZnJvbSAnLi9sb2FkLXByb2R1Y3RzJztcbmltcG9ydCBsb2FkU3RhdGVzIGZyb20gJy4vbG9hZC1zdGF0ZXMnO1xuaW1wb3J0IG5hdmlnYXRpb25CdXR0b25zIGZyb20gJy4vbmF2aWdhdGlvbi1idXR0b25zJztcbmltcG9ydCBzYXZlT3JkZXJJbmZvcm1hdGlvbiBmcm9tICcuL3NhdmUtb3JkZXItaW5mb3JtYXRpb24nO1xuaW1wb3J0IHNhdmVQYXltZW50SW5mb3JtYXRpb24gZnJvbSAnLi9zYXZlLXBheW1lbnQtaW5mb3JtYXRpb24nO1xuaW1wb3J0IHNhdmVTaGlwcGluZ0luZm9ybWF0aW9uIGZyb20gJy4vc2F2ZS1zaGlwcGluZy1pbmZvcm1hdGlvbic7XG5pbXBvcnQgc2F2ZVVzZXJJbmZvcm1hdGlvbiBmcm9tICcuL3NhdmUtdXNlci1pbmZvcm1hdGlvbic7XG5pbXBvcnQgc2hvcHBpbmdDYXJ0IGZyb20gJy4vc2hvcHBpbmctY2FydCc7XG5pbXBvcnQgdmFsaWRhdGVBY2NvdW50Rm9ybSBmcm9tICcuL3ZhbGlkYXRlLWFjY291bnQtZm9ybSc7XG5pbXBvcnQgdmFsaWRhdGVDaGVja291dEZvcm0gZnJvbSAnLi92YWxpZGF0ZS1jaGVja291dC1mb3JtJztcbmltcG9ydCB2YWxpZGF0ZVNoaXBwaW5nRm9ybSBmcm9tICcuL3ZhbGlkYXRlLXNoaXBwaW5nLWZvcm0nO1xuaW1wb3J0IGNsb3NpbmdBcHBsaWNhdGlvbiBmcm9tICcuL2FwcGxpY2F0aW9uLWNsb3NlZCc7XG5cbmltcG9ydCAnLi9hcHBsaWNhdGlvbi1zdGF0ZSc7XG5pbXBvcnQgJy4vdmFsaWRhdGUtdXNlci1mb3JtJztcblxuY29uc29sZS5sb2coIGxvYWRTdGF0ZXMgKTtcblxucmVxdWlyZSggJy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yJyApO1xuLy8gcmVxdWlyZSggJ3dlYnBhY2staG90LW1pZGRsZXdhcmUvY2xpZW50JyApO1xucmVxdWlyZSggJy4uL3N0eWxlc2hlZXRzL3N0eWxlLmNzcycgKTtcblxuY29uc3QgJCA9IHJlcXVpcmUoICcuLi8uLi9ub2RlX21vZHVsZXMvanF1ZXJ5L2Rpc3QvanF1ZXJ5Lm1pbicgKTtcblxuZ2xvYmFsLmpRdWVyeSA9IHJlcXVpcmUoICdqcXVlcnknICk7XG5cbiQoICgpID0+IHtcbiAgbG9hZFByb2R1Y3RzKCk7XG4gIGxvYWRTdGF0ZXMoKTtcbiAgbmF2aWdhdGlvbkJ1dHRvbnMoKTtcbiAgc2F2ZU9yZGVySW5mb3JtYXRpb24oKTtcbiAgc2F2ZVBheW1lbnRJbmZvcm1hdGlvbigpO1xuICBzYXZlU2hpcHBpbmdJbmZvcm1hdGlvbigpO1xuICBzYXZlVXNlckluZm9ybWF0aW9uKCk7XG4gIHNob3BwaW5nQ2FydCgpO1xuICB2YWxpZGF0ZUNoZWNrb3V0Rm9ybSgpO1xuICB2YWxpZGF0ZUFjY291bnRGb3JtKCk7XG4gIHZhbGlkYXRlU2hpcHBpbmdGb3JtKCk7XG4gIGNsb3NpbmdBcHBsaWNhdGlvbigpO1xufSk7XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1tdWx0aS1hc3NpZ25cbm1vZHVsZS5leHBvcnRzID0gJC5mbi5pc1ZhbGlkID0gZnVuY3Rpb24gaXNWYWxpZCgpIHtcbiAgcmV0dXJuIHRoaXNbIDAgXS5jaGVja1ZhbGlkaXR5KCk7XG59O1xuIiwiLy8gQ29weXJpZ2h0IEpveWVudCwgSW5jLiBhbmQgb3RoZXIgTm9kZSBjb250cmlidXRvcnMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGFcbi8vIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGVcbi8vIFwiU29mdHdhcmVcIiksIHRvIGRlYWwgaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZ1xuLy8gd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHMgdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLFxuLy8gZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdFxuLy8gcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpcyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlXG4vLyBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZFxuLy8gaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTU1xuLy8gT1IgSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRlxuLy8gTUVSQ0hBTlRBQklMSVRZLCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTlxuLy8gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXG4vLyBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1Jcbi8vIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEVcbi8vIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgfHxcbiAgZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhvYmopIHtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iaik7XG4gICAgdmFyIGRlc2NyaXB0b3JzID0ge307XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBkZXNjcmlwdG9yc1trZXlzW2ldXSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXlzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIGRlc2NyaXB0b3JzO1xuICB9O1xuXG52YXIgZm9ybWF0UmVnRXhwID0gLyVbc2RqJV0vZztcbmV4cG9ydHMuZm9ybWF0ID0gZnVuY3Rpb24oZikge1xuICBpZiAoIWlzU3RyaW5nKGYpKSB7XG4gICAgdmFyIG9iamVjdHMgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqZWN0cy5wdXNoKGluc3BlY3QoYXJndW1lbnRzW2ldKSk7XG4gICAgfVxuICAgIHJldHVybiBvYmplY3RzLmpvaW4oJyAnKTtcbiAgfVxuXG4gIHZhciBpID0gMTtcbiAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gIHZhciBsZW4gPSBhcmdzLmxlbmd0aDtcbiAgdmFyIHN0ciA9IFN0cmluZyhmKS5yZXBsYWNlKGZvcm1hdFJlZ0V4cCwgZnVuY3Rpb24oeCkge1xuICAgIGlmICh4ID09PSAnJSUnKSByZXR1cm4gJyUnO1xuICAgIGlmIChpID49IGxlbikgcmV0dXJuIHg7XG4gICAgc3dpdGNoICh4KSB7XG4gICAgICBjYXNlICclcyc6IHJldHVybiBTdHJpbmcoYXJnc1tpKytdKTtcbiAgICAgIGNhc2UgJyVkJzogcmV0dXJuIE51bWJlcihhcmdzW2krK10pO1xuICAgICAgY2FzZSAnJWonOlxuICAgICAgICB0cnkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmdzW2krK10pO1xuICAgICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgICAgcmV0dXJuICdbQ2lyY3VsYXJdJztcbiAgICAgICAgfVxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHg7XG4gICAgfVxuICB9KTtcbiAgZm9yICh2YXIgeCA9IGFyZ3NbaV07IGkgPCBsZW47IHggPSBhcmdzWysraV0pIHtcbiAgICBpZiAoaXNOdWxsKHgpIHx8ICFpc09iamVjdCh4KSkge1xuICAgICAgc3RyICs9ICcgJyArIHg7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ciArPSAnICcgKyBpbnNwZWN0KHgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gc3RyO1xufTtcblxuXG4vLyBNYXJrIHRoYXQgYSBtZXRob2Qgc2hvdWxkIG5vdCBiZSB1c2VkLlxuLy8gUmV0dXJucyBhIG1vZGlmaWVkIGZ1bmN0aW9uIHdoaWNoIHdhcm5zIG9uY2UgYnkgZGVmYXVsdC5cbi8vIElmIC0tbm8tZGVwcmVjYXRpb24gaXMgc2V0LCB0aGVuIGl0IGlzIGEgbm8tb3AuXG5leHBvcnRzLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKGZuLCBtc2cpIHtcbiAgaWYgKHR5cGVvZiBwcm9jZXNzICE9PSAndW5kZWZpbmVkJyAmJiBwcm9jZXNzLm5vRGVwcmVjYXRpb24gPT09IHRydWUpIHtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICAvLyBBbGxvdyBmb3IgZGVwcmVjYXRpbmcgdGhpbmdzIGluIHRoZSBwcm9jZXNzIG9mIHN0YXJ0aW5nIHVwLlxuICBpZiAodHlwZW9mIHByb2Nlc3MgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGV4cG9ydHMuZGVwcmVjYXRlKGZuLCBtc2cpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgfVxuXG4gIHZhciB3YXJuZWQgPSBmYWxzZTtcbiAgZnVuY3Rpb24gZGVwcmVjYXRlZCgpIHtcbiAgICBpZiAoIXdhcm5lZCkge1xuICAgICAgaWYgKHByb2Nlc3MudGhyb3dEZXByZWNhdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnKTtcbiAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy50cmFjZURlcHJlY2F0aW9uKSB7XG4gICAgICAgIGNvbnNvbGUudHJhY2UobXNnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IobXNnKTtcbiAgICAgIH1cbiAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZWQ7XG59O1xuXG5cbnZhciBkZWJ1Z3MgPSB7fTtcbnZhciBkZWJ1Z0Vudmlyb247XG5leHBvcnRzLmRlYnVnbG9nID0gZnVuY3Rpb24oc2V0KSB7XG4gIGlmIChpc1VuZGVmaW5lZChkZWJ1Z0Vudmlyb24pKVxuICAgIGRlYnVnRW52aXJvbiA9IHByb2Nlc3MuZW52Lk5PREVfREVCVUcgfHwgJyc7XG4gIHNldCA9IHNldC50b1VwcGVyQ2FzZSgpO1xuICBpZiAoIWRlYnVnc1tzZXRdKSB7XG4gICAgaWYgKG5ldyBSZWdFeHAoJ1xcXFxiJyArIHNldCArICdcXFxcYicsICdpJykudGVzdChkZWJ1Z0Vudmlyb24pKSB7XG4gICAgICB2YXIgcGlkID0gcHJvY2Vzcy5waWQ7XG4gICAgICBkZWJ1Z3Nbc2V0XSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgbXNnID0gZXhwb3J0cy5mb3JtYXQuYXBwbHkoZXhwb3J0cywgYXJndW1lbnRzKTtcbiAgICAgICAgY29uc29sZS5lcnJvcignJXMgJWQ6ICVzJywgc2V0LCBwaWQsIG1zZyk7XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWJ1Z3Nbc2V0XSA9IGZ1bmN0aW9uKCkge307XG4gICAgfVxuICB9XG4gIHJldHVybiBkZWJ1Z3Nbc2V0XTtcbn07XG5cblxuLyoqXG4gKiBFY2hvcyB0aGUgdmFsdWUgb2YgYSB2YWx1ZS4gVHJ5cyB0byBwcmludCB0aGUgdmFsdWUgb3V0XG4gKiBpbiB0aGUgYmVzdCB3YXkgcG9zc2libGUgZ2l2ZW4gdGhlIGRpZmZlcmVudCB0eXBlcy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqIFRoZSBvYmplY3QgdG8gcHJpbnQgb3V0LlxuICogQHBhcmFtIHtPYmplY3R9IG9wdHMgT3B0aW9uYWwgb3B0aW9ucyBvYmplY3QgdGhhdCBhbHRlcnMgdGhlIG91dHB1dC5cbiAqL1xuLyogbGVnYWN5OiBvYmosIHNob3dIaWRkZW4sIGRlcHRoLCBjb2xvcnMqL1xuZnVuY3Rpb24gaW5zcGVjdChvYmosIG9wdHMpIHtcbiAgLy8gZGVmYXVsdCBvcHRpb25zXG4gIHZhciBjdHggPSB7XG4gICAgc2VlbjogW10sXG4gICAgc3R5bGl6ZTogc3R5bGl6ZU5vQ29sb3JcbiAgfTtcbiAgLy8gbGVnYWN5Li4uXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID49IDMpIGN0eC5kZXB0aCA9IGFyZ3VtZW50c1syXTtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPj0gNCkgY3R4LmNvbG9ycyA9IGFyZ3VtZW50c1szXTtcbiAgaWYgKGlzQm9vbGVhbihvcHRzKSkge1xuICAgIC8vIGxlZ2FjeS4uLlxuICAgIGN0eC5zaG93SGlkZGVuID0gb3B0cztcbiAgfSBlbHNlIGlmIChvcHRzKSB7XG4gICAgLy8gZ290IGFuIFwib3B0aW9uc1wiIG9iamVjdFxuICAgIGV4cG9ydHMuX2V4dGVuZChjdHgsIG9wdHMpO1xuICB9XG4gIC8vIHNldCBkZWZhdWx0IG9wdGlvbnNcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5zaG93SGlkZGVuKSkgY3R4LnNob3dIaWRkZW4gPSBmYWxzZTtcbiAgaWYgKGlzVW5kZWZpbmVkKGN0eC5kZXB0aCkpIGN0eC5kZXB0aCA9IDI7XG4gIGlmIChpc1VuZGVmaW5lZChjdHguY29sb3JzKSkgY3R4LmNvbG9ycyA9IGZhbHNlO1xuICBpZiAoaXNVbmRlZmluZWQoY3R4LmN1c3RvbUluc3BlY3QpKSBjdHguY3VzdG9tSW5zcGVjdCA9IHRydWU7XG4gIGlmIChjdHguY29sb3JzKSBjdHguc3R5bGl6ZSA9IHN0eWxpemVXaXRoQ29sb3I7XG4gIHJldHVybiBmb3JtYXRWYWx1ZShjdHgsIG9iaiwgY3R4LmRlcHRoKTtcbn1cbmV4cG9ydHMuaW5zcGVjdCA9IGluc3BlY3Q7XG5cblxuLy8gaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9BTlNJX2VzY2FwZV9jb2RlI2dyYXBoaWNzXG5pbnNwZWN0LmNvbG9ycyA9IHtcbiAgJ2JvbGQnIDogWzEsIDIyXSxcbiAgJ2l0YWxpYycgOiBbMywgMjNdLFxuICAndW5kZXJsaW5lJyA6IFs0LCAyNF0sXG4gICdpbnZlcnNlJyA6IFs3LCAyN10sXG4gICd3aGl0ZScgOiBbMzcsIDM5XSxcbiAgJ2dyZXknIDogWzkwLCAzOV0sXG4gICdibGFjaycgOiBbMzAsIDM5XSxcbiAgJ2JsdWUnIDogWzM0LCAzOV0sXG4gICdjeWFuJyA6IFszNiwgMzldLFxuICAnZ3JlZW4nIDogWzMyLCAzOV0sXG4gICdtYWdlbnRhJyA6IFszNSwgMzldLFxuICAncmVkJyA6IFszMSwgMzldLFxuICAneWVsbG93JyA6IFszMywgMzldXG59O1xuXG4vLyBEb24ndCB1c2UgJ2JsdWUnIG5vdCB2aXNpYmxlIG9uIGNtZC5leGVcbmluc3BlY3Quc3R5bGVzID0ge1xuICAnc3BlY2lhbCc6ICdjeWFuJyxcbiAgJ251bWJlcic6ICd5ZWxsb3cnLFxuICAnYm9vbGVhbic6ICd5ZWxsb3cnLFxuICAndW5kZWZpbmVkJzogJ2dyZXknLFxuICAnbnVsbCc6ICdib2xkJyxcbiAgJ3N0cmluZyc6ICdncmVlbicsXG4gICdkYXRlJzogJ21hZ2VudGEnLFxuICAvLyBcIm5hbWVcIjogaW50ZW50aW9uYWxseSBub3Qgc3R5bGluZ1xuICAncmVnZXhwJzogJ3JlZCdcbn07XG5cblxuZnVuY3Rpb24gc3R5bGl6ZVdpdGhDb2xvcihzdHIsIHN0eWxlVHlwZSkge1xuICB2YXIgc3R5bGUgPSBpbnNwZWN0LnN0eWxlc1tzdHlsZVR5cGVdO1xuXG4gIGlmIChzdHlsZSkge1xuICAgIHJldHVybiAnXFx1MDAxYlsnICsgaW5zcGVjdC5jb2xvcnNbc3R5bGVdWzBdICsgJ20nICsgc3RyICtcbiAgICAgICAgICAgJ1xcdTAwMWJbJyArIGluc3BlY3QuY29sb3JzW3N0eWxlXVsxXSArICdtJztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gc3RyO1xuICB9XG59XG5cblxuZnVuY3Rpb24gc3R5bGl6ZU5vQ29sb3Ioc3RyLCBzdHlsZVR5cGUpIHtcbiAgcmV0dXJuIHN0cjtcbn1cblxuXG5mdW5jdGlvbiBhcnJheVRvSGFzaChhcnJheSkge1xuICB2YXIgaGFzaCA9IHt9O1xuXG4gIGFycmF5LmZvckVhY2goZnVuY3Rpb24odmFsLCBpZHgpIHtcbiAgICBoYXNoW3ZhbF0gPSB0cnVlO1xuICB9KTtcblxuICByZXR1cm4gaGFzaDtcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRWYWx1ZShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMpIHtcbiAgLy8gUHJvdmlkZSBhIGhvb2sgZm9yIHVzZXItc3BlY2lmaWVkIGluc3BlY3QgZnVuY3Rpb25zLlxuICAvLyBDaGVjayB0aGF0IHZhbHVlIGlzIGFuIG9iamVjdCB3aXRoIGFuIGluc3BlY3QgZnVuY3Rpb24gb24gaXRcbiAgaWYgKGN0eC5jdXN0b21JbnNwZWN0ICYmXG4gICAgICB2YWx1ZSAmJlxuICAgICAgaXNGdW5jdGlvbih2YWx1ZS5pbnNwZWN0KSAmJlxuICAgICAgLy8gRmlsdGVyIG91dCB0aGUgdXRpbCBtb2R1bGUsIGl0J3MgaW5zcGVjdCBmdW5jdGlvbiBpcyBzcGVjaWFsXG4gICAgICB2YWx1ZS5pbnNwZWN0ICE9PSBleHBvcnRzLmluc3BlY3QgJiZcbiAgICAgIC8vIEFsc28gZmlsdGVyIG91dCBhbnkgcHJvdG90eXBlIG9iamVjdHMgdXNpbmcgdGhlIGNpcmN1bGFyIGNoZWNrLlxuICAgICAgISh2YWx1ZS5jb25zdHJ1Y3RvciAmJiB2YWx1ZS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUgPT09IHZhbHVlKSkge1xuICAgIHZhciByZXQgPSB2YWx1ZS5pbnNwZWN0KHJlY3Vyc2VUaW1lcywgY3R4KTtcbiAgICBpZiAoIWlzU3RyaW5nKHJldCkpIHtcbiAgICAgIHJldCA9IGZvcm1hdFZhbHVlKGN0eCwgcmV0LCByZWN1cnNlVGltZXMpO1xuICAgIH1cbiAgICByZXR1cm4gcmV0O1xuICB9XG5cbiAgLy8gUHJpbWl0aXZlIHR5cGVzIGNhbm5vdCBoYXZlIHByb3BlcnRpZXNcbiAgdmFyIHByaW1pdGl2ZSA9IGZvcm1hdFByaW1pdGl2ZShjdHgsIHZhbHVlKTtcbiAgaWYgKHByaW1pdGl2ZSkge1xuICAgIHJldHVybiBwcmltaXRpdmU7XG4gIH1cblxuICAvLyBMb29rIHVwIHRoZSBrZXlzIG9mIHRoZSBvYmplY3QuXG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXModmFsdWUpO1xuICB2YXIgdmlzaWJsZUtleXMgPSBhcnJheVRvSGFzaChrZXlzKTtcblxuICBpZiAoY3R4LnNob3dIaWRkZW4pIHtcbiAgICBrZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModmFsdWUpO1xuICB9XG5cbiAgLy8gSUUgZG9lc24ndCBtYWtlIGVycm9yIGZpZWxkcyBub24tZW51bWVyYWJsZVxuICAvLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvZHd3NTJzYnQodj12cy45NCkuYXNweFxuICBpZiAoaXNFcnJvcih2YWx1ZSlcbiAgICAgICYmIChrZXlzLmluZGV4T2YoJ21lc3NhZ2UnKSA+PSAwIHx8IGtleXMuaW5kZXhPZignZGVzY3JpcHRpb24nKSA+PSAwKSkge1xuICAgIHJldHVybiBmb3JtYXRFcnJvcih2YWx1ZSk7XG4gIH1cblxuICAvLyBTb21lIHR5cGUgb2Ygb2JqZWN0IHdpdGhvdXQgcHJvcGVydGllcyBjYW4gYmUgc2hvcnRjdXR0ZWQuXG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xuICAgIGlmIChpc0Z1bmN0aW9uKHZhbHVlKSkge1xuICAgICAgdmFyIG5hbWUgPSB2YWx1ZS5uYW1lID8gJzogJyArIHZhbHVlLm5hbWUgOiAnJztcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZSgnW0Z1bmN0aW9uJyArIG5hbWUgKyAnXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICAgIGlmIChpc1JlZ0V4cCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBjdHguc3R5bGl6ZShSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpLCAncmVnZXhwJyk7XG4gICAgfVxuICAgIGlmIChpc0RhdGUodmFsdWUpKSB7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoRGF0ZS5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSksICdkYXRlJyk7XG4gICAgfVxuICAgIGlmIChpc0Vycm9yKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgICB9XG4gIH1cblxuICB2YXIgYmFzZSA9ICcnLCBhcnJheSA9IGZhbHNlLCBicmFjZXMgPSBbJ3snLCAnfSddO1xuXG4gIC8vIE1ha2UgQXJyYXkgc2F5IHRoYXQgdGhleSBhcmUgQXJyYXlcbiAgaWYgKGlzQXJyYXkodmFsdWUpKSB7XG4gICAgYXJyYXkgPSB0cnVlO1xuICAgIGJyYWNlcyA9IFsnWycsICddJ107XG4gIH1cblxuICAvLyBNYWtlIGZ1bmN0aW9ucyBzYXkgdGhhdCB0aGV5IGFyZSBmdW5jdGlvbnNcbiAgaWYgKGlzRnVuY3Rpb24odmFsdWUpKSB7XG4gICAgdmFyIG4gPSB2YWx1ZS5uYW1lID8gJzogJyArIHZhbHVlLm5hbWUgOiAnJztcbiAgICBiYXNlID0gJyBbRnVuY3Rpb24nICsgbiArICddJztcbiAgfVxuXG4gIC8vIE1ha2UgUmVnRXhwcyBzYXkgdGhhdCB0aGV5IGFyZSBSZWdFeHBzXG4gIGlmIChpc1JlZ0V4cCh2YWx1ZSkpIHtcbiAgICBiYXNlID0gJyAnICsgUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgfVxuXG4gIC8vIE1ha2UgZGF0ZXMgd2l0aCBwcm9wZXJ0aWVzIGZpcnN0IHNheSB0aGUgZGF0ZVxuICBpZiAoaXNEYXRlKHZhbHVlKSkge1xuICAgIGJhc2UgPSAnICcgKyBEYXRlLnByb3RvdHlwZS50b1VUQ1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgfVxuXG4gIC8vIE1ha2UgZXJyb3Igd2l0aCBtZXNzYWdlIGZpcnN0IHNheSB0aGUgZXJyb3JcbiAgaWYgKGlzRXJyb3IodmFsdWUpKSB7XG4gICAgYmFzZSA9ICcgJyArIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgfVxuXG4gIGlmIChrZXlzLmxlbmd0aCA9PT0gMCAmJiAoIWFycmF5IHx8IHZhbHVlLmxlbmd0aCA9PSAwKSkge1xuICAgIHJldHVybiBicmFjZXNbMF0gKyBiYXNlICsgYnJhY2VzWzFdO1xuICB9XG5cbiAgaWYgKHJlY3Vyc2VUaW1lcyA8IDApIHtcbiAgICBpZiAoaXNSZWdFeHAodmFsdWUpKSB7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSwgJ3JlZ2V4cCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gY3R4LnN0eWxpemUoJ1tPYmplY3RdJywgJ3NwZWNpYWwnKTtcbiAgICB9XG4gIH1cblxuICBjdHguc2Vlbi5wdXNoKHZhbHVlKTtcblxuICB2YXIgb3V0cHV0O1xuICBpZiAoYXJyYXkpIHtcbiAgICBvdXRwdXQgPSBmb3JtYXRBcnJheShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXlzKTtcbiAgfSBlbHNlIHtcbiAgICBvdXRwdXQgPSBrZXlzLm1hcChmdW5jdGlvbihrZXkpIHtcbiAgICAgIHJldHVybiBmb3JtYXRQcm9wZXJ0eShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXksIGFycmF5KTtcbiAgICB9KTtcbiAgfVxuXG4gIGN0eC5zZWVuLnBvcCgpO1xuXG4gIHJldHVybiByZWR1Y2VUb1NpbmdsZVN0cmluZyhvdXRwdXQsIGJhc2UsIGJyYWNlcyk7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0UHJpbWl0aXZlKGN0eCwgdmFsdWUpIHtcbiAgaWYgKGlzVW5kZWZpbmVkKHZhbHVlKSlcbiAgICByZXR1cm4gY3R4LnN0eWxpemUoJ3VuZGVmaW5lZCcsICd1bmRlZmluZWQnKTtcbiAgaWYgKGlzU3RyaW5nKHZhbHVlKSkge1xuICAgIHZhciBzaW1wbGUgPSAnXFwnJyArIEpTT04uc3RyaW5naWZ5KHZhbHVlKS5yZXBsYWNlKC9eXCJ8XCIkL2csICcnKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoLycvZywgXCJcXFxcJ1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcXFxcIi9nLCAnXCInKSArICdcXCcnO1xuICAgIHJldHVybiBjdHguc3R5bGl6ZShzaW1wbGUsICdzdHJpbmcnKTtcbiAgfVxuICBpZiAoaXNOdW1iZXIodmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgnJyArIHZhbHVlLCAnbnVtYmVyJyk7XG4gIGlmIChpc0Jvb2xlYW4odmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgnJyArIHZhbHVlLCAnYm9vbGVhbicpO1xuICAvLyBGb3Igc29tZSByZWFzb24gdHlwZW9mIG51bGwgaXMgXCJvYmplY3RcIiwgc28gc3BlY2lhbCBjYXNlIGhlcmUuXG4gIGlmIChpc051bGwodmFsdWUpKVxuICAgIHJldHVybiBjdHguc3R5bGl6ZSgnbnVsbCcsICdudWxsJyk7XG59XG5cblxuZnVuY3Rpb24gZm9ybWF0RXJyb3IodmFsdWUpIHtcbiAgcmV0dXJuICdbJyArIEVycm9yLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHZhbHVlKSArICddJztcbn1cblxuXG5mdW5jdGlvbiBmb3JtYXRBcnJheShjdHgsIHZhbHVlLCByZWN1cnNlVGltZXMsIHZpc2libGVLZXlzLCBrZXlzKSB7XG4gIHZhciBvdXRwdXQgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSB2YWx1ZS5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICBpZiAoaGFzT3duUHJvcGVydHkodmFsdWUsIFN0cmluZyhpKSkpIHtcbiAgICAgIG91dHB1dC5wdXNoKGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsXG4gICAgICAgICAgU3RyaW5nKGkpLCB0cnVlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG91dHB1dC5wdXNoKCcnKTtcbiAgICB9XG4gIH1cbiAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgIGlmICgha2V5Lm1hdGNoKC9eXFxkKyQvKSkge1xuICAgICAgb3V0cHV0LnB1c2goZm9ybWF0UHJvcGVydHkoY3R4LCB2YWx1ZSwgcmVjdXJzZVRpbWVzLCB2aXNpYmxlS2V5cyxcbiAgICAgICAgICBrZXksIHRydWUpKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gb3V0cHV0O1xufVxuXG5cbmZ1bmN0aW9uIGZvcm1hdFByb3BlcnR5KGN0eCwgdmFsdWUsIHJlY3Vyc2VUaW1lcywgdmlzaWJsZUtleXMsIGtleSwgYXJyYXkpIHtcbiAgdmFyIG5hbWUsIHN0ciwgZGVzYztcbiAgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodmFsdWUsIGtleSkgfHwgeyB2YWx1ZTogdmFsdWVba2V5XSB9O1xuICBpZiAoZGVzYy5nZXQpIHtcbiAgICBpZiAoZGVzYy5zZXQpIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbR2V0dGVyL1NldHRlcl0nLCAnc3BlY2lhbCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHIgPSBjdHguc3R5bGl6ZSgnW0dldHRlcl0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBpZiAoZGVzYy5zZXQpIHtcbiAgICAgIHN0ciA9IGN0eC5zdHlsaXplKCdbU2V0dGVyXScsICdzcGVjaWFsJyk7XG4gICAgfVxuICB9XG4gIGlmICghaGFzT3duUHJvcGVydHkodmlzaWJsZUtleXMsIGtleSkpIHtcbiAgICBuYW1lID0gJ1snICsga2V5ICsgJ10nO1xuICB9XG4gIGlmICghc3RyKSB7XG4gICAgaWYgKGN0eC5zZWVuLmluZGV4T2YoZGVzYy52YWx1ZSkgPCAwKSB7XG4gICAgICBpZiAoaXNOdWxsKHJlY3Vyc2VUaW1lcykpIHtcbiAgICAgICAgc3RyID0gZm9ybWF0VmFsdWUoY3R4LCBkZXNjLnZhbHVlLCBudWxsKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0ciA9IGZvcm1hdFZhbHVlKGN0eCwgZGVzYy52YWx1ZSwgcmVjdXJzZVRpbWVzIC0gMSk7XG4gICAgICB9XG4gICAgICBpZiAoc3RyLmluZGV4T2YoJ1xcbicpID4gLTEpIHtcbiAgICAgICAgaWYgKGFycmF5KSB7XG4gICAgICAgICAgc3RyID0gc3RyLnNwbGl0KCdcXG4nKS5tYXAoZnVuY3Rpb24obGluZSkge1xuICAgICAgICAgICAgcmV0dXJuICcgICcgKyBsaW5lO1xuICAgICAgICAgIH0pLmpvaW4oJ1xcbicpLnN1YnN0cigyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHIgPSAnXFxuJyArIHN0ci5zcGxpdCgnXFxuJykubWFwKGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiAnICAgJyArIGxpbmU7XG4gICAgICAgICAgfSkuam9pbignXFxuJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgc3RyID0gY3R4LnN0eWxpemUoJ1tDaXJjdWxhcl0nLCAnc3BlY2lhbCcpO1xuICAgIH1cbiAgfVxuICBpZiAoaXNVbmRlZmluZWQobmFtZSkpIHtcbiAgICBpZiAoYXJyYXkgJiYga2V5Lm1hdGNoKC9eXFxkKyQvKSkge1xuICAgICAgcmV0dXJuIHN0cjtcbiAgICB9XG4gICAgbmFtZSA9IEpTT04uc3RyaW5naWZ5KCcnICsga2V5KTtcbiAgICBpZiAobmFtZS5tYXRjaCgvXlwiKFthLXpBLVpfXVthLXpBLVpfMC05XSopXCIkLykpIHtcbiAgICAgIG5hbWUgPSBuYW1lLnN1YnN0cigxLCBuYW1lLmxlbmd0aCAtIDIpO1xuICAgICAgbmFtZSA9IGN0eC5zdHlsaXplKG5hbWUsICduYW1lJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoLycvZywgXCJcXFxcJ1wiKVxuICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFxcXFwiL2csICdcIicpXG4gICAgICAgICAgICAgICAgIC5yZXBsYWNlKC8oXlwifFwiJCkvZywgXCInXCIpO1xuICAgICAgbmFtZSA9IGN0eC5zdHlsaXplKG5hbWUsICdzdHJpbmcnKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmFtZSArICc6ICcgKyBzdHI7XG59XG5cblxuZnVuY3Rpb24gcmVkdWNlVG9TaW5nbGVTdHJpbmcob3V0cHV0LCBiYXNlLCBicmFjZXMpIHtcbiAgdmFyIG51bUxpbmVzRXN0ID0gMDtcbiAgdmFyIGxlbmd0aCA9IG91dHB1dC5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgY3VyKSB7XG4gICAgbnVtTGluZXNFc3QrKztcbiAgICBpZiAoY3VyLmluZGV4T2YoJ1xcbicpID49IDApIG51bUxpbmVzRXN0Kys7XG4gICAgcmV0dXJuIHByZXYgKyBjdXIucmVwbGFjZSgvXFx1MDAxYlxcW1xcZFxcZD9tL2csICcnKS5sZW5ndGggKyAxO1xuICB9LCAwKTtcblxuICBpZiAobGVuZ3RoID4gNjApIHtcbiAgICByZXR1cm4gYnJhY2VzWzBdICtcbiAgICAgICAgICAgKGJhc2UgPT09ICcnID8gJycgOiBiYXNlICsgJ1xcbiAnKSArXG4gICAgICAgICAgICcgJyArXG4gICAgICAgICAgIG91dHB1dC5qb2luKCcsXFxuICAnKSArXG4gICAgICAgICAgICcgJyArXG4gICAgICAgICAgIGJyYWNlc1sxXTtcbiAgfVxuXG4gIHJldHVybiBicmFjZXNbMF0gKyBiYXNlICsgJyAnICsgb3V0cHV0LmpvaW4oJywgJykgKyAnICcgKyBicmFjZXNbMV07XG59XG5cblxuLy8gTk9URTogVGhlc2UgdHlwZSBjaGVja2luZyBmdW5jdGlvbnMgaW50ZW50aW9uYWxseSBkb24ndCB1c2UgYGluc3RhbmNlb2ZgXG4vLyBiZWNhdXNlIGl0IGlzIGZyYWdpbGUgYW5kIGNhbiBiZSBlYXNpbHkgZmFrZWQgd2l0aCBgT2JqZWN0LmNyZWF0ZSgpYC5cbmZ1bmN0aW9uIGlzQXJyYXkoYXIpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXIpO1xufVxuZXhwb3J0cy5pc0FycmF5ID0gaXNBcnJheTtcblxuZnVuY3Rpb24gaXNCb29sZWFuKGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nO1xufVxuZXhwb3J0cy5pc0Jvb2xlYW4gPSBpc0Jvb2xlYW47XG5cbmZ1bmN0aW9uIGlzTnVsbChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gbnVsbDtcbn1cbmV4cG9ydHMuaXNOdWxsID0gaXNOdWxsO1xuXG5mdW5jdGlvbiBpc051bGxPclVuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PSBudWxsO1xufVxuZXhwb3J0cy5pc051bGxPclVuZGVmaW5lZCA9IGlzTnVsbE9yVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc051bWJlcihhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdudW1iZXInO1xufVxuZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyO1xuXG5mdW5jdGlvbiBpc1N0cmluZyhhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnO1xufVxuZXhwb3J0cy5pc1N0cmluZyA9IGlzU3RyaW5nO1xuXG5mdW5jdGlvbiBpc1N5bWJvbChhcmcpIHtcbiAgcmV0dXJuIHR5cGVvZiBhcmcgPT09ICdzeW1ib2wnO1xufVxuZXhwb3J0cy5pc1N5bWJvbCA9IGlzU3ltYm9sO1xuXG5mdW5jdGlvbiBpc1VuZGVmaW5lZChhcmcpIHtcbiAgcmV0dXJuIGFyZyA9PT0gdm9pZCAwO1xufVxuZXhwb3J0cy5pc1VuZGVmaW5lZCA9IGlzVW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBpc1JlZ0V4cChyZSkge1xuICByZXR1cm4gaXNPYmplY3QocmUpICYmIG9iamVjdFRvU3RyaW5nKHJlKSA9PT0gJ1tvYmplY3QgUmVnRXhwXSc7XG59XG5leHBvcnRzLmlzUmVnRXhwID0gaXNSZWdFeHA7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gJ29iamVjdCcgJiYgYXJnICE9PSBudWxsO1xufVxuZXhwb3J0cy5pc09iamVjdCA9IGlzT2JqZWN0O1xuXG5mdW5jdGlvbiBpc0RhdGUoZCkge1xuICByZXR1cm4gaXNPYmplY3QoZCkgJiYgb2JqZWN0VG9TdHJpbmcoZCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cbmV4cG9ydHMuaXNEYXRlID0gaXNEYXRlO1xuXG5mdW5jdGlvbiBpc0Vycm9yKGUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0KGUpICYmXG4gICAgICAob2JqZWN0VG9TdHJpbmcoZSkgPT09ICdbb2JqZWN0IEVycm9yXScgfHwgZSBpbnN0YW5jZW9mIEVycm9yKTtcbn1cbmV4cG9ydHMuaXNFcnJvciA9IGlzRXJyb3I7XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb24oYXJnKSB7XG4gIHJldHVybiB0eXBlb2YgYXJnID09PSAnZnVuY3Rpb24nO1xufVxuZXhwb3J0cy5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcblxuZnVuY3Rpb24gaXNQcmltaXRpdmUoYXJnKSB7XG4gIHJldHVybiBhcmcgPT09IG51bGwgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdib29sZWFuJyB8fFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHxcbiAgICAgICAgIHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICB0eXBlb2YgYXJnID09PSAnc3ltYm9sJyB8fCAgLy8gRVM2IHN5bWJvbFxuICAgICAgICAgdHlwZW9mIGFyZyA9PT0gJ3VuZGVmaW5lZCc7XG59XG5leHBvcnRzLmlzUHJpbWl0aXZlID0gaXNQcmltaXRpdmU7XG5cbmV4cG9ydHMuaXNCdWZmZXIgPSByZXF1aXJlKCcuL3N1cHBvcnQvaXNCdWZmZXInKTtcblxuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcobykge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pO1xufVxuXG5cbmZ1bmN0aW9uIHBhZChuKSB7XG4gIHJldHVybiBuIDwgMTAgPyAnMCcgKyBuLnRvU3RyaW5nKDEwKSA6IG4udG9TdHJpbmcoMTApO1xufVxuXG5cbnZhciBtb250aHMgPSBbJ0phbicsICdGZWInLCAnTWFyJywgJ0FwcicsICdNYXknLCAnSnVuJywgJ0p1bCcsICdBdWcnLCAnU2VwJyxcbiAgICAgICAgICAgICAgJ09jdCcsICdOb3YnLCAnRGVjJ107XG5cbi8vIDI2IEZlYiAxNjoxOTozNFxuZnVuY3Rpb24gdGltZXN0YW1wKCkge1xuICB2YXIgZCA9IG5ldyBEYXRlKCk7XG4gIHZhciB0aW1lID0gW3BhZChkLmdldEhvdXJzKCkpLFxuICAgICAgICAgICAgICBwYWQoZC5nZXRNaW51dGVzKCkpLFxuICAgICAgICAgICAgICBwYWQoZC5nZXRTZWNvbmRzKCkpXS5qb2luKCc6Jyk7XG4gIHJldHVybiBbZC5nZXREYXRlKCksIG1vbnRoc1tkLmdldE1vbnRoKCldLCB0aW1lXS5qb2luKCcgJyk7XG59XG5cblxuLy8gbG9nIGlzIGp1c3QgYSB0aGluIHdyYXBwZXIgdG8gY29uc29sZS5sb2cgdGhhdCBwcmVwZW5kcyBhIHRpbWVzdGFtcFxuZXhwb3J0cy5sb2cgPSBmdW5jdGlvbigpIHtcbiAgY29uc29sZS5sb2coJyVzIC0gJXMnLCB0aW1lc3RhbXAoKSwgZXhwb3J0cy5mb3JtYXQuYXBwbHkoZXhwb3J0cywgYXJndW1lbnRzKSk7XG59O1xuXG5cbi8qKlxuICogSW5oZXJpdCB0aGUgcHJvdG90eXBlIG1ldGhvZHMgZnJvbSBvbmUgY29uc3RydWN0b3IgaW50byBhbm90aGVyLlxuICpcbiAqIFRoZSBGdW5jdGlvbi5wcm90b3R5cGUuaW5oZXJpdHMgZnJvbSBsYW5nLmpzIHJld3JpdHRlbiBhcyBhIHN0YW5kYWxvbmVcbiAqIGZ1bmN0aW9uIChub3Qgb24gRnVuY3Rpb24ucHJvdG90eXBlKS4gTk9URTogSWYgdGhpcyBmaWxlIGlzIHRvIGJlIGxvYWRlZFxuICogZHVyaW5nIGJvb3RzdHJhcHBpbmcgdGhpcyBmdW5jdGlvbiBuZWVkcyB0byBiZSByZXdyaXR0ZW4gdXNpbmcgc29tZSBuYXRpdmVcbiAqIGZ1bmN0aW9ucyBhcyBwcm90b3R5cGUgc2V0dXAgdXNpbmcgbm9ybWFsIEphdmFTY3JpcHQgZG9lcyBub3Qgd29yayBhc1xuICogZXhwZWN0ZWQgZHVyaW5nIGJvb3RzdHJhcHBpbmcgKHNlZSBtaXJyb3IuanMgaW4gcjExNDkwMykuXG4gKlxuICogQHBhcmFtIHtmdW5jdGlvbn0gY3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB3aGljaCBuZWVkcyB0byBpbmhlcml0IHRoZVxuICogICAgIHByb3RvdHlwZS5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHN1cGVyQ3RvciBDb25zdHJ1Y3RvciBmdW5jdGlvbiB0byBpbmhlcml0IHByb3RvdHlwZSBmcm9tLlxuICovXG5leHBvcnRzLmluaGVyaXRzID0gcmVxdWlyZSgnaW5oZXJpdHMnKTtcblxuZXhwb3J0cy5fZXh0ZW5kID0gZnVuY3Rpb24ob3JpZ2luLCBhZGQpIHtcbiAgLy8gRG9uJ3QgZG8gYW55dGhpbmcgaWYgYWRkIGlzbid0IGFuIG9iamVjdFxuICBpZiAoIWFkZCB8fCAhaXNPYmplY3QoYWRkKSkgcmV0dXJuIG9yaWdpbjtcblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFkZCk7XG4gIHZhciBpID0ga2V5cy5sZW5ndGg7XG4gIHdoaWxlIChpLS0pIHtcbiAgICBvcmlnaW5ba2V5c1tpXV0gPSBhZGRba2V5c1tpXV07XG4gIH1cbiAgcmV0dXJuIG9yaWdpbjtcbn07XG5cbmZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG5cbnZhciBrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wgPSB0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyA/IFN5bWJvbCgndXRpbC5wcm9taXNpZnkuY3VzdG9tJykgOiB1bmRlZmluZWQ7XG5cbmV4cG9ydHMucHJvbWlzaWZ5ID0gZnVuY3Rpb24gcHJvbWlzaWZ5KG9yaWdpbmFsKSB7XG4gIGlmICh0eXBlb2Ygb3JpZ2luYWwgIT09ICdmdW5jdGlvbicpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwib3JpZ2luYWxcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRnVuY3Rpb24nKTtcblxuICBpZiAoa0N1c3RvbVByb21pc2lmaWVkU3ltYm9sICYmIG9yaWdpbmFsW2tDdXN0b21Qcm9taXNpZmllZFN5bWJvbF0pIHtcbiAgICB2YXIgZm4gPSBvcmlnaW5hbFtrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2xdO1xuICAgIGlmICh0eXBlb2YgZm4gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcInV0aWwucHJvbWlzaWZ5LmN1c3RvbVwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIGtDdXN0b21Qcm9taXNpZmllZFN5bWJvbCwge1xuICAgICAgdmFsdWU6IGZuLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gZm47XG4gIH1cblxuICBmdW5jdGlvbiBmbigpIHtcbiAgICB2YXIgcHJvbWlzZVJlc29sdmUsIHByb21pc2VSZWplY3Q7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBwcm9taXNlUmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICBwcm9taXNlUmVqZWN0ID0gcmVqZWN0O1xuICAgIH0pO1xuXG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG4gICAgfVxuICAgIGFyZ3MucHVzaChmdW5jdGlvbiAoZXJyLCB2YWx1ZSkge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBwcm9taXNlUmVqZWN0KGVycik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0cnkge1xuICAgICAgb3JpZ2luYWwuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBwcm9taXNlUmVqZWN0KGVycik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH1cblxuICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZm4sIE9iamVjdC5nZXRQcm90b3R5cGVPZihvcmlnaW5hbCkpO1xuXG4gIGlmIChrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2wpIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmbiwga0N1c3RvbVByb21pc2lmaWVkU3ltYm9sLCB7XG4gICAgdmFsdWU6IGZuLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IGZhbHNlLCBjb25maWd1cmFibGU6IHRydWVcbiAgfSk7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhcbiAgICBmbixcbiAgICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9yaWdpbmFsKVxuICApO1xufVxuXG5leHBvcnRzLnByb21pc2lmeS5jdXN0b20gPSBrQ3VzdG9tUHJvbWlzaWZpZWRTeW1ib2xcblxuZnVuY3Rpb24gY2FsbGJhY2tpZnlPblJlamVjdGVkKHJlYXNvbiwgY2IpIHtcbiAgLy8gYCFyZWFzb25gIGd1YXJkIGluc3BpcmVkIGJ5IGJsdWViaXJkIChSZWY6IGh0dHBzOi8vZ29vLmdsL3Q1SVM2TSkuXG4gIC8vIEJlY2F1c2UgYG51bGxgIGlzIGEgc3BlY2lhbCBlcnJvciB2YWx1ZSBpbiBjYWxsYmFja3Mgd2hpY2ggbWVhbnMgXCJubyBlcnJvclxuICAvLyBvY2N1cnJlZFwiLCB3ZSBlcnJvci13cmFwIHNvIHRoZSBjYWxsYmFjayBjb25zdW1lciBjYW4gZGlzdGluZ3Vpc2ggYmV0d2VlblxuICAvLyBcInRoZSBwcm9taXNlIHJlamVjdGVkIHdpdGggbnVsbFwiIG9yIFwidGhlIHByb21pc2UgZnVsZmlsbGVkIHdpdGggdW5kZWZpbmVkXCIuXG4gIGlmICghcmVhc29uKSB7XG4gICAgdmFyIG5ld1JlYXNvbiA9IG5ldyBFcnJvcignUHJvbWlzZSB3YXMgcmVqZWN0ZWQgd2l0aCBhIGZhbHN5IHZhbHVlJyk7XG4gICAgbmV3UmVhc29uLnJlYXNvbiA9IHJlYXNvbjtcbiAgICByZWFzb24gPSBuZXdSZWFzb247XG4gIH1cbiAgcmV0dXJuIGNiKHJlYXNvbik7XG59XG5cbmZ1bmN0aW9uIGNhbGxiYWNraWZ5KG9yaWdpbmFsKSB7XG4gIGlmICh0eXBlb2Ygb3JpZ2luYWwgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJvcmlnaW5hbFwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbicpO1xuICB9XG5cbiAgLy8gV2UgRE8gTk9UIHJldHVybiB0aGUgcHJvbWlzZSBhcyBpdCBnaXZlcyB0aGUgdXNlciBhIGZhbHNlIHNlbnNlIHRoYXRcbiAgLy8gdGhlIHByb21pc2UgaXMgYWN0dWFsbHkgc29tZWhvdyByZWxhdGVkIHRvIHRoZSBjYWxsYmFjaydzIGV4ZWN1dGlvblxuICAvLyBhbmQgdGhhdCB0aGUgY2FsbGJhY2sgdGhyb3dpbmcgd2lsbCByZWplY3QgdGhlIHByb21pc2UuXG4gIGZ1bmN0aW9uIGNhbGxiYWNraWZpZWQoKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgYXJncy5wdXNoKGFyZ3VtZW50c1tpXSk7XG4gICAgfVxuXG4gICAgdmFyIG1heWJlQ2IgPSBhcmdzLnBvcCgpO1xuICAgIGlmICh0eXBlb2YgbWF5YmVDYiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGxhc3QgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIEZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgY2IgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBtYXliZUNiLmFwcGx5KHNlbGYsIGFyZ3VtZW50cyk7XG4gICAgfTtcbiAgICAvLyBJbiB0cnVlIG5vZGUgc3R5bGUgd2UgcHJvY2VzcyB0aGUgY2FsbGJhY2sgb24gYG5leHRUaWNrYCB3aXRoIGFsbCB0aGVcbiAgICAvLyBpbXBsaWNhdGlvbnMgKHN0YWNrLCBgdW5jYXVnaHRFeGNlcHRpb25gLCBgYXN5bmNfaG9va3NgKVxuICAgIG9yaWdpbmFsLmFwcGx5KHRoaXMsIGFyZ3MpXG4gICAgICAudGhlbihmdW5jdGlvbihyZXQpIHsgcHJvY2Vzcy5uZXh0VGljayhjYiwgbnVsbCwgcmV0KSB9LFxuICAgICAgICAgICAgZnVuY3Rpb24ocmVqKSB7IHByb2Nlc3MubmV4dFRpY2soY2FsbGJhY2tpZnlPblJlamVjdGVkLCByZWosIGNiKSB9KTtcbiAgfVxuXG4gIE9iamVjdC5zZXRQcm90b3R5cGVPZihjYWxsYmFja2lmaWVkLCBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob3JpZ2luYWwpKTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoY2FsbGJhY2tpZmllZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhvcmlnaW5hbCkpO1xuICByZXR1cm4gY2FsbGJhY2tpZmllZDtcbn1cbmV4cG9ydHMuY2FsbGJhY2tpZnkgPSBjYWxsYmFja2lmeTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG5nbG9iYWwualF1ZXJ5ID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuXG5jb25zdCBwcm9kdWN0c0Ryb3BEb3duID0gJCggJyNsaXN0LXByb2R1Y3RzJyApO1xuY29uc3Qgc3RvcmVJdGVtc1RhYmxlID0gJCggJyNoaWRkZW4taXRlbS10YWJsZSA+IHRib2R5JyApO1xuXG5cbmZ1bmN0aW9uIGFwcGVuZFRvUHJvZHVjdHNEcm9wRG93biggcHJvZHVjdHNGcm9tU2VydmVyICkge1xuICAkLmVhY2goIHByb2R1Y3RzRnJvbVNlcnZlciwgKCB2YWx1ZSwgcHJvZHVjdCApID0+IHtcbiAgICBwcm9kdWN0c0Ryb3BEb3duLmFwcGVuZChcbiAgICAgICQoICc8b3B0aW9uPjwvb3B0aW9uPicgKVxuICAgICAgICAudmFsKCBwcm9kdWN0LnByb2R1Y3RJRCApXG4gICAgICAgIC5odG1sKFxuICAgICAgICAgIGA8c3Ryb25nPiR7cHJvZHVjdC5uYW1lfTwvc3Ryb25nPiBcbiAgICAgICAgICAgICZuYnNwOyA8ZW0+JHtwcm9kdWN0LmRlc2NyaXB0aW9ufTwvZW0+ICZuYnNwOyA8Yj4kJHtwcm9kdWN0LnVuaXRQcmljZX08L2I+YFxuICAgICAgICApXG4gICAgKTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZFRvU3RvcmVJdGVtc1RhYmxlKCBwcm9kdWN0c0Zyb21TZXJ2ZXIgKSB7XG4gICQuZWFjaCggcHJvZHVjdHNGcm9tU2VydmVyLCAoIHZhbHVlLCBwcm9kdWN0ICkgPT4ge1xuICAgIHN0b3JlSXRlbXNUYWJsZS5hcHBlbmQoIGA8dHIgY2xhc3M9XCJzdG9yZS1zaW5nbGUtaXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9J3N0b3JlLWl0ZW0tSUQnPiR7cHJvZHVjdC5wcm9kdWN0SUR9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSdzdG9yZS1pdGVtLW5hbWUnPiR7cHJvZHVjdC5uYW1lfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nc3RvcmUtaXRlbS1kZXNjcmlwdGlvbic+JHtwcm9kdWN0LmRlc2NyaXB0aW9ufTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzcz0nc3RvcmUtaXRlbS11bml0LXByaWNlJz4ke3Byb2R1Y3QudW5pdFByaWNlfTwvdGQ+XG4gICAgICAgICAgICAgICAgICA8L3RyPmAgKTtcbiAgfSk7XG59XG5cbiQoICgpID0+IHtcbiAgbGV0IGFyZVByb2R1Y3RzTG9hZGVkID0gZmFsc2U7XG5cbiAgcHJvZHVjdHNEcm9wRG93bi5vbiggJ2NsaWNrJywgKCkgPT4ge1xuICAgIGlmICggYXJlUHJvZHVjdHNMb2FkZWQgPT09IGZhbHNlICkge1xuICAgICAgJC5nZXQoICcvcHJvZHVjdHMvZ2V0X3Byb2R1Y3RzJywgKCBzZXJ2ZXJSZXNwb25zZSApID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coICdUaGlzIGlzIHRoZSBKU09OIHJlc3BvbnNlOicgKTtcbiAgICAgICAgY29uc29sZS5sb2coIHNlcnZlclJlc3BvbnNlICk7XG4gICAgICAgIGFwcGVuZFRvUHJvZHVjdHNEcm9wRG93biggc2VydmVyUmVzcG9uc2UucHJvZHVjdHMgKTtcbiAgICAgICAgYXBwZW5kVG9TdG9yZUl0ZW1zVGFibGUoIHNlcnZlclJlc3BvbnNlLnByb2R1Y3RzICk7XG4gICAgICB9KVxuICAgICAgICAuZG9uZShcbiAgICAgICAgICBjb25zb2xlLmxvZyggJ0dFVCAvcHJvZHVjdHMvZ2V0X3Byb2R1Y3RzIFJlcXVlc3QgaXMgZG9uZScgKSxcbiAgICAgICAgICBhcmVQcm9kdWN0c0xvYWRlZCA9IHRydWVcblxuICAgICAgICApO1xuICAgIH1cbiAgfSk7XG59KTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuLy8gY29uc3QganF1ZXJ5ID0gcmVxdWlyZSggJy4uLy4uL25vZGVfbW9kdWxlcy9qcXVlcnkvZGlzdC9qcXVlcnkubWluJyApO1xuXG5nbG9iYWwualF1ZXJ5ID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuJCggJ2EuYmFjay10by10b3AnICkub24oICdjbGljaycsICgpID0+IHtcbiAgJCggd2luZG93ICkuc2Nyb2xsVG9wKCAwICk7XG4gIHJldHVybiBmYWxzZTtcbn0pO1xuXG53aW5kb3cub3BlblRhYiA9IGZ1bmN0aW9uIG9wZW5UYWIoIHRhYk5hbWUgKSB7XG4gIGxldCB0YWI7XG4gIGNvbnN0IGFjdGl2ZVRhYiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCB0YWJOYW1lICk7XG4gIGNvbnN0IHZpZXdUYWJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggJ2NvbnRhaW5lciB0YWInICk7XG4gIGZvciAoIHRhYiA9IDA7IHRhYiA8IHZpZXdUYWJzLmxlbmd0aDsgdGFiICs9IDEgKSB7XG4gICAgdmlld1RhYnNbIHRhYiBdLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIH1cbiAgYWN0aXZlVGFiLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWZsZXgnO1xuICBjb25zdCB0YWJMaW5rcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoICduYXYtbGluaycgKTtcbiAgY29uc3QgYWN0aXZlTGluayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBgJHt0YWJOYW1lfS1saW5rYCApO1xuICBmb3IgKCB0YWIgPSAwOyB0YWIgPCB0YWJMaW5rcy5sZW5ndGg7IHRhYiArPSAxICkge1xuICAgIHRhYkxpbmtzWyB0YWIgXS5jbGFzc05hbWUgPSB0YWJMaW5rc1sgdGFiIF0uY2xhc3NOYW1lLnJlcGxhY2UoICcgYWN0aXZlJywgJycgKTtcbiAgfVxuICBhY3RpdmVMaW5rLmNsYXNzTmFtZSArPSAnIGFjdGl2ZSc7XG59O1xuXG4vLyAkKGRvY3VtZW50KS5yZWFkeSgoKSA9PiB7XG4vLyAgIGNvbnN0IHdpbmRvd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTtcbi8vICAgaWYgKHdpbmRvd0hlaWdodCA+PSAwLjE1KSB7XG4vLyAgICAgJCgnZGl2LnRvcC1idG4nKS5jc3MoeyBkaXNwbGF5OiAnZmxleCcgfSk7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgJCgnZGl2LnRvcC1idG4nKS5jc3MoeyBkaXNwbGF5OiAnbm9uZScgfSk7XG4vLyAgIH1cbi8vIH0pO1xuIiwiY29uc3QgJCA9IHJlcXVpcmUoICdqcXVlcnknICk7XG5nbG9iYWwualF1ZXJ5ID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuZnVuY3Rpb24gZ2V0T3JkZXJJdGVtcygpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGdsb2JhbC1yZXF1aXJlXG4gIGNvbnN0IGl0ZW1zID0gW107XG5cbiAgY29uc3Qgcm93c09mT3JkZXJJdGVtcyA9ICQoICcucHJvZHVjdC1vcmRlcicgKTtcblxuICByb3dzT2ZPcmRlckl0ZW1zLmVhY2goICggaW5kZXgsIHZhbHVlICkgPT4ge1xuICAgIGNvbnN0IGl0ZW0gPSB7fTtcblxuICAgIGl0ZW0uaXRlbUlEID0gJCggJy5wcm9kdWN0SUQnICkuZXEoIGluZGV4ICkudGV4dCgpO1xuICAgIGl0ZW0ucXVhbnRpdHkgPSAkKCAnLnByb2R1Y3RVbml0cycgKS5lcSggaW5kZXggKS50ZXh0KCk7XG5cbiAgICBjb25zb2xlLmxvZyggJ0FuIGl0ZW1cXCdzIElEIGZyb20gdGhlIG9yZGVyOicsIGl0ZW0uaXRlbUlEICk7XG4gICAgY29uc29sZS5sb2coICdBbiBpdGVtXFwncyBOYW1lIGZyb20gdGhlIG9yZGVyOicsIGl0ZW0ubmFtZSApO1xuXG4gICAgaXRlbXMucHVzaCggaXRlbSApO1xuICB9KTtcbiAgY29uc29sZS5sb2coICdUaGlzIGlzIHRoZSB1c2VyXFwncyBvcmRlcjogJywgaXRlbXMgKTtcbiAgcmV0dXJuIGl0ZW1zO1xufVxuXG5mdW5jdGlvbiBnZXRPcmRlclByaWNlKCkge1xuICByZXR1cm4gJCggJyNjaGVja291dC10b3RhbC12YWx1ZScgKVxuICAgIC50ZXh0KClcbiAgICAuc2xpY2UoIDEgKTtcbn1cblxuZnVuY3Rpb24gaXNDYXJ0Tm90RW1wdHkoKSB7XG4gIHJldHVybiAkKCAnLnByb2R1Y3Qtb3JkZXInICkubGVuZ3RoID4gMDtcbn1cblxuZnVuY3Rpb24gc3VibWl0T3JkZXIoKSB7XG4gIGNvbnNvbGUubG9nKCAnQXR0ZW1wdGluZyB0byBzYXZlIE5ldyBCaWxsaW5nIEluZm9ybWF0aW9uJyApO1xuXG4gIGNvbnN0IG9yZGVySXRlbXMgPSBnZXRPcmRlckl0ZW1zKCk7XG4gIGNvbnN0IG9yZGVyUHJpY2UgPSBnZXRPcmRlclByaWNlKCk7XG4gIGNvbnN0IHVzZXJOYW1lID0gJCggJy5uYW1lLXZhbHVlJyApLnRleHQoKTtcblxuICBpZiAoICF1c2VyTmFtZSApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYWxlcnRcbiAgICBhbGVydCggJ01ha2UgYW4gQWNjb3VudCBCZWZvcmUgQ29tcGxldGluZyBhIFB1cmNoYXNlJyApO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IG9yZGVySlNPTlJlcXVlc3QgPSB7XG4gICAgICB1c2VyTmFtZTogJ1RyZXZvciBNY0RvdWdhbGQnLFxuICAgICAgaXRlbXM6IG9yZGVySXRlbXMsXG4gICAgICB0b3RhbFByaWNlOiBvcmRlclByaWNlXG4gICAgfTtcblxuICAgIGNvbnNvbGUubG9nKFxuICAgICAgJ3VzZXJzL3NpZ25fdXAgUE9TVCBSZXF1ZXN0OlxcbicsXG4gICAgICBKU09OLnN0cmluZ2lmeSggb3JkZXJKU09OUmVxdWVzdCwgbnVsbCwgMiApXG4gICAgKTtcblxuICAgICQucG9zdChcbiAgICAgICcvb3JkZXJzL25ld19vcmRlcicsXG4gICAgICB7XG4gICAgICAgIHVzZXJOYW1lLFxuICAgICAgICBpdGVtczogb3JkZXJJdGVtcyxcbiAgICAgICAgdG90YWxQcmljZTogb3JkZXJQcmljZVxuICAgICAgfSxcbiAgICAgICggZGF0YSApID0+IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWFsZXJ0XG4gICAgICAgIGFsZXJ0KCBkYXRhICk7XG4gICAgICB9XG4gICAgKVxuICAgICAgLnRoZW4oICggciApID0+IHtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKCAnUE9TVCAvb3JkZXJzL25ld19vcmRlciBpcyBPdmVyISAnICk7XG4gICAgICB9KTtcblxuICB9XG5cblxufVxuXG4kKCAoKSA9PiB7XG4gICQoICcjc3VibWl0LW9yZGVyLWluZm9ybWF0aW9uLWJ0bicgKS5vbiggJ2NsaWNrJywgKCBldmVudCApID0+IHtcbiAgICBpZiAoIGlzQ2FydE5vdEVtcHR5KCkgKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc3VibWl0T3JkZXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWFsZXJ0XG4gICAgICBhbGVydCggJ0FkZCBhbiBJdGVtIHRvIFlvdXIgQ2FydCBCZWZvcmUgQ2hlY2tpbmcgT3V0JyApO1xuICAgIH1cbiAgfSk7XG59KTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG5mdW5jdGlvbiBnZXRQYXltZW50SW5mb3JtYXRpb24oKSB7XG4gIHJldHVybiB7XG4gICAgcGF5bWVudE1ldGhvZDogJCggJyNwYXltZW50LW1ldGhvZC10eXBlcyBvcHRpb246c2VsZWN0ZWQnICkudGV4dCgpLFxuICAgIHBheW1lbnRDYXJkTmFtZTogJCggJyNwYXltZW50LWNhcmQtbmFtZScgKS52YWwoKSxcbiAgICBwYXltZW50Q2FyZE51bWJlcjogJCggJyNwYXltZW50LWNhcmQtbnVtYmVyJyApLnZhbCgpLFxuICAgIHBheW1lbnRDYXJkRXhwaXJhdGlvbkRhdGU6ICQoICcjcGF5bWVudC1leHBpcmF0aW9uLWRhdGUnICkudmFsKCksXG4gICAgcGF5bWVudENhcmRWZXJpZmljYXRpb25Db2RlOiAkKCAnI3BheW1lbnQtY2FyZC12ZXJpZmljYXRpb24nICkudmFsKCksXG4gICAgdXNlck5hbWU6ICQoICcubmFtZS12YWx1ZScgKS50ZXh0KClcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3VibWl0UGF5bWVudEluZm9ybWF0aW9uRm9ybSgpIHtcbiAgY29uc29sZS5sb2coICdBdHRlbXB0aW5nIHRvIHNhdmUgTmV3IEJpbGxpbmcgSW5mb3JtYXRpb24nICk7XG5cbiAgY29uc3QgcGF5bWVudEluZm9ybWF0aW9uID0gZ2V0UGF5bWVudEluZm9ybWF0aW9uKCk7XG5cbiAgY29uc3QgcGF5bWVudEluZm9ybWF0aW9uSlNPTlJlcXVlc3QgPSB7XG4gICAgY2FyZFR5cGU6IHBheW1lbnRJbmZvcm1hdGlvbi5wYXltZW50TWV0aG9kLFxuICAgIGNhcmROdW1iZXI6IHBheW1lbnRJbmZvcm1hdGlvbi5wYXltZW50Q2FyZE51bWJlcixcbiAgICBleHBEYXRlOiBwYXltZW50SW5mb3JtYXRpb24ucGF5bWVudENhcmRFeHBpcmF0aW9uRGF0ZSxcbiAgICBDVlY6IHBheW1lbnRJbmZvcm1hdGlvbi5wYXltZW50Q2FyZFZlcmlmaWNhdGlvbkNvZGUsXG4gICAgY2FyZE5hbWU6IHBheW1lbnRJbmZvcm1hdGlvbi5wYXltZW50Q2FyZE5hbWUsXG4gICAgdXNlckZ1bGxOYW1lOiBwYXltZW50SW5mb3JtYXRpb24udXNlck5hbWVcbiAgfTtcblxuICAkLnBvc3QoICcvdXNlcnMvYmlsbGluZ19pbmZvJywgcGF5bWVudEluZm9ybWF0aW9uSlNPTlJlcXVlc3QsICggZGF0YSApID0+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYWxlcnRcbiAgICBhbGVydCggZGF0YSApO1xuICB9KVxuICAgIC50aGVuKCAoIHJlc3BvbnNlICkgPT4geyByZXR1cm4gKCBjb25zb2xlLmxvZyggJ1RoZSBiaWxsaW5nIEFKQVggaXMgb3ZlcicgKSApOyB9KTtcbn1cblxuJCggKCkgPT4ge1xuICAkKCAnI3N1Ym1pdC1wYXltZW50LWluZm9ybWF0aW9uLWJ0bicgKS5vbiggJ2NsaWNrJywgKCBldmVudCApID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHN1Ym1pdFBheW1lbnRJbmZvcm1hdGlvbkZvcm0oKTtcbiAgfSk7XG59KTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG5mdW5jdGlvbiBnZXRTaGlwcGluZ0lucHV0RmllbGRzKCkge1xuICBjb25zdCBzaGlwcGluZ0FkZHJlc3MxID0gJCggJyNzaGlwcGluZ19hZGRyZXNzXzEnICk7XG4gIGNvbnN0IHNoaXBwaW5nQWRkcmVzczIgPSAkKCAnI3NoaXBwaW5nX2FkZHJlc3NfMicgKTtcbiAgY29uc3Qgc2hpcHBpbmdDaXR5ID0gJCggJyNzaGlwcGluZ19jaXR5JyApO1xuICBjb25zdCBzaGlwcGluZ1N0YXRlID0gJCggJyNzaGlwcGluZ191c2VyX3N0YXRlIG9wdGlvbjpzZWxlY3RlZCcgKTtcbiAgY29uc3Qgc2hpcHBpbmdaaXBDb2RlID0gJCggJyNzaGlwcGluZ196aXBjb2RlJyApO1xuXG4gIHJldHVybiBbXG4gICAgc2hpcHBpbmdBZGRyZXNzMSxcbiAgICBzaGlwcGluZ0FkZHJlc3MyLFxuICAgIHNoaXBwaW5nQ2l0eSxcbiAgICBzaGlwcGluZ1N0YXRlLFxuICAgIHNoaXBwaW5nWmlwQ29kZVxuICBdO1xufVxuXG5mdW5jdGlvbiBnZXRCaWxsaW5nSW5wdXRGaWVsZHMoKSB7XG4gIGNvbnN0IGJpbGxpbmdBZGRyZXNzMSA9ICQoICcuYWRkcmVzcy0xLXZhbHVlJyApO1xuICBjb25zdCBiaWxsaW5nQWRkcmVzczIgPSAkKCAnLmFkZHJlc3MtMi12YWx1ZScgKTtcbiAgY29uc3QgYmlsbGluZ0NpdHkgPSAkKCAnLmNpdHktdmFsdWUnICk7XG4gIGNvbnN0IGJpbGxpbmdTdGF0ZSA9ICQoICcuc3RhdGUtdmFsdWUnICk7XG4gIGNvbnN0IGJpbGxpbmdaaXBDb2RlID0gJCggJy56aXAtY29kZS12YWx1ZScgKTtcblxuICByZXR1cm4gW1xuICAgIGJpbGxpbmdBZGRyZXNzMSxcbiAgICBiaWxsaW5nQWRkcmVzczIsXG4gICAgYmlsbGluZ0NpdHksXG4gICAgYmlsbGluZ1N0YXRlLFxuICAgIGJpbGxpbmdaaXBDb2RlXG4gIF07XG59XG5cbmZ1bmN0aW9uIGNsZWFyU2hpcHBpbmdJbnB1dHMoKSB7XG4gIGNvbnN0IFsgYWRkcmVzczEsIGFkZHJlc3MyLCBjaXR5LCBzdGF0ZSwgemlwY29kZSBdID0gZ2V0U2hpcHBpbmdJbnB1dEZpZWxkcygpO1xuICBhZGRyZXNzMS52YWwoICcnICk7XG4gIGFkZHJlc3MyLnZhbCggJycgKTtcbiAgY2l0eS52YWwoICcnICk7XG4gIHN0YXRlLnZhbCggJ3NlbGVjdGVkJyApO1xuICB6aXBjb2RlLnZhbCggJycgKTtcbn1cblxuZnVuY3Rpb24gaXNUeXBlT2ZBZGRyZXNzQmlsbGluZygpIHtcbiAgY29uc3QgdXNlQmlsbGluZyA9ICQoICcjdXNlLWJpbGxpbmctYWRkcmVzcy1mb3Itc2hpcHBpbmcnICk7XG5cbiAgcmV0dXJuICEhdXNlQmlsbGluZy5pcyggJzpjaGVja2VkJyApO1xufVxuXG5mdW5jdGlvbiBjaGVja0ZvckJpbGxpbmdBZGRyZXNzKCkge1xuICBjb25zdCBbIGFkZHJlc3MxLCAsIGNpdHksIHN0YXRlLCB6aXBjb2RlIF0gPSBnZXRCaWxsaW5nSW5wdXRGaWVsZHMoKTtcbiAgaWYgKFxuICAgICFhZGRyZXNzMS50ZXh0KCkgfHxcbiAgICAhY2l0eS50ZXh0KCkgfHxcbiAgICAhc3RhdGUudGV4dCgpIHx8XG4gICAgIXppcGNvZGUudGV4dCgpIHx8XG4gICAgJCggJ3NlY3Rpb24uYWNjb3VudC1pbmZvcm1hdGlvbicgKS5jc3MoICdkaXNwbGF5JyApID09PSAnbm9uZSdcbiAgKSB7XG4gICAgJCggJyNiaWxsaW5nLWFkZHJlc3MtZXJyb3ItbWVzc2FnZScgKS5zaG93KCk7XG4gICAgY2xlYXJTaGlwcGluZ0lucHV0cygpO1xuICB9ZWxzZSB7XG4gICAgJCggJyNiaWxsaW5nLWFkZHJlc3MtZXJyb3ItbWVzc2FnZScgKS5oaWRlKCk7XG4gICAgc2V0QmlsbGluZ1RvU2hpcHBpbmcoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRCaWxsaW5nVG9TaGlwcGluZygpIHtcbiAgY29uc3QgW1xuICAgIHNoaXBwaW5nQWRkcmVzczEsXG4gICAgc2hpcHBpbmdBZGRyZXNzMixcbiAgICBzaGlwcGluZ0NpdHksXG4gICAgc2hpcHBpbmdTdGF0ZSxcbiAgICBzaGlwcGluZ1ppcENvZGVcbiAgXSA9IGdldFNoaXBwaW5nSW5wdXRGaWVsZHMoKTtcblxuICBjb25zdCBbXG4gICAgYmlsbGluZ0FkZHJlc3MxLFxuICAgIGJpbGxpbmdBZGRyZXNzMixcbiAgICBiaWxsaW5nQ2l0eSxcbiAgICBiaWxsaW5nU3RhdGUsXG4gICAgYmlsbGluZ1ppcENvZGVcbiAgXSA9IGdldEJpbGxpbmdJbnB1dEZpZWxkcygpO1xuXG4gIGNvbnN0IHN0YXRlU3RyaW5nID0gYmlsbGluZ1N0YXRlLnRleHQoKTtcblxuICBzaGlwcGluZ0FkZHJlc3MxLnZhbCggYmlsbGluZ0FkZHJlc3MxLnRleHQoKSApO1xuICBzaGlwcGluZ0FkZHJlc3MyLnZhbCggYmlsbGluZ0FkZHJlc3MyLnRleHQoKSApO1xuICBzaGlwcGluZ0NpdHkudmFsKCBiaWxsaW5nQ2l0eS50ZXh0KCkgKTtcbiAgJCggYCNzaGlwcGluZ191c2VyX3N0YXRlIG9wdGlvbjpjb250YWlucygke3N0YXRlU3RyaW5nfSlgICkuYXR0cihcbiAgICAnc2VsZWN0ZWQnLFxuICAgIHRydWVcbiAgKTtcbiAgc2hpcHBpbmdaaXBDb2RlLnZhbCggYmlsbGluZ1ppcENvZGUudGV4dCgpICk7XG5cbiAgLy8gc2hpcHBpbmdWYWxpZGF0b3JzLmFkZHJlc3MxKCk7XG4gIC8vIHNoaXBwaW5nVmFsaWRhdG9ycy5hZGRyZXNzMigpO1xuICAvLyBzaGlwcGluZ1ZhbGlkYXRvcnMuY2l0eSgpO1xuICAvLyBzaGlwcGluZ1ZhbGlkYXRvcnMuc3RhdGUoKTtcbiAgLy8gc2hpcHBpbmdWYWxpZGF0b3JzLnppcGNvZGUoKTtcbn1cblxuZnVuY3Rpb24gc2F2ZUFkZHJlc3NBc1NoaXBwaW5nSW5mbygpIHtcbiAgY29uc29sZS5sb2coICdBdHRlbXB0aW5nIHRvIFBPU1QgYSBuZXcgc2hpcHBpbmcgYWRkcmVzcy4uLicgKTtcblxuICBjb25zdCBbIGFkZHJlc3MxLCBhZGRyZXNzMiwgY2l0eSwgc3RhdGUsIHppcGNvZGUgXSA9IGdldFNoaXBwaW5nSW5wdXRGaWVsZHMoKTtcblxuICAvLyBjb25zdCBzaGlwcGluZ0FkZHJlc3MxID0gJCggJyNzaGlwcGluZ19hZGRyZXNzXzEnICkudmFsKCk7XG4gIC8vIGNvbnN0IHNoaXBwaW5nQWRkcmVzczIgPSAkKCAnI3NoaXBwaW5nX2FkZHJlc3NfMicgKS52YWwoKTtcbiAgLy8gY29uc3Qgc2hpcHBpbmdDaXR5ID0gJCggJyNzaGlwcGluZ191c2VyX3N0YXRlIG9wdGlvbjpzZWxlY3RlZCcgKS50ZXh0KCk7XG4gIC8vIGNvbnN0IHNoaXBwaW5nU3RhdGUgPSAkKCAnI3NoaXBwaW5nX2NpdHknICkudmFsKCk7XG4gIC8vIGNvbnN0IHNoaXBwaW5nWmlwQ29kZSA9ICQoICcjc2hpcHBpbmdfemlwY29kZScgKS52YWwoKTtcbiAgY29uc3QgdXNlck5hbWUgPSAkKCAnLm5hbWUtdmFsdWUnICkudGV4dCgpO1xuXG4gICQucG9zdChcbiAgICAnL3VzZXJzL3NoaXBwaW5nX2luZm8nLFxuICAgIHtcbiAgICAgIHNoaXBwaW5nX2FkZHJlc3MxOiBhZGRyZXNzMS52YWwoKSxcbiAgICAgIHNoaXBwaW5nX2FkZHJlc3MyOiBhZGRyZXNzMi52YWwoKSxcbiAgICAgIHNoaXBwaW5nX2NpdHk6IGNpdHkudmFsKCksXG4gICAgICBzaGlwcGluZ19zdGF0ZTogc3RhdGUudGV4dCgpLFxuICAgICAgc2hpcHBpbmdfemlwY29kZTogemlwY29kZS52YWwoKSxcbiAgICAgIHVzZXJGdWxsTmFtZTogdXNlck5hbWVcbiAgICB9LFxuICAgICggZGF0YSApID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1hbGVydFxuICAgICAgY29uc29sZS5sb2coIGBQT1NUIC91c2Vycy9zaGlwcGluZ19pbmZvIFJlc3BvbnNlOiAke2RhdGF9YCApO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWFsZXJ0XG4gICAgICBhbGVydCggZGF0YSApO1xuICAgIH1cbiAgKS5kb25lKCBjb25zb2xlLmxvZyggJ1BPU1Qgc2hpcHBpbmcgaW5mb3JtYXRpb24gaXMgY29tcGxldGUnICkgKTtcbn1cblxuJCggKCkgPT4ge1xuICAkKCAnI2JpbGxpbmctYWRkcmVzcy1lcnJvci1tZXNzYWdlJyApLmhpZGUoKTtcbiAgY29uc3QgdXNlQmlsbGluZ0NoZWNrQm94ID0gJCggJyN1c2UtYmlsbGluZy1hZGRyZXNzLWZvci1zaGlwcGluZycgKTtcblxuICAkKCAnI3NoaXBwaW5nLWluZm8tc3VibWl0LWJ0bicgKS5vbiggJ2NsaWNrJywgKCBldmVudCApID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGlmICggJCggJ3NlY3Rpb24uYWNjb3VudC1pbmZvcm1hdGlvbicgKS5jc3MoICdkaXNwbGF5JyApID09PSAnbm9uZScgKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYWxlcnRcbiAgICAgIGFsZXJ0KCAnTWFrZSBhbiBBY2NvdW50IEJlZm9yZSBSZWdpc3RlcmluZyBhIFNoaXBwaW5nIEFkZHJlc3MhJyApO1xuICAgICAgY2xlYXJTaGlwcGluZ0lucHV0cygpO1xuICAgIH1lbHNlIHtcbiAgICAgIHNhdmVBZGRyZXNzQXNTaGlwcGluZ0luZm8oKTtcbiAgICB9XG4gIH0pO1xuXG4gIHVzZUJpbGxpbmdDaGVja0JveC5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBpZiAoIGlzVHlwZU9mQWRkcmVzc0JpbGxpbmcoKSApIHtcbiAgICAgIGNoZWNrRm9yQmlsbGluZ0FkZHJlc3MoKTtcbiAgICB9ZWxzZSB7XG4gICAgICBjbGVhclNoaXBwaW5nSW5wdXRzKCk7XG4gICAgICAkKCAnI2JpbGxpbmctYWRkcmVzcy1lcnJvci1tZXNzYWdlJyApLmhpZGUoKTtcbiAgICB9XG4gIH0pO1xufSk7XG4iLCJjb25zdCAkID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuZnVuY3Rpb24gZ2V0VXNlckluZm9ybWF0aW9uKCkge1xuICBjb25zdCB1c2VyRmlyc3ROYW1lID0gJCggJyN1c2VyX2ZpcnN0X25hbWUnICkudmFsKCk7XG4gIGNvbnN0IHVzZXJMYXN0TmFtZSA9ICQoICcjdXNlcl9sYXN0X25hbWUnICkudmFsKCk7XG4gIGNvbnN0IHVzZXJQaG9uZSA9ICQoICcjdXNlcl9waG9uZScgKS52YWwoKTtcbiAgY29uc3QgdXNlckVtYWlsID0gJCggJyN1c2VyX2VtYWlsJyApLnZhbCgpO1xuICBjb25zdCB1c2VyQWRkcmVzczEgPSAkKCAnI3VzZXJfYWRkcmVzc18xJyApLnZhbCgpO1xuICBjb25zdCB1c2VyQWRkcmVzczIgPSAkKCAnI3VzZXJfYWRkcmVzc18yJyApLnZhbCgpO1xuICBjb25zdCB1c2VyU3RhdGUgPSAkKCAnI3VzZXJfc3RhdGUgb3B0aW9uOnNlbGVjdGVkJyApLnRleHQoKTtcbiAgY29uc3QgdXNlckNpdHkgPSAkKCAnI3VzZXJfY2l0eScgKS52YWwoKTtcbiAgY29uc3QgdXNlclppcENvZGUgPSAkKCAnI3VzZXJfemlwY29kZScgKS52YWwoKTtcblxuICByZXR1cm4gW1xuICAgIHVzZXJGaXJzdE5hbWUsXG4gICAgdXNlckxhc3ROYW1lLFxuICAgIHVzZXJQaG9uZSxcbiAgICB1c2VyRW1haWwsXG4gICAgdXNlckFkZHJlc3MxLFxuICAgIHVzZXJBZGRyZXNzMixcbiAgICB1c2VyU3RhdGUsXG4gICAgdXNlckNpdHksXG4gICAgdXNlclppcENvZGVcbiAgXTtcbn1cblxuZnVuY3Rpb24gaGlkZVVzZXJSZWdpc3RyYXRpb24oKSB7XG4gIGNvbnN0IHVzZXJSZWdpc3RlciA9ICQoICdzZWN0aW9uLnJlZ2lzdGVyLWFjY291bnQnICk7XG4gIHVzZXJSZWdpc3Rlci5jc3MoICdkaXNwbGF5JywgJ25vbmUnICk7XG59XG5cbmZ1bmN0aW9uIGhpZGVVc2VyT3ZlcnZpZXcoKSB7XG4gIGNvbnN0IHVzZXJPdmVydmlldyA9ICQoICdzZWN0aW9uLmFjY291bnQtaW5mb3JtYXRpb24nICk7XG4gIHVzZXJPdmVydmlldy5jc3MoICdkaXNwbGF5JywgJ25vbmUnICk7XG59XG5cbmZ1bmN0aW9uIHNob3dVc2VyT3ZlcnZpZXcoKSB7XG4gIGNvbnN0IHVzZXJPdmVydmlldyA9ICQoICdzZWN0aW9uLmFjY291bnQtaW5mb3JtYXRpb24nICk7XG4gIHVzZXJPdmVydmlldy5jc3MoICdkaXNwbGF5JywgJ2Jsb2NrJyApO1xufVxuXG5mdW5jdGlvbiBzZXRVc2VyT3ZlcnZpZXcoKSB7XG4gIGNvbnN0IFtcbiAgICBmaXJzdE5hbWUsXG4gICAgbGFzdE5hbWUsXG4gICAgcGhvbmUsXG4gICAgZW1haWwsXG4gICAgYWRkcmVzczEsXG4gICAgYWRkcmVzczIsXG4gICAgc3RhdGUsXG4gICAgY2l0eSxcbiAgICB6aXBDb2RlXG4gIF0gPSBnZXRVc2VySW5mb3JtYXRpb24oKTtcblxuICAkKCAnLm5hbWUtdmFsdWUnICkudGV4dCggYCR7Zmlyc3ROYW1lfSAke2xhc3ROYW1lfWAgKTtcbiAgJCggJy5hZGRyZXNzLTEtdmFsdWUnICkudGV4dCggYWRkcmVzczEgKTtcbiAgaWYgKCBhZGRyZXNzMiAhPT0gJycgKSB7XG4gICAgJCggJy5hZGRyZXNzLTItdmFsdWUnICkudGV4dCggYWRkcmVzczIgKTtcbiAgfWVsc2Uge1xuICAgICQoICcuYWRkcmVzcy0yLXZhbHVlJyApLmNzcyggJ2Rpc3BsYXknLCAnbm9uZScgKTtcbiAgICAkKCAnLmFkZHJlc3MtMi1sYWJlbCcgKS5jc3MoICdkaXNwbGF5JywgJ25vbmUnICk7XG4gICAgJCggJy5hZGRyZXNzLTItbGFiZWw6cGFyZW50JyApLmNzcyggJ2Rpc3BsYXknLCAnbm9uZScgKTtcbiAgfVxuICAkKCAnLmNpdHktdmFsdWUnICkudGV4dCggY2l0eSApO1xuICAkKCAnLnN0YXRlLXZhbHVlJyApLnRleHQoIHN0YXRlICk7XG4gICQoICcuemlwLWNvZGUtdmFsdWUnICkudGV4dCggemlwQ29kZSApO1xuICAkKCAnLnBob25lLXZhbHVlJyApLnRleHQoIHBob25lICk7XG4gICQoICcuZW1haWwtdmFsdWUnICkudGV4dCggZW1haWwgKTtcbn1cblxuZnVuY3Rpb24gc3VibWl0VXNlckZvcm0oKSB7XG4gIGNvbnNvbGUubG9nKCAnQXR0ZW1wdGluZyB0byBQT1NUIGEgbmV3IHVzZXIuLi4nICk7XG5cbiAgY29uc3QgW1xuICAgIGZpcnN0TmFtZSxcbiAgICBsYXN0TmFtZSxcbiAgICBwaG9uZSxcbiAgICBlbWFpbCxcbiAgICBhZGRyZXNzMSxcbiAgICBhZGRyZXNzMixcbiAgICBzdGF0ZSxcbiAgICBjaXR5LFxuICAgIHppcENvZGVcbiAgXSA9IGdldFVzZXJJbmZvcm1hdGlvbigpO1xuXG4gIGNvbnN0IHVzZXJJbmZvcm1hdGlvbiA9IHtcbiAgICBmdWxsbmFtZTogYCR7Zmlyc3ROYW1lfSAke2xhc3ROYW1lfWAsXG4gICAgdXNlcl9waG9uZTogcGhvbmUsXG4gICAgdXNlcl9lbWFpbDogZW1haWwsXG4gICAgdXNlcl9hZGRyZXNzMTogYWRkcmVzczEsXG4gICAgdXNlcl9hZGRyZXNzMjogYWRkcmVzczIsXG4gICAgdXNlcl9jaXR5OiBjaXR5LFxuICAgIHVzZXJfc3RhdGU6IHN0YXRlLFxuICAgIHVzZXJfemlwY29kZTogemlwQ29kZVxuICB9O1xuXG4gIHNob3dVc2VyT3ZlcnZpZXcoKTtcblxuICAkLnBvc3QoICcvdXNlcnMvc2lnbl91cCcsIHVzZXJJbmZvcm1hdGlvbiwgKCBkYXRhICkgPT4ge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1hbGVydFxuICAgIGFsZXJ0KCBkYXRhICk7XG4gIH0pLmRvbmUoIHNldFVzZXJPdmVydmlldygpICk7XG5cbiAgLy8gc2V0VXNlck92ZXJ2aWV3KCk7XG59XG5cbiQoICgpID0+IHtcbiAgaGlkZVVzZXJPdmVydmlldygpO1xuICAkKCAnI3JlZ2lzdGVyLXVzZXItYnRuJyApLm9uKCAnY2xpY2snLCAoIGV2ZW50ICkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgc3VibWl0VXNlckZvcm0oKTtcblxuICAgIC8vIHNldFVzZXJPdmVydmlldygpO1xuICAgIGhpZGVVc2VyUmVnaXN0cmF0aW9uKCk7XG4gIH0pO1xuXG4gIC8vICQoICcjcmVnaXN0ZXItdXNlci1idG4nIClcbiAgLy8gICAub24oICdjbGljaycsICgpID0+IHtcbiAgLy8gICB9KTtcbn0pO1xuIiwiY29uc3QgJCA9IHJlcXVpcmUoICdqcXVlcnknICk7XG5cblxuY29uc3QgcHJvZHVjdEl0ZW1zID0gW107XG5cbiQoICgpID0+IHtcbiAgY29uc3QgcHJvZHVjdERyb3BEb3duID0gJCggJyNsaXN0LXByb2R1Y3RzJyApO1xuICBjb25zdCBwcm9kdWN0T3JkZXJzID0gW107XG4gIGxldCBzdWJ0b3RhbDtcblxuICBmdW5jdGlvbiBnZXRTZWxlY3RlZFByb2R1Y3RQcmljZSgpIHtcbiAgICBjb25zdCAkc2VsZWN0ZWRJdGVtID0gcHJvZHVjdERyb3BEb3duLmZpbmQoICdvcHRpb246c2VsZWN0ZWQnICk7XG4gICAgY29uc3QgdGV4dE9mSXRlbSA9ICRzZWxlY3RlZEl0ZW0udGV4dCgpO1xuICAgIGNvbnN0IGdldFByb2R1Y3RQcmljZSA9IHRleHRPZkl0ZW0uc3Vic3RyKCB0ZXh0T2ZJdGVtLmluZGV4T2YoICckJyApICsgMSApO1xuICAgIHJldHVybiBOdW1iZXIoIGdldFByb2R1Y3RQcmljZSApO1xuICB9XG5cbiAgZnVuY3Rpb24gZGlzcGxheVByb2R1Y3RQcmljZSggcHJvZHVjZVZhbHVlICkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCAndW5pdC1wcmljZScgKS52YWx1ZSA9IE51bWJlci5pc05hTiggcHJvZHVjZVZhbHVlICkgP1xuICAgICAgMCA6XG4gICAgICBwcm9kdWNlVmFsdWU7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRJdGVtUXVhbnRpdHkoIHVuaXRzICkge1xuICAgIHJldHVybiAkKCB1bml0cyApLnZhbCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0U2VsZWN0ZWRPcmRlclByaWNlKCkge1xuICAgIGNvbnN0IHF1YW50aXR5ID0gZ2V0SXRlbVF1YW50aXR5KCAnI2l0ZW0tdW5pdHMnICk7XG4gICAgcmV0dXJuIHF1YW50aXR5ICogZ2V0U2VsZWN0ZWRQcm9kdWN0UHJpY2UoKTtcbiAgfVxuXG4gICQoICcjaXRlbS11bml0cycgKS5vbiggJ2NoYW5nZScsICgpID0+IHtcbiAgICAvLyBDb25zdCBxdWFudGl0eSA9IGdldEl0ZW1RdWFudGl0eSgnI2l0ZW0tdW5pdHMnKTtcbiAgICAvLyBjb25zdCB0b3RhbFByaWNlID0gcXVhbnRpdHkgKiBnZXRTZWxlY3RlZFByb2R1Y3RQcmljZSgpO1xuICAgIGNvbnN0IHRvdGFsUHJpY2UgPSBnZXRTZWxlY3RlZE9yZGVyUHJpY2UoKTtcbiAgICBkaXNwbGF5UHJvZHVjdFByaWNlKCB0b3RhbFByaWNlICk7XG4gIH0pO1xuXG4gIHByb2R1Y3REcm9wRG93bi5vbiggJ2NoYW5nZScsICgpID0+IHtcbiAgICBjb25zdCBzZWxlY3RlZEl0ZW1QcmljZSA9IGdldFNlbGVjdGVkT3JkZXJQcmljZSgpO1xuICAgIGRpc3BsYXlQcm9kdWN0UHJpY2UoIHNlbGVjdGVkSXRlbVByaWNlICk7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIGdldFByb2R1Y3ROYW1lKCkge1xuICAgIGNvbnN0ICRzZWxlY3RlZEl0ZW0gPSBwcm9kdWN0RHJvcERvd24uZmluZCggJ29wdGlvbjpzZWxlY3RlZCcgKTtcbiAgICBjb25zdCB0ZXh0T2ZQcm9kdWN0ID0gJHNlbGVjdGVkSXRlbS50ZXh0KCk7XG4gICAgY29uc3QgcHJvZHVjdERldGFpbHMgPSB0ZXh0T2ZQcm9kdWN0LnNwbGl0KCAnICcgKTtcbiAgICByZXR1cm4gYCR7cHJvZHVjdERldGFpbHNbIDAgXX0tJHtwcm9kdWN0RGV0YWlsc1sgMSBdfWA7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRQcm9kdWN0SUQoKSB7XG4gICAgY29uc3QgJHNlbGVjdGVkSXRlbSA9IHByb2R1Y3REcm9wRG93bi5maW5kKCAnb3B0aW9uOnNlbGVjdGVkJyApO1xuICAgIHJldHVybiAkc2VsZWN0ZWRJdGVtLnZhbCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gYXBwZW5kT3JkZXJUb0NhcnQoIHByb2R1Y3ROYW1lLCBwcm9kdWN0VW5pdHMsIHByb2R1Y3RWYWx1ZSwgcHJvZHVjdElEICkge1xuICAgIGNvbnN0IHJvd1Byb2R1Y3QgPSBgdGQjJHtwcm9kdWN0TmFtZX1gO1xuICAgIGNvbnNvbGUubG9nKCAkKCByb3dQcm9kdWN0ICkubGVuZ3RoICk7XG5cbiAgICBpZiAoICQoIHJvd1Byb2R1Y3QgKS5sZW5ndGggPT09IDEgKSB7XG5cbiAgICAgIGNvbnN0IHVuaXRzSWRlbnRpZmllciA9ICQoIGAjdW5pdHMtJHtwcm9kdWN0TmFtZX1gICk7XG4gICAgICBjb25zdCB0b3RhbENvc3RJZGVudGlmaWVyID0gJCggYCN0b3RhbC1jb3N0LW9mLSR7cHJvZHVjdE5hbWV9YCApO1xuXG4gICAgICBjb25zdCBvbGRVbml0cyA9IHVuaXRzSWRlbnRpZmllci5odG1sKCk7XG4gICAgICBjb25zdCBvbGRJdGVtQ29zdERvbGxhckFtb3VudCA9IHRvdGFsQ29zdElkZW50aWZpZXIuaHRtbCgpO1xuICAgICAgY29uc3Qgb2xkSXRlbUNvc3ROdW1iZXIgPSBvbGRJdGVtQ29zdERvbGxhckFtb3VudC5zdWJzdHIoXG4gICAgICAgIG9sZEl0ZW1Db3N0RG9sbGFyQW1vdW50LmluZGV4T2YoICckJyApICsgMVxuICAgICAgKTtcbiAgICAgIGNvbnN0IG5ld1VuaXRzID0gTnVtYmVyKCBwcm9kdWN0VW5pdHMgKSArIE51bWJlciggb2xkVW5pdHMgKTtcbiAgICAgIGNvbnN0IG5ld1RvdGFsSXRlbUNvc3QgPSBOdW1iZXIoIHByb2R1Y3RWYWx1ZSApICsgTnVtYmVyKCBvbGRJdGVtQ29zdE51bWJlciApO1xuICAgICAgdW5pdHNJZGVudGlmaWVyLmh0bWwoIG5ld1VuaXRzICk7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jb25jYXRcbiAgICAgIHRvdGFsQ29zdElkZW50aWZpZXIuaHRtbCggYCQke25ld1RvdGFsSXRlbUNvc3R9YCApO1xuICAgIH1lbHNlIHtcbiAgICAgICQoICcjY2FydC1saXN0ID4gdGJvZHknICkuYXBwZW5kKCBgPHRyIGNsYXNzPVwicHJvZHVjdC1vcmRlclwiPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9J3Byb2R1Y3RJRCcgaGlkZGVuPiR7cHJvZHVjdElEfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0nJHtwcm9kdWN0TmFtZX0nIGNsYXNzPVwicHJvZHVjdE5hbWVcIj4ke3Byb2R1Y3ROYW1lfTwvdGQ+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBpZD0ndW5pdHMtJHtwcm9kdWN0TmFtZX0nIGNsYXNzPVwicHJvZHVjdFVuaXRzXCI+JHtwcm9kdWN0VW5pdHN9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1sZW5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGlkPSd0b3RhbC1jb3N0LW9mLSR7cHJvZHVjdE5hbWV9JyBjbGFzcz1cInByb2R1Y3RDb3N0XCI+JCR7cHJvZHVjdFZhbHVlfTwvdGQ+XG4gICAgICAgICAgICAgICAgICA8L3RyPmAgKTtcblxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbGN1bGF0ZVN1YnRvdGFsKCkge1xuICAgIHN1YnRvdGFsID1cbiAgICAgIHByb2R1Y3RPcmRlcnMubGVuZ3RoID4gMSA/XG4gICAgICAgIHByb2R1Y3RPcmRlcnMucmVkdWNlKCAoIHByZXYsIG5leHQgKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcHJldiArIG5leHQ7XG4gICAgICAgICAgfSwgMCApIDpcbiAgICAgICAgcHJvZHVjdE9yZGVycztcbiAgfVxuXG4gIGZ1bmN0aW9uIGRpc3BsYXlTdWJ0b3RhbCgpIHtcbiAgICBjb25zdCBjYXJ0U3VidG90YWwgPSAkKCAnI2NhcnQtc3VidG90YWwtbnVtYmVyJyApO1xuICAgIGNhcnRTdWJ0b3RhbC50ZXh0KCBgJCR7c3VidG90YWx9YCApO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkT3JkZXJUb3RhbFRvU3VidG90YWwoIG9yZGVyVG90YWwgKSB7XG4gICAgcHJvZHVjdE9yZGVycy5wdXNoKCBvcmRlclRvdGFsICk7XG4gICAgY2FsY3VsYXRlU3VidG90YWwoKTtcbiAgfVxuXG5cbiAgJCggJyNhZGQtaXRlbS10by1jYXJ0LWJ1dHRvbicgKS5vbiggJ2NsaWNrJywgKCkgPT4ge1xuICAgIGlmIChcbiAgICAgIGdldFNlbGVjdGVkT3JkZXJQcmljZSgpICE9PSAwICYmXG4gICAgICAhTnVtYmVyLmlzTmFOKCBnZXRTZWxlY3RlZFByb2R1Y3RQcmljZSgpIClcbiAgICApIHtcbiAgICAgIGNvbnN0IHByb2R1Y3ROYW1lID0gZ2V0UHJvZHVjdE5hbWUoKTtcbiAgICAgIGNvbnN0IHByb2R1Y3RJRCA9IGdldFByb2R1Y3RJRCgpO1xuICAgICAgY29uc3QgcHJvZHVjdFZhbHVlID0gZ2V0U2VsZWN0ZWRPcmRlclByaWNlKCk7XG4gICAgICBjb25zdCBwcm9kdWN0VW5pdHMgPSBnZXRJdGVtUXVhbnRpdHkoICcjaXRlbS11bml0cycgKTtcbiAgICAgIGFwcGVuZE9yZGVyVG9DYXJ0KCBwcm9kdWN0TmFtZSwgcHJvZHVjdFVuaXRzLCBwcm9kdWN0VmFsdWUsIHByb2R1Y3RJRCApO1xuXG4gICAgICBhZGRPcmRlclRvdGFsVG9TdWJ0b3RhbCggcHJvZHVjdFZhbHVlICk7XG4gICAgICBkaXNwbGF5U3VidG90YWwoKTtcbiAgICB9XG4gIH0pO1xuXG4gICQoICcjY2xlYXItY2FydC1idXR0b24nICkub24oICdjbGljaycsICgpID0+IHtcbiAgICBmb3IgKCBsZXQgaSA9IDE7IGkgPCBwcm9kdWN0T3JkZXJzLmxlbmd0aCArIDE7IGkgKz0gMSApIHtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCAnY2FydC1saXN0JyApLmRlbGV0ZVJvdyggLTEgKTtcbiAgICB9XG4gICAgcHJvZHVjdE9yZGVycy5zcGxpY2UoIDAsIHByb2R1Y3RPcmRlcnMubGVuZ3RoICk7XG4gICAgc3VidG90YWwgPSAwO1xuICAgIGRpc3BsYXlTdWJ0b3RhbCgpO1xuICB9KTtcblxuICBjb25zdCBjaGVja291dENhbGN1bGF0aW9ucyA9IHtcbiAgICBnZXRPcmRlclRheGVzKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3JkZXJTdWJ0b3RhbCAqIDAuMDg7XG4gICAgfSxcbiAgICBnZXRPcmRlclNoaXBwaW5nKCkge1xuICAgICAgcmV0dXJuIHRoaXMub3JkZXJTdWJ0b3RhbCAqIDAuMDM7XG4gICAgfSxcbiAgICBnZXRPcmRlclRvdGFsQ29zdCgpIHtcbiAgICAgIHJldHVybiArdGhpcy5vcmRlclN1YnRvdGFsICsgK3RoaXMub3JkZXJUYXhlcyArICt0aGlzLm9yZGVyU2hpcHBpbmc7XG4gICAgfSxcblxuICAgIHNldE9yZGVyVmFsdWVzKCBuZXdTdWJ0b3RhbCApIHtcbiAgICAgIHRoaXMub3JkZXJTdWJ0b3RhbCA9IG5ld1N1YnRvdGFsO1xuICAgICAgdGhpcy5vcmRlclRheGVzID0gdGhpcy5nZXRPcmRlclRheGVzKCk7XG4gICAgICB0aGlzLm9yZGVyU2hpcHBpbmcgPSB0aGlzLmdldE9yZGVyU2hpcHBpbmcoKTtcbiAgICAgIHRoaXMub3JkZXJUb3RhbENvc3QgPSB0aGlzLmdldE9yZGVyVG90YWxDb3N0KCk7XG4gICAgfSxcbiAgICBnZXRPcmRlclZhbHVlcygpIHtcbiAgICAgIHJldHVybiBbXG4gICAgICAgICt0aGlzLm9yZGVyU3VidG90YWwsXG4gICAgICAgICt0aGlzLm9yZGVyVGF4ZXMsXG4gICAgICAgICt0aGlzLm9yZGVyU2hpcHBpbmcsXG4gICAgICAgICt0aGlzLm9yZGVyVG90YWxDb3N0XG4gICAgICBdO1xuICAgIH1cbiAgfTtcblxuICAkKCAnI3NlbmQtY2FydC10by1jaGVja291dC1idXR0b24nICkub24oICdjbGljaycsICgpID0+IHtcbiAgICBjaGVja291dENhbGN1bGF0aW9ucy5zZXRPcmRlclZhbHVlcyggc3VidG90YWwgKTtcbiAgICBjb25zdCBbXG4gICAgICBpbml0aWFsQ29zdCxcbiAgICAgIHRheGVzLFxuICAgICAgc2hpcHBpbmcsXG4gICAgICB0b3RhbENvc3RcbiAgICBdID0gY2hlY2tvdXRDYWxjdWxhdGlvbnMuZ2V0T3JkZXJWYWx1ZXMoKTtcblxuICAgICQoICcjY2hlY2tvdXQtc3VidG90YWwtdmFsdWUnICkudGV4dCggYCQke051bWJlciggaW5pdGlhbENvc3QgKS50b0ZpeGVkKCAyICl9YCApO1xuICAgICQoICcjY2hlY2tvdXQtdGF4ZXMtdmFsdWUnICkudGV4dCggYCQke051bWJlciggdGF4ZXMgKS50b0ZpeGVkKCAyICl9YCApO1xuICAgICQoICcjY2hlY2tvdXQtc2hpcHBpbmctdmFsdWUnICkudGV4dCggYCQke051bWJlciggc2hpcHBpbmcgKS50b0ZpeGVkKCAyICl9YCApO1xuICAgICQoICcjY2hlY2tvdXQtdG90YWwtdmFsdWUnICkudGV4dCggYCQke051bWJlciggdG90YWxDb3N0ICkudG9GaXhlZCggMiApfWAgKTtcbiAgfSk7XG59KTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9wcmVmZXItZGVmYXVsdC1leHBvcnRcbmV4cG9ydCBmdW5jdGlvbiBzZW5kU2hvcHBpbmdDYXJ0ICgpIHtcbiAgcmV0dXJuIHByb2R1Y3RJdGVtcztcbn1cbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG4vLyBjb25zdCBzdGF0ZSA9ICQoJyN1c2VyX3N0YXRlJyk7IGNhXG5sZXQgaXNBY2NvdW50Rmlyc3ROYW1lVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudExhc3ROYW1lVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudFBob25lVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudEVtYWlsVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudEFkZHJlc3MxVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudEFkZHJlc3MyVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudFN0YXRlVmFsaWQgPSB0cnVlO1xubGV0IGlzQWNjb3VudENpdHlWYWxpZCA9IHRydWU7XG5sZXQgaXNBY2NvdW50WmlwVmFsaWQgPSB0cnVlO1xuXG5mdW5jdGlvbiBjaGVja1VzZXJGaXJzdE5hbWVWYWxpZCgpIHtcbiAgY29uc3QgdXNlckZpcnN0TmFtZSA9ICQoICcjdXNlcl9maXJzdF9uYW1lJyApO1xuICBjb25zdCB1c2VyRmlyc3ROYW1lRXJyb3JNZXNzYWdlID0gJCggJyN1c2VyLWZpcnN0LW5hbWUtZXJyb3ItbWVzc2FnZScgKTtcbiAgdXNlckZpcnN0TmFtZUVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eKD89LnsxLDUwfSQpW2Etel0rKD86WydfLlxcc11bYS16XSspKiQvaTtcbiAgY29uc3QgZm9ybU5hbWUgPSB1c2VyRmlyc3ROYW1lLnZhbCgpO1xuICBpZiAoIHBhdHRlcm4udGVzdCggZm9ybU5hbWUgKSAmJiBmb3JtTmFtZSAhPT0gJycgKSB7XG4gICAgdXNlckZpcnN0TmFtZUVycm9yTWVzc2FnZS5oaWRlKCk7XG4gICAgdXNlckZpcnN0TmFtZS5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIGlmICggdXNlckZpcnN0TmFtZS5oYXNDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICkgKSB7XG4gICAgICB1c2VyRmlyc3ROYW1lLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICB9XG5cbiAgICAvLyB1c2VyRmlyc3ROYW1lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICAvLyB1c2VyRmlyc3ROYW1lLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgxNTIsIDI1MSwgMTUyLCAwLjc1KScgKTtcbiAgfWVsc2Uge1xuICAgIHVzZXJGaXJzdE5hbWVFcnJvck1lc3NhZ2UuaHRtbCggJ0ludmFsaWQgRmlyc3QgTmFtZScgKTtcbiAgICB1c2VyRmlyc3ROYW1lRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG4gICAgdXNlckZpcnN0TmFtZUVycm9yTWVzc2FnZS5zaG93KCk7XG5cbiAgICB1c2VyRmlyc3ROYW1lLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIHVzZXJGaXJzdE5hbWUuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIHVzZXJGaXJzdE5hbWUucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG5cbiAgICAvLyB1c2VyRmlyc3ROYW1lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIHVzZXJGaXJzdE5hbWUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQWNjb3VudEZpcnN0TmFtZVZhbGlkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tVc2VyTGFzdE5hbWVWYWxpZCgpIHtcbiAgY29uc3QgdXNlckxhc3ROYW1lID0gJCggJyN1c2VyX2xhc3RfbmFtZScgKTtcbiAgY29uc3QgdXNlckxhc3ROYW1lRXJyb3JNZXNzYWdlID0gJCggJyN1c2VyLWxhc3QtbmFtZS1lcnJvci1tZXNzYWdlJyApO1xuICB1c2VyTGFzdE5hbWVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gIGNvbnN0IHBhdHRlcm4gPSAvXig/PS57MSw1MH0kKVthLXpdKyg/OlsnXy5cXHNdW2Etel0rKSokL2k7XG4gIGNvbnN0IGZvcm1OYW1lID0gdXNlckxhc3ROYW1lLnZhbCgpO1xuICBpZiAoIHBhdHRlcm4udGVzdCggZm9ybU5hbWUgKSAmJiBmb3JtTmFtZSAhPT0gJycgKSB7XG4gICAgdXNlckxhc3ROYW1lRXJyb3JNZXNzYWdlLmhpZGUoKTtcblxuICAgIHVzZXJMYXN0TmFtZS5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIGlmICggdXNlckxhc3ROYW1lLmhhc0NsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKSApIHtcbiAgICAgIHVzZXJMYXN0TmFtZS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgfVxuICAgIC8vIHVzZXJMYXN0TmFtZS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gdXNlckxhc3ROYW1lLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgxNTIsIDI1MSwgMTUyLCAwLjc1KScgKTtcbiAgfWVsc2Uge1xuICAgIHVzZXJMYXN0TmFtZUVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBMYXN0IE5hbWUnICk7XG4gICAgdXNlckxhc3ROYW1lRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG4gICAgdXNlckxhc3ROYW1lRXJyb3JNZXNzYWdlLnNob3coKTtcbiAgICB1c2VyTGFzdE5hbWUuYWRkQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIGlmICggdXNlckxhc3ROYW1lLmhhc0NsYXNzKCAnZmllbGQtaXMtdmFsaWQnICkgKSB7XG4gICAgICB1c2VyTGFzdE5hbWUucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG4gICAgLy8gdXNlckxhc3ROYW1lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIHVzZXJMYXN0TmFtZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMjUwLCAxMjgsIDExNCwgMC43NSknICk7XG4gICAgaXNBY2NvdW50TGFzdE5hbWVWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrVXNlclBob25lVmFsaWQoKSB7XG4gIGNvbnN0IHVzZXJQaG9uZSA9ICQoICcjdXNlcl9waG9uZScgKTtcbiAgY29uc3QgdXNlclBob25lRXJyb3JNZXNzYWdlID0gJCggJyN1c2VyLXBob25lLWVycm9yLW1lc3NhZ2UnICk7XG4gIHVzZXJQaG9uZUVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eWytdP1soXT9bMC05XXszfVspXT9bLVxccy5dP1swLTldezN9Wy1cXHMuXT9bMC05XXs0LDZ9JC9pbTtcbiAgY29uc3QgZm9ybU5hbWUgPSB1c2VyUGhvbmUudmFsKCk7XG4gIGlmICggcGF0dGVybi50ZXN0KCBmb3JtTmFtZSApICYmIGZvcm1OYW1lICE9PSAnJyApIHtcbiAgICB1c2VyUGhvbmVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gICAgdXNlclBob25lLmFkZENsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgaWYgKCB1c2VyUGhvbmUuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgdXNlclBob25lLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICB9XG4gICAgLy8gdXNlclBob25lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICAvLyB1c2VyUGhvbmUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDE1MiwgMjUxLCAxNTIsIDAuNzUpJyApO1xuICB9ZWxzZSB7XG4gICAgdXNlclBob25lRXJyb3JNZXNzYWdlLmh0bWwoICdJbnZhbGlkIFBob25lJyApO1xuICAgIHVzZXJQaG9uZUVycm9yTWVzc2FnZS5jc3MoICdjb2xvcicsICcjYjAwODA4JyApO1xuICAgIHVzZXJQaG9uZUVycm9yTWVzc2FnZS5zaG93KCk7XG4gICAgdXNlclBob25lLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIHVzZXJQaG9uZS5oYXNDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApICkge1xuICAgICAgdXNlclBob25lLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgfVxuICAgIC8vIHVzZXJQaG9uZS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIHNhbG1vbicgKTtcbiAgICAvLyB1c2VyUGhvbmUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQWNjb3VudFBob25lVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja1VzZXJFbWFpbFZhbGlkKCkge1xuICBjb25zdCB1c2VyRW1haWwgPSAkKCAnI3VzZXJfZW1haWwnICk7XG4gIGNvbnN0IHVzZXJFbWFpbEVycm9yTWVzc2FnZSA9ICQoICcjdXNlci1lbWFpbC1lcnJvci1tZXNzYWdlJyApO1xuICB1c2VyRW1haWxFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gIGNvbnN0IHBhdHRlcm4gPSAvXFxTK0BcXFMrXFwuXFxTKy87XG4gIGNvbnN0IGZvcm1OYW1lID0gdXNlckVtYWlsLnZhbCgpO1xuICBpZiAoIHBhdHRlcm4udGVzdCggZm9ybU5hbWUgKSAmJiBmb3JtTmFtZSAhPT0gJycgKSB7XG4gICAgdXNlckVtYWlsRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICB1c2VyRW1haWwuYWRkQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICBpZiAoIHVzZXJFbWFpbC5oYXNDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICkgKSB7XG4gICAgICB1c2VyRW1haWwucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIH1cblxuICAgIC8vIHVzZXJFbWFpbC5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gdXNlckVtYWlsLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgxNTIsIDI1MSwgMTUyLCAwLjc1KScgKTtcbiAgfWVsc2Uge1xuICAgIHVzZXJFbWFpbEVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBFbWFpbCcgKTtcbiAgICB1c2VyRW1haWxFcnJvck1lc3NhZ2UuY3NzKCAnY29sb3InLCAnI2IwMDgwOCcgKTtcbiAgICB1c2VyRW1haWxFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIHVzZXJFbWFpbC5hZGRDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgaWYgKCB1c2VyRW1haWwuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIHVzZXJFbWFpbC5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIH1cbiAgICAvLyB1c2VyRW1haWwuY3NzKCAnYm9yZGVyJywgJzJweCBzb2xpZCBzYWxtb24nICk7XG4gICAgLy8gdXNlckVtYWlsLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgyNTAsIDEyOCwgMTE0LCAwLjc1KScgKTtcbiAgICBpc0FjY291bnRFbWFpbFZhbGlkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tVc2VyQWRkcmVzczFWYWxpZCgpIHtcbiAgY29uc3QgYWRkcmVzczEgPSAkKCAnI3VzZXJfYWRkcmVzc18xJyApO1xuICBjb25zdCBhZGRyZXNzMUVycm9yTWVzc2FnZSA9ICQoICcjdXNlci1hZGRyZXNzLTEtZXJyb3ItbWVzc2FnZScgKTtcbiAgYWRkcmVzczFFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gIGNvbnN0IHBhdHRlcm4gPSAvXlxccypcXFMrKD86XFxzK1xcUyspezJ9LztcbiAgY29uc3QgZm9ybU5hbWUgPSBhZGRyZXNzMS52YWwoKTtcbiAgaWYgKCBwYXR0ZXJuLnRlc3QoIGZvcm1OYW1lICkgJiYgZm9ybU5hbWUgIT09ICcnICkge1xuICAgIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICBhZGRyZXNzMS5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIGlmICggYWRkcmVzczEuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgYWRkcmVzczEucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIH1cblxuICAgIC8vIGFkZHJlc3MxLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICAvLyBhZGRyZXNzMS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBhZGRyZXNzMUVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBBZGRyZXNzJyApO1xuICAgIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBhZGRyZXNzMUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gYWRkcmVzczFFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBhZGRyZXNzMUVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgYWRkcmVzczFFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIGFkZHJlc3MxLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIGFkZHJlc3MxLmhhc0NsYXNzKCAnZmllbGQtaXMtdmFsaWQnICkgKSB7XG4gICAgICBhZGRyZXNzMS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIH1cbiAgICAvLyBhZGRyZXNzMS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIHNhbG1vbicgKTtcbiAgICAvLyBhZGRyZXNzMS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMjUwLCAxMjgsIDExNCwgMC43NSknICk7XG4gICAgaXNBY2NvdW50QWRkcmVzczFWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrVXNlckFkZHJlc3MyVmFsaWQyKCkge1xuICBjb25zdCBhZGRyZXNzMiA9ICQoICcjdXNlcl9hZGRyZXNzXzInICk7XG4gIGNvbnN0IGFkZHJlc3MyRXJyb3JNZXNzYWdlID0gJCggJyN1c2VyLWFkZHJlc3MtMi1lcnJvci1tZXNzYWdlJyApO1xuICBhZGRyZXNzMkVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eW2EtekEtWjAtOVxccywuJy1dezMsfSQvO1xuICBjb25zdCBmb3JtTmFtZSA9IGFkZHJlc3MyLnZhbCgpO1xuICBpZiAoIHBhdHRlcm4udGVzdCggZm9ybU5hbWUgKSB8fCBmb3JtTmFtZSA9PT0gJycgKSB7XG4gICAgYWRkcmVzczJFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGFkZHJlc3MyLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgIzE1MWEyZicgKTtcbiAgICBhZGRyZXNzMi5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoNjMsIDYzLCA2MywgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBhZGRyZXNzMkVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBBZGRyZXNzJyApO1xuICAgIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBhZGRyZXNzMkVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gYWRkcmVzczJFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBhZGRyZXNzMkVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgYWRkcmVzczJFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIGFkZHJlc3MyLmNzcyggJ2JvcmRlci1ib3R0b20nLCAnMnB4IHNvbGlkICMxNTFhMmYnICk7XG4gICAgYWRkcmVzczIuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQWNjb3VudEFkZHJlc3MyVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja0FjY291bnRTdGF0ZVZhbGlkKCkge1xuICBjb25zdCBzdGF0ZSA9ICQoICcjdXNlcl9zdGF0ZScgKTtcbiAgY29uc3Qgc3RhdGVFcnJvck1lc3NhZ2UgPSAkKCAnI3VzZXItc3RhdGUtZXJyb3ItbWVzc2FnZScgKTtcbiAgc3RhdGVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICBpZiAoIHN0YXRlLnZhbCgpICkge1xuICAgIHN0YXRlRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICBzdGF0ZS5jc3MoICdib3JkZXInLCAnMXB4IHNvbGlkICMzNEY0NTgnICk7XG4gICAgc3RhdGUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDE1MiwgMjUxLCAxNTIsIDAuNzUpJyApO1xuICB9ZWxzZSB7XG4gICAgc3RhdGVFcnJvck1lc3NhZ2UuaHRtbCggJ1NlbGVjdCBhIFN0YXRlJyApO1xuICAgIHN0YXRlRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBzdGF0ZUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIHN0YXRlRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gc3RhdGVFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIHN0YXRlRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBzdGF0ZUVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgc3RhdGVFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIHN0YXRlLmNzcyggJ2JvcmRlcicsICcxcHggc29saWQgI0Y5MEEwQScgKTtcbiAgICBzdGF0ZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMjUwLCAxMjgsIDExNCwgMC43NSknICk7XG4gICAgaXNBY2NvdW50U3RhdGVWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrQWNjb3VudENpdHlWYWxpZCgpIHtcbiAgY29uc3QgY2l0eSA9ICQoICcjdXNlcl9jaXR5JyApO1xuICBjb25zdCBjaXR5RXJyb3JNZXNzYWdlID0gJCggJyN1c2VyLWNpdHktZXJyb3ItbWVzc2FnZScgKTtcbiAgY2l0eUVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eKFthLXpBLVpcXHUwMDgwLVxcdTAyNEZdKyg/Oi4gfC18IHwnKSkqW2EtekEtWlxcdTAwODAtXFx1MDI0Rl0qJC87XG4gIGNvbnN0IGZvcm1OYW1lID0gY2l0eS52YWwoKTtcbiAgaWYgKCBwYXR0ZXJuLnRlc3QoIGZvcm1OYW1lICkgJiYgZm9ybU5hbWUgIT09ICcnICkge1xuICAgIGNpdHlFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGNpdHkuYWRkQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICBpZiAoIGNpdHkuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgY2l0eS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgfVxuXG4gICAgLy8gY2l0eS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gY2l0eS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBjaXR5RXJyb3JNZXNzYWdlLmh0bWwoICdJbnZhbGlkIENpdHknICk7XG4gICAgY2l0eUVycm9yTWVzc2FnZS5jc3MoICdjb2xvcicsICcjYjAwODA4JyApO1xuXG4gICAgLy8gY2l0eUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGNpdHlFcnJvck1lc3NhZ2UuY3NzKCdjbGlwLXBhdGgnLCAncG9seWdvbig0MCUgMTAlLCA0MCUgMzclLCAxMDAlIDM3JSwgMTAwJSA2MyUsIDQwJSA2MyUsIDQwJSA5MCUsIDAlIDUwJSknKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygncGFkZGluZycsICcuNyUnKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcbiAgICBjaXR5RXJyb3JNZXNzYWdlLnNob3coKTtcbiAgICBjaXR5LmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIGNpdHkuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIGNpdHkucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG4gICAgLy8gY2l0eS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIHNhbG1vbicgKTtcbiAgICAvLyBjaXR5LmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgyNTAsIDEyOCwgMTE0LCAwLjc1KScgKTtcbiAgICBpc0FjY291bnRDaXR5VmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja0FjY291bnRaaXBWYWxpZCgpIHtcbiAgY29uc3QgemlwQ29kZSA9ICQoICcjdXNlcl96aXBjb2RlJyApO1xuICBjb25zdCB6aXBFcnJvck1lc3NhZ2UgPSAkKCAnI3VzZXItemlwLWVycm9yLW1lc3NhZ2UnICk7XG4gIHppcEVycm9yTWVzc2FnZS5oaWRlKCk7XG4gIGNvbnN0IHBhdHRlcm4gPSAvKF5cXGR7NX0kKXwoXlxcZHs1fS1cXGR7NH0kKS87XG4gIGNvbnN0IGZvcm1OYW1lID0gemlwQ29kZS52YWwoKTtcbiAgaWYgKCBwYXR0ZXJuLnRlc3QoIGZvcm1OYW1lICkgJiYgZm9ybU5hbWUgIT09ICcnICkge1xuICAgIHppcEVycm9yTWVzc2FnZS5oaWRlKCk7XG4gICAgemlwQ29kZS5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIGlmICggemlwQ29kZS5oYXNDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICkgKSB7XG4gICAgICB6aXBDb2RlLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICB9XG4gICAgLy8gemlwQ29kZS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gemlwQ29kZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICB6aXBFcnJvck1lc3NhZ2UuaHRtbCggJ0ludmFsaWQgWmlwIENvZGUnICk7XG4gICAgemlwRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG4gICAgemlwRXJyb3JNZXNzYWdlLnNob3coKTtcbiAgICB6aXBDb2RlLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIHppcENvZGUuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIHppcENvZGUucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG4gICAgLy8gemlwQ29kZS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIHNhbG1vbicgKTtcbiAgICAvLyB6aXBDb2RlLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgyNTAsIDEyOCwgMTE0LCAwLjc1KScgKTtcbiAgICBpc0FjY291bnRaaXBWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGlzVXNlckZvcm1WYWxpZCgpIHtcbiAgY29uc3QgcmVnaXN0ZXJCdXR0b24gPSAkKCAnI3JlZ2lzdGVyLXVzZXItYnRuJyApO1xuXG4gIGlzQWNjb3VudEFkZHJlc3MxVmFsaWQgPSB0cnVlO1xuICBpc0FjY291bnRBZGRyZXNzMlZhbGlkID0gdHJ1ZTtcbiAgaXNBY2NvdW50Q2l0eVZhbGlkID0gdHJ1ZTtcbiAgaXNBY2NvdW50WmlwVmFsaWQgPSB0cnVlO1xuICBpc0FjY291bnRTdGF0ZVZhbGlkID0gdHJ1ZTtcbiAgaXNBY2NvdW50RW1haWxWYWxpZCA9IHRydWU7XG4gIGlzQWNjb3VudFBob25lVmFsaWQgPSB0cnVlO1xuICBpc0FjY291bnRMYXN0TmFtZVZhbGlkID0gdHJ1ZTtcbiAgaXNBY2NvdW50Rmlyc3ROYW1lVmFsaWQgPSB0cnVlO1xuXG4gIGNoZWNrVXNlckZpcnN0TmFtZVZhbGlkKCk7XG4gIGNoZWNrVXNlckxhc3ROYW1lVmFsaWQoKTtcbiAgY2hlY2tVc2VyUGhvbmVWYWxpZCgpO1xuICBjaGVja1VzZXJFbWFpbFZhbGlkKCk7XG4gIGNoZWNrVXNlckFkZHJlc3MxVmFsaWQoKTtcbiAgY2hlY2tVc2VyQWRkcmVzczJWYWxpZDIoKTtcbiAgY2hlY2tBY2NvdW50Q2l0eVZhbGlkKCk7XG4gIGNoZWNrQWNjb3VudFppcFZhbGlkKCk7XG5cbiAgaWYgKFxuICAgIGlzQWNjb3VudFN0YXRlVmFsaWQgJiZcbiAgICBpc0FjY291bnRaaXBWYWxpZCAmJlxuICAgIGlzQWNjb3VudENpdHlWYWxpZCAmJlxuICAgIGlzQWNjb3VudEFkZHJlc3MxVmFsaWQgJiZcbiAgICBpc0FjY291bnRGaXJzdE5hbWVWYWxpZCAmJlxuICAgIGlzQWNjb3VudExhc3ROYW1lVmFsaWQgJiZcbiAgICBpc0FjY291bnRQaG9uZVZhbGlkICYmXG4gICAgaXNBY2NvdW50RW1haWxWYWxpZCA9PT0gdHJ1ZVxuICApIHtcbiAgICAkKCAnLnJlZ2lzdGVyLXVzZXItZm9ybScgKS5yZW1vdmVBdHRyKCAnZGlzYWJsZWQnICk7XG4gICAgcmVnaXN0ZXJCdXR0b24ucmVtb3ZlQXR0ciggJ2Rpc2FibGVkJyApO1xuICAgIHJlZ2lzdGVyQnV0dG9uLnJlbW92ZUNsYXNzKCAnZGlzYWJsZWQtYnV0dG9uJyApO1xuICB9ZWxzZSB7XG4gICAgJCggJy5yZWdpc3Rlci11c2VyLWZvcm0nICkuYXR0ciggJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyApO1xuICAgIHJlZ2lzdGVyQnV0dG9uLmFkZENsYXNzKCAnZGlzYWJsZWQtYnV0dG9uJyApO1xuICB9XG59XG5cbi8qIGVzbGludCBuby1tdWx0aXBsZS1lbXB0eS1saW5lczowICovXG4kKCAoKSA9PiB7XG4gIGNvbnN0IHVzZXJOYW1lID0gJCggJyN1c2VyX2ZpcnN0X25hbWUnICk7XG4gIGNvbnN0IHVzZXJMYXN0TmFtZSA9ICQoICcjdXNlcl9sYXN0X25hbWUnICk7XG4gIGNvbnN0IHVzZXJQaG9uZSA9ICQoICcjdXNlcl9waG9uZScgKTtcbiAgY29uc3QgdXNlckVtYWlsID0gJCggJyN1c2VyX2VtYWlsJyApO1xuICBjb25zdCBhZGRyZXNzMSA9ICQoICcjdXNlcl9hZGRyZXNzXzEnICk7XG4gIGNvbnN0IGFkZHJlc3MyID0gJCggJyN1c2VyX2FkZHJlc3NfMicgKTtcbiAgY29uc3Qgc3RhdGUgPSAkKCAnI3VzZXJfc3RhdGUnICk7XG4gIGNvbnN0IGNpdHkgPSAkKCAnI3VzZXJfY2l0eScgKTtcbiAgY29uc3QgemlwQ29kZSA9ICQoICcjdXNlcl96aXBjb2RlJyApO1xuXG4gIHVzZXJOYW1lLm9uKCAnY2hhbmdlIGtleXVwJywgKCkgPT4ge1xuICAgIGNoZWNrVXNlckZpcnN0TmFtZVZhbGlkKCk7XG4gICAgaXNVc2VyRm9ybVZhbGlkKCk7XG4gIH0pO1xuICB1c2VyTGFzdE5hbWUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tVc2VyTGFzdE5hbWVWYWxpZCgpO1xuICAgIGlzVXNlckZvcm1WYWxpZCgpO1xuICB9KTtcbiAgdXNlclBob25lLm9uKCAnY2hhbmdlIGtleXVwJywgKCkgPT4ge1xuICAgIGNoZWNrVXNlclBob25lVmFsaWQoKTtcbiAgICBpc1VzZXJGb3JtVmFsaWQoKTtcbiAgfSk7XG4gIHVzZXJFbWFpbC5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja1VzZXJFbWFpbFZhbGlkKCk7XG4gICAgaXNVc2VyRm9ybVZhbGlkKCk7XG4gIH0pO1xuICBhZGRyZXNzMS5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja1VzZXJBZGRyZXNzMVZhbGlkKCk7XG4gICAgaXNVc2VyRm9ybVZhbGlkKCk7XG4gIH0pO1xuICBhZGRyZXNzMi5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja1VzZXJBZGRyZXNzMlZhbGlkMigpO1xuICB9KTtcbiAgc3RhdGUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tBY2NvdW50U3RhdGVWYWxpZCgpO1xuICAgIGlzVXNlckZvcm1WYWxpZCgpO1xuICB9KTtcbiAgY2l0eS5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja0FjY291bnRDaXR5VmFsaWQoKTtcbiAgICBpc1VzZXJGb3JtVmFsaWQoKTtcbiAgfSk7XG4gIHppcENvZGUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tBY2NvdW50WmlwVmFsaWQoKTtcbiAgICBpc1VzZXJGb3JtVmFsaWQoKTtcbiAgfSk7XG59KTtcbiIsImNvbnN0ICQgPSByZXF1aXJlKCAnanF1ZXJ5JyApO1xuXG5jb25zdCB7IGlzVmFsaWQgfSA9IHJlcXVpcmUoICcuL2luZGV4JyApO1xuXG5sZXQgaXNDYXJkVHlwZVZhbGlkID0gdHJ1ZTtcbmxldCBpc0NhcmROYW1lVmFsaWQgPSB0cnVlO1xubGV0IGlzQ2FyZE51bWJlclZhbGlkID0gdHJ1ZTtcbmxldCBpc0NhcmRFeHBpcmVWYWxpZCA9IHRydWU7XG5sZXQgaXNDYXJkQ29kZVZhbGlkID0gdHJ1ZTtcbmxldCBpc1BheW1lbnRBZ3JlZWRUbyA9IGZhbHNlO1xuXG5mdW5jdGlvbiBjaGVja05hbWVPbkNhcmQoKSB7XG4gIGNvbnN0IGNhcmROYW1lID0gJCggJyNwYXltZW50LWNhcmQtbmFtZScgKTtcbiAgY29uc3QgY2FyZE5hbWVFcnJvck1lc3NhZ2UgPSAkKCAnI2NoZWNrb3V0LWNhcmQtbmFtZS1lcnJvci1tZXNzYWdlJyApO1xuICBjYXJkTmFtZUVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eKFtcXHddezMsfSkrXFxzKyhbXFx3XFxzXXszLH0pKyQvaTtcbiAgY29uc3QgZmllbGROYW1lID0gY2FyZE5hbWUudmFsKCk7XG4gIGlmICggY2FyZE5hbWUuaXNWYWxpZCgpICYmIGZpZWxkTmFtZSAhPT0gJycgKSB7XG4gICAgY2FyZE5hbWVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGNhcmROYW1lLmFkZENsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgaWYgKCBjYXJkTmFtZS5oYXNDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICkgKSB7XG4gICAgICBjYXJkTmFtZS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgfVxuICAgIC8vIGNhcmROYW1lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICAvLyBjYXJkTmFtZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBjYXJkTmFtZUVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBOYW1lJyApO1xuICAgIGNhcmROYW1lRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBjYXJkTmFtZUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGNhcmROYW1lRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gY2FyZE5hbWVFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIGNhcmROYW1lRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBjYXJkTmFtZUVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgY2FyZE5hbWVFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIGNhcmROYW1lLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIGNhcmROYW1lLmhhc0NsYXNzKCAnZmllbGQtaXMtdmFsaWQnICkgKSB7XG4gICAgICBjYXJkTmFtZS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIH1cblxuICAgIC8vIGNhcmROYW1lLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIGNhcmROYW1lLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgyNTAsIDEyOCwgMTE0LCAwLjc1KScgKTtcbiAgICBpc0NhcmROYW1lVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja0NhcmROdW1iZXJWYWxpZCgpIHtcbiAgY29uc3QgY2FyZFR5cGUgPSAkKCAnI3BheW1lbnQtbWV0aG9kLXR5cGVzJyApO1xuICBjb25zdCBjYXJkTnVtYmVyID0gJCggJyNwYXltZW50LWNhcmQtbnVtYmVyJyApO1xuICBjb25zdCBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlID0gJCggJyNjaGVja291dC1jYXJkLW51bWJlci1lcnJvci1tZXNzYWdlJyApO1xuICBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLmhpZGUoKTtcblxuICBjb25zdCB2aXNhUGF0dGVybiA9IC9eKD86NFswLTldezEyfSg/OlswLTldezN9KT8pJC87XG4gIGNvbnN0IG1hc3RQYXR0ZXJuID0gL14oPzo1WzEtNV1bMC05XXsxNH0pJC87XG4gIGNvbnN0IGFtZXhQYXR0ZXJuID0gL14zWzQ3XVswLTldezEzfSQvO1xuICBjb25zdCBmaWVsZFZhbHVlID0gY2FyZE51bWJlci52YWwoKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW1peGVkLW9wZXJhdG9yc1xuXG4gIGlmICggdmlzYVBhdHRlcm4udGVzdCggZmllbGRWYWx1ZSApICkge1xuICAgIC8vICQoICcjcGF5bWVudC1tZXRob2QtdHlwZXMgPiBvcHRpb246ZXEoMSknICkucHJvcCggJ3NlbGVjdGVkJywgdHJ1ZSApO1xuICAgIGNhcmRUeXBlLnByb3AoICdzZWxlY3RlZEluZGV4JywgMSApO1xuICB9XG4gIGlmICggbWFzdFBhdHRlcm4udGVzdCggZmllbGRWYWx1ZSApICkge1xuICAgIC8vICQoICcjcGF5bWVudC1tZXRob2QtdHlwZXMgPiBvcHRpb246ZXEoMiknICkucHJvcCggJ3NlbGVjdGVkJywgdHJ1ZSApO1xuICAgIGNhcmRUeXBlLnByb3AoICdzZWxlY3RlZEluZGV4JywgMiApO1xuICB9XG4gIGlmICggYW1leFBhdHRlcm4udGVzdCggZmllbGRWYWx1ZSApICkge1xuICAgIC8vICQoICcjcGF5bWVudC1tZXRob2QtdHlwZXMgPiBvcHRpb246ZXEoMyknICkucHJvcCggJ3NlbGVjdGVkJywgdHJ1ZSApO1xuICAgIGNhcmRUeXBlLnByb3AoICdzZWxlY3RlZEluZGV4JywgMyApO1xuICB9XG5cbiAgaWYgKCAoIHZpc2FQYXR0ZXJuLnRlc3QoIGZpZWxkVmFsdWUgKSB8fFxuICAgICAgbWFzdFBhdHRlcm4udGVzdCggZmllbGRWYWx1ZSApIHx8IGFtZXhQYXR0ZXJuLnRlc3QoIGZpZWxkVmFsdWUgKSApICYmXG4gICAgICBmaWVsZFZhbHVlICE9PSAnJyApIHtcblxuICAgICAgICBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICAgICAgY2FyZE51bWJlci5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgICAgICBpZiAoIGNhcmROdW1iZXIuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgICAgIGNhcmROdW1iZXIucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNhcmROdW1iZXIuY3NzKCAnYm9yZGVyJywgJzJweCBzb2xpZCBsaWdodGdyZWVuJyApO1xuICAgICAgICAvLyBjYXJkTnVtYmVyLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgxNTIsIDI1MSwgMTUyLCAwLjc1KScgKTtcbiAgfWVsc2Uge1xuICAgIGNhcmROdW1iZXJFcnJvck1lc3NhZ2UuaHRtbCggJ0ludmFsaWQgQ2FyZCBOdW1iZXInICk7XG4gICAgY2FyZE51bWJlckVycm9yTWVzc2FnZS5jc3MoICdjb2xvcicsICcjYjAwODA4JyApO1xuXG4gICAgLy8gY2FyZE51bWJlckVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGNhcmROdW1iZXJFcnJvck1lc3NhZ2UuY3NzKCdjbGlwLXBhdGgnLCAncG9seWdvbig0MCUgMTAlLCA0MCUgMzclLCAxMDAlIDM3JSwgMTAwJSA2MyUsIDQwJSA2MyUsIDQwJSA5MCUsIDAlIDUwJSknKTtcbiAgICAvLyBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLmNzcygncGFkZGluZycsICcuNyUnKTtcbiAgICAvLyBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLmNzcygncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcbiAgICBjYXJkTnVtYmVyRXJyb3JNZXNzYWdlLnNob3coKTtcblxuICAgIGNhcmROdW1iZXIuYWRkQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIGlmICggY2FyZE51bWJlci5oYXNDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApICkge1xuICAgICAgY2FyZE51bWJlci5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIH1cbiAgICAvLyBjYXJkTnVtYmVyLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIGNhcmROdW1iZXIuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQ2FyZE51bWJlclZhbGlkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tDYXJkVHlwZSgpIHtcbiAgY29uc3QgY2FyZFR5cGUgPSAkKCAnI3BheW1lbnQtbWV0aG9kLXR5cGVzJyApO1xuICBjb25zdCBjYXJkVHlwZUVycm9yTWVzc2FnZSA9ICQoICcjY2hlY2tvdXQtcGF5LW1ldGhvZC1lcnJvci1tZXNzYWdlJyApO1xuICBjYXJkVHlwZUVycm9yTWVzc2FnZS5oaWRlKCk7XG4gIGlmICggY2FyZFR5cGUudmFsKCkgKSB7XG4gICAgY2FyZFR5cGVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGNhcmRUeXBlLmNzcyggJ2JvcmRlcicsICcxcHggc29saWQgIzM0RjQ1OCcgKTtcbiAgICBjYXJkVHlwZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBjYXJkVHlwZUVycm9yTWVzc2FnZS5odG1sKCAnQ2hvb3NlIGEgQ2FyZCBUeXBlJyApO1xuICAgIGNhcmRUeXBlRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBjYXJkVHlwZUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGNhcmRUeXBlRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gY2FyZFR5cGVFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIGNhcmRUeXBlRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBjYXJkVHlwZUVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgY2FyZFR5cGVFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIGNhcmRUeXBlLmNzcyggJ2JvcmRlcicsICcxcHggc29saWQgI0Y5MEEwQScgKTtcbiAgICBjYXJkVHlwZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMjUwLCAxMjgsIDExNCwgMC43NSknICk7XG4gICAgaXNDYXJkVHlwZVZhbGlkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tDYXJkRXhwaXJlRGF0ZSgpIHtcbiAgY29uc3QgY2FyZEV4cGlyZSA9ICQoICcjcGF5bWVudC1leHBpcmF0aW9uLWRhdGUnICk7XG4gIGNvbnN0IGNhcmRFeHBpcmVFcnJvck1lc3NhZ2UgPSAkKCAnI2NoZWNrb3V0LWNhcmQtZXhwaXJlLWVycm9yLW1lc3NhZ2UnICk7XG4gIGNhcmRFeHBpcmVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gIGNvbnN0IHBhdHRlcm4gPSAvXlxcZHsyfVxcL1xcZHsyfSQvO1xuICBjb25zdCBmaWVsZFZhbHVlID0gY2FyZEV4cGlyZS52YWwoKTtcbiAgaWYgKCBwYXR0ZXJuLnRlc3QoIGZpZWxkVmFsdWUgKSAmJiBmaWVsZFZhbHVlICE9PSAnJyApIHtcbiAgICBjYXJkRXhwaXJlRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICBjYXJkRXhwaXJlLmFkZENsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgaWYgKCBjYXJkRXhwaXJlLmhhc0NsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKSApIHtcbiAgICAgIGNhcmRFeHBpcmUucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIH1cbiAgICAvLyBjYXJkRXhwaXJlLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICAvLyBjYXJkRXhwaXJlLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgxNTIsIDI1MSwgMTUyLCAwLjc1KScgKTtcbiAgfWVsc2Uge1xuICAgIGNhcmRFeHBpcmVFcnJvck1lc3NhZ2UuaHRtbCggJ0ludmFsaWQgRXhwaXJhdGlvbiBEYXRlJyApO1xuICAgIGNhcmRFeHBpcmVFcnJvck1lc3NhZ2UuY3NzKCAnY29sb3InLCAnI2IwMDgwOCcgKTtcblxuICAgIC8vIGNhcmRFeHBpcmVFcnJvck1lc3NhZ2UuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgJyNiMDA4MDgnKTtcbiAgICAvLyBjYXJkRXhwaXJlRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gY2FyZEV4cGlyZUVycm9yTWVzc2FnZS5jc3MoJ3BhZGRpbmcnLCAnLjclJyk7XG4gICAgLy8gY2FyZEV4cGlyZUVycm9yTWVzc2FnZS5jc3MoJ2Rpc3BsYXknLCAnaW5saW5lLWJsb2NrJyk7XG4gICAgLy8gY2FyZEV4cGlyZUVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgY2FyZEV4cGlyZUVycm9yTWVzc2FnZS5zaG93KCk7XG4gICAgY2FyZEV4cGlyZS5hZGRDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgaWYgKCBjYXJkRXhwaXJlLmhhc0NsYXNzKCAnZmllbGQtaXMtdmFsaWQnICkgKSB7XG4gICAgICBjYXJkRXhwaXJlLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgfVxuICAgIC8vIGNhcmRFeHBpcmUuY3NzKCAnYm9yZGVyJywgJzJweCBzb2xpZCBzYWxtb24nICk7XG4gICAgLy8gY2FyZEV4cGlyZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMjUwLCAxMjgsIDExNCwgMC43NSknICk7XG4gICAgaXNDYXJkRXhwaXJlVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja0NhcmRDVlYoKSB7XG4gIGNvbnN0IGNhcmRDVlYgPSAkKCAnI3BheW1lbnQtY2FyZC12ZXJpZmljYXRpb24nICk7XG4gIGNvbnN0IGNhcmRDVlZFcnJvck1lc3NhZ2UgPSAkKCAnI2NoZWNrb3V0LWNhcmQtY3Z2LWVycm9yLW1lc3NhZ2UnICk7XG4gIGNhcmRDVlZFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICBjb25zdCBwYXR0ZXJuID0gL15bMC05XXszLDR9JC87XG4gIGNvbnN0IGZpZWxkVmFsdWUgPSBjYXJkQ1ZWLnZhbCgpO1xuICBpZiAoIHBhdHRlcm4udGVzdCggZmllbGRWYWx1ZSApICYmIGZpZWxkVmFsdWUgIT09ICcnICkge1xuICAgIGNhcmRDVlZFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGNhcmRDVlYuY3NzKCAnYm9yZGVyJywgJzJweCBzb2xpZCBsaWdodGdyZWVuJyApO1xuICAgIGNhcmRDVlYuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDE1MiwgMjUxLCAxNTIsIDAuNzUpJyApO1xuICB9ZWxzZSB7XG4gICAgY2FyZENWVkVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBDVlYgQ29kZScgKTtcbiAgICBjYXJkQ1ZWRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG4gICAgY2FyZENWVkVycm9yTWVzc2FnZS5zaG93KCk7XG4gICAgY2FyZENWVi5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIHNhbG1vbicgKTtcbiAgICBjYXJkQ1ZWLmNzcyggJ2JveC1zaGFkb3cnLCAnMCAwIDhweCAycHggcmdiYSgyNTAsIDEyOCwgMTE0LCAwLjc1KScgKTtcbiAgICBpc0NhcmRDb2RlVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjaGVja1BheW1lbnRBZ3JlZW1lbnQoKSB7XG4gIGNvbnN0IHBheW1lbnRBZ3JlZW1lbnQgPSAkKCAnI3BheS1hZ3JlZW1lbnQnICk7XG5cbiAgaXNQYXltZW50QWdyZWVkVG8gPSBwYXltZW50QWdyZWVtZW50LmlzKCAnOmNoZWNrZWQnICk7XG59XG5cbmZ1bmN0aW9uIGlzQ2hlY2tvdXRGb3JtVmFsaWQoKSB7XG4gIGNvbnN0IGNoZWNrb3V0QnV0dG9uID0gJCggJyNzdWJtaXQtcGF5bWVudC1pbmZvcm1hdGlvbi1idG4nICk7XG5cbiAgaXNDYXJkVHlwZVZhbGlkID0gdHJ1ZTtcbiAgaXNDYXJkTmFtZVZhbGlkID0gdHJ1ZTtcbiAgaXNDYXJkTnVtYmVyVmFsaWQgPSB0cnVlO1xuICBpc0NhcmRFeHBpcmVWYWxpZCA9IHRydWU7XG4gIGlzQ2FyZENvZGVWYWxpZCA9IHRydWU7XG4gIGlzUGF5bWVudEFncmVlZFRvID0gZmFsc2U7XG5cbiAgY2hlY2tOYW1lT25DYXJkKCk7XG4gIGNoZWNrQ2FyZE51bWJlclZhbGlkKCk7XG4gIGNoZWNrQ2FyZEV4cGlyZURhdGUoKTtcbiAgY2hlY2tDYXJkQ1ZWKCk7XG4gIGNoZWNrQ2FyZFR5cGUoKTtcbiAgY2hlY2tQYXltZW50QWdyZWVtZW50KCk7XG5cbiAgaWYgKFxuICAgIGlzQ2FyZE51bWJlclZhbGlkICYmXG4gICAgaXNDYXJkQ29kZVZhbGlkICYmXG4gICAgaXNDYXJkRXhwaXJlVmFsaWQgJiZcbiAgICBpc0NhcmRUeXBlVmFsaWQgJiZcbiAgICBpc0NhcmROYW1lVmFsaWQgJiZcbiAgICBpc1BheW1lbnRBZ3JlZWRUbyA9PT0gdHJ1ZVxuICApIHtcbiAgICAkKCAnLmNoZWNrb3V0LXBheW1lbnQtZm9ybScgKS5yZW1vdmVBdHRyKCAnZGlzYWJsZWQnICk7XG4gICAgY2hlY2tvdXRCdXR0b24ucmVtb3ZlQXR0ciggJ2Rpc2FibGVkJyApO1xuICAgIGNoZWNrb3V0QnV0dG9uLnJlbW92ZUNsYXNzKCAnZGlzYWJsZWQtYnV0dG9uJyApO1xuICB9ZWxzZSB7XG4gICAgJCggJy5jaGVja291dC1wYXltZW50LWZvcm0nICkuYXR0ciggJ2Rpc2FibGVkJywgJ2Rpc2FibGVkJyApO1xuICAgIGNoZWNrb3V0QnV0dG9uLmFkZENsYXNzKCAnZGlzYWJsZWQtYnV0dG9uJyApO1xuICB9XG59XG5cbi8qIGVzbGludCBuby1tdWx0aXBsZS1lbXB0eS1saW5lczowICovXG4kKCAoKSA9PiB7XG4gIGNvbnN0IGNhcmROYW1lID0gJCggJyNwYXltZW50LWNhcmQtbmFtZScgKTtcbiAgY29uc3QgY2FyZE51bWJlciA9ICQoICcjcGF5bWVudC1jYXJkLW51bWJlcicgKTtcbiAgY29uc3QgY2FyZFR5cGUgPSAkKCAnI3BheW1lbnQtbWV0aG9kLXR5cGVzJyApO1xuICBjb25zdCBjYXJkRXhwaXJlID0gJCggJyNwYXltZW50LWV4cGlyYXRpb24tZGF0ZScgKTtcbiAgY29uc3QgY2FyZENWViA9ICQoICcjcGF5bWVudC1jYXJkLXZlcmlmaWNhdGlvbicgKTtcbiAgY29uc3QgcGF5bWVudEFncmVlbWVudCA9ICQoICcjcGF5LWFncmVlbWVudCcgKTtcblxuICBjYXJkTmFtZS5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja05hbWVPbkNhcmQoKTtcbiAgICBpc0NoZWNrb3V0Rm9ybVZhbGlkKCk7XG4gIH0pO1xuICBjYXJkTnVtYmVyLm9uKCAnY2hhbmdlIGtleXVwJywgKCkgPT4ge1xuICAgIGNoZWNrQ2FyZE51bWJlclZhbGlkKCk7XG4gICAgaXNDaGVja291dEZvcm1WYWxpZCgpO1xuICB9KTtcbiAgY2FyZFR5cGUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tDYXJkVHlwZSgpO1xuICAgIGlzQ2hlY2tvdXRGb3JtVmFsaWQoKTtcbiAgfSk7XG4gIGNhcmRFeHBpcmUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tDYXJkRXhwaXJlRGF0ZSgpO1xuICAgIGlzQ2hlY2tvdXRGb3JtVmFsaWQoKTtcbiAgfSk7XG4gIGNhcmRDVlYub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgY2hlY2tDYXJkQ1ZWKCk7XG4gICAgaXNDaGVja291dEZvcm1WYWxpZCgpO1xuICB9KTtcbiAgcGF5bWVudEFncmVlbWVudC5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBjaGVja1BheW1lbnRBZ3JlZW1lbnQoKTtcbiAgICBpc0NoZWNrb3V0Rm9ybVZhbGlkKCk7XG4gIH0pO1xufSk7XG4iLCJjb25zdCAkID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuLy8gY29uc3Qgc3RhdGUgPSAkKCcjc2hpcHBpbmdfdXNlcl9zdGF0ZScpOyBjYVxubGV0IGlzQWRkcmVzczFWYWxpZCA9IHRydWU7XG5sZXQgaXNBZGRyZXNzMlZhbGlkID0gdHJ1ZTtcbmxldCBpc1N0YXRlVmFsaWQgPSB0cnVlO1xubGV0IGlzQ2l0eVZhbGlkID0gdHJ1ZTtcbmxldCBpc1ppcFZhbGlkID0gdHJ1ZTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbiQuZm4uaXNWYWxpZCA9IGZ1bmN0aW9uIGlzVmFsaWQoKSB7XG4gIHJldHVybiB0aGlzWyAwIF0uY2hlY2tWYWxpZGl0eSgpO1xufTtcblxuZnVuY3Rpb24gY2hlY2tTaGlwcGluZ0FkZHJlc3MxKCkge1xuICBjb25zdCBhZGRyZXNzMSA9ICQoICcjc2hpcHBpbmdfYWRkcmVzc18xJyApO1xuICBjb25zdCBhZGRyZXNzMUVycm9yTWVzc2FnZSA9ICQoICcjYWRkcmVzcy0xLWVycm9yLW1lc3NhZ2UnICk7XG4gIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmhpZGUoKTtcblxuICBjb25zdCBwYXR0ZXJuID0gL2R7MSw1fVxcc1xcdy5cXHNcXHdcXHMoXFxiXFx3KlxcYlxccyl7MSwyfVxcdyovO1xuXG4gIC8vIGNvbnN0IHBhdHRlcm4gPSAvXlxccypcXFMrKD86XFxzK1xcUyspezJ9LztcbiAgY29uc3QgZm9ybU5hbWUgPSBhZGRyZXNzMS52YWwoKTtcbiAgaWYgKCBhZGRyZXNzMS5pc1ZhbGlkKCkgJiYgZm9ybU5hbWUgIT09ICcnICkge1xuICAgIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgICBhZGRyZXNzMS5hZGRDbGFzcyggJ2ZpZWxkLWlzLXZhbGlkJyApO1xuICAgIGlmICggYWRkcmVzczEuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgYWRkcmVzczEucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIH1cbiAgfWVsc2Uge1xuICAgIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmh0bWwoICdJbnZhbGlkIEFkZHJlc3MnICk7XG4gICAgYWRkcmVzczFFcnJvck1lc3NhZ2UuY3NzKCAnY29sb3InLCAnI2IwMDgwOCcgKTtcblxuICAgIC8vIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmNzcygnYmFja2dyb3VuZC1jb2xvcicsICcjYjAwODA4Jyk7XG4gICAgLy8gYWRkcmVzczFFcnJvck1lc3NhZ2UuY3NzKCdjbGlwLXBhdGgnLCAncG9seWdvbig0MCUgMTAlLCA0MCUgMzclLCAxMDAlIDM3JSwgMTAwJSA2MyUsIDQwJSA2MyUsIDQwJSA5MCUsIDAlIDUwJSknKTtcbiAgICAvLyBhZGRyZXNzMUVycm9yTWVzc2FnZS5jc3MoJ3BhZGRpbmcnLCAnLjclJyk7XG4gICAgLy8gYWRkcmVzczFFcnJvck1lc3NhZ2UuY3NzKCdkaXNwbGF5JywgJ2lubGluZS1ibG9jaycpO1xuICAgIC8vIGFkZHJlc3MxRXJyb3JNZXNzYWdlLmNzcygncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcbiAgICBhZGRyZXNzMUVycm9yTWVzc2FnZS5zaG93KCk7XG4gICAgYWRkcmVzczEuYWRkQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApO1xuICAgIGlmICggYWRkcmVzczEuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIGFkZHJlc3MxLnJlbW92ZUNsYXNzKCAnZmllbGQtaXMtdmFsaWQnICk7XG4gICAgfVxuICAgIGlzQWRkcmVzczFWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrU2hpcHBpbmdBZGRyZXNzMigpIHtcbiAgY29uc3QgYWRkcmVzczIgPSAkKCAnI3NoaXBwaW5nX2FkZHJlc3NfMicgKTtcbiAgY29uc3QgYWRkcmVzczJFcnJvck1lc3NhZ2UgPSAkKCAnI2FkZHJlc3MtMi1lcnJvci1tZXNzYWdlJyApO1xuICBhZGRyZXNzMkVycm9yTWVzc2FnZS5oaWRlKCk7XG5cbiAgY29uc3QgcGF0dGVybiA9IC9eW2EtekEtWjAtOVxccywuJy1dezMsfSQvO1xuICBjb25zdCBmb3JtTmFtZSA9IGFkZHJlc3MyLnZhbCgpO1xuICBpZiAoIGFkZHJlc3MyLmlzVmFsaWQoKSB8fCBmb3JtTmFtZSA9PT0gJycgKSB7XG4gICAgYWRkcmVzczJFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGFkZHJlc3MyLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgIzE1MWEyZicgKTtcbiAgICBhZGRyZXNzMi5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoNjMsIDYzLCA2MywgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBhZGRyZXNzMkVycm9yTWVzc2FnZS5odG1sKCAnSW52YWxpZCBBZGRyZXNzJyApO1xuICAgIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG5cbiAgICAvLyBhZGRyZXNzMkVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcygnY2xpcC1wYXRoJywgJ3BvbHlnb24oNDAlIDEwJSwgNDAlIDM3JSwgMTAwJSAzNyUsIDEwMCUgNjMlLCA0MCUgNjMlLCA0MCUgOTAlLCAwJSA1MCUpJyk7XG4gICAgLy8gYWRkcmVzczJFcnJvck1lc3NhZ2UuY3NzKCdwYWRkaW5nJywgJy43JScpO1xuICAgIC8vIGFkZHJlc3MyRXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBhZGRyZXNzMkVycm9yTWVzc2FnZS5jc3MoJ3Bvc2l0aW9uJywgJ2Fic29sdXRlJyk7XG4gICAgYWRkcmVzczJFcnJvck1lc3NhZ2Uuc2hvdygpO1xuICAgIGFkZHJlc3MyLmNzcyggJ2JvcmRlci1ib3R0b20nLCAnMnB4IHNvbGlkICMxNTFhMmYnICk7XG4gICAgYWRkcmVzczIuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQWRkcmVzczJWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrU2hpcHBpbmdTdGF0ZSgpIHtcbiAgY29uc3Qgc3RhdGUgPSAkKCAnI3NoaXBwaW5nX3VzZXJfc3RhdGUnICk7XG4gIGNvbnN0IHN0YXRlRXJyb3JNZXNzYWdlID0gJCggJyNzaGlwcGluZy1zdGF0ZS1lcnJvci1tZXNzYWdlJyApO1xuICBzdGF0ZUVycm9yTWVzc2FnZS5oaWRlKCk7XG4gIGlmICggc3RhdGUudmFsKCkgKSB7XG4gICAgc3RhdGVFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIHN0YXRlLmNzcyggJ2JvcmRlcicsICcxcHggc29saWQgbGlnaHRncmVlbicgKTtcbiAgICBzdGF0ZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBzdGF0ZUVycm9yTWVzc2FnZS5odG1sKCAnU2VsZWN0IGEgU3RhdGUnICk7XG4gICAgc3RhdGVFcnJvck1lc3NhZ2UuY3NzKCAnY29sb3InLCAnI2IwMDgwOCcgKTtcblxuICAgIC8vIHN0YXRlRXJyb3JNZXNzYWdlLmNzcygnYmFja2dyb3VuZC1jb2xvcicsICcjYjAwODA4Jyk7XG4gICAgLy8gc3RhdGVFcnJvck1lc3NhZ2UuY3NzKCdjbGlwLXBhdGgnLCAncG9seWdvbig0MCUgMTAlLCA0MCUgMzclLCAxMDAlIDM3JSwgMTAwJSA2MyUsIDQwJSA2MyUsIDQwJSA5MCUsIDAlIDUwJSknKTtcbiAgICAvLyBzdGF0ZUVycm9yTWVzc2FnZS5jc3MoJ3BhZGRpbmcnLCAnLjclJyk7XG4gICAgLy8gc3RhdGVFcnJvck1lc3NhZ2UuY3NzKCdkaXNwbGF5JywgJ2lubGluZS1ibG9jaycpO1xuICAgIC8vIHN0YXRlRXJyb3JNZXNzYWdlLmNzcygncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcbiAgICBzdGF0ZUVycm9yTWVzc2FnZS5zaG93KCk7XG4gICAgc3RhdGUuY3NzKCAnYm9yZGVyJywgJzFweCBzb2xpZCBzYWxtb24nICk7XG4gICAgc3RhdGUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzU3RhdGVWYWxpZCA9IGZhbHNlO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrU2hpcHBpbmdDaXR5KCkge1xuICBjb25zdCBjaXR5ID0gJCggJyNzaGlwcGluZ19jaXR5JyApO1xuICBjb25zdCBjaXR5RXJyb3JNZXNzYWdlID0gJCggJyNjaXR5LXNoaXBwaW5nLWVycm9yLW1lc3NhZ2UnICk7XG4gIGNpdHlFcnJvck1lc3NhZ2UuaGlkZSgpO1xuXG4gIGNvbnN0IHBhdHRlcm4gPSAvXihbYS16QS1aXFx1MDA4MC1cXHUwMjRGXSsoPzouIHwtfCB8JykpKlthLXpBLVpcXHUwMDgwLVxcdTAyNEZdKiQvO1xuICBjb25zdCBmb3JtTmFtZSA9IGNpdHkudmFsKCk7XG4gIGlmICggY2l0eS5pc1ZhbGlkKCkgJiYgZm9ybU5hbWUgIT09ICcnICkge1xuICAgIGNpdHlFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIGNpdHkuYWRkQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICBpZiAoIGNpdHkuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgY2l0eS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgfVxuXG4gICAgLy8gY2l0eS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gY2l0eS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICBjaXR5RXJyb3JNZXNzYWdlLmh0bWwoICdJbnZhbGlkIENpdHknICk7XG4gICAgY2l0eUVycm9yTWVzc2FnZS5jc3MoICdjb2xvcicsICcjYjAwODA4JyApO1xuXG4gICAgLy8gY2l0eUVycm9yTWVzc2FnZS5jc3MoJ2JhY2tncm91bmQtY29sb3InLCAnI2IwMDgwOCcpO1xuICAgIC8vIGNpdHlFcnJvck1lc3NhZ2UuY3NzKCdjbGlwLXBhdGgnLCAncG9seWdvbig0MCUgMTAlLCA0MCUgMzclLCAxMDAlIDM3JSwgMTAwJSA2MyUsIDQwJSA2MyUsIDQwJSA5MCUsIDAlIDUwJSknKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygncGFkZGluZycsICcuNyUnKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygnZGlzcGxheScsICdpbmxpbmUtYmxvY2snKTtcbiAgICAvLyBjaXR5RXJyb3JNZXNzYWdlLmNzcygncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcbiAgICBjaXR5RXJyb3JNZXNzYWdlLnNob3coKTtcbiAgICBjaXR5LmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIGNpdHkuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIGNpdHkucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG5cbiAgICAvLyBjaXR5LmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIGNpdHkuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzQ2l0eVZhbGlkID0gZmFsc2U7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2hlY2tTaGlwcGluZ1ppcCgpIHtcbiAgY29uc3QgemlwQ29kZSA9ICQoICcjc2hpcHBpbmdfemlwY29kZScgKTtcbiAgY29uc3QgemlwRXJyb3JNZXNzYWdlID0gJCggJyNzaGlwcGluZy16aXAtZXJyb3ItbWVzc2FnZScgKTtcbiAgemlwRXJyb3JNZXNzYWdlLmhpZGUoKTtcbiAgY29uc3QgcGF0dGVybiA9IC8oXlxcZHs1fSQpfCheXFxkezV9LVxcZHs0fSQpLztcbiAgY29uc3QgZm9ybU5hbWUgPSB6aXBDb2RlLnZhbCgpO1xuICBpZiAoIHppcENvZGUuaXNWYWxpZCgpICYmIGZvcm1OYW1lICE9PSAnJyApIHtcbiAgICB6aXBFcnJvck1lc3NhZ2UuaGlkZSgpO1xuICAgIHppcENvZGUuYWRkQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICBpZiAoIHppcENvZGUuaGFzQ2xhc3MoICdmaWVsZC1pcy1pbnZhbGlkJyApICkge1xuICAgICAgemlwQ29kZS5yZW1vdmVDbGFzcyggJ2ZpZWxkLWlzLWludmFsaWQnICk7XG4gICAgfVxuXG4gICAgLy8gemlwQ29kZS5jc3MoICdib3JkZXInLCAnMnB4IHNvbGlkIGxpZ2h0Z3JlZW4nICk7XG4gICAgLy8gemlwQ29kZS5jc3MoICdib3gtc2hhZG93JywgJzAgMCA4cHggMnB4IHJnYmEoMTUyLCAyNTEsIDE1MiwgMC43NSknICk7XG4gIH1lbHNlIHtcbiAgICB6aXBFcnJvck1lc3NhZ2UuaHRtbCggJ0ludmFsaWQgWmlwIENvZGUnICk7XG4gICAgemlwRXJyb3JNZXNzYWdlLmNzcyggJ2NvbG9yJywgJyNiMDA4MDgnICk7XG4gICAgemlwRXJyb3JNZXNzYWdlLnNob3coKTtcbiAgICB6aXBDb2RlLmFkZENsYXNzKCAnZmllbGQtaXMtaW52YWxpZCcgKTtcbiAgICBpZiAoIHppcENvZGUuaGFzQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKSApIHtcbiAgICAgIHppcENvZGUucmVtb3ZlQ2xhc3MoICdmaWVsZC1pcy12YWxpZCcgKTtcbiAgICB9XG5cbiAgICAvLyB6aXBDb2RlLmNzcyggJ2JvcmRlcicsICcycHggc29saWQgc2FsbW9uJyApO1xuICAgIC8vIHppcENvZGUuY3NzKCAnYm94LXNoYWRvdycsICcwIDAgOHB4IDJweCByZ2JhKDI1MCwgMTI4LCAxMTQsIDAuNzUpJyApO1xuICAgIGlzWmlwVmFsaWQgPSBmYWxzZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBpc1NoaXBwaW5nRm9ybVZhbGlkKCkge1xuICBjb25zdCBzZXRTaGlwcGluZ0FkZHJlc3NCdXR0b24gPSAkKCAnI3NoaXBwaW5nLWluZm8tc3VibWl0LWJ0bicgKTtcblxuICBpc0FkZHJlc3MxVmFsaWQgPSB0cnVlO1xuICBpc1N0YXRlVmFsaWQgPSB0cnVlO1xuICBpc0FkZHJlc3MyVmFsaWQgPSB0cnVlO1xuICBpc0NpdHlWYWxpZCA9IHRydWU7XG4gIGlzWmlwVmFsaWQgPSB0cnVlO1xuXG4gIGNoZWNrU2hpcHBpbmdBZGRyZXNzMSgpO1xuICBjaGVja1NoaXBwaW5nQWRkcmVzczIoKTtcbiAgY2hlY2tTaGlwcGluZ0NpdHkoKTtcbiAgY2hlY2tTaGlwcGluZ1ppcCgpO1xuXG4gIGlmICggaXNTdGF0ZVZhbGlkICYmIGlzWmlwVmFsaWQgJiYgaXNDaXR5VmFsaWQgJiYgaXNBZGRyZXNzMVZhbGlkID09PSB0cnVlICkge1xuICAgICQoICcuc2hpcHBpbmctaW5mby1mb3JtJyApLnJlbW92ZUF0dHIoICdkaXNhYmxlZCcgKTtcbiAgICBzZXRTaGlwcGluZ0FkZHJlc3NCdXR0b24ucmVtb3ZlQXR0ciggJ2Rpc2FibGVkJyApO1xuICAgIHNldFNoaXBwaW5nQWRkcmVzc0J1dHRvbi5yZW1vdmVDbGFzcyggJ2Rpc2FibGVkLWJ1dHRvbicgKTtcbiAgfWVsc2Uge1xuICAgICQoICcuc2hpcHBpbmctaW5mby1mb3JtJyApLmF0dHIoICdkaXNhYmxlZCcsICdkaXNhYmxlZCcgKTtcbiAgICBzZXRTaGlwcGluZ0FkZHJlc3NCdXR0b24uYWRkQ2xhc3MoICdkaXNhYmxlZC1idXR0b24nICk7XG4gIH1cbn1cblxuY29uc3Qgc2hpcHBpbmdFdmVudEhhbmRsZXJzID0ge1xuICBhZGRyZXNzMSgpIHtcbiAgICBjaGVja1NoaXBwaW5nQWRkcmVzczEoKTtcbiAgICBpc1NoaXBwaW5nRm9ybVZhbGlkKCk7XG4gIH0sXG4gIGFkZHJlc3MyKCkge1xuICAgIGNoZWNrU2hpcHBpbmdBZGRyZXNzMigpO1xuICAgIGlzU2hpcHBpbmdGb3JtVmFsaWQoKTtcbiAgfSxcbiAgY2l0eSgpIHtcbiAgICBjaGVja1NoaXBwaW5nQ2l0eSgpO1xuICAgIGlzU2hpcHBpbmdGb3JtVmFsaWQoKTtcbiAgfSxcbiAgc3RhdGUoKSB7XG4gICAgY2hlY2tTaGlwcGluZ1N0YXRlKCk7XG4gICAgaXNTaGlwcGluZ0Zvcm1WYWxpZCgpO1xuICB9LFxuICB6aXBjb2RlKCkge1xuICAgIGNoZWNrU2hpcHBpbmdaaXAoKTtcbiAgICBpc1NoaXBwaW5nRm9ybVZhbGlkKCk7XG4gIH1cbn07XG5cbi8qIGVzbGludCBuby1tdWx0aXBsZS1lbXB0eS1saW5lczowICovXG4kKCAoKSA9PiB7XG4gIGNvbnN0IGFkZHJlc3MxID0gJCggJyNzaGlwcGluZ19hZGRyZXNzXzEnICk7XG4gIGNvbnN0IGFkZHJlc3MyID0gJCggJyNzaGlwcGluZ19hZGRyZXNzXzInICk7XG4gIGNvbnN0IHN0YXRlID0gJCggJyNzaGlwcGluZ191c2VyX3N0YXRlJyApO1xuICBjb25zdCBjaXR5ID0gJCggJyNzaGlwcGluZ19jaXR5JyApO1xuICBjb25zdCB6aXBDb2RlID0gJCggJyNzaGlwcGluZ196aXBjb2RlJyApO1xuXG4gIGFkZHJlc3MxLm9uKCAnY2hhbmdlIGtleXVwJywgKCkgPT4ge1xuICAgIHNoaXBwaW5nRXZlbnRIYW5kbGVycy5hZGRyZXNzMSgpO1xuICB9KTtcbiAgYWRkcmVzczIub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgc2hpcHBpbmdFdmVudEhhbmRsZXJzLmFkZHJlc3MyKCk7XG4gIH0pO1xuICBzdGF0ZS5vbiggJ2NoYW5nZSBrZXl1cCcsICgpID0+IHtcbiAgICBzaGlwcGluZ0V2ZW50SGFuZGxlcnMuc3RhdGUoKTtcbiAgfSk7XG4gIGNpdHkub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgc2hpcHBpbmdFdmVudEhhbmRsZXJzLmNpdHkoKTtcbiAgfSk7XG4gIHppcENvZGUub24oICdjaGFuZ2Uga2V5dXAnLCAoKSA9PiB7XG4gICAgc2hpcHBpbmdFdmVudEhhbmRsZXJzLnppcGNvZGUoKTtcbiAgfSk7XG59KTtcblxuLy8gbW9kdWxlLmV4cG9ydHMgPSBzaGlwcGluZ0V2ZW50SGFuZGxlcnM7XG4iLCJjb25zdCAkID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuXG4kKCB3aW5kb3cgKS5vbiggJ3VubG9hZCcsICgpID0+IHtcblxuICBjb25zb2xlLndhcm4oICdQYWdlIGlzIGJlaW5nIGNsb3NlZCcgKTtcblxuICBjb25zdCBVUkwgPSAnL2Nsb3NpbmcnO1xuXG4gIG5hdmlnYXRvci5zZW5kQmVhY29uKCBVUkwgKTtcblxufSk7XG4iLCIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0J1ZmZlcihhcmcpIHtcbiAgcmV0dXJuIGFyZyAmJiB0eXBlb2YgYXJnID09PSAnb2JqZWN0J1xuICAgICYmIHR5cGVvZiBhcmcuY29weSA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcuZmlsbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICYmIHR5cGVvZiBhcmcucmVhZFVJbnQ4ID09PSAnZnVuY3Rpb24nO1xufSIsImlmICh0eXBlb2YgT2JqZWN0LmNyZWF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAvLyBpbXBsZW1lbnRhdGlvbiBmcm9tIHN0YW5kYXJkIG5vZGUuanMgJ3V0aWwnIG1vZHVsZVxuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHtcbiAgICAgIGNvbnN0cnVjdG9yOiB7XG4gICAgICAgIHZhbHVlOiBjdG9yLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xufSBlbHNlIHtcbiAgLy8gb2xkIHNjaG9vbCBzaGltIGZvciBvbGQgYnJvd3NlcnNcbiAgbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpbmhlcml0cyhjdG9yLCBzdXBlckN0b3IpIHtcbiAgICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvclxuICAgIHZhciBUZW1wQ3RvciA9IGZ1bmN0aW9uICgpIHt9XG4gICAgVGVtcEN0b3IucHJvdG90eXBlID0gc3VwZXJDdG9yLnByb3RvdHlwZVxuICAgIGN0b3IucHJvdG90eXBlID0gbmV3IFRlbXBDdG9yKClcbiAgICBjdG9yLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGN0b3JcbiAgfVxufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgb2JqZWN0QXNzaWduID0gcmVxdWlyZSgnb2JqZWN0LWFzc2lnbicpO1xuXG4vLyBjb21wYXJlIGFuZCBpc0J1ZmZlciB0YWtlbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvYnVmZmVyL2Jsb2IvNjgwZTllNWU0ODhmMjJhYWMyNzU5OWE1N2RjODQ0YTYzMTU5MjhkZC9pbmRleC5qc1xuLy8gb3JpZ2luYWwgbm90aWNlOlxuXG4vKiFcbiAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxmZXJvc3NAZmVyb3NzLm9yZz4gPGh0dHA6Ly9mZXJvc3Mub3JnPlxuICogQGxpY2Vuc2UgIE1JVFxuICovXG5mdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIHZhciB4ID0gYS5sZW5ndGg7XG4gIHZhciB5ID0gYi5sZW5ndGg7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IE1hdGgubWluKHgsIHkpOyBpIDwgbGVuOyArK2kpIHtcbiAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgeCA9IGFbaV07XG4gICAgICB5ID0gYltpXTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIGlmICh4IDwgeSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuICBpZiAoeSA8IHgpIHtcbiAgICByZXR1cm4gMTtcbiAgfVxuICByZXR1cm4gMDtcbn1cbmZ1bmN0aW9uIGlzQnVmZmVyKGIpIHtcbiAgaWYgKGdsb2JhbC5CdWZmZXIgJiYgdHlwZW9mIGdsb2JhbC5CdWZmZXIuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gZ2xvYmFsLkJ1ZmZlci5pc0J1ZmZlcihiKTtcbiAgfVxuICByZXR1cm4gISEoYiAhPSBudWxsICYmIGIuX2lzQnVmZmVyKTtcbn1cblxuLy8gYmFzZWQgb24gbm9kZSBhc3NlcnQsIG9yaWdpbmFsIG5vdGljZTpcbi8vIE5COiBUaGUgVVJMIHRvIHRoZSBDb21tb25KUyBzcGVjIGlzIGtlcHQganVzdCBmb3IgdHJhZGl0aW9uLlxuLy8gICAgIG5vZGUtYXNzZXJ0IGhhcyBldm9sdmVkIGEgbG90IHNpbmNlIHRoZW4sIGJvdGggaW4gQVBJIGFuZCBiZWhhdmlvci5cblxuLy8gaHR0cDovL3dpa2kuY29tbW9uanMub3JnL3dpa2kvVW5pdF9UZXN0aW5nLzEuMFxuLy9cbi8vIFRISVMgSVMgTk9UIFRFU1RFRCBOT1IgTElLRUxZIFRPIFdPUksgT1VUU0lERSBWOCFcbi8vXG4vLyBPcmlnaW5hbGx5IGZyb20gbmFyd2hhbC5qcyAoaHR0cDovL25hcndoYWxqcy5vcmcpXG4vLyBDb3B5cmlnaHQgKGMpIDIwMDkgVGhvbWFzIFJvYmluc29uIDwyODBub3J0aC5jb20+XG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgJ1NvZnR3YXJlJyksIHRvXG4vLyBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZVxuLy8gcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yXG4vLyBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICdBUyBJUycsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTlxuLy8gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTlxuLy8gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTiBUSEUgU09GVFdBUkUuXG5cbnZhciB1dGlsID0gcmVxdWlyZSgndXRpbC8nKTtcbnZhciBoYXNPd24gPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHBTbGljZSA9IEFycmF5LnByb3RvdHlwZS5zbGljZTtcbnZhciBmdW5jdGlvbnNIYXZlTmFtZXMgPSAoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9vKCkge30ubmFtZSA9PT0gJ2Zvbyc7XG59KCkpO1xuZnVuY3Rpb24gcFRvU3RyaW5nIChvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopO1xufVxuZnVuY3Rpb24gaXNWaWV3KGFycmJ1Zikge1xuICBpZiAoaXNCdWZmZXIoYXJyYnVmKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodHlwZW9mIGdsb2JhbC5BcnJheUJ1ZmZlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAodHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBBcnJheUJ1ZmZlci5pc1ZpZXcoYXJyYnVmKTtcbiAgfVxuICBpZiAoIWFycmJ1Zikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoYXJyYnVmIGluc3RhbmNlb2YgRGF0YVZpZXcpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBpZiAoYXJyYnVmLmJ1ZmZlciAmJiBhcnJidWYuYnVmZmVyIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICByZXR1cm4gZmFsc2U7XG59XG4vLyAxLiBUaGUgYXNzZXJ0IG1vZHVsZSBwcm92aWRlcyBmdW5jdGlvbnMgdGhhdCB0aHJvd1xuLy8gQXNzZXJ0aW9uRXJyb3IncyB3aGVuIHBhcnRpY3VsYXIgY29uZGl0aW9ucyBhcmUgbm90IG1ldC4gVGhlXG4vLyBhc3NlcnQgbW9kdWxlIG11c3QgY29uZm9ybSB0byB0aGUgZm9sbG93aW5nIGludGVyZmFjZS5cblxudmFyIGFzc2VydCA9IG1vZHVsZS5leHBvcnRzID0gb2s7XG5cbi8vIDIuIFRoZSBBc3NlcnRpb25FcnJvciBpcyBkZWZpbmVkIGluIGFzc2VydC5cbi8vIG5ldyBhc3NlcnQuQXNzZXJ0aW9uRXJyb3IoeyBtZXNzYWdlOiBtZXNzYWdlLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdHVhbDogYWN0dWFsLFxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkOiBleHBlY3RlZCB9KVxuXG52YXIgcmVnZXggPSAvXFxzKmZ1bmN0aW9uXFxzKyhbXlxcKFxcc10qKVxccyovO1xuLy8gYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL2xqaGFyYi9mdW5jdGlvbi5wcm90b3R5cGUubmFtZS9ibG9iL2FkZWVlZWM4YmZjYzYwNjhiMTg3ZDdkOWZiM2Q1YmIxZDNhMzA4OTkvaW1wbGVtZW50YXRpb24uanNcbmZ1bmN0aW9uIGdldE5hbWUoZnVuYykge1xuICBpZiAoIXV0aWwuaXNGdW5jdGlvbihmdW5jKSkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoZnVuY3Rpb25zSGF2ZU5hbWVzKSB7XG4gICAgcmV0dXJuIGZ1bmMubmFtZTtcbiAgfVxuICB2YXIgc3RyID0gZnVuYy50b1N0cmluZygpO1xuICB2YXIgbWF0Y2ggPSBzdHIubWF0Y2gocmVnZXgpO1xuICByZXR1cm4gbWF0Y2ggJiYgbWF0Y2hbMV07XG59XG5hc3NlcnQuQXNzZXJ0aW9uRXJyb3IgPSBmdW5jdGlvbiBBc3NlcnRpb25FcnJvcihvcHRpb25zKSB7XG4gIHRoaXMubmFtZSA9ICdBc3NlcnRpb25FcnJvcic7XG4gIHRoaXMuYWN0dWFsID0gb3B0aW9ucy5hY3R1YWw7XG4gIHRoaXMuZXhwZWN0ZWQgPSBvcHRpb25zLmV4cGVjdGVkO1xuICB0aGlzLm9wZXJhdG9yID0gb3B0aW9ucy5vcGVyYXRvcjtcbiAgaWYgKG9wdGlvbnMubWVzc2FnZSkge1xuICAgIHRoaXMubWVzc2FnZSA9IG9wdGlvbnMubWVzc2FnZTtcbiAgICB0aGlzLmdlbmVyYXRlZE1lc3NhZ2UgPSBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSBnZXRNZXNzYWdlKHRoaXMpO1xuICAgIHRoaXMuZ2VuZXJhdGVkTWVzc2FnZSA9IHRydWU7XG4gIH1cbiAgdmFyIHN0YWNrU3RhcnRGdW5jdGlvbiA9IG9wdGlvbnMuc3RhY2tTdGFydEZ1bmN0aW9uIHx8IGZhaWw7XG4gIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIHN0YWNrU3RhcnRGdW5jdGlvbik7XG4gIH0gZWxzZSB7XG4gICAgLy8gbm9uIHY4IGJyb3dzZXJzIHNvIHdlIGNhbiBoYXZlIGEgc3RhY2t0cmFjZVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoKTtcbiAgICBpZiAoZXJyLnN0YWNrKSB7XG4gICAgICB2YXIgb3V0ID0gZXJyLnN0YWNrO1xuXG4gICAgICAvLyB0cnkgdG8gc3RyaXAgdXNlbGVzcyBmcmFtZXNcbiAgICAgIHZhciBmbl9uYW1lID0gZ2V0TmFtZShzdGFja1N0YXJ0RnVuY3Rpb24pO1xuICAgICAgdmFyIGlkeCA9IG91dC5pbmRleE9mKCdcXG4nICsgZm5fbmFtZSk7XG4gICAgICBpZiAoaWR4ID49IDApIHtcbiAgICAgICAgLy8gb25jZSB3ZSBoYXZlIGxvY2F0ZWQgdGhlIGZ1bmN0aW9uIGZyYW1lXG4gICAgICAgIC8vIHdlIG5lZWQgdG8gc3RyaXAgb3V0IGV2ZXJ5dGhpbmcgYmVmb3JlIGl0IChhbmQgaXRzIGxpbmUpXG4gICAgICAgIHZhciBuZXh0X2xpbmUgPSBvdXQuaW5kZXhPZignXFxuJywgaWR4ICsgMSk7XG4gICAgICAgIG91dCA9IG91dC5zdWJzdHJpbmcobmV4dF9saW5lICsgMSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc3RhY2sgPSBvdXQ7XG4gICAgfVxuICB9XG59O1xuXG4vLyBhc3NlcnQuQXNzZXJ0aW9uRXJyb3IgaW5zdGFuY2VvZiBFcnJvclxudXRpbC5pbmhlcml0cyhhc3NlcnQuQXNzZXJ0aW9uRXJyb3IsIEVycm9yKTtcblxuZnVuY3Rpb24gdHJ1bmNhdGUocywgbikge1xuICBpZiAodHlwZW9mIHMgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIHMubGVuZ3RoIDwgbiA/IHMgOiBzLnNsaWNlKDAsIG4pO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBzO1xuICB9XG59XG5mdW5jdGlvbiBpbnNwZWN0KHNvbWV0aGluZykge1xuICBpZiAoZnVuY3Rpb25zSGF2ZU5hbWVzIHx8ICF1dGlsLmlzRnVuY3Rpb24oc29tZXRoaW5nKSkge1xuICAgIHJldHVybiB1dGlsLmluc3BlY3Qoc29tZXRoaW5nKTtcbiAgfVxuICB2YXIgcmF3bmFtZSA9IGdldE5hbWUoc29tZXRoaW5nKTtcbiAgdmFyIG5hbWUgPSByYXduYW1lID8gJzogJyArIHJhd25hbWUgOiAnJztcbiAgcmV0dXJuICdbRnVuY3Rpb24nICsgIG5hbWUgKyAnXSc7XG59XG5mdW5jdGlvbiBnZXRNZXNzYWdlKHNlbGYpIHtcbiAgcmV0dXJuIHRydW5jYXRlKGluc3BlY3Qoc2VsZi5hY3R1YWwpLCAxMjgpICsgJyAnICtcbiAgICAgICAgIHNlbGYub3BlcmF0b3IgKyAnICcgK1xuICAgICAgICAgdHJ1bmNhdGUoaW5zcGVjdChzZWxmLmV4cGVjdGVkKSwgMTI4KTtcbn1cblxuLy8gQXQgcHJlc2VudCBvbmx5IHRoZSB0aHJlZSBrZXlzIG1lbnRpb25lZCBhYm92ZSBhcmUgdXNlZCBhbmRcbi8vIHVuZGVyc3Rvb2QgYnkgdGhlIHNwZWMuIEltcGxlbWVudGF0aW9ucyBvciBzdWIgbW9kdWxlcyBjYW4gcGFzc1xuLy8gb3RoZXIga2V5cyB0byB0aGUgQXNzZXJ0aW9uRXJyb3IncyBjb25zdHJ1Y3RvciAtIHRoZXkgd2lsbCBiZVxuLy8gaWdub3JlZC5cblxuLy8gMy4gQWxsIG9mIHRoZSBmb2xsb3dpbmcgZnVuY3Rpb25zIG11c3QgdGhyb3cgYW4gQXNzZXJ0aW9uRXJyb3Jcbi8vIHdoZW4gYSBjb3JyZXNwb25kaW5nIGNvbmRpdGlvbiBpcyBub3QgbWV0LCB3aXRoIGEgbWVzc2FnZSB0aGF0XG4vLyBtYXkgYmUgdW5kZWZpbmVkIGlmIG5vdCBwcm92aWRlZC4gIEFsbCBhc3NlcnRpb24gbWV0aG9kcyBwcm92aWRlXG4vLyBib3RoIHRoZSBhY3R1YWwgYW5kIGV4cGVjdGVkIHZhbHVlcyB0byB0aGUgYXNzZXJ0aW9uIGVycm9yIGZvclxuLy8gZGlzcGxheSBwdXJwb3Nlcy5cblxuZnVuY3Rpb24gZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCBvcGVyYXRvciwgc3RhY2tTdGFydEZ1bmN0aW9uKSB7XG4gIHRocm93IG5ldyBhc3NlcnQuQXNzZXJ0aW9uRXJyb3Ioe1xuICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXG4gICAgYWN0dWFsOiBhY3R1YWwsXG4gICAgZXhwZWN0ZWQ6IGV4cGVjdGVkLFxuICAgIG9wZXJhdG9yOiBvcGVyYXRvcixcbiAgICBzdGFja1N0YXJ0RnVuY3Rpb246IHN0YWNrU3RhcnRGdW5jdGlvblxuICB9KTtcbn1cblxuLy8gRVhURU5TSU9OISBhbGxvd3MgZm9yIHdlbGwgYmVoYXZlZCBlcnJvcnMgZGVmaW5lZCBlbHNld2hlcmUuXG5hc3NlcnQuZmFpbCA9IGZhaWw7XG5cbi8vIDQuIFB1cmUgYXNzZXJ0aW9uIHRlc3RzIHdoZXRoZXIgYSB2YWx1ZSBpcyB0cnV0aHksIGFzIGRldGVybWluZWRcbi8vIGJ5ICEhZ3VhcmQuXG4vLyBhc3NlcnQub2soZ3VhcmQsIG1lc3NhZ2Vfb3B0KTtcbi8vIFRoaXMgc3RhdGVtZW50IGlzIGVxdWl2YWxlbnQgdG8gYXNzZXJ0LmVxdWFsKHRydWUsICEhZ3VhcmQsXG4vLyBtZXNzYWdlX29wdCk7LiBUbyB0ZXN0IHN0cmljdGx5IGZvciB0aGUgdmFsdWUgdHJ1ZSwgdXNlXG4vLyBhc3NlcnQuc3RyaWN0RXF1YWwodHJ1ZSwgZ3VhcmQsIG1lc3NhZ2Vfb3B0KTsuXG5cbmZ1bmN0aW9uIG9rKHZhbHVlLCBtZXNzYWdlKSB7XG4gIGlmICghdmFsdWUpIGZhaWwodmFsdWUsIHRydWUsIG1lc3NhZ2UsICc9PScsIGFzc2VydC5vayk7XG59XG5hc3NlcnQub2sgPSBvaztcblxuLy8gNS4gVGhlIGVxdWFsaXR5IGFzc2VydGlvbiB0ZXN0cyBzaGFsbG93LCBjb2VyY2l2ZSBlcXVhbGl0eSB3aXRoXG4vLyA9PS5cbi8vIGFzc2VydC5lcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC5lcXVhbCA9IGZ1bmN0aW9uIGVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKGFjdHVhbCAhPSBleHBlY3RlZCkgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnPT0nLCBhc3NlcnQuZXF1YWwpO1xufTtcblxuLy8gNi4gVGhlIG5vbi1lcXVhbGl0eSBhc3NlcnRpb24gdGVzdHMgZm9yIHdoZXRoZXIgdHdvIG9iamVjdHMgYXJlIG5vdCBlcXVhbFxuLy8gd2l0aCAhPSBhc3NlcnQubm90RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZV9vcHQpO1xuXG5hc3NlcnQubm90RXF1YWwgPSBmdW5jdGlvbiBub3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7XG4gIGlmIChhY3R1YWwgPT0gZXhwZWN0ZWQpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICchPScsIGFzc2VydC5ub3RFcXVhbCk7XG4gIH1cbn07XG5cbi8vIDcuIFRoZSBlcXVpdmFsZW5jZSBhc3NlcnRpb24gdGVzdHMgYSBkZWVwIGVxdWFsaXR5IHJlbGF0aW9uLlxuLy8gYXNzZXJ0LmRlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC5kZWVwRXF1YWwgPSBmdW5jdGlvbiBkZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoIV9kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgZmFsc2UpKSB7XG4gICAgZmFpbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlLCAnZGVlcEVxdWFsJywgYXNzZXJ0LmRlZXBFcXVhbCk7XG4gIH1cbn07XG5cbmFzc2VydC5kZWVwU3RyaWN0RXF1YWwgPSBmdW5jdGlvbiBkZWVwU3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoIV9kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgdHJ1ZSkpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICdkZWVwU3RyaWN0RXF1YWwnLCBhc3NlcnQuZGVlcFN0cmljdEVxdWFsKTtcbiAgfVxufTtcblxuZnVuY3Rpb24gX2RlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBzdHJpY3QsIG1lbW9zKSB7XG4gIC8vIDcuMS4gQWxsIGlkZW50aWNhbCB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGFzIGRldGVybWluZWQgYnkgPT09LlxuICBpZiAoYWN0dWFsID09PSBleHBlY3RlZCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQnVmZmVyKGFjdHVhbCkgJiYgaXNCdWZmZXIoZXhwZWN0ZWQpKSB7XG4gICAgcmV0dXJuIGNvbXBhcmUoYWN0dWFsLCBleHBlY3RlZCkgPT09IDA7XG5cbiAgLy8gNy4yLiBJZiB0aGUgZXhwZWN0ZWQgdmFsdWUgaXMgYSBEYXRlIG9iamVjdCwgdGhlIGFjdHVhbCB2YWx1ZSBpc1xuICAvLyBlcXVpdmFsZW50IGlmIGl0IGlzIGFsc28gYSBEYXRlIG9iamVjdCB0aGF0IHJlZmVycyB0byB0aGUgc2FtZSB0aW1lLlxuICB9IGVsc2UgaWYgKHV0aWwuaXNEYXRlKGFjdHVhbCkgJiYgdXRpbC5pc0RhdGUoZXhwZWN0ZWQpKSB7XG4gICAgcmV0dXJuIGFjdHVhbC5nZXRUaW1lKCkgPT09IGV4cGVjdGVkLmdldFRpbWUoKTtcblxuICAvLyA3LjMgSWYgdGhlIGV4cGVjdGVkIHZhbHVlIGlzIGEgUmVnRXhwIG9iamVjdCwgdGhlIGFjdHVhbCB2YWx1ZSBpc1xuICAvLyBlcXVpdmFsZW50IGlmIGl0IGlzIGFsc28gYSBSZWdFeHAgb2JqZWN0IHdpdGggdGhlIHNhbWUgc291cmNlIGFuZFxuICAvLyBwcm9wZXJ0aWVzIChgZ2xvYmFsYCwgYG11bHRpbGluZWAsIGBsYXN0SW5kZXhgLCBgaWdub3JlQ2FzZWApLlxuICB9IGVsc2UgaWYgKHV0aWwuaXNSZWdFeHAoYWN0dWFsKSAmJiB1dGlsLmlzUmVnRXhwKGV4cGVjdGVkKSkge1xuICAgIHJldHVybiBhY3R1YWwuc291cmNlID09PSBleHBlY3RlZC5zb3VyY2UgJiZcbiAgICAgICAgICAgYWN0dWFsLmdsb2JhbCA9PT0gZXhwZWN0ZWQuZ2xvYmFsICYmXG4gICAgICAgICAgIGFjdHVhbC5tdWx0aWxpbmUgPT09IGV4cGVjdGVkLm11bHRpbGluZSAmJlxuICAgICAgICAgICBhY3R1YWwubGFzdEluZGV4ID09PSBleHBlY3RlZC5sYXN0SW5kZXggJiZcbiAgICAgICAgICAgYWN0dWFsLmlnbm9yZUNhc2UgPT09IGV4cGVjdGVkLmlnbm9yZUNhc2U7XG5cbiAgLy8gNy40LiBPdGhlciBwYWlycyB0aGF0IGRvIG5vdCBib3RoIHBhc3MgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnLFxuICAvLyBlcXVpdmFsZW5jZSBpcyBkZXRlcm1pbmVkIGJ5ID09LlxuICB9IGVsc2UgaWYgKChhY3R1YWwgPT09IG51bGwgfHwgdHlwZW9mIGFjdHVhbCAhPT0gJ29iamVjdCcpICYmXG4gICAgICAgICAgICAgKGV4cGVjdGVkID09PSBudWxsIHx8IHR5cGVvZiBleHBlY3RlZCAhPT0gJ29iamVjdCcpKSB7XG4gICAgcmV0dXJuIHN0cmljdCA/IGFjdHVhbCA9PT0gZXhwZWN0ZWQgOiBhY3R1YWwgPT0gZXhwZWN0ZWQ7XG5cbiAgLy8gSWYgYm90aCB2YWx1ZXMgYXJlIGluc3RhbmNlcyBvZiB0eXBlZCBhcnJheXMsIHdyYXAgdGhlaXIgdW5kZXJseWluZ1xuICAvLyBBcnJheUJ1ZmZlcnMgaW4gYSBCdWZmZXIgZWFjaCB0byBpbmNyZWFzZSBwZXJmb3JtYW5jZVxuICAvLyBUaGlzIG9wdGltaXphdGlvbiByZXF1aXJlcyB0aGUgYXJyYXlzIHRvIGhhdmUgdGhlIHNhbWUgdHlwZSBhcyBjaGVja2VkIGJ5XG4gIC8vIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgKGFrYSBwVG9TdHJpbmcpLiBOZXZlciBwZXJmb3JtIGJpbmFyeVxuICAvLyBjb21wYXJpc29ucyBmb3IgRmxvYXQqQXJyYXlzLCB0aG91Z2gsIHNpbmNlIGUuZy4gKzAgPT09IC0wIGJ1dCB0aGVpclxuICAvLyBiaXQgcGF0dGVybnMgYXJlIG5vdCBpZGVudGljYWwuXG4gIH0gZWxzZSBpZiAoaXNWaWV3KGFjdHVhbCkgJiYgaXNWaWV3KGV4cGVjdGVkKSAmJlxuICAgICAgICAgICAgIHBUb1N0cmluZyhhY3R1YWwpID09PSBwVG9TdHJpbmcoZXhwZWN0ZWQpICYmXG4gICAgICAgICAgICAgIShhY3R1YWwgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkgfHxcbiAgICAgICAgICAgICAgIGFjdHVhbCBpbnN0YW5jZW9mIEZsb2F0NjRBcnJheSkpIHtcbiAgICByZXR1cm4gY29tcGFyZShuZXcgVWludDhBcnJheShhY3R1YWwuYnVmZmVyKSxcbiAgICAgICAgICAgICAgICAgICBuZXcgVWludDhBcnJheShleHBlY3RlZC5idWZmZXIpKSA9PT0gMDtcblxuICAvLyA3LjUgRm9yIGFsbCBvdGhlciBPYmplY3QgcGFpcnMsIGluY2x1ZGluZyBBcnJheSBvYmplY3RzLCBlcXVpdmFsZW5jZSBpc1xuICAvLyBkZXRlcm1pbmVkIGJ5IGhhdmluZyB0aGUgc2FtZSBudW1iZXIgb2Ygb3duZWQgcHJvcGVydGllcyAoYXMgdmVyaWZpZWRcbiAgLy8gd2l0aCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwpLCB0aGUgc2FtZSBzZXQgb2Yga2V5c1xuICAvLyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSwgZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5XG4gIC8vIGNvcnJlc3BvbmRpbmcga2V5LCBhbmQgYW4gaWRlbnRpY2FsICdwcm90b3R5cGUnIHByb3BlcnR5LiBOb3RlOiB0aGlzXG4gIC8vIGFjY291bnRzIGZvciBib3RoIG5hbWVkIGFuZCBpbmRleGVkIHByb3BlcnRpZXMgb24gQXJyYXlzLlxuICB9IGVsc2UgaWYgKGlzQnVmZmVyKGFjdHVhbCkgIT09IGlzQnVmZmVyKGV4cGVjdGVkKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIHtcbiAgICBtZW1vcyA9IG1lbW9zIHx8IHthY3R1YWw6IFtdLCBleHBlY3RlZDogW119O1xuXG4gICAgdmFyIGFjdHVhbEluZGV4ID0gbWVtb3MuYWN0dWFsLmluZGV4T2YoYWN0dWFsKTtcbiAgICBpZiAoYWN0dWFsSW5kZXggIT09IC0xKSB7XG4gICAgICBpZiAoYWN0dWFsSW5kZXggPT09IG1lbW9zLmV4cGVjdGVkLmluZGV4T2YoZXhwZWN0ZWQpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIG1lbW9zLmFjdHVhbC5wdXNoKGFjdHVhbCk7XG4gICAgbWVtb3MuZXhwZWN0ZWQucHVzaChleHBlY3RlZCk7XG5cbiAgICByZXR1cm4gb2JqRXF1aXYoYWN0dWFsLCBleHBlY3RlZCwgc3RyaWN0LCBtZW1vcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNBcmd1bWVudHMob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwob2JqZWN0KSA9PSAnW29iamVjdCBBcmd1bWVudHNdJztcbn1cblxuZnVuY3Rpb24gb2JqRXF1aXYoYSwgYiwgc3RyaWN0LCBhY3R1YWxWaXNpdGVkT2JqZWN0cykge1xuICBpZiAoYSA9PT0gbnVsbCB8fCBhID09PSB1bmRlZmluZWQgfHwgYiA9PT0gbnVsbCB8fCBiID09PSB1bmRlZmluZWQpXG4gICAgcmV0dXJuIGZhbHNlO1xuICAvLyBpZiBvbmUgaXMgYSBwcmltaXRpdmUsIHRoZSBvdGhlciBtdXN0IGJlIHNhbWVcbiAgaWYgKHV0aWwuaXNQcmltaXRpdmUoYSkgfHwgdXRpbC5pc1ByaW1pdGl2ZShiKSlcbiAgICByZXR1cm4gYSA9PT0gYjtcbiAgaWYgKHN0cmljdCAmJiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoYSkgIT09IE9iamVjdC5nZXRQcm90b3R5cGVPZihiKSlcbiAgICByZXR1cm4gZmFsc2U7XG4gIHZhciBhSXNBcmdzID0gaXNBcmd1bWVudHMoYSk7XG4gIHZhciBiSXNBcmdzID0gaXNBcmd1bWVudHMoYik7XG4gIGlmICgoYUlzQXJncyAmJiAhYklzQXJncykgfHwgKCFhSXNBcmdzICYmIGJJc0FyZ3MpKVxuICAgIHJldHVybiBmYWxzZTtcbiAgaWYgKGFJc0FyZ3MpIHtcbiAgICBhID0gcFNsaWNlLmNhbGwoYSk7XG4gICAgYiA9IHBTbGljZS5jYWxsKGIpO1xuICAgIHJldHVybiBfZGVlcEVxdWFsKGEsIGIsIHN0cmljdCk7XG4gIH1cbiAgdmFyIGthID0gb2JqZWN0S2V5cyhhKTtcbiAgdmFyIGtiID0gb2JqZWN0S2V5cyhiKTtcbiAgdmFyIGtleSwgaTtcbiAgLy8gaGF2aW5nIHRoZSBzYW1lIG51bWJlciBvZiBvd25lZCBwcm9wZXJ0aWVzIChrZXlzIGluY29ycG9yYXRlc1xuICAvLyBoYXNPd25Qcm9wZXJ0eSlcbiAgaWYgKGthLmxlbmd0aCAhPT0ga2IubGVuZ3RoKVxuICAgIHJldHVybiBmYWxzZTtcbiAgLy90aGUgc2FtZSBzZXQgb2Yga2V5cyAoYWx0aG91Z2ggbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIG9yZGVyKSxcbiAga2Euc29ydCgpO1xuICBrYi5zb3J0KCk7XG4gIC8vfn5+Y2hlYXAga2V5IHRlc3RcbiAgZm9yIChpID0ga2EubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBpZiAoa2FbaV0gIT09IGtiW2ldKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vZXF1aXZhbGVudCB2YWx1ZXMgZm9yIGV2ZXJ5IGNvcnJlc3BvbmRpbmcga2V5LCBhbmRcbiAgLy9+fn5wb3NzaWJseSBleHBlbnNpdmUgZGVlcCB0ZXN0XG4gIGZvciAoaSA9IGthLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAga2V5ID0ga2FbaV07XG4gICAgaWYgKCFfZGVlcEVxdWFsKGFba2V5XSwgYltrZXldLCBzdHJpY3QsIGFjdHVhbFZpc2l0ZWRPYmplY3RzKSlcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gOC4gVGhlIG5vbi1lcXVpdmFsZW5jZSBhc3NlcnRpb24gdGVzdHMgZm9yIGFueSBkZWVwIGluZXF1YWxpdHkuXG4vLyBhc3NlcnQubm90RGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTtcblxuYXNzZXJ0Lm5vdERlZXBFcXVhbCA9IGZ1bmN0aW9uIG5vdERlZXBFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7XG4gIGlmIChfZGVlcEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIGZhbHNlKSkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJ25vdERlZXBFcXVhbCcsIGFzc2VydC5ub3REZWVwRXF1YWwpO1xuICB9XG59O1xuXG5hc3NlcnQubm90RGVlcFN0cmljdEVxdWFsID0gbm90RGVlcFN0cmljdEVxdWFsO1xuZnVuY3Rpb24gbm90RGVlcFN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKF9kZWVwRXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgdHJ1ZSkpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICdub3REZWVwU3RyaWN0RXF1YWwnLCBub3REZWVwU3RyaWN0RXF1YWwpO1xuICB9XG59XG5cblxuLy8gOS4gVGhlIHN0cmljdCBlcXVhbGl0eSBhc3NlcnRpb24gdGVzdHMgc3RyaWN0IGVxdWFsaXR5LCBhcyBkZXRlcm1pbmVkIGJ5ID09PS5cbi8vIGFzc2VydC5zdHJpY3RFcXVhbChhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC5zdHJpY3RFcXVhbCA9IGZ1bmN0aW9uIHN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHtcbiAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHtcbiAgICBmYWlsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UsICc9PT0nLCBhc3NlcnQuc3RyaWN0RXF1YWwpO1xuICB9XG59O1xuXG4vLyAxMC4gVGhlIHN0cmljdCBub24tZXF1YWxpdHkgYXNzZXJ0aW9uIHRlc3RzIGZvciBzdHJpY3QgaW5lcXVhbGl0eSwgYXNcbi8vIGRldGVybWluZWQgYnkgIT09LiAgYXNzZXJ0Lm5vdFN0cmljdEVxdWFsKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2Vfb3B0KTtcblxuYXNzZXJ0Lm5vdFN0cmljdEVxdWFsID0gZnVuY3Rpb24gbm90U3RyaWN0RXF1YWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICBpZiAoYWN0dWFsID09PSBleHBlY3RlZCkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSwgJyE9PScsIGFzc2VydC5ub3RTdHJpY3RFcXVhbCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIGV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXhwZWN0ZWQpIHtcbiAgaWYgKCFhY3R1YWwgfHwgIWV4cGVjdGVkKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChleHBlY3RlZCkgPT0gJ1tvYmplY3QgUmVnRXhwXScpIHtcbiAgICByZXR1cm4gZXhwZWN0ZWQudGVzdChhY3R1YWwpO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBpZiAoYWN0dWFsIGluc3RhbmNlb2YgZXhwZWN0ZWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIElnbm9yZS4gIFRoZSBpbnN0YW5jZW9mIGNoZWNrIGRvZXNuJ3Qgd29yayBmb3IgYXJyb3cgZnVuY3Rpb25zLlxuICB9XG5cbiAgaWYgKEVycm9yLmlzUHJvdG90eXBlT2YoZXhwZWN0ZWQpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIGV4cGVjdGVkLmNhbGwoe30sIGFjdHVhbCkgPT09IHRydWU7XG59XG5cbmZ1bmN0aW9uIF90cnlCbG9jayhibG9jaykge1xuICB2YXIgZXJyb3I7XG4gIHRyeSB7XG4gICAgYmxvY2soKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGVycm9yID0gZTtcbiAgfVxuICByZXR1cm4gZXJyb3I7XG59XG5cbmZ1bmN0aW9uIF90aHJvd3Moc2hvdWxkVGhyb3csIGJsb2NrLCBleHBlY3RlZCwgbWVzc2FnZSkge1xuICB2YXIgYWN0dWFsO1xuXG4gIGlmICh0eXBlb2YgYmxvY2sgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImJsb2NrXCIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG4gIH1cblxuICBpZiAodHlwZW9mIGV4cGVjdGVkID09PSAnc3RyaW5nJykge1xuICAgIG1lc3NhZ2UgPSBleHBlY3RlZDtcbiAgICBleHBlY3RlZCA9IG51bGw7XG4gIH1cblxuICBhY3R1YWwgPSBfdHJ5QmxvY2soYmxvY2spO1xuXG4gIG1lc3NhZ2UgPSAoZXhwZWN0ZWQgJiYgZXhwZWN0ZWQubmFtZSA/ICcgKCcgKyBleHBlY3RlZC5uYW1lICsgJykuJyA6ICcuJykgK1xuICAgICAgICAgICAgKG1lc3NhZ2UgPyAnICcgKyBtZXNzYWdlIDogJy4nKTtcblxuICBpZiAoc2hvdWxkVGhyb3cgJiYgIWFjdHVhbCkge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgJ01pc3NpbmcgZXhwZWN0ZWQgZXhjZXB0aW9uJyArIG1lc3NhZ2UpO1xuICB9XG5cbiAgdmFyIHVzZXJQcm92aWRlZE1lc3NhZ2UgPSB0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZyc7XG4gIHZhciBpc1Vud2FudGVkRXhjZXB0aW9uID0gIXNob3VsZFRocm93ICYmIHV0aWwuaXNFcnJvcihhY3R1YWwpO1xuICB2YXIgaXNVbmV4cGVjdGVkRXhjZXB0aW9uID0gIXNob3VsZFRocm93ICYmIGFjdHVhbCAmJiAhZXhwZWN0ZWQ7XG5cbiAgaWYgKChpc1Vud2FudGVkRXhjZXB0aW9uICYmXG4gICAgICB1c2VyUHJvdmlkZWRNZXNzYWdlICYmXG4gICAgICBleHBlY3RlZEV4Y2VwdGlvbihhY3R1YWwsIGV4cGVjdGVkKSkgfHxcbiAgICAgIGlzVW5leHBlY3RlZEV4Y2VwdGlvbikge1xuICAgIGZhaWwoYWN0dWFsLCBleHBlY3RlZCwgJ0dvdCB1bndhbnRlZCBleGNlcHRpb24nICsgbWVzc2FnZSk7XG4gIH1cblxuICBpZiAoKHNob3VsZFRocm93ICYmIGFjdHVhbCAmJiBleHBlY3RlZCAmJlxuICAgICAgIWV4cGVjdGVkRXhjZXB0aW9uKGFjdHVhbCwgZXhwZWN0ZWQpKSB8fCAoIXNob3VsZFRocm93ICYmIGFjdHVhbCkpIHtcbiAgICB0aHJvdyBhY3R1YWw7XG4gIH1cbn1cblxuLy8gMTEuIEV4cGVjdGVkIHRvIHRocm93IGFuIGVycm9yOlxuLy8gYXNzZXJ0LnRocm93cyhibG9jaywgRXJyb3Jfb3B0LCBtZXNzYWdlX29wdCk7XG5cbmFzc2VydC50aHJvd3MgPSBmdW5jdGlvbihibG9jaywgLypvcHRpb25hbCovZXJyb3IsIC8qb3B0aW9uYWwqL21lc3NhZ2UpIHtcbiAgX3Rocm93cyh0cnVlLCBibG9jaywgZXJyb3IsIG1lc3NhZ2UpO1xufTtcblxuLy8gRVhURU5TSU9OISBUaGlzIGlzIGFubm95aW5nIHRvIHdyaXRlIG91dHNpZGUgdGhpcyBtb2R1bGUuXG5hc3NlcnQuZG9lc05vdFRocm93ID0gZnVuY3Rpb24oYmxvY2ssIC8qb3B0aW9uYWwqL2Vycm9yLCAvKm9wdGlvbmFsKi9tZXNzYWdlKSB7XG4gIF90aHJvd3MoZmFsc2UsIGJsb2NrLCBlcnJvciwgbWVzc2FnZSk7XG59O1xuXG5hc3NlcnQuaWZFcnJvciA9IGZ1bmN0aW9uKGVycikgeyBpZiAoZXJyKSB0aHJvdyBlcnI7IH07XG5cbi8vIEV4cG9zZSBhIHN0cmljdCBvbmx5IHZhcmlhbnQgb2YgYXNzZXJ0XG5mdW5jdGlvbiBzdHJpY3QodmFsdWUsIG1lc3NhZ2UpIHtcbiAgaWYgKCF2YWx1ZSkgZmFpbCh2YWx1ZSwgdHJ1ZSwgbWVzc2FnZSwgJz09Jywgc3RyaWN0KTtcbn1cbmFzc2VydC5zdHJpY3QgPSBvYmplY3RBc3NpZ24oc3RyaWN0LCBhc3NlcnQsIHtcbiAgZXF1YWw6IGFzc2VydC5zdHJpY3RFcXVhbCxcbiAgZGVlcEVxdWFsOiBhc3NlcnQuZGVlcFN0cmljdEVxdWFsLFxuICBub3RFcXVhbDogYXNzZXJ0Lm5vdFN0cmljdEVxdWFsLFxuICBub3REZWVwRXF1YWw6IGFzc2VydC5ub3REZWVwU3RyaWN0RXF1YWxcbn0pO1xuYXNzZXJ0LnN0cmljdC5zdHJpY3QgPSBhc3NlcnQuc3RyaWN0O1xuXG52YXIgb2JqZWN0S2V5cyA9IE9iamVjdC5rZXlzIHx8IGZ1bmN0aW9uIChvYmopIHtcbiAgdmFyIGtleXMgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIG9iaikge1xuICAgIGlmIChoYXNPd24uY2FsbChvYmosIGtleSkpIGtleXMucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiBrZXlzO1xufTtcbiIsIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IG5vd1xuXG5mdW5jdGlvbiBub3coKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpXG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIiwiLyohIGpRdWVyeSBVSSAtIHYxLjEyLjEgLSAyMDE2LTA5LTE0XG4qIGh0dHA6Ly9qcXVlcnl1aS5jb21cbiogSW5jbHVkZXM6IHdpZGdldC5qcywgcG9zaXRpb24uanMsIGRhdGEuanMsIGRpc2FibGUtc2VsZWN0aW9uLmpzLCBlZmZlY3QuanMsIGVmZmVjdHMvZWZmZWN0LWJsaW5kLmpzLCBlZmZlY3RzL2VmZmVjdC1ib3VuY2UuanMsIGVmZmVjdHMvZWZmZWN0LWNsaXAuanMsIGVmZmVjdHMvZWZmZWN0LWRyb3AuanMsIGVmZmVjdHMvZWZmZWN0LWV4cGxvZGUuanMsIGVmZmVjdHMvZWZmZWN0LWZhZGUuanMsIGVmZmVjdHMvZWZmZWN0LWZvbGQuanMsIGVmZmVjdHMvZWZmZWN0LWhpZ2hsaWdodC5qcywgZWZmZWN0cy9lZmZlY3QtcHVmZi5qcywgZWZmZWN0cy9lZmZlY3QtcHVsc2F0ZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2NhbGUuanMsIGVmZmVjdHMvZWZmZWN0LXNoYWtlLmpzLCBlZmZlY3RzL2VmZmVjdC1zaXplLmpzLCBlZmZlY3RzL2VmZmVjdC1zbGlkZS5qcywgZWZmZWN0cy9lZmZlY3QtdHJhbnNmZXIuanMsIGZvY3VzYWJsZS5qcywgZm9ybS1yZXNldC1taXhpbi5qcywganF1ZXJ5LTEtNy5qcywga2V5Y29kZS5qcywgbGFiZWxzLmpzLCBzY3JvbGwtcGFyZW50LmpzLCB0YWJiYWJsZS5qcywgdW5pcXVlLWlkLmpzLCB3aWRnZXRzL2FjY29yZGlvbi5qcywgd2lkZ2V0cy9hdXRvY29tcGxldGUuanMsIHdpZGdldHMvYnV0dG9uLmpzLCB3aWRnZXRzL2NoZWNrYm94cmFkaW8uanMsIHdpZGdldHMvY29udHJvbGdyb3VwLmpzLCB3aWRnZXRzL2RhdGVwaWNrZXIuanMsIHdpZGdldHMvZGlhbG9nLmpzLCB3aWRnZXRzL2RyYWdnYWJsZS5qcywgd2lkZ2V0cy9kcm9wcGFibGUuanMsIHdpZGdldHMvbWVudS5qcywgd2lkZ2V0cy9tb3VzZS5qcywgd2lkZ2V0cy9wcm9ncmVzc2Jhci5qcywgd2lkZ2V0cy9yZXNpemFibGUuanMsIHdpZGdldHMvc2VsZWN0YWJsZS5qcywgd2lkZ2V0cy9zZWxlY3RtZW51LmpzLCB3aWRnZXRzL3NsaWRlci5qcywgd2lkZ2V0cy9zb3J0YWJsZS5qcywgd2lkZ2V0cy9zcGlubmVyLmpzLCB3aWRnZXRzL3RhYnMuanMsIHdpZGdldHMvdG9vbHRpcC5qc1xuKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yczsgTGljZW5zZWQgTUlUICovXG5cbihmdW5jdGlvbih0KXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSx0KTp0KGpRdWVyeSl9KShmdW5jdGlvbih0KXtmdW5jdGlvbiBlKHQpe2Zvcih2YXIgZT10LmNzcyhcInZpc2liaWxpdHlcIik7XCJpbmhlcml0XCI9PT1lOyl0PXQucGFyZW50KCksZT10LmNzcyhcInZpc2liaWxpdHlcIik7cmV0dXJuXCJoaWRkZW5cIiE9PWV9ZnVuY3Rpb24gaSh0KXtmb3IodmFyIGUsaTt0Lmxlbmd0aCYmdFswXSE9PWRvY3VtZW50Oyl7aWYoZT10LmNzcyhcInBvc2l0aW9uXCIpLChcImFic29sdXRlXCI9PT1lfHxcInJlbGF0aXZlXCI9PT1lfHxcImZpeGVkXCI9PT1lKSYmKGk9cGFyc2VJbnQodC5jc3MoXCJ6SW5kZXhcIiksMTApLCFpc05hTihpKSYmMCE9PWkpKXJldHVybiBpO3Q9dC5wYXJlbnQoKX1yZXR1cm4gMH1mdW5jdGlvbiBzKCl7dGhpcy5fY3VySW5zdD1udWxsLHRoaXMuX2tleUV2ZW50PSExLHRoaXMuX2Rpc2FibGVkSW5wdXRzPVtdLHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nPSExLHRoaXMuX2luRGlhbG9nPSExLHRoaXMuX21haW5EaXZJZD1cInVpLWRhdGVwaWNrZXItZGl2XCIsdGhpcy5faW5saW5lQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLWlubGluZVwiLHRoaXMuX2FwcGVuZENsYXNzPVwidWktZGF0ZXBpY2tlci1hcHBlbmRcIix0aGlzLl90cmlnZ2VyQ2xhc3M9XCJ1aS1kYXRlcGlja2VyLXRyaWdnZXJcIix0aGlzLl9kaWFsb2dDbGFzcz1cInVpLWRhdGVwaWNrZXItZGlhbG9nXCIsdGhpcy5fZGlzYWJsZUNsYXNzPVwidWktZGF0ZXBpY2tlci1kaXNhYmxlZFwiLHRoaXMuX3Vuc2VsZWN0YWJsZUNsYXNzPVwidWktZGF0ZXBpY2tlci11bnNlbGVjdGFibGVcIix0aGlzLl9jdXJyZW50Q2xhc3M9XCJ1aS1kYXRlcGlja2VyLWN1cnJlbnQtZGF5XCIsdGhpcy5fZGF5T3ZlckNsYXNzPVwidWktZGF0ZXBpY2tlci1kYXlzLWNlbGwtb3ZlclwiLHRoaXMucmVnaW9uYWw9W10sdGhpcy5yZWdpb25hbFtcIlwiXT17Y2xvc2VUZXh0OlwiRG9uZVwiLHByZXZUZXh0OlwiUHJldlwiLG5leHRUZXh0OlwiTmV4dFwiLGN1cnJlbnRUZXh0OlwiVG9kYXlcIixtb250aE5hbWVzOltcIkphbnVhcnlcIixcIkZlYnJ1YXJ5XCIsXCJNYXJjaFwiLFwiQXByaWxcIixcIk1heVwiLFwiSnVuZVwiLFwiSnVseVwiLFwiQXVndXN0XCIsXCJTZXB0ZW1iZXJcIixcIk9jdG9iZXJcIixcIk5vdmVtYmVyXCIsXCJEZWNlbWJlclwiXSxtb250aE5hbWVzU2hvcnQ6W1wiSmFuXCIsXCJGZWJcIixcIk1hclwiLFwiQXByXCIsXCJNYXlcIixcIkp1blwiLFwiSnVsXCIsXCJBdWdcIixcIlNlcFwiLFwiT2N0XCIsXCJOb3ZcIixcIkRlY1wiXSxkYXlOYW1lczpbXCJTdW5kYXlcIixcIk1vbmRheVwiLFwiVHVlc2RheVwiLFwiV2VkbmVzZGF5XCIsXCJUaHVyc2RheVwiLFwiRnJpZGF5XCIsXCJTYXR1cmRheVwiXSxkYXlOYW1lc1Nob3J0OltcIlN1blwiLFwiTW9uXCIsXCJUdWVcIixcIldlZFwiLFwiVGh1XCIsXCJGcmlcIixcIlNhdFwiXSxkYXlOYW1lc01pbjpbXCJTdVwiLFwiTW9cIixcIlR1XCIsXCJXZVwiLFwiVGhcIixcIkZyXCIsXCJTYVwiXSx3ZWVrSGVhZGVyOlwiV2tcIixkYXRlRm9ybWF0OlwibW0vZGQveXlcIixmaXJzdERheTowLGlzUlRMOiExLHNob3dNb250aEFmdGVyWWVhcjohMSx5ZWFyU3VmZml4OlwiXCJ9LHRoaXMuX2RlZmF1bHRzPXtzaG93T246XCJmb2N1c1wiLHNob3dBbmltOlwiZmFkZUluXCIsc2hvd09wdGlvbnM6e30sZGVmYXVsdERhdGU6bnVsbCxhcHBlbmRUZXh0OlwiXCIsYnV0dG9uVGV4dDpcIi4uLlwiLGJ1dHRvbkltYWdlOlwiXCIsYnV0dG9uSW1hZ2VPbmx5OiExLGhpZGVJZk5vUHJldk5leHQ6ITEsbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdDohMSxnb3RvQ3VycmVudDohMSxjaGFuZ2VNb250aDohMSxjaGFuZ2VZZWFyOiExLHllYXJSYW5nZTpcImMtMTA6YysxMFwiLHNob3dPdGhlck1vbnRoczohMSxzZWxlY3RPdGhlck1vbnRoczohMSxzaG93V2VlazohMSxjYWxjdWxhdGVXZWVrOnRoaXMuaXNvODYwMVdlZWssc2hvcnRZZWFyQ3V0b2ZmOlwiKzEwXCIsbWluRGF0ZTpudWxsLG1heERhdGU6bnVsbCxkdXJhdGlvbjpcImZhc3RcIixiZWZvcmVTaG93RGF5Om51bGwsYmVmb3JlU2hvdzpudWxsLG9uU2VsZWN0Om51bGwsb25DaGFuZ2VNb250aFllYXI6bnVsbCxvbkNsb3NlOm51bGwsbnVtYmVyT2ZNb250aHM6MSxzaG93Q3VycmVudEF0UG9zOjAsc3RlcE1vbnRoczoxLHN0ZXBCaWdNb250aHM6MTIsYWx0RmllbGQ6XCJcIixhbHRGb3JtYXQ6XCJcIixjb25zdHJhaW5JbnB1dDohMCxzaG93QnV0dG9uUGFuZWw6ITEsYXV0b1NpemU6ITEsZGlzYWJsZWQ6ITF9LHQuZXh0ZW5kKHRoaXMuX2RlZmF1bHRzLHRoaXMucmVnaW9uYWxbXCJcIl0pLHRoaXMucmVnaW9uYWwuZW49dC5leHRlbmQoITAse30sdGhpcy5yZWdpb25hbFtcIlwiXSksdGhpcy5yZWdpb25hbFtcImVuLVVTXCJdPXQuZXh0ZW5kKCEwLHt9LHRoaXMucmVnaW9uYWwuZW4pLHRoaXMuZHBEaXY9bih0KFwiPGRpdiBpZD0nXCIrdGhpcy5fbWFpbkRpdklkK1wiJyBjbGFzcz0ndWktZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGwnPjwvZGl2PlwiKSl9ZnVuY3Rpb24gbihlKXt2YXIgaT1cImJ1dHRvbiwgLnVpLWRhdGVwaWNrZXItcHJldiwgLnVpLWRhdGVwaWNrZXItbmV4dCwgLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIgdGQgYVwiO3JldHVybiBlLm9uKFwibW91c2VvdXRcIixpLGZ1bmN0aW9uKCl7dCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLC0xIT09dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItcHJldlwiKSYmdCh0aGlzKS5yZW1vdmVDbGFzcyhcInVpLWRhdGVwaWNrZXItcHJldi1ob3ZlclwiKSwtMSE9PXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLW5leHRcIikmJnQodGhpcykucmVtb3ZlQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXJcIil9KS5vbihcIm1vdXNlb3ZlclwiLGksbyl9ZnVuY3Rpb24gbygpe3QuZGF0ZXBpY2tlci5faXNEaXNhYmxlZERhdGVwaWNrZXIobS5pbmxpbmU/bS5kcERpdi5wYXJlbnQoKVswXTptLmlucHV0WzBdKXx8KHQodGhpcykucGFyZW50cyhcIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyXCIpLmZpbmQoXCJhXCIpLnJlbW92ZUNsYXNzKFwidWktc3RhdGUtaG92ZXJcIiksdCh0aGlzKS5hZGRDbGFzcyhcInVpLXN0YXRlLWhvdmVyXCIpLC0xIT09dGhpcy5jbGFzc05hbWUuaW5kZXhPZihcInVpLWRhdGVwaWNrZXItcHJldlwiKSYmdCh0aGlzKS5hZGRDbGFzcyhcInVpLWRhdGVwaWNrZXItcHJldi1ob3ZlclwiKSwtMSE9PXRoaXMuY2xhc3NOYW1lLmluZGV4T2YoXCJ1aS1kYXRlcGlja2VyLW5leHRcIikmJnQodGhpcykuYWRkQ2xhc3MoXCJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXJcIikpfWZ1bmN0aW9uIGEoZSxpKXt0LmV4dGVuZChlLGkpO2Zvcih2YXIgcyBpbiBpKW51bGw9PWlbc10mJihlW3NdPWlbc10pO3JldHVybiBlfWZ1bmN0aW9uIHIodCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5lbGVtZW50LnZhbCgpO3QuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX3JlZnJlc2goKSxlIT09dGhpcy5lbGVtZW50LnZhbCgpJiZ0aGlzLl90cmlnZ2VyKFwiY2hhbmdlXCIpfX10LnVpPXQudWl8fHt9LHQudWkudmVyc2lvbj1cIjEuMTIuMVwiO3ZhciBoPTAsbD1BcnJheS5wcm90b3R5cGUuc2xpY2U7dC5jbGVhbkRhdGE9ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkpe3ZhciBzLG4sbztmb3Iobz0wO251bGwhPShuPWlbb10pO28rKyl0cnl7cz10Ll9kYXRhKG4sXCJldmVudHNcIikscyYmcy5yZW1vdmUmJnQobikudHJpZ2dlckhhbmRsZXIoXCJyZW1vdmVcIil9Y2F0Y2goYSl7fWUoaSl9fSh0LmNsZWFuRGF0YSksdC53aWRnZXQ9ZnVuY3Rpb24oZSxpLHMpe3ZhciBuLG8sYSxyPXt9LGg9ZS5zcGxpdChcIi5cIilbMF07ZT1lLnNwbGl0KFwiLlwiKVsxXTt2YXIgbD1oK1wiLVwiK2U7cmV0dXJuIHN8fChzPWksaT10LldpZGdldCksdC5pc0FycmF5KHMpJiYocz10LmV4dGVuZC5hcHBseShudWxsLFt7fV0uY29uY2F0KHMpKSksdC5leHByW1wiOlwiXVtsLnRvTG93ZXJDYXNlKCldPWZ1bmN0aW9uKGUpe3JldHVybiEhdC5kYXRhKGUsbCl9LHRbaF09dFtoXXx8e30sbj10W2hdW2VdLG89dFtoXVtlXT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9jcmVhdGVXaWRnZXQ/KGFyZ3VtZW50cy5sZW5ndGgmJnRoaXMuX2NyZWF0ZVdpZGdldCh0LGUpLHZvaWQgMCk6bmV3IG8odCxlKX0sdC5leHRlbmQobyxuLHt2ZXJzaW9uOnMudmVyc2lvbixfcHJvdG86dC5leHRlbmQoe30scyksX2NoaWxkQ29uc3RydWN0b3JzOltdfSksYT1uZXcgaSxhLm9wdGlvbnM9dC53aWRnZXQuZXh0ZW5kKHt9LGEub3B0aW9ucyksdC5lYWNoKHMsZnVuY3Rpb24oZSxzKXtyZXR1cm4gdC5pc0Z1bmN0aW9uKHMpPyhyW2VdPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpe3JldHVybiBpLnByb3RvdHlwZVtlXS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gbih0KXtyZXR1cm4gaS5wcm90b3R5cGVbZV0uYXBwbHkodGhpcyx0KX1yZXR1cm4gZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMuX3N1cGVyLG89dGhpcy5fc3VwZXJBcHBseTtyZXR1cm4gdGhpcy5fc3VwZXI9dCx0aGlzLl9zdXBlckFwcGx5PW4sZT1zLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9zdXBlcj1pLHRoaXMuX3N1cGVyQXBwbHk9byxlfX0oKSx2b2lkIDApOihyW2VdPXMsdm9pZCAwKX0pLG8ucHJvdG90eXBlPXQud2lkZ2V0LmV4dGVuZChhLHt3aWRnZXRFdmVudFByZWZpeDpuP2Eud2lkZ2V0RXZlbnRQcmVmaXh8fGU6ZX0scix7Y29uc3RydWN0b3I6byxuYW1lc3BhY2U6aCx3aWRnZXROYW1lOmUsd2lkZ2V0RnVsbE5hbWU6bH0pLG4/KHQuZWFjaChuLl9jaGlsZENvbnN0cnVjdG9ycyxmdW5jdGlvbihlLGkpe3ZhciBzPWkucHJvdG90eXBlO3Qud2lkZ2V0KHMubmFtZXNwYWNlK1wiLlwiK3Mud2lkZ2V0TmFtZSxvLGkuX3Byb3RvKX0pLGRlbGV0ZSBuLl9jaGlsZENvbnN0cnVjdG9ycyk6aS5fY2hpbGRDb25zdHJ1Y3RvcnMucHVzaChvKSx0LndpZGdldC5icmlkZ2UoZSxvKSxvfSx0LndpZGdldC5leHRlbmQ9ZnVuY3Rpb24oZSl7Zm9yKHZhciBpLHMsbj1sLmNhbGwoYXJndW1lbnRzLDEpLG89MCxhPW4ubGVuZ3RoO2E+bztvKyspZm9yKGkgaW4gbltvXSlzPW5bb11baV0sbltvXS5oYXNPd25Qcm9wZXJ0eShpKSYmdm9pZCAwIT09cyYmKGVbaV09dC5pc1BsYWluT2JqZWN0KHMpP3QuaXNQbGFpbk9iamVjdChlW2ldKT90LndpZGdldC5leHRlbmQoe30sZVtpXSxzKTp0LndpZGdldC5leHRlbmQoe30scyk6cyk7cmV0dXJuIGV9LHQud2lkZ2V0LmJyaWRnZT1mdW5jdGlvbihlLGkpe3ZhciBzPWkucHJvdG90eXBlLndpZGdldEZ1bGxOYW1lfHxlO3QuZm5bZV09ZnVuY3Rpb24obil7dmFyIG89XCJzdHJpbmdcIj09dHlwZW9mIG4sYT1sLmNhbGwoYXJndW1lbnRzLDEpLHI9dGhpcztyZXR1cm4gbz90aGlzLmxlbmd0aHx8XCJpbnN0YW5jZVwiIT09bj90aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgaSxvPXQuZGF0YSh0aGlzLHMpO3JldHVyblwiaW5zdGFuY2VcIj09PW4/KHI9bywhMSk6bz90LmlzRnVuY3Rpb24ob1tuXSkmJlwiX1wiIT09bi5jaGFyQXQoMCk/KGk9b1tuXS5hcHBseShvLGEpLGkhPT1vJiZ2b2lkIDAhPT1pPyhyPWkmJmkuanF1ZXJ5P3IucHVzaFN0YWNrKGkuZ2V0KCkpOmksITEpOnZvaWQgMCk6dC5lcnJvcihcIm5vIHN1Y2ggbWV0aG9kICdcIituK1wiJyBmb3IgXCIrZStcIiB3aWRnZXQgaW5zdGFuY2VcIik6dC5lcnJvcihcImNhbm5vdCBjYWxsIG1ldGhvZHMgb24gXCIrZStcIiBwcmlvciB0byBpbml0aWFsaXphdGlvbjsgXCIrXCJhdHRlbXB0ZWQgdG8gY2FsbCBtZXRob2QgJ1wiK24rXCInXCIpfSk6cj12b2lkIDA6KGEubGVuZ3RoJiYobj10LndpZGdldC5leHRlbmQuYXBwbHkobnVsbCxbbl0uY29uY2F0KGEpKSksdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dC5kYXRhKHRoaXMscyk7ZT8oZS5vcHRpb24obnx8e30pLGUuX2luaXQmJmUuX2luaXQoKSk6dC5kYXRhKHRoaXMscyxuZXcgaShuLHRoaXMpKX0pKSxyfX0sdC5XaWRnZXQ9ZnVuY3Rpb24oKXt9LHQuV2lkZ2V0Ll9jaGlsZENvbnN0cnVjdG9ycz1bXSx0LldpZGdldC5wcm90b3R5cGU9e3dpZGdldE5hbWU6XCJ3aWRnZXRcIix3aWRnZXRFdmVudFByZWZpeDpcIlwiLGRlZmF1bHRFbGVtZW50OlwiPGRpdj5cIixvcHRpb25zOntjbGFzc2VzOnt9LGRpc2FibGVkOiExLGNyZWF0ZTpudWxsfSxfY3JlYXRlV2lkZ2V0OmZ1bmN0aW9uKGUsaSl7aT10KGl8fHRoaXMuZGVmYXVsdEVsZW1lbnR8fHRoaXMpWzBdLHRoaXMuZWxlbWVudD10KGkpLHRoaXMudXVpZD1oKyssdGhpcy5ldmVudE5hbWVzcGFjZT1cIi5cIit0aGlzLndpZGdldE5hbWUrdGhpcy51dWlkLHRoaXMuYmluZGluZ3M9dCgpLHRoaXMuaG92ZXJhYmxlPXQoKSx0aGlzLmZvY3VzYWJsZT10KCksdGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cD17fSxpIT09dGhpcyYmKHQuZGF0YShpLHRoaXMud2lkZ2V0RnVsbE5hbWUsdGhpcyksdGhpcy5fb24oITAsdGhpcy5lbGVtZW50LHtyZW1vdmU6ZnVuY3Rpb24odCl7dC50YXJnZXQ9PT1pJiZ0aGlzLmRlc3Ryb3koKX19KSx0aGlzLmRvY3VtZW50PXQoaS5zdHlsZT9pLm93bmVyRG9jdW1lbnQ6aS5kb2N1bWVudHx8aSksdGhpcy53aW5kb3c9dCh0aGlzLmRvY3VtZW50WzBdLmRlZmF1bHRWaWV3fHx0aGlzLmRvY3VtZW50WzBdLnBhcmVudFdpbmRvdykpLHRoaXMub3B0aW9ucz10LndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zLHRoaXMuX2dldENyZWF0ZU9wdGlvbnMoKSxlKSx0aGlzLl9jcmVhdGUoKSx0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMuX3NldE9wdGlvbkRpc2FibGVkKHRoaXMub3B0aW9ucy5kaXNhYmxlZCksdGhpcy5fdHJpZ2dlcihcImNyZWF0ZVwiLG51bGwsdGhpcy5fZ2V0Q3JlYXRlRXZlbnREYXRhKCkpLHRoaXMuX2luaXQoKX0sX2dldENyZWF0ZU9wdGlvbnM6ZnVuY3Rpb24oKXtyZXR1cm57fX0sX2dldENyZWF0ZUV2ZW50RGF0YTp0Lm5vb3AsX2NyZWF0ZTp0Lm5vb3AsX2luaXQ6dC5ub29wLGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2Rlc3Ryb3koKSx0LmVhY2godGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cCxmdW5jdGlvbih0LGkpe2UuX3JlbW92ZUNsYXNzKGksdCl9KSx0aGlzLmVsZW1lbnQub2ZmKHRoaXMuZXZlbnROYW1lc3BhY2UpLnJlbW92ZURhdGEodGhpcy53aWRnZXRGdWxsTmFtZSksdGhpcy53aWRnZXQoKS5vZmYodGhpcy5ldmVudE5hbWVzcGFjZSkucmVtb3ZlQXR0cihcImFyaWEtZGlzYWJsZWRcIiksdGhpcy5iaW5kaW5ncy5vZmYodGhpcy5ldmVudE5hbWVzcGFjZSl9LF9kZXN0cm95OnQubm9vcCx3aWRnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50fSxvcHRpb246ZnVuY3Rpb24oZSxpKXt2YXIgcyxuLG8sYT1lO2lmKDA9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiB0LndpZGdldC5leHRlbmQoe30sdGhpcy5vcHRpb25zKTtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlpZihhPXt9LHM9ZS5zcGxpdChcIi5cIiksZT1zLnNoaWZ0KCkscy5sZW5ndGgpe2ZvcihuPWFbZV09dC53aWRnZXQuZXh0ZW5kKHt9LHRoaXMub3B0aW9uc1tlXSksbz0wO3MubGVuZ3RoLTE+bztvKyspbltzW29dXT1uW3Nbb11dfHx7fSxuPW5bc1tvXV07aWYoZT1zLnBvcCgpLDE9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiB2b2lkIDA9PT1uW2VdP251bGw6bltlXTtuW2VdPWl9ZWxzZXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdm9pZCAwPT09dGhpcy5vcHRpb25zW2VdP251bGw6dGhpcy5vcHRpb25zW2VdO2FbZV09aX1yZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyhhKSx0aGlzfSxfc2V0T3B0aW9uczpmdW5jdGlvbih0KXt2YXIgZTtmb3IoZSBpbiB0KXRoaXMuX3NldE9wdGlvbihlLHRbZV0pO3JldHVybiB0aGlzfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJjbGFzc2VzXCI9PT10JiZ0aGlzLl9zZXRPcHRpb25DbGFzc2VzKGUpLHRoaXMub3B0aW9uc1t0XT1lLFwiZGlzYWJsZWRcIj09PXQmJnRoaXMuX3NldE9wdGlvbkRpc2FibGVkKGUpLHRoaXN9LF9zZXRPcHRpb25DbGFzc2VzOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbjtmb3IoaSBpbiBlKW49dGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cFtpXSxlW2ldIT09dGhpcy5vcHRpb25zLmNsYXNzZXNbaV0mJm4mJm4ubGVuZ3RoJiYocz10KG4uZ2V0KCkpLHRoaXMuX3JlbW92ZUNsYXNzKG4saSkscy5hZGRDbGFzcyh0aGlzLl9jbGFzc2VzKHtlbGVtZW50OnMsa2V5czppLGNsYXNzZXM6ZSxhZGQ6ITB9KSkpfSxfc2V0T3B0aW9uRGlzYWJsZWQ6ZnVuY3Rpb24odCl7dGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy53aWRnZXQoKSx0aGlzLndpZGdldEZ1bGxOYW1lK1wiLWRpc2FibGVkXCIsbnVsbCwhIXQpLHQmJih0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmhvdmVyYWJsZSxudWxsLFwidWktc3RhdGUtaG92ZXJcIiksdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5mb2N1c2FibGUsbnVsbCxcInVpLXN0YXRlLWZvY3VzXCIpKX0sZW5hYmxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NldE9wdGlvbnMoe2Rpc2FibGVkOiExfSl9LGRpc2FibGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2V0T3B0aW9ucyh7ZGlzYWJsZWQ6ITB9KX0sX2NsYXNzZXM6ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gaShpLG8pe3ZhciBhLHI7Zm9yKHI9MDtpLmxlbmd0aD5yO3IrKylhPW4uY2xhc3Nlc0VsZW1lbnRMb29rdXBbaVtyXV18fHQoKSxhPWUuYWRkP3QodC51bmlxdWUoYS5nZXQoKS5jb25jYXQoZS5lbGVtZW50LmdldCgpKSkpOnQoYS5ub3QoZS5lbGVtZW50KS5nZXQoKSksbi5jbGFzc2VzRWxlbWVudExvb2t1cFtpW3JdXT1hLHMucHVzaChpW3JdKSxvJiZlLmNsYXNzZXNbaVtyXV0mJnMucHVzaChlLmNsYXNzZXNbaVtyXV0pfXZhciBzPVtdLG49dGhpcztyZXR1cm4gZT10LmV4dGVuZCh7ZWxlbWVudDp0aGlzLmVsZW1lbnQsY2xhc3Nlczp0aGlzLm9wdGlvbnMuY2xhc3Nlc3x8e319LGUpLHRoaXMuX29uKGUuZWxlbWVudCx7cmVtb3ZlOlwiX3VudHJhY2tDbGFzc2VzRWxlbWVudFwifSksZS5rZXlzJiZpKGUua2V5cy5tYXRjaCgvXFxTKy9nKXx8W10sITApLGUuZXh0cmEmJmkoZS5leHRyYS5tYXRjaCgvXFxTKy9nKXx8W10pLHMuam9pbihcIiBcIil9LF91bnRyYWNrQ2xhc3Nlc0VsZW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpczt0LmVhY2goaS5jbGFzc2VzRWxlbWVudExvb2t1cCxmdW5jdGlvbihzLG4pey0xIT09dC5pbkFycmF5KGUudGFyZ2V0LG4pJiYoaS5jbGFzc2VzRWxlbWVudExvb2t1cFtzXT10KG4ubm90KGUudGFyZ2V0KS5nZXQoKSkpfSl9LF9yZW1vdmVDbGFzczpmdW5jdGlvbih0LGUsaSl7cmV0dXJuIHRoaXMuX3RvZ2dsZUNsYXNzKHQsZSxpLCExKX0sX2FkZENsYXNzOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xhc3ModCxlLGksITApfSxfdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24odCxlLGkscyl7cz1cImJvb2xlYW5cIj09dHlwZW9mIHM/czppO3ZhciBuPVwic3RyaW5nXCI9PXR5cGVvZiB0fHxudWxsPT09dCxvPXtleHRyYTpuP2U6aSxrZXlzOm4/dDplLGVsZW1lbnQ6bj90aGlzLmVsZW1lbnQ6dCxhZGQ6c307cmV0dXJuIG8uZWxlbWVudC50b2dnbGVDbGFzcyh0aGlzLl9jbGFzc2VzKG8pLHMpLHRoaXN9LF9vbjpmdW5jdGlvbihlLGkscyl7dmFyIG4sbz10aGlzO1wiYm9vbGVhblwiIT10eXBlb2YgZSYmKHM9aSxpPWUsZT0hMSkscz8oaT1uPXQoaSksdGhpcy5iaW5kaW5ncz10aGlzLmJpbmRpbmdzLmFkZChpKSk6KHM9aSxpPXRoaXMuZWxlbWVudCxuPXRoaXMud2lkZ2V0KCkpLHQuZWFjaChzLGZ1bmN0aW9uKHMsYSl7ZnVuY3Rpb24gcigpe3JldHVybiBlfHxvLm9wdGlvbnMuZGlzYWJsZWQhPT0hMCYmIXQodGhpcykuaGFzQ2xhc3MoXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKT8oXCJzdHJpbmdcIj09dHlwZW9mIGE/b1thXTphKS5hcHBseShvLGFyZ3VtZW50cyk6dm9pZCAwfVwic3RyaW5nXCIhPXR5cGVvZiBhJiYoci5ndWlkPWEuZ3VpZD1hLmd1aWR8fHIuZ3VpZHx8dC5ndWlkKyspO3ZhciBoPXMubWF0Y2goL14oW1xcdzotXSopXFxzKiguKikkLyksbD1oWzFdK28uZXZlbnROYW1lc3BhY2UsYz1oWzJdO2M/bi5vbihsLGMscik6aS5vbihsLHIpfSl9LF9vZmY6ZnVuY3Rpb24oZSxpKXtpPShpfHxcIlwiKS5zcGxpdChcIiBcIikuam9pbih0aGlzLmV2ZW50TmFtZXNwYWNlK1wiIFwiKSt0aGlzLmV2ZW50TmFtZXNwYWNlLGUub2ZmKGkpLm9mZihpKSx0aGlzLmJpbmRpbmdzPXQodGhpcy5iaW5kaW5ncy5ub3QoZSkuZ2V0KCkpLHRoaXMuZm9jdXNhYmxlPXQodGhpcy5mb2N1c2FibGUubm90KGUpLmdldCgpKSx0aGlzLmhvdmVyYWJsZT10KHRoaXMuaG92ZXJhYmxlLm5vdChlKS5nZXQoKSl9LF9kZWxheTpmdW5jdGlvbih0LGUpe2Z1bmN0aW9uIGkoKXtyZXR1cm4oXCJzdHJpbmdcIj09dHlwZW9mIHQ/c1t0XTp0KS5hcHBseShzLGFyZ3VtZW50cyl9dmFyIHM9dGhpcztyZXR1cm4gc2V0VGltZW91dChpLGV8fDApfSxfaG92ZXJhYmxlOmZ1bmN0aW9uKGUpe3RoaXMuaG92ZXJhYmxlPXRoaXMuaG92ZXJhYmxlLmFkZChlKSx0aGlzLl9vbihlLHttb3VzZWVudGVyOmZ1bmN0aW9uKGUpe3RoaXMuX2FkZENsYXNzKHQoZS5jdXJyZW50VGFyZ2V0KSxudWxsLFwidWktc3RhdGUtaG92ZXJcIil9LG1vdXNlbGVhdmU6ZnVuY3Rpb24oZSl7dGhpcy5fcmVtb3ZlQ2xhc3ModChlLmN1cnJlbnRUYXJnZXQpLG51bGwsXCJ1aS1zdGF0ZS1ob3ZlclwiKX19KX0sX2ZvY3VzYWJsZTpmdW5jdGlvbihlKXt0aGlzLmZvY3VzYWJsZT10aGlzLmZvY3VzYWJsZS5hZGQoZSksdGhpcy5fb24oZSx7Zm9jdXNpbjpmdW5jdGlvbihlKXt0aGlzLl9hZGRDbGFzcyh0KGUuY3VycmVudFRhcmdldCksbnVsbCxcInVpLXN0YXRlLWZvY3VzXCIpfSxmb2N1c291dDpmdW5jdGlvbihlKXt0aGlzLl9yZW1vdmVDbGFzcyh0KGUuY3VycmVudFRhcmdldCksbnVsbCxcInVpLXN0YXRlLWZvY3VzXCIpfX0pfSxfdHJpZ2dlcjpmdW5jdGlvbihlLGkscyl7dmFyIG4sbyxhPXRoaXMub3B0aW9uc1tlXTtpZihzPXN8fHt9LGk9dC5FdmVudChpKSxpLnR5cGU9KGU9PT10aGlzLndpZGdldEV2ZW50UHJlZml4P2U6dGhpcy53aWRnZXRFdmVudFByZWZpeCtlKS50b0xvd2VyQ2FzZSgpLGkudGFyZ2V0PXRoaXMuZWxlbWVudFswXSxvPWkub3JpZ2luYWxFdmVudClmb3IobiBpbiBvKW4gaW4gaXx8KGlbbl09b1tuXSk7cmV0dXJuIHRoaXMuZWxlbWVudC50cmlnZ2VyKGkscyksISh0LmlzRnVuY3Rpb24oYSkmJmEuYXBwbHkodGhpcy5lbGVtZW50WzBdLFtpXS5jb25jYXQocykpPT09ITF8fGkuaXNEZWZhdWx0UHJldmVudGVkKCkpfX0sdC5lYWNoKHtzaG93OlwiZmFkZUluXCIsaGlkZTpcImZhZGVPdXRcIn0sZnVuY3Rpb24oZSxpKXt0LldpZGdldC5wcm90b3R5cGVbXCJfXCIrZV09ZnVuY3Rpb24ocyxuLG8pe1wic3RyaW5nXCI9PXR5cGVvZiBuJiYobj17ZWZmZWN0Om59KTt2YXIgYSxyPW4/bj09PSEwfHxcIm51bWJlclwiPT10eXBlb2Ygbj9pOm4uZWZmZWN0fHxpOmU7bj1ufHx7fSxcIm51bWJlclwiPT10eXBlb2YgbiYmKG49e2R1cmF0aW9uOm59KSxhPSF0LmlzRW1wdHlPYmplY3Qobiksbi5jb21wbGV0ZT1vLG4uZGVsYXkmJnMuZGVsYXkobi5kZWxheSksYSYmdC5lZmZlY3RzJiZ0LmVmZmVjdHMuZWZmZWN0W3JdP3NbZV0obik6ciE9PWUmJnNbcl0/c1tyXShuLmR1cmF0aW9uLG4uZWFzaW5nLG8pOnMucXVldWUoZnVuY3Rpb24oaSl7dCh0aGlzKVtlXSgpLG8mJm8uY2FsbChzWzBdKSxpKCl9KX19KSx0LndpZGdldCxmdW5jdGlvbigpe2Z1bmN0aW9uIGUodCxlLGkpe3JldHVybltwYXJzZUZsb2F0KHRbMF0pKih1LnRlc3QodFswXSk/ZS8xMDA6MSkscGFyc2VGbG9hdCh0WzFdKSoodS50ZXN0KHRbMV0pP2kvMTAwOjEpXX1mdW5jdGlvbiBpKGUsaSl7cmV0dXJuIHBhcnNlSW50KHQuY3NzKGUsaSksMTApfHwwfWZ1bmN0aW9uIHMoZSl7dmFyIGk9ZVswXTtyZXR1cm4gOT09PWkubm9kZVR5cGU/e3dpZHRoOmUud2lkdGgoKSxoZWlnaHQ6ZS5oZWlnaHQoKSxvZmZzZXQ6e3RvcDowLGxlZnQ6MH19OnQuaXNXaW5kb3coaSk/e3dpZHRoOmUud2lkdGgoKSxoZWlnaHQ6ZS5oZWlnaHQoKSxvZmZzZXQ6e3RvcDplLnNjcm9sbFRvcCgpLGxlZnQ6ZS5zY3JvbGxMZWZ0KCl9fTppLnByZXZlbnREZWZhdWx0P3t3aWR0aDowLGhlaWdodDowLG9mZnNldDp7dG9wOmkucGFnZVksbGVmdDppLnBhZ2VYfX06e3dpZHRoOmUub3V0ZXJXaWR0aCgpLGhlaWdodDplLm91dGVySGVpZ2h0KCksb2Zmc2V0OmUub2Zmc2V0KCl9fXZhciBuLG89TWF0aC5tYXgsYT1NYXRoLmFicyxyPS9sZWZ0fGNlbnRlcnxyaWdodC8saD0vdG9wfGNlbnRlcnxib3R0b20vLGw9L1tcXCtcXC1dXFxkKyhcXC5bXFxkXSspPyU/LyxjPS9eXFx3Ky8sdT0vJSQvLGQ9dC5mbi5wb3NpdGlvbjt0LnBvc2l0aW9uPXtzY3JvbGxiYXJXaWR0aDpmdW5jdGlvbigpe2lmKHZvaWQgMCE9PW4pcmV0dXJuIG47dmFyIGUsaSxzPXQoXCI8ZGl2IHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7b3ZlcmZsb3c6aGlkZGVuOyc+PGRpdiBzdHlsZT0naGVpZ2h0OjEwMHB4O3dpZHRoOmF1dG87Jz48L2Rpdj48L2Rpdj5cIiksbz1zLmNoaWxkcmVuKClbMF07cmV0dXJuIHQoXCJib2R5XCIpLmFwcGVuZChzKSxlPW8ub2Zmc2V0V2lkdGgscy5jc3MoXCJvdmVyZmxvd1wiLFwic2Nyb2xsXCIpLGk9by5vZmZzZXRXaWR0aCxlPT09aSYmKGk9c1swXS5jbGllbnRXaWR0aCkscy5yZW1vdmUoKSxuPWUtaX0sZ2V0U2Nyb2xsSW5mbzpmdW5jdGlvbihlKXt2YXIgaT1lLmlzV2luZG93fHxlLmlzRG9jdW1lbnQ/XCJcIjplLmVsZW1lbnQuY3NzKFwib3ZlcmZsb3cteFwiKSxzPWUuaXNXaW5kb3d8fGUuaXNEb2N1bWVudD9cIlwiOmUuZWxlbWVudC5jc3MoXCJvdmVyZmxvdy15XCIpLG49XCJzY3JvbGxcIj09PWl8fFwiYXV0b1wiPT09aSYmZS53aWR0aDxlLmVsZW1lbnRbMF0uc2Nyb2xsV2lkdGgsbz1cInNjcm9sbFwiPT09c3x8XCJhdXRvXCI9PT1zJiZlLmhlaWdodDxlLmVsZW1lbnRbMF0uc2Nyb2xsSGVpZ2h0O3JldHVybnt3aWR0aDpvP3QucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKTowLGhlaWdodDpuP3QucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKTowfX0sZ2V0V2l0aGluSW5mbzpmdW5jdGlvbihlKXt2YXIgaT10KGV8fHdpbmRvdykscz10LmlzV2luZG93KGlbMF0pLG49ISFpWzBdJiY5PT09aVswXS5ub2RlVHlwZSxvPSFzJiYhbjtyZXR1cm57ZWxlbWVudDppLGlzV2luZG93OnMsaXNEb2N1bWVudDpuLG9mZnNldDpvP3QoZSkub2Zmc2V0KCk6e2xlZnQ6MCx0b3A6MH0sc2Nyb2xsTGVmdDppLnNjcm9sbExlZnQoKSxzY3JvbGxUb3A6aS5zY3JvbGxUb3AoKSx3aWR0aDppLm91dGVyV2lkdGgoKSxoZWlnaHQ6aS5vdXRlckhlaWdodCgpfX19LHQuZm4ucG9zaXRpb249ZnVuY3Rpb24obil7aWYoIW58fCFuLm9mKXJldHVybiBkLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtuPXQuZXh0ZW5kKHt9LG4pO3ZhciB1LHAsZixnLG0sXyx2PXQobi5vZiksYj10LnBvc2l0aW9uLmdldFdpdGhpbkluZm8obi53aXRoaW4pLHk9dC5wb3NpdGlvbi5nZXRTY3JvbGxJbmZvKGIpLHc9KG4uY29sbGlzaW9ufHxcImZsaXBcIikuc3BsaXQoXCIgXCIpLGs9e307cmV0dXJuIF89cyh2KSx2WzBdLnByZXZlbnREZWZhdWx0JiYobi5hdD1cImxlZnQgdG9wXCIpLHA9Xy53aWR0aCxmPV8uaGVpZ2h0LGc9Xy5vZmZzZXQsbT10LmV4dGVuZCh7fSxnKSx0LmVhY2goW1wibXlcIixcImF0XCJdLGZ1bmN0aW9uKCl7dmFyIHQsZSxpPShuW3RoaXNdfHxcIlwiKS5zcGxpdChcIiBcIik7MT09PWkubGVuZ3RoJiYoaT1yLnRlc3QoaVswXSk/aS5jb25jYXQoW1wiY2VudGVyXCJdKTpoLnRlc3QoaVswXSk/W1wiY2VudGVyXCJdLmNvbmNhdChpKTpbXCJjZW50ZXJcIixcImNlbnRlclwiXSksaVswXT1yLnRlc3QoaVswXSk/aVswXTpcImNlbnRlclwiLGlbMV09aC50ZXN0KGlbMV0pP2lbMV06XCJjZW50ZXJcIix0PWwuZXhlYyhpWzBdKSxlPWwuZXhlYyhpWzFdKSxrW3RoaXNdPVt0P3RbMF06MCxlP2VbMF06MF0sblt0aGlzXT1bYy5leGVjKGlbMF0pWzBdLGMuZXhlYyhpWzFdKVswXV19KSwxPT09dy5sZW5ndGgmJih3WzFdPXdbMF0pLFwicmlnaHRcIj09PW4uYXRbMF0/bS5sZWZ0Kz1wOlwiY2VudGVyXCI9PT1uLmF0WzBdJiYobS5sZWZ0Kz1wLzIpLFwiYm90dG9tXCI9PT1uLmF0WzFdP20udG9wKz1mOlwiY2VudGVyXCI9PT1uLmF0WzFdJiYobS50b3ArPWYvMiksdT1lKGsuYXQscCxmKSxtLmxlZnQrPXVbMF0sbS50b3ArPXVbMV0sdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIHMscixoPXQodGhpcyksbD1oLm91dGVyV2lkdGgoKSxjPWgub3V0ZXJIZWlnaHQoKSxkPWkodGhpcyxcIm1hcmdpbkxlZnRcIiksXz1pKHRoaXMsXCJtYXJnaW5Ub3BcIikseD1sK2QraSh0aGlzLFwibWFyZ2luUmlnaHRcIikreS53aWR0aCxDPWMrXytpKHRoaXMsXCJtYXJnaW5Cb3R0b21cIikreS5oZWlnaHQsRD10LmV4dGVuZCh7fSxtKSxJPWUoay5teSxoLm91dGVyV2lkdGgoKSxoLm91dGVySGVpZ2h0KCkpO1wicmlnaHRcIj09PW4ubXlbMF0/RC5sZWZ0LT1sOlwiY2VudGVyXCI9PT1uLm15WzBdJiYoRC5sZWZ0LT1sLzIpLFwiYm90dG9tXCI9PT1uLm15WzFdP0QudG9wLT1jOlwiY2VudGVyXCI9PT1uLm15WzFdJiYoRC50b3AtPWMvMiksRC5sZWZ0Kz1JWzBdLEQudG9wKz1JWzFdLHM9e21hcmdpbkxlZnQ6ZCxtYXJnaW5Ub3A6X30sdC5lYWNoKFtcImxlZnRcIixcInRvcFwiXSxmdW5jdGlvbihlLGkpe3QudWkucG9zaXRpb25bd1tlXV0mJnQudWkucG9zaXRpb25bd1tlXV1baV0oRCx7dGFyZ2V0V2lkdGg6cCx0YXJnZXRIZWlnaHQ6ZixlbGVtV2lkdGg6bCxlbGVtSGVpZ2h0OmMsY29sbGlzaW9uUG9zaXRpb246cyxjb2xsaXNpb25XaWR0aDp4LGNvbGxpc2lvbkhlaWdodDpDLG9mZnNldDpbdVswXStJWzBdLHVbMV0rSVsxXV0sbXk6bi5teSxhdDpuLmF0LHdpdGhpbjpiLGVsZW06aH0pfSksbi51c2luZyYmKHI9ZnVuY3Rpb24odCl7dmFyIGU9Zy5sZWZ0LUQubGVmdCxpPWUrcC1sLHM9Zy50b3AtRC50b3Ascj1zK2YtYyx1PXt0YXJnZXQ6e2VsZW1lbnQ6dixsZWZ0OmcubGVmdCx0b3A6Zy50b3Asd2lkdGg6cCxoZWlnaHQ6Zn0sZWxlbWVudDp7ZWxlbWVudDpoLGxlZnQ6RC5sZWZ0LHRvcDpELnRvcCx3aWR0aDpsLGhlaWdodDpjfSxob3Jpem9udGFsOjA+aT9cImxlZnRcIjplPjA/XCJyaWdodFwiOlwiY2VudGVyXCIsdmVydGljYWw6MD5yP1widG9wXCI6cz4wP1wiYm90dG9tXCI6XCJtaWRkbGVcIn07bD5wJiZwPmEoZStpKSYmKHUuaG9yaXpvbnRhbD1cImNlbnRlclwiKSxjPmYmJmY+YShzK3IpJiYodS52ZXJ0aWNhbD1cIm1pZGRsZVwiKSx1LmltcG9ydGFudD1vKGEoZSksYShpKSk+byhhKHMpLGEocikpP1wiaG9yaXpvbnRhbFwiOlwidmVydGljYWxcIixuLnVzaW5nLmNhbGwodGhpcyx0LHUpfSksaC5vZmZzZXQodC5leHRlbmQoRCx7dXNpbmc6cn0pKX0pfSx0LnVpLnBvc2l0aW9uPXtmaXQ6e2xlZnQ6ZnVuY3Rpb24odCxlKXt2YXIgaSxzPWUud2l0aGluLG49cy5pc1dpbmRvdz9zLnNjcm9sbExlZnQ6cy5vZmZzZXQubGVmdCxhPXMud2lkdGgscj10LmxlZnQtZS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LGg9bi1yLGw9citlLmNvbGxpc2lvbldpZHRoLWEtbjtlLmNvbGxpc2lvbldpZHRoPmE/aD4wJiYwPj1sPyhpPXQubGVmdCtoK2UuY29sbGlzaW9uV2lkdGgtYS1uLHQubGVmdCs9aC1pKTp0LmxlZnQ9bD4wJiYwPj1oP246aD5sP24rYS1lLmNvbGxpc2lvbldpZHRoOm46aD4wP3QubGVmdCs9aDpsPjA/dC5sZWZ0LT1sOnQubGVmdD1vKHQubGVmdC1yLHQubGVmdCl9LHRvcDpmdW5jdGlvbih0LGUpe3ZhciBpLHM9ZS53aXRoaW4sbj1zLmlzV2luZG93P3Muc2Nyb2xsVG9wOnMub2Zmc2V0LnRvcCxhPWUud2l0aGluLmhlaWdodCxyPXQudG9wLWUuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLGg9bi1yLGw9citlLmNvbGxpc2lvbkhlaWdodC1hLW47ZS5jb2xsaXNpb25IZWlnaHQ+YT9oPjAmJjA+PWw/KGk9dC50b3AraCtlLmNvbGxpc2lvbkhlaWdodC1hLW4sdC50b3ArPWgtaSk6dC50b3A9bD4wJiYwPj1oP246aD5sP24rYS1lLmNvbGxpc2lvbkhlaWdodDpuOmg+MD90LnRvcCs9aDpsPjA/dC50b3AtPWw6dC50b3A9byh0LnRvcC1yLHQudG9wKX19LGZsaXA6e2xlZnQ6ZnVuY3Rpb24odCxlKXt2YXIgaSxzLG49ZS53aXRoaW4sbz1uLm9mZnNldC5sZWZ0K24uc2Nyb2xsTGVmdCxyPW4ud2lkdGgsaD1uLmlzV2luZG93P24uc2Nyb2xsTGVmdDpuLm9mZnNldC5sZWZ0LGw9dC5sZWZ0LWUuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCxjPWwtaCx1PWwrZS5jb2xsaXNpb25XaWR0aC1yLWgsZD1cImxlZnRcIj09PWUubXlbMF0/LWUuZWxlbVdpZHRoOlwicmlnaHRcIj09PWUubXlbMF0/ZS5lbGVtV2lkdGg6MCxwPVwibGVmdFwiPT09ZS5hdFswXT9lLnRhcmdldFdpZHRoOlwicmlnaHRcIj09PWUuYXRbMF0/LWUudGFyZ2V0V2lkdGg6MCxmPS0yKmUub2Zmc2V0WzBdOzA+Yz8oaT10LmxlZnQrZCtwK2YrZS5jb2xsaXNpb25XaWR0aC1yLW8sKDA+aXx8YShjKT5pKSYmKHQubGVmdCs9ZCtwK2YpKTp1PjAmJihzPXQubGVmdC1lLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQrZCtwK2YtaCwocz4wfHx1PmEocykpJiYodC5sZWZ0Kz1kK3ArZikpfSx0b3A6ZnVuY3Rpb24odCxlKXt2YXIgaSxzLG49ZS53aXRoaW4sbz1uLm9mZnNldC50b3Arbi5zY3JvbGxUb3Ascj1uLmhlaWdodCxoPW4uaXNXaW5kb3c/bi5zY3JvbGxUb3A6bi5vZmZzZXQudG9wLGw9dC50b3AtZS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsYz1sLWgsdT1sK2UuY29sbGlzaW9uSGVpZ2h0LXItaCxkPVwidG9wXCI9PT1lLm15WzFdLHA9ZD8tZS5lbGVtSGVpZ2h0OlwiYm90dG9tXCI9PT1lLm15WzFdP2UuZWxlbUhlaWdodDowLGY9XCJ0b3BcIj09PWUuYXRbMV0/ZS50YXJnZXRIZWlnaHQ6XCJib3R0b21cIj09PWUuYXRbMV0/LWUudGFyZ2V0SGVpZ2h0OjAsZz0tMiplLm9mZnNldFsxXTswPmM/KHM9dC50b3ArcCtmK2crZS5jb2xsaXNpb25IZWlnaHQtci1vLCgwPnN8fGEoYyk+cykmJih0LnRvcCs9cCtmK2cpKTp1PjAmJihpPXQudG9wLWUuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wK3ArZitnLWgsKGk+MHx8dT5hKGkpKSYmKHQudG9wKz1wK2YrZykpfX0sZmxpcGZpdDp7bGVmdDpmdW5jdGlvbigpe3QudWkucG9zaXRpb24uZmxpcC5sZWZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0LnVpLnBvc2l0aW9uLmZpdC5sZWZ0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sdG9wOmZ1bmN0aW9uKCl7dC51aS5wb3NpdGlvbi5mbGlwLnRvcC5hcHBseSh0aGlzLGFyZ3VtZW50cyksdC51aS5wb3NpdGlvbi5maXQudG9wLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19fX0oKSx0LnVpLnBvc2l0aW9uLHQuZXh0ZW5kKHQuZXhwcltcIjpcIl0se2RhdGE6dC5leHByLmNyZWF0ZVBzZXVkbz90LmV4cHIuY3JlYXRlUHNldWRvKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihpKXtyZXR1cm4hIXQuZGF0YShpLGUpfX0pOmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4hIXQuZGF0YShlLHNbM10pfX0pLHQuZm4uZXh0ZW5kKHtkaXNhYmxlU2VsZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9XCJvbnNlbGVjdHN0YXJ0XCJpbiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpP1wic2VsZWN0c3RhcnRcIjpcIm1vdXNlZG93blwiO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0aGlzLm9uKHQrXCIudWktZGlzYWJsZVNlbGVjdGlvblwiLGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0pfX0oKSxlbmFibGVTZWxlY3Rpb246ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vZmYoXCIudWktZGlzYWJsZVNlbGVjdGlvblwiKX19KTt2YXIgYz1cInVpLWVmZmVjdHMtXCIsdT1cInVpLWVmZmVjdHMtc3R5bGVcIixkPVwidWktZWZmZWN0cy1hbmltYXRlZFwiLHA9dDt0LmVmZmVjdHM9e2VmZmVjdDp7fX0sZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBpKHQsZSxpKXt2YXIgcz11W2UudHlwZV18fHt9O3JldHVybiBudWxsPT10P2l8fCFlLmRlZj9udWxsOmUuZGVmOih0PXMuZmxvb3I/fn50OnBhcnNlRmxvYXQodCksaXNOYU4odCk/ZS5kZWY6cy5tb2Q/KHQrcy5tb2QpJXMubW9kOjA+dD8wOnQ+cy5tYXg/cy5tYXg6dCl9ZnVuY3Rpb24gcyhpKXt2YXIgcz1sKCksbj1zLl9yZ2JhPVtdO3JldHVybiBpPWkudG9Mb3dlckNhc2UoKSxmKGgsZnVuY3Rpb24odCxvKXt2YXIgYSxyPW8ucmUuZXhlYyhpKSxoPXImJm8ucGFyc2UociksbD1vLnNwYWNlfHxcInJnYmFcIjtyZXR1cm4gaD8oYT1zW2xdKGgpLHNbY1tsXS5jYWNoZV09YVtjW2xdLmNhY2hlXSxuPXMuX3JnYmE9YS5fcmdiYSwhMSk6ZX0pLG4ubGVuZ3RoPyhcIjAsMCwwLDBcIj09PW4uam9pbigpJiZ0LmV4dGVuZChuLG8udHJhbnNwYXJlbnQpLHMpOm9baV19ZnVuY3Rpb24gbih0LGUsaSl7cmV0dXJuIGk9KGkrMSklMSwxPjYqaT90KzYqKGUtdCkqaToxPjIqaT9lOjI+MyppP3QrNiooZS10KSooMi8zLWkpOnR9dmFyIG8sYT1cImJhY2tncm91bmRDb2xvciBib3JkZXJCb3R0b21Db2xvciBib3JkZXJMZWZ0Q29sb3IgYm9yZGVyUmlnaHRDb2xvciBib3JkZXJUb3BDb2xvciBjb2xvciBjb2x1bW5SdWxlQ29sb3Igb3V0bGluZUNvbG9yIHRleHREZWNvcmF0aW9uQ29sb3IgdGV4dEVtcGhhc2lzQ29sb3JcIixyPS9eKFtcXC0rXSk9XFxzKihcXGQrXFwuP1xcZCopLyxoPVt7cmU6L3JnYmE/XFwoXFxzKihcXGR7MSwzfSlcXHMqLFxccyooXFxkezEsM30pXFxzKixcXHMqKFxcZHsxLDN9KVxccyooPzosXFxzKihcXGQ/KD86XFwuXFxkKyk/KVxccyopP1xcKS8scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuW3RbMV0sdFsyXSx0WzNdLHRbNF1dfX0se3JlOi9yZ2JhP1xcKFxccyooXFxkKyg/OlxcLlxcZCspPylcXCVcXHMqLFxccyooXFxkKyg/OlxcLlxcZCspPylcXCVcXHMqLFxccyooXFxkKyg/OlxcLlxcZCspPylcXCVcXHMqKD86LFxccyooXFxkPyg/OlxcLlxcZCspPylcXHMqKT9cXCkvLHBhcnNlOmZ1bmN0aW9uKHQpe3JldHVyblsyLjU1KnRbMV0sMi41NSp0WzJdLDIuNTUqdFszXSx0WzRdXX19LHtyZTovIyhbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KS8scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuW3BhcnNlSW50KHRbMV0sMTYpLHBhcnNlSW50KHRbMl0sMTYpLHBhcnNlSW50KHRbM10sMTYpXX19LHtyZTovIyhbYS1mMC05XSkoW2EtZjAtOV0pKFthLWYwLTldKS8scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuW3BhcnNlSW50KHRbMV0rdFsxXSwxNikscGFyc2VJbnQodFsyXSt0WzJdLDE2KSxwYXJzZUludCh0WzNdK3RbM10sMTYpXX19LHtyZTovaHNsYT9cXChcXHMqKFxcZCsoPzpcXC5cXGQrKT8pXFxzKixcXHMqKFxcZCsoPzpcXC5cXGQrKT8pXFwlXFxzKixcXHMqKFxcZCsoPzpcXC5cXGQrKT8pXFwlXFxzKig/OixcXHMqKFxcZD8oPzpcXC5cXGQrKT8pXFxzKik/XFwpLyxzcGFjZTpcImhzbGFcIixwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm5bdFsxXSx0WzJdLzEwMCx0WzNdLzEwMCx0WzRdXX19XSxsPXQuQ29sb3I9ZnVuY3Rpb24oZSxpLHMsbil7cmV0dXJuIG5ldyB0LkNvbG9yLmZuLnBhcnNlKGUsaSxzLG4pfSxjPXtyZ2JhOntwcm9wczp7cmVkOntpZHg6MCx0eXBlOlwiYnl0ZVwifSxncmVlbjp7aWR4OjEsdHlwZTpcImJ5dGVcIn0sYmx1ZTp7aWR4OjIsdHlwZTpcImJ5dGVcIn19fSxoc2xhOntwcm9wczp7aHVlOntpZHg6MCx0eXBlOlwiZGVncmVlc1wifSxzYXR1cmF0aW9uOntpZHg6MSx0eXBlOlwicGVyY2VudFwifSxsaWdodG5lc3M6e2lkeDoyLHR5cGU6XCJwZXJjZW50XCJ9fX19LHU9e1wiYnl0ZVwiOntmbG9vcjohMCxtYXg6MjU1fSxwZXJjZW50OnttYXg6MX0sZGVncmVlczp7bW9kOjM2MCxmbG9vcjohMH19LGQ9bC5zdXBwb3J0PXt9LHA9dChcIjxwPlwiKVswXSxmPXQuZWFjaDtwLnN0eWxlLmNzc1RleHQ9XCJiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMSwxLDEsLjUpXCIsZC5yZ2JhPXAuc3R5bGUuYmFja2dyb3VuZENvbG9yLmluZGV4T2YoXCJyZ2JhXCIpPi0xLGYoYyxmdW5jdGlvbih0LGUpe2UuY2FjaGU9XCJfXCIrdCxlLnByb3BzLmFscGhhPXtpZHg6Myx0eXBlOlwicGVyY2VudFwiLGRlZjoxfX0pLGwuZm49dC5leHRlbmQobC5wcm90b3R5cGUse3BhcnNlOmZ1bmN0aW9uKG4sYSxyLGgpe2lmKG49PT1lKXJldHVybiB0aGlzLl9yZ2JhPVtudWxsLG51bGwsbnVsbCxudWxsXSx0aGlzOyhuLmpxdWVyeXx8bi5ub2RlVHlwZSkmJihuPXQobikuY3NzKGEpLGE9ZSk7dmFyIHU9dGhpcyxkPXQudHlwZShuKSxwPXRoaXMuX3JnYmE9W107cmV0dXJuIGEhPT1lJiYobj1bbixhLHIsaF0sZD1cImFycmF5XCIpLFwic3RyaW5nXCI9PT1kP3RoaXMucGFyc2UocyhuKXx8by5fZGVmYXVsdCk6XCJhcnJheVwiPT09ZD8oZihjLnJnYmEucHJvcHMsZnVuY3Rpb24odCxlKXtwW2UuaWR4XT1pKG5bZS5pZHhdLGUpfSksdGhpcyk6XCJvYmplY3RcIj09PWQ/KG4gaW5zdGFuY2VvZiBsP2YoYyxmdW5jdGlvbih0LGUpe25bZS5jYWNoZV0mJih1W2UuY2FjaGVdPW5bZS5jYWNoZV0uc2xpY2UoKSl9KTpmKGMsZnVuY3Rpb24oZSxzKXt2YXIgbz1zLmNhY2hlO2Yocy5wcm9wcyxmdW5jdGlvbih0LGUpe2lmKCF1W29dJiZzLnRvKXtpZihcImFscGhhXCI9PT10fHxudWxsPT1uW3RdKXJldHVybjt1W29dPXMudG8odS5fcmdiYSl9dVtvXVtlLmlkeF09aShuW3RdLGUsITApfSksdVtvXSYmMD50LmluQXJyYXkobnVsbCx1W29dLnNsaWNlKDAsMykpJiYodVtvXVszXT0xLHMuZnJvbSYmKHUuX3JnYmE9cy5mcm9tKHVbb10pKSl9KSx0aGlzKTplfSxpczpmdW5jdGlvbih0KXt2YXIgaT1sKHQpLHM9ITAsbj10aGlzO3JldHVybiBmKGMsZnVuY3Rpb24odCxvKXt2YXIgYSxyPWlbby5jYWNoZV07cmV0dXJuIHImJihhPW5bby5jYWNoZV18fG8udG8mJm8udG8obi5fcmdiYSl8fFtdLGYoby5wcm9wcyxmdW5jdGlvbih0LGkpe3JldHVybiBudWxsIT1yW2kuaWR4XT9zPXJbaS5pZHhdPT09YVtpLmlkeF06ZX0pKSxzfSksc30sX3NwYWNlOmZ1bmN0aW9uKCl7dmFyIHQ9W10sZT10aGlzO3JldHVybiBmKGMsZnVuY3Rpb24oaSxzKXtlW3MuY2FjaGVdJiZ0LnB1c2goaSl9KSx0LnBvcCgpfSx0cmFuc2l0aW9uOmZ1bmN0aW9uKHQsZSl7dmFyIHM9bCh0KSxuPXMuX3NwYWNlKCksbz1jW25dLGE9MD09PXRoaXMuYWxwaGEoKT9sKFwidHJhbnNwYXJlbnRcIik6dGhpcyxyPWFbby5jYWNoZV18fG8udG8oYS5fcmdiYSksaD1yLnNsaWNlKCk7cmV0dXJuIHM9c1tvLmNhY2hlXSxmKG8ucHJvcHMsZnVuY3Rpb24odCxuKXt2YXIgbz1uLmlkeCxhPXJbb10sbD1zW29dLGM9dVtuLnR5cGVdfHx7fTtudWxsIT09bCYmKG51bGw9PT1hP2hbb109bDooYy5tb2QmJihsLWE+Yy5tb2QvMj9hKz1jLm1vZDphLWw+Yy5tb2QvMiYmKGEtPWMubW9kKSksaFtvXT1pKChsLWEpKmUrYSxuKSkpfSksdGhpc1tuXShoKX0sYmxlbmQ6ZnVuY3Rpb24oZSl7aWYoMT09PXRoaXMuX3JnYmFbM10pcmV0dXJuIHRoaXM7dmFyIGk9dGhpcy5fcmdiYS5zbGljZSgpLHM9aS5wb3AoKSxuPWwoZSkuX3JnYmE7cmV0dXJuIGwodC5tYXAoaSxmdW5jdGlvbih0LGUpe3JldHVybigxLXMpKm5bZV0rcyp0fSkpfSx0b1JnYmFTdHJpbmc6ZnVuY3Rpb24oKXt2YXIgZT1cInJnYmEoXCIsaT10Lm1hcCh0aGlzLl9yZ2JhLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGw9PXQ/ZT4yPzE6MDp0fSk7cmV0dXJuIDE9PT1pWzNdJiYoaS5wb3AoKSxlPVwicmdiKFwiKSxlK2kuam9pbigpK1wiKVwifSx0b0hzbGFTdHJpbmc6ZnVuY3Rpb24oKXt2YXIgZT1cImhzbGEoXCIsaT10Lm1hcCh0aGlzLmhzbGEoKSxmdW5jdGlvbih0LGUpe3JldHVybiBudWxsPT10JiYodD1lPjI/MTowKSxlJiYzPmUmJih0PU1hdGgucm91bmQoMTAwKnQpK1wiJVwiKSx0fSk7cmV0dXJuIDE9PT1pWzNdJiYoaS5wb3AoKSxlPVwiaHNsKFwiKSxlK2kuam9pbigpK1wiKVwifSx0b0hleFN0cmluZzpmdW5jdGlvbihlKXt2YXIgaT10aGlzLl9yZ2JhLnNsaWNlKCkscz1pLnBvcCgpO3JldHVybiBlJiZpLnB1c2gofn4oMjU1KnMpKSxcIiNcIit0Lm1hcChpLGZ1bmN0aW9uKHQpe3JldHVybiB0PSh0fHwwKS50b1N0cmluZygxNiksMT09PXQubGVuZ3RoP1wiMFwiK3Q6dH0pLmpvaW4oXCJcIil9LHRvU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLl9yZ2JhWzNdP1widHJhbnNwYXJlbnRcIjp0aGlzLnRvUmdiYVN0cmluZygpfX0pLGwuZm4ucGFyc2UucHJvdG90eXBlPWwuZm4sYy5oc2xhLnRvPWZ1bmN0aW9uKHQpe2lmKG51bGw9PXRbMF18fG51bGw9PXRbMV18fG51bGw9PXRbMl0pcmV0dXJuW251bGwsbnVsbCxudWxsLHRbM11dO3ZhciBlLGkscz10WzBdLzI1NSxuPXRbMV0vMjU1LG89dFsyXS8yNTUsYT10WzNdLHI9TWF0aC5tYXgocyxuLG8pLGg9TWF0aC5taW4ocyxuLG8pLGw9ci1oLGM9citoLHU9LjUqYztyZXR1cm4gZT1oPT09cj8wOnM9PT1yPzYwKihuLW8pL2wrMzYwOm49PT1yPzYwKihvLXMpL2wrMTIwOjYwKihzLW4pL2wrMjQwLGk9MD09PWw/MDouNT49dT9sL2M6bC8oMi1jKSxbTWF0aC5yb3VuZChlKSUzNjAsaSx1LG51bGw9PWE/MTphXX0sYy5oc2xhLmZyb209ZnVuY3Rpb24odCl7aWYobnVsbD09dFswXXx8bnVsbD09dFsxXXx8bnVsbD09dFsyXSlyZXR1cm5bbnVsbCxudWxsLG51bGwsdFszXV07dmFyIGU9dFswXS8zNjAsaT10WzFdLHM9dFsyXSxvPXRbM10sYT0uNT49cz9zKigxK2kpOnMraS1zKmkscj0yKnMtYTtyZXR1cm5bTWF0aC5yb3VuZCgyNTUqbihyLGEsZSsxLzMpKSxNYXRoLnJvdW5kKDI1NSpuKHIsYSxlKSksTWF0aC5yb3VuZCgyNTUqbihyLGEsZS0xLzMpKSxvXX0sZihjLGZ1bmN0aW9uKHMsbil7dmFyIG89bi5wcm9wcyxhPW4uY2FjaGUsaD1uLnRvLGM9bi5mcm9tO2wuZm5bc109ZnVuY3Rpb24ocyl7aWYoaCYmIXRoaXNbYV0mJih0aGlzW2FdPWgodGhpcy5fcmdiYSkpLHM9PT1lKXJldHVybiB0aGlzW2FdLnNsaWNlKCk7dmFyIG4scj10LnR5cGUocyksdT1cImFycmF5XCI9PT1yfHxcIm9iamVjdFwiPT09cj9zOmFyZ3VtZW50cyxkPXRoaXNbYV0uc2xpY2UoKTtyZXR1cm4gZihvLGZ1bmN0aW9uKHQsZSl7dmFyIHM9dVtcIm9iamVjdFwiPT09cj90OmUuaWR4XTtudWxsPT1zJiYocz1kW2UuaWR4XSksZFtlLmlkeF09aShzLGUpfSksYz8obj1sKGMoZCkpLG5bYV09ZCxuKTpsKGQpfSxmKG8sZnVuY3Rpb24oZSxpKXtsLmZuW2VdfHwobC5mbltlXT1mdW5jdGlvbihuKXt2YXIgbyxhPXQudHlwZShuKSxoPVwiYWxwaGFcIj09PWU/dGhpcy5faHNsYT9cImhzbGFcIjpcInJnYmFcIjpzLGw9dGhpc1toXSgpLGM9bFtpLmlkeF07cmV0dXJuXCJ1bmRlZmluZWRcIj09PWE/YzooXCJmdW5jdGlvblwiPT09YSYmKG49bi5jYWxsKHRoaXMsYyksYT10LnR5cGUobikpLG51bGw9PW4mJmkuZW1wdHk/dGhpczooXCJzdHJpbmdcIj09PWEmJihvPXIuZXhlYyhuKSxvJiYobj1jK3BhcnNlRmxvYXQob1syXSkqKFwiK1wiPT09b1sxXT8xOi0xKSkpLGxbaS5pZHhdPW4sdGhpc1toXShsKSkpfSl9KX0pLGwuaG9vaz1mdW5jdGlvbihlKXt2YXIgaT1lLnNwbGl0KFwiIFwiKTtmKGksZnVuY3Rpb24oZSxpKXt0LmNzc0hvb2tzW2ldPXtzZXQ6ZnVuY3Rpb24oZSxuKXt2YXIgbyxhLHI9XCJcIjtpZihcInRyYW5zcGFyZW50XCIhPT1uJiYoXCJzdHJpbmdcIiE9PXQudHlwZShuKXx8KG89cyhuKSkpKXtpZihuPWwob3x8biksIWQucmdiYSYmMSE9PW4uX3JnYmFbM10pe2ZvcihhPVwiYmFja2dyb3VuZENvbG9yXCI9PT1pP2UucGFyZW50Tm9kZTplOyhcIlwiPT09cnx8XCJ0cmFuc3BhcmVudFwiPT09cikmJmEmJmEuc3R5bGU7KXRyeXtyPXQuY3NzKGEsXCJiYWNrZ3JvdW5kQ29sb3JcIiksYT1hLnBhcmVudE5vZGV9Y2F0Y2goaCl7fW49bi5ibGVuZChyJiZcInRyYW5zcGFyZW50XCIhPT1yP3I6XCJfZGVmYXVsdFwiKX1uPW4udG9SZ2JhU3RyaW5nKCl9dHJ5e2Uuc3R5bGVbaV09bn1jYXRjaChoKXt9fX0sdC5meC5zdGVwW2ldPWZ1bmN0aW9uKGUpe2UuY29sb3JJbml0fHwoZS5zdGFydD1sKGUuZWxlbSxpKSxlLmVuZD1sKGUuZW5kKSxlLmNvbG9ySW5pdD0hMCksdC5jc3NIb29rc1tpXS5zZXQoZS5lbGVtLGUuc3RhcnQudHJhbnNpdGlvbihlLmVuZCxlLnBvcykpfX0pfSxsLmhvb2soYSksdC5jc3NIb29rcy5ib3JkZXJDb2xvcj17ZXhwYW5kOmZ1bmN0aW9uKHQpe3ZhciBlPXt9O3JldHVybiBmKFtcIlRvcFwiLFwiUmlnaHRcIixcIkJvdHRvbVwiLFwiTGVmdFwiXSxmdW5jdGlvbihpLHMpe2VbXCJib3JkZXJcIitzK1wiQ29sb3JcIl09dH0pLGV9fSxvPXQuQ29sb3IubmFtZXM9e2FxdWE6XCIjMDBmZmZmXCIsYmxhY2s6XCIjMDAwMDAwXCIsYmx1ZTpcIiMwMDAwZmZcIixmdWNoc2lhOlwiI2ZmMDBmZlwiLGdyYXk6XCIjODA4MDgwXCIsZ3JlZW46XCIjMDA4MDAwXCIsbGltZTpcIiMwMGZmMDBcIixtYXJvb246XCIjODAwMDAwXCIsbmF2eTpcIiMwMDAwODBcIixvbGl2ZTpcIiM4MDgwMDBcIixwdXJwbGU6XCIjODAwMDgwXCIscmVkOlwiI2ZmMDAwMFwiLHNpbHZlcjpcIiNjMGMwYzBcIix0ZWFsOlwiIzAwODA4MFwiLHdoaXRlOlwiI2ZmZmZmZlwiLHllbGxvdzpcIiNmZmZmMDBcIix0cmFuc3BhcmVudDpbbnVsbCxudWxsLG51bGwsMF0sX2RlZmF1bHQ6XCIjZmZmZmZmXCJ9fShwKSxmdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIGkscyxuPWUub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldz9lLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZShlLG51bGwpOmUuY3VycmVudFN0eWxlLG89e307aWYobiYmbi5sZW5ndGgmJm5bMF0mJm5bblswXV0pZm9yKHM9bi5sZW5ndGg7cy0tOylpPW5bc10sXCJzdHJpbmdcIj09dHlwZW9mIG5baV0mJihvW3QuY2FtZWxDYXNlKGkpXT1uW2ldKTtlbHNlIGZvcihpIGluIG4pXCJzdHJpbmdcIj09dHlwZW9mIG5baV0mJihvW2ldPW5baV0pO3JldHVybiBvfWZ1bmN0aW9uIGkoZSxpKXt2YXIgcyxvLGE9e307Zm9yKHMgaW4gaSlvPWlbc10sZVtzXSE9PW8mJihuW3NdfHwodC5meC5zdGVwW3NdfHwhaXNOYU4ocGFyc2VGbG9hdChvKSkpJiYoYVtzXT1vKSk7cmV0dXJuIGF9dmFyIHM9W1wiYWRkXCIsXCJyZW1vdmVcIixcInRvZ2dsZVwiXSxuPXtib3JkZXI6MSxib3JkZXJCb3R0b206MSxib3JkZXJDb2xvcjoxLGJvcmRlckxlZnQ6MSxib3JkZXJSaWdodDoxLGJvcmRlclRvcDoxLGJvcmRlcldpZHRoOjEsbWFyZ2luOjEscGFkZGluZzoxfTt0LmVhY2goW1wiYm9yZGVyTGVmdFN0eWxlXCIsXCJib3JkZXJSaWdodFN0eWxlXCIsXCJib3JkZXJCb3R0b21TdHlsZVwiLFwiYm9yZGVyVG9wU3R5bGVcIl0sZnVuY3Rpb24oZSxpKXt0LmZ4LnN0ZXBbaV09ZnVuY3Rpb24odCl7KFwibm9uZVwiIT09dC5lbmQmJiF0LnNldEF0dHJ8fDE9PT10LnBvcyYmIXQuc2V0QXR0cikmJihwLnN0eWxlKHQuZWxlbSxpLHQuZW5kKSx0LnNldEF0dHI9ITApfX0pLHQuZm4uYWRkQmFja3x8KHQuZm4uYWRkQmFjaz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hZGQobnVsbD09dD90aGlzLnByZXZPYmplY3Q6dGhpcy5wcmV2T2JqZWN0LmZpbHRlcih0KSl9KSx0LmVmZmVjdHMuYW5pbWF0ZUNsYXNzPWZ1bmN0aW9uKG4sbyxhLHIpe3ZhciBoPXQuc3BlZWQobyxhLHIpO3JldHVybiB0aGlzLnF1ZXVlKGZ1bmN0aW9uKCl7dmFyIG8sYT10KHRoaXMpLHI9YS5hdHRyKFwiY2xhc3NcIil8fFwiXCIsbD1oLmNoaWxkcmVuP2EuZmluZChcIipcIikuYWRkQmFjaygpOmE7bD1sLm1hcChmdW5jdGlvbigpe3ZhciBpPXQodGhpcyk7cmV0dXJue2VsOmksc3RhcnQ6ZSh0aGlzKX19KSxvPWZ1bmN0aW9uKCl7dC5lYWNoKHMsZnVuY3Rpb24odCxlKXtuW2VdJiZhW2UrXCJDbGFzc1wiXShuW2VdKX0pfSxvKCksbD1sLm1hcChmdW5jdGlvbigpe3JldHVybiB0aGlzLmVuZD1lKHRoaXMuZWxbMF0pLHRoaXMuZGlmZj1pKHRoaXMuc3RhcnQsdGhpcy5lbmQpLHRoaXN9KSxhLmF0dHIoXCJjbGFzc1wiLHIpLGw9bC5tYXAoZnVuY3Rpb24oKXt2YXIgZT10aGlzLGk9dC5EZWZlcnJlZCgpLHM9dC5leHRlbmQoe30saCx7cXVldWU6ITEsY29tcGxldGU6ZnVuY3Rpb24oKXtpLnJlc29sdmUoZSl9fSk7cmV0dXJuIHRoaXMuZWwuYW5pbWF0ZSh0aGlzLmRpZmYscyksaS5wcm9taXNlKCl9KSx0LndoZW4uYXBwbHkodCxsLmdldCgpKS5kb25lKGZ1bmN0aW9uKCl7bygpLHQuZWFjaChhcmd1bWVudHMsZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsO3QuZWFjaCh0aGlzLmRpZmYsZnVuY3Rpb24odCl7ZS5jc3ModCxcIlwiKX0pfSksaC5jb21wbGV0ZS5jYWxsKGFbMF0pfSl9KX0sdC5mbi5leHRlbmQoe2FkZENsYXNzOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihpLHMsbixvKXtyZXR1cm4gcz90LmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwodGhpcyx7YWRkOml9LHMsbixvKTplLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19KHQuZm4uYWRkQ2xhc3MpLHJlbW92ZUNsYXNzOmZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihpLHMsbixvKXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD4xP3QuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCh0aGlzLHtyZW1vdmU6aX0scyxuLG8pOmUuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0odC5mbi5yZW1vdmVDbGFzcyksdG9nZ2xlQ2xhc3M6ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKGkscyxuLG8sYSl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiBzfHx2b2lkIDA9PT1zP24/dC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKHRoaXMscz97YWRkOml9OntyZW1vdmU6aX0sbixvLGEpOmUuYXBwbHkodGhpcyxhcmd1bWVudHMpOnQuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCh0aGlzLHt0b2dnbGU6aX0scyxuLG8pfX0odC5mbi50b2dnbGVDbGFzcyksc3dpdGNoQ2xhc3M6ZnVuY3Rpb24oZSxpLHMsbixvKXtyZXR1cm4gdC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKHRoaXMse2FkZDppLHJlbW92ZTplfSxzLG4sbyl9fSl9KCksZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsaSxzLG4pe3JldHVybiB0LmlzUGxhaW5PYmplY3QoZSkmJihpPWUsZT1lLmVmZmVjdCksZT17ZWZmZWN0OmV9LG51bGw9PWkmJihpPXt9KSx0LmlzRnVuY3Rpb24oaSkmJihuPWkscz1udWxsLGk9e30pLChcIm51bWJlclwiPT10eXBlb2YgaXx8dC5meC5zcGVlZHNbaV0pJiYobj1zLHM9aSxpPXt9KSx0LmlzRnVuY3Rpb24ocykmJihuPXMscz1udWxsKSxpJiZ0LmV4dGVuZChlLGkpLHM9c3x8aS5kdXJhdGlvbixlLmR1cmF0aW9uPXQuZngub2ZmPzA6XCJudW1iZXJcIj09dHlwZW9mIHM/czpzIGluIHQuZnguc3BlZWRzP3QuZnguc3BlZWRzW3NdOnQuZnguc3BlZWRzLl9kZWZhdWx0LGUuY29tcGxldGU9bnx8aS5jb21wbGV0ZSxlfWZ1bmN0aW9uIGkoZSl7cmV0dXJuIWV8fFwibnVtYmVyXCI9PXR5cGVvZiBlfHx0LmZ4LnNwZWVkc1tlXT8hMDpcInN0cmluZ1wiIT10eXBlb2YgZXx8dC5lZmZlY3RzLmVmZmVjdFtlXT90LmlzRnVuY3Rpb24oZSk/ITA6XCJvYmplY3RcIiE9dHlwZW9mIGV8fGUuZWZmZWN0PyExOiEwOiEwfWZ1bmN0aW9uIHModCxlKXt2YXIgaT1lLm91dGVyV2lkdGgoKSxzPWUub3V0ZXJIZWlnaHQoKSxuPS9ecmVjdFxcKCgtP1xcZCpcXC4/XFxkKnB4fC0/XFxkKyV8YXV0byksP1xccyooLT9cXGQqXFwuP1xcZCpweHwtP1xcZCslfGF1dG8pLD9cXHMqKC0/XFxkKlxcLj9cXGQqcHh8LT9cXGQrJXxhdXRvKSw/XFxzKigtP1xcZCpcXC4/XFxkKnB4fC0/XFxkKyV8YXV0bylcXCkkLyxvPW4uZXhlYyh0KXx8W1wiXCIsMCxpLHMsMF07cmV0dXJue3RvcDpwYXJzZUZsb2F0KG9bMV0pfHwwLHJpZ2h0OlwiYXV0b1wiPT09b1syXT9pOnBhcnNlRmxvYXQob1syXSksYm90dG9tOlwiYXV0b1wiPT09b1szXT9zOnBhcnNlRmxvYXQob1szXSksbGVmdDpwYXJzZUZsb2F0KG9bNF0pfHwwfX10LmV4cHImJnQuZXhwci5maWx0ZXJzJiZ0LmV4cHIuZmlsdGVycy5hbmltYXRlZCYmKHQuZXhwci5maWx0ZXJzLmFuaW1hdGVkPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihpKXtyZXR1cm4hIXQoaSkuZGF0YShkKXx8ZShpKX19KHQuZXhwci5maWx0ZXJzLmFuaW1hdGVkKSksdC51aUJhY2tDb21wYXQhPT0hMSYmdC5leHRlbmQodC5lZmZlY3RzLHtzYXZlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpPTAscz1lLmxlbmd0aDtzPmk7aSsrKW51bGwhPT1lW2ldJiZ0LmRhdGEoYytlW2ldLHRbMF0uc3R5bGVbZVtpXV0pfSxyZXN0b3JlOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBpLHM9MCxuPWUubGVuZ3RoO24+cztzKyspbnVsbCE9PWVbc10mJihpPXQuZGF0YShjK2Vbc10pLHQuY3NzKGVbc10saSkpfSxzZXRNb2RlOmZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJ0b2dnbGVcIj09PWUmJihlPXQuaXMoXCI6aGlkZGVuXCIpP1wic2hvd1wiOlwiaGlkZVwiKSxlfSxjcmVhdGVXcmFwcGVyOmZ1bmN0aW9uKGUpe2lmKGUucGFyZW50KCkuaXMoXCIudWktZWZmZWN0cy13cmFwcGVyXCIpKXJldHVybiBlLnBhcmVudCgpO3ZhciBpPXt3aWR0aDplLm91dGVyV2lkdGgoITApLGhlaWdodDplLm91dGVySGVpZ2h0KCEwKSxcImZsb2F0XCI6ZS5jc3MoXCJmbG9hdFwiKX0scz10KFwiPGRpdj48L2Rpdj5cIikuYWRkQ2xhc3MoXCJ1aS1lZmZlY3RzLXdyYXBwZXJcIikuY3NzKHtmb250U2l6ZTpcIjEwMCVcIixiYWNrZ3JvdW5kOlwidHJhbnNwYXJlbnRcIixib3JkZXI6XCJub25lXCIsbWFyZ2luOjAscGFkZGluZzowfSksbj17d2lkdGg6ZS53aWR0aCgpLGhlaWdodDplLmhlaWdodCgpfSxvPWRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7dHJ5e28uaWR9Y2F0Y2goYSl7bz1kb2N1bWVudC5ib2R5fXJldHVybiBlLndyYXAocyksKGVbMF09PT1vfHx0LmNvbnRhaW5zKGVbMF0sbykpJiZ0KG8pLnRyaWdnZXIoXCJmb2N1c1wiKSxzPWUucGFyZW50KCksXCJzdGF0aWNcIj09PWUuY3NzKFwicG9zaXRpb25cIik/KHMuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCJ9KSxlLmNzcyh7cG9zaXRpb246XCJyZWxhdGl2ZVwifSkpOih0LmV4dGVuZChpLHtwb3NpdGlvbjplLmNzcyhcInBvc2l0aW9uXCIpLHpJbmRleDplLmNzcyhcInotaW5kZXhcIil9KSx0LmVhY2goW1widG9wXCIsXCJsZWZ0XCIsXCJib3R0b21cIixcInJpZ2h0XCJdLGZ1bmN0aW9uKHQscyl7aVtzXT1lLmNzcyhzKSxpc05hTihwYXJzZUludChpW3NdLDEwKSkmJihpW3NdPVwiYXV0b1wiKX0pLGUuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIsdG9wOjAsbGVmdDowLHJpZ2h0OlwiYXV0b1wiLGJvdHRvbTpcImF1dG9cIn0pKSxlLmNzcyhuKSxzLmNzcyhpKS5zaG93KCl9LHJlbW92ZVdyYXBwZXI6ZnVuY3Rpb24oZSl7dmFyIGk9ZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtyZXR1cm4gZS5wYXJlbnQoKS5pcyhcIi51aS1lZmZlY3RzLXdyYXBwZXJcIikmJihlLnBhcmVudCgpLnJlcGxhY2VXaXRoKGUpLChlWzBdPT09aXx8dC5jb250YWlucyhlWzBdLGkpKSYmdChpKS50cmlnZ2VyKFwiZm9jdXNcIikpLGV9fSksdC5leHRlbmQodC5lZmZlY3RzLHt2ZXJzaW9uOlwiMS4xMi4xXCIsZGVmaW5lOmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4gc3x8KHM9aSxpPVwiZWZmZWN0XCIpLHQuZWZmZWN0cy5lZmZlY3RbZV09cyx0LmVmZmVjdHMuZWZmZWN0W2VdLm1vZGU9aSxzfSxzY2FsZWREaW1lbnNpb25zOmZ1bmN0aW9uKHQsZSxpKXtpZigwPT09ZSlyZXR1cm57aGVpZ2h0OjAsd2lkdGg6MCxvdXRlckhlaWdodDowLG91dGVyV2lkdGg6MH07dmFyIHM9XCJob3Jpem9udGFsXCIhPT1pPyhlfHwxMDApLzEwMDoxLG49XCJ2ZXJ0aWNhbFwiIT09aT8oZXx8MTAwKS8xMDA6MTtyZXR1cm57aGVpZ2h0OnQuaGVpZ2h0KCkqbix3aWR0aDp0LndpZHRoKCkqcyxvdXRlckhlaWdodDp0Lm91dGVySGVpZ2h0KCkqbixvdXRlcldpZHRoOnQub3V0ZXJXaWR0aCgpKnN9fSxjbGlwVG9Cb3g6ZnVuY3Rpb24odCl7cmV0dXJue3dpZHRoOnQuY2xpcC5yaWdodC10LmNsaXAubGVmdCxoZWlnaHQ6dC5jbGlwLmJvdHRvbS10LmNsaXAudG9wLGxlZnQ6dC5jbGlwLmxlZnQsdG9wOnQuY2xpcC50b3B9fSx1bnNoaWZ0OmZ1bmN0aW9uKHQsZSxpKXt2YXIgcz10LnF1ZXVlKCk7ZT4xJiZzLnNwbGljZS5hcHBseShzLFsxLDBdLmNvbmNhdChzLnNwbGljZShlLGkpKSksdC5kZXF1ZXVlKCl9LHNhdmVTdHlsZTpmdW5jdGlvbih0KXt0LmRhdGEodSx0WzBdLnN0eWxlLmNzc1RleHQpfSxyZXN0b3JlU3R5bGU6ZnVuY3Rpb24odCl7dFswXS5zdHlsZS5jc3NUZXh0PXQuZGF0YSh1KXx8XCJcIix0LnJlbW92ZURhdGEodSl9LG1vZGU6ZnVuY3Rpb24odCxlKXt2YXIgaT10LmlzKFwiOmhpZGRlblwiKTtyZXR1cm5cInRvZ2dsZVwiPT09ZSYmKGU9aT9cInNob3dcIjpcImhpZGVcIiksKGk/XCJoaWRlXCI9PT1lOlwic2hvd1wiPT09ZSkmJihlPVwibm9uZVwiKSxlfSxnZXRCYXNlbGluZTpmdW5jdGlvbih0LGUpe3ZhciBpLHM7c3dpdGNoKHRbMF0pe2Nhc2VcInRvcFwiOmk9MDticmVhaztjYXNlXCJtaWRkbGVcIjppPS41O2JyZWFrO2Nhc2VcImJvdHRvbVwiOmk9MTticmVhaztkZWZhdWx0Omk9dFswXS9lLmhlaWdodH1zd2l0Y2godFsxXSl7Y2FzZVwibGVmdFwiOnM9MDticmVhaztjYXNlXCJjZW50ZXJcIjpzPS41O2JyZWFrO2Nhc2VcInJpZ2h0XCI6cz0xO2JyZWFrO2RlZmF1bHQ6cz10WzFdL2Uud2lkdGh9cmV0dXJue3g6cyx5Oml9fSxjcmVhdGVQbGFjZWhvbGRlcjpmdW5jdGlvbihlKXt2YXIgaSxzPWUuY3NzKFwicG9zaXRpb25cIiksbj1lLnBvc2l0aW9uKCk7cmV0dXJuIGUuY3NzKHttYXJnaW5Ub3A6ZS5jc3MoXCJtYXJnaW5Ub3BcIiksbWFyZ2luQm90dG9tOmUuY3NzKFwibWFyZ2luQm90dG9tXCIpLG1hcmdpbkxlZnQ6ZS5jc3MoXCJtYXJnaW5MZWZ0XCIpLG1hcmdpblJpZ2h0OmUuY3NzKFwibWFyZ2luUmlnaHRcIil9KS5vdXRlcldpZHRoKGUub3V0ZXJXaWR0aCgpKS5vdXRlckhlaWdodChlLm91dGVySGVpZ2h0KCkpLC9eKHN0YXRpY3xyZWxhdGl2ZSkvLnRlc3QocykmJihzPVwiYWJzb2x1dGVcIixpPXQoXCI8XCIrZVswXS5ub2RlTmFtZStcIj5cIikuaW5zZXJ0QWZ0ZXIoZSkuY3NzKHtkaXNwbGF5Oi9eKGlubGluZXxydWJ5KS8udGVzdChlLmNzcyhcImRpc3BsYXlcIikpP1wiaW5saW5lLWJsb2NrXCI6XCJibG9ja1wiLHZpc2liaWxpdHk6XCJoaWRkZW5cIixtYXJnaW5Ub3A6ZS5jc3MoXCJtYXJnaW5Ub3BcIiksbWFyZ2luQm90dG9tOmUuY3NzKFwibWFyZ2luQm90dG9tXCIpLG1hcmdpbkxlZnQ6ZS5jc3MoXCJtYXJnaW5MZWZ0XCIpLG1hcmdpblJpZ2h0OmUuY3NzKFwibWFyZ2luUmlnaHRcIiksXCJmbG9hdFwiOmUuY3NzKFwiZmxvYXRcIil9KS5vdXRlcldpZHRoKGUub3V0ZXJXaWR0aCgpKS5vdXRlckhlaWdodChlLm91dGVySGVpZ2h0KCkpLmFkZENsYXNzKFwidWktZWZmZWN0cy1wbGFjZWhvbGRlclwiKSxlLmRhdGEoYytcInBsYWNlaG9sZGVyXCIsaSkpLGUuY3NzKHtwb3NpdGlvbjpzLGxlZnQ6bi5sZWZ0LHRvcDpuLnRvcH0pLGl9LHJlbW92ZVBsYWNlaG9sZGVyOmZ1bmN0aW9uKHQpe3ZhciBlPWMrXCJwbGFjZWhvbGRlclwiLGk9dC5kYXRhKGUpO2kmJihpLnJlbW92ZSgpLHQucmVtb3ZlRGF0YShlKSl9LGNsZWFuVXA6ZnVuY3Rpb24oZSl7dC5lZmZlY3RzLnJlc3RvcmVTdHlsZShlKSx0LmVmZmVjdHMucmVtb3ZlUGxhY2Vob2xkZXIoZSl9LHNldFRyYW5zaXRpb246ZnVuY3Rpb24oZSxpLHMsbil7cmV0dXJuIG49bnx8e30sdC5lYWNoKGksZnVuY3Rpb24odCxpKXt2YXIgbz1lLmNzc1VuaXQoaSk7b1swXT4wJiYobltpXT1vWzBdKnMrb1sxXSl9KSxufX0pLHQuZm4uZXh0ZW5kKHtlZmZlY3Q6ZnVuY3Rpb24oKXtmdW5jdGlvbiBpKGUpe2Z1bmN0aW9uIGkoKXtyLnJlbW92ZURhdGEoZCksdC5lZmZlY3RzLmNsZWFuVXAociksXCJoaWRlXCI9PT1zLm1vZGUmJnIuaGlkZSgpLGEoKX1mdW5jdGlvbiBhKCl7dC5pc0Z1bmN0aW9uKGgpJiZoLmNhbGwoclswXSksdC5pc0Z1bmN0aW9uKGUpJiZlKCl9dmFyIHI9dCh0aGlzKTtzLm1vZGU9Yy5zaGlmdCgpLHQudWlCYWNrQ29tcGF0PT09ITF8fG8/XCJub25lXCI9PT1zLm1vZGU/KHJbbF0oKSxhKCkpOm4uY2FsbChyWzBdLHMsaSk6KHIuaXMoXCI6aGlkZGVuXCIpP1wiaGlkZVwiPT09bDpcInNob3dcIj09PWwpPyhyW2xdKCksYSgpKTpuLmNhbGwoclswXSxzLGEpfXZhciBzPWUuYXBwbHkodGhpcyxhcmd1bWVudHMpLG49dC5lZmZlY3RzLmVmZmVjdFtzLmVmZmVjdF0sbz1uLm1vZGUsYT1zLnF1ZXVlLHI9YXx8XCJmeFwiLGg9cy5jb21wbGV0ZSxsPXMubW9kZSxjPVtdLHU9ZnVuY3Rpb24oZSl7dmFyIGk9dCh0aGlzKSxzPXQuZWZmZWN0cy5tb2RlKGksbCl8fG87aS5kYXRhKGQsITApLGMucHVzaChzKSxvJiYoXCJzaG93XCI9PT1zfHxzPT09byYmXCJoaWRlXCI9PT1zKSYmaS5zaG93KCksbyYmXCJub25lXCI9PT1zfHx0LmVmZmVjdHMuc2F2ZVN0eWxlKGkpLHQuaXNGdW5jdGlvbihlKSYmZSgpfTtyZXR1cm4gdC5meC5vZmZ8fCFuP2w/dGhpc1tsXShzLmR1cmF0aW9uLGgpOnRoaXMuZWFjaChmdW5jdGlvbigpe2gmJmguY2FsbCh0aGlzKX0pOmE9PT0hMT90aGlzLmVhY2godSkuZWFjaChpKTp0aGlzLnF1ZXVlKHIsdSkucXVldWUocixpKX0sc2hvdzpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24ocyl7aWYoaShzKSlyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIG49ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIG4ubW9kZT1cInNob3dcIix0aGlzLmVmZmVjdC5jYWxsKHRoaXMsbilcbn19KHQuZm4uc2hvdyksaGlkZTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24ocyl7aWYoaShzKSlyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dmFyIG49ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIG4ubW9kZT1cImhpZGVcIix0aGlzLmVmZmVjdC5jYWxsKHRoaXMsbil9fSh0LmZuLmhpZGUpLHRvZ2dsZTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24ocyl7aWYoaShzKXx8XCJib29sZWFuXCI9PXR5cGVvZiBzKXJldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKTt2YXIgbj1lLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gbi5tb2RlPVwidG9nZ2xlXCIsdGhpcy5lZmZlY3QuY2FsbCh0aGlzLG4pfX0odC5mbi50b2dnbGUpLGNzc1VuaXQ6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5jc3MoZSkscz1bXTtyZXR1cm4gdC5lYWNoKFtcImVtXCIsXCJweFwiLFwiJVwiLFwicHRcIl0sZnVuY3Rpb24odCxlKXtpLmluZGV4T2YoZSk+MCYmKHM9W3BhcnNlRmxvYXQoaSksZV0pfSksc30sY3NzQ2xpcDpmdW5jdGlvbih0KXtyZXR1cm4gdD90aGlzLmNzcyhcImNsaXBcIixcInJlY3QoXCIrdC50b3ArXCJweCBcIit0LnJpZ2h0K1wicHggXCIrdC5ib3R0b20rXCJweCBcIit0LmxlZnQrXCJweClcIik6cyh0aGlzLmNzcyhcImNsaXBcIiksdGhpcyl9LHRyYW5zZmVyOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dCh0aGlzKSxuPXQoZS50byksbz1cImZpeGVkXCI9PT1uLmNzcyhcInBvc2l0aW9uXCIpLGE9dChcImJvZHlcIikscj1vP2Euc2Nyb2xsVG9wKCk6MCxoPW8/YS5zY3JvbGxMZWZ0KCk6MCxsPW4ub2Zmc2V0KCksYz17dG9wOmwudG9wLXIsbGVmdDpsLmxlZnQtaCxoZWlnaHQ6bi5pbm5lckhlaWdodCgpLHdpZHRoOm4uaW5uZXJXaWR0aCgpfSx1PXMub2Zmc2V0KCksZD10KFwiPGRpdiBjbGFzcz0ndWktZWZmZWN0cy10cmFuc2Zlcic+PC9kaXY+XCIpLmFwcGVuZFRvKFwiYm9keVwiKS5hZGRDbGFzcyhlLmNsYXNzTmFtZSkuY3NzKHt0b3A6dS50b3AtcixsZWZ0OnUubGVmdC1oLGhlaWdodDpzLmlubmVySGVpZ2h0KCksd2lkdGg6cy5pbm5lcldpZHRoKCkscG9zaXRpb246bz9cImZpeGVkXCI6XCJhYnNvbHV0ZVwifSkuYW5pbWF0ZShjLGUuZHVyYXRpb24sZS5lYXNpbmcsZnVuY3Rpb24oKXtkLnJlbW92ZSgpLHQuaXNGdW5jdGlvbihpKSYmaSgpfSl9fSksdC5meC5zdGVwLmNsaXA9ZnVuY3Rpb24oZSl7ZS5jbGlwSW5pdHx8KGUuc3RhcnQ9dChlLmVsZW0pLmNzc0NsaXAoKSxcInN0cmluZ1wiPT10eXBlb2YgZS5lbmQmJihlLmVuZD1zKGUuZW5kLGUuZWxlbSkpLGUuY2xpcEluaXQ9ITApLHQoZS5lbGVtKS5jc3NDbGlwKHt0b3A6ZS5wb3MqKGUuZW5kLnRvcC1lLnN0YXJ0LnRvcCkrZS5zdGFydC50b3AscmlnaHQ6ZS5wb3MqKGUuZW5kLnJpZ2h0LWUuc3RhcnQucmlnaHQpK2Uuc3RhcnQucmlnaHQsYm90dG9tOmUucG9zKihlLmVuZC5ib3R0b20tZS5zdGFydC5ib3R0b20pK2Uuc3RhcnQuYm90dG9tLGxlZnQ6ZS5wb3MqKGUuZW5kLmxlZnQtZS5zdGFydC5sZWZ0KStlLnN0YXJ0LmxlZnR9KX19KCksZnVuY3Rpb24oKXt2YXIgZT17fTt0LmVhY2goW1wiUXVhZFwiLFwiQ3ViaWNcIixcIlF1YXJ0XCIsXCJRdWludFwiLFwiRXhwb1wiXSxmdW5jdGlvbih0LGkpe2VbaV09ZnVuY3Rpb24oZSl7cmV0dXJuIE1hdGgucG93KGUsdCsyKX19KSx0LmV4dGVuZChlLHtTaW5lOmZ1bmN0aW9uKHQpe3JldHVybiAxLU1hdGguY29zKHQqTWF0aC5QSS8yKX0sQ2lyYzpmdW5jdGlvbih0KXtyZXR1cm4gMS1NYXRoLnNxcnQoMS10KnQpfSxFbGFzdGljOmZ1bmN0aW9uKHQpe3JldHVybiAwPT09dHx8MT09PXQ/dDotTWF0aC5wb3coMiw4Kih0LTEpKSpNYXRoLnNpbigoODAqKHQtMSktNy41KSpNYXRoLlBJLzE1KX0sQmFjazpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KigzKnQtMil9LEJvdW5jZTpmdW5jdGlvbih0KXtmb3IodmFyIGUsaT00OygoZT1NYXRoLnBvdygyLC0taSkpLTEpLzExPnQ7KTtyZXR1cm4gMS9NYXRoLnBvdyg0LDMtaSktNy41NjI1Kk1hdGgucG93KCgzKmUtMikvMjItdCwyKX19KSx0LmVhY2goZSxmdW5jdGlvbihlLGkpe3QuZWFzaW5nW1wiZWFzZUluXCIrZV09aSx0LmVhc2luZ1tcImVhc2VPdXRcIitlXT1mdW5jdGlvbih0KXtyZXR1cm4gMS1pKDEtdCl9LHQuZWFzaW5nW1wiZWFzZUluT3V0XCIrZV09ZnVuY3Rpb24odCl7cmV0dXJuLjU+dD9pKDIqdCkvMjoxLWkoLTIqdCsyKS8yfX0pfSgpO3ZhciBmPXQuZWZmZWN0czt0LmVmZmVjdHMuZGVmaW5lKFwiYmxpbmRcIixcImhpZGVcIixmdW5jdGlvbihlLGkpe3ZhciBzPXt1cDpbXCJib3R0b21cIixcInRvcFwiXSx2ZXJ0aWNhbDpbXCJib3R0b21cIixcInRvcFwiXSxkb3duOltcInRvcFwiLFwiYm90dG9tXCJdLGxlZnQ6W1wicmlnaHRcIixcImxlZnRcIl0saG9yaXpvbnRhbDpbXCJyaWdodFwiLFwibGVmdFwiXSxyaWdodDpbXCJsZWZ0XCIsXCJyaWdodFwiXX0sbj10KHRoaXMpLG89ZS5kaXJlY3Rpb258fFwidXBcIixhPW4uY3NzQ2xpcCgpLHI9e2NsaXA6dC5leHRlbmQoe30sYSl9LGg9dC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKG4pO3IuY2xpcFtzW29dWzBdXT1yLmNsaXBbc1tvXVsxXV0sXCJzaG93XCI9PT1lLm1vZGUmJihuLmNzc0NsaXAoci5jbGlwKSxoJiZoLmNzcyh0LmVmZmVjdHMuY2xpcFRvQm94KHIpKSxyLmNsaXA9YSksaCYmaC5hbmltYXRlKHQuZWZmZWN0cy5jbGlwVG9Cb3gociksZS5kdXJhdGlvbixlLmVhc2luZyksbi5hbmltYXRlKHIse3F1ZXVlOiExLGR1cmF0aW9uOmUuZHVyYXRpb24sZWFzaW5nOmUuZWFzaW5nLGNvbXBsZXRlOml9KX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJib3VuY2VcIixmdW5jdGlvbihlLGkpe3ZhciBzLG4sbyxhPXQodGhpcykscj1lLm1vZGUsaD1cImhpZGVcIj09PXIsbD1cInNob3dcIj09PXIsYz1lLmRpcmVjdGlvbnx8XCJ1cFwiLHU9ZS5kaXN0YW5jZSxkPWUudGltZXN8fDUscD0yKmQrKGx8fGg/MTowKSxmPWUuZHVyYXRpb24vcCxnPWUuZWFzaW5nLG09XCJ1cFwiPT09Y3x8XCJkb3duXCI9PT1jP1widG9wXCI6XCJsZWZ0XCIsXz1cInVwXCI9PT1jfHxcImxlZnRcIj09PWMsdj0wLGI9YS5xdWV1ZSgpLmxlbmd0aDtmb3IodC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKGEpLG89YS5jc3MobSksdXx8KHU9YVtcInRvcFwiPT09bT9cIm91dGVySGVpZ2h0XCI6XCJvdXRlcldpZHRoXCJdKCkvMyksbCYmKG49e29wYWNpdHk6MX0sblttXT1vLGEuY3NzKFwib3BhY2l0eVwiLDApLmNzcyhtLF8/MiotdToyKnUpLmFuaW1hdGUobixmLGcpKSxoJiYodS89TWF0aC5wb3coMixkLTEpKSxuPXt9LG5bbV09bztkPnY7disrKXM9e30sc1ttXT0oXz9cIi09XCI6XCIrPVwiKSt1LGEuYW5pbWF0ZShzLGYsZykuYW5pbWF0ZShuLGYsZyksdT1oPzIqdTp1LzI7aCYmKHM9e29wYWNpdHk6MH0sc1ttXT0oXz9cIi09XCI6XCIrPVwiKSt1LGEuYW5pbWF0ZShzLGYsZykpLGEucXVldWUoaSksdC5lZmZlY3RzLnVuc2hpZnQoYSxiLHArMSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwiY2xpcFwiLFwiaGlkZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHMsbj17fSxvPXQodGhpcyksYT1lLmRpcmVjdGlvbnx8XCJ2ZXJ0aWNhbFwiLHI9XCJib3RoXCI9PT1hLGg9cnx8XCJob3Jpem9udGFsXCI9PT1hLGw9cnx8XCJ2ZXJ0aWNhbFwiPT09YTtzPW8uY3NzQ2xpcCgpLG4uY2xpcD17dG9wOmw/KHMuYm90dG9tLXMudG9wKS8yOnMudG9wLHJpZ2h0Omg/KHMucmlnaHQtcy5sZWZ0KS8yOnMucmlnaHQsYm90dG9tOmw/KHMuYm90dG9tLXMudG9wKS8yOnMuYm90dG9tLGxlZnQ6aD8ocy5yaWdodC1zLmxlZnQpLzI6cy5sZWZ0fSx0LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIobyksXCJzaG93XCI9PT1lLm1vZGUmJihvLmNzc0NsaXAobi5jbGlwKSxuLmNsaXA9cyksby5hbmltYXRlKG4se3F1ZXVlOiExLGR1cmF0aW9uOmUuZHVyYXRpb24sZWFzaW5nOmUuZWFzaW5nLGNvbXBsZXRlOml9KX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJkcm9wXCIsXCJoaWRlXCIsZnVuY3Rpb24oZSxpKXt2YXIgcyxuPXQodGhpcyksbz1lLm1vZGUsYT1cInNob3dcIj09PW8scj1lLmRpcmVjdGlvbnx8XCJsZWZ0XCIsaD1cInVwXCI9PT1yfHxcImRvd25cIj09PXI/XCJ0b3BcIjpcImxlZnRcIixsPVwidXBcIj09PXJ8fFwibGVmdFwiPT09cj9cIi09XCI6XCIrPVwiLGM9XCIrPVwiPT09bD9cIi09XCI6XCIrPVwiLHU9e29wYWNpdHk6MH07dC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKG4pLHM9ZS5kaXN0YW5jZXx8bltcInRvcFwiPT09aD9cIm91dGVySGVpZ2h0XCI6XCJvdXRlcldpZHRoXCJdKCEwKS8yLHVbaF09bCtzLGEmJihuLmNzcyh1KSx1W2hdPWMrcyx1Lm9wYWNpdHk9MSksbi5hbmltYXRlKHUse3F1ZXVlOiExLGR1cmF0aW9uOmUuZHVyYXRpb24sZWFzaW5nOmUuZWFzaW5nLGNvbXBsZXRlOml9KX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJleHBsb2RlXCIsXCJoaWRlXCIsZnVuY3Rpb24oZSxpKXtmdW5jdGlvbiBzKCl7Yi5wdXNoKHRoaXMpLGIubGVuZ3RoPT09dSpkJiZuKCl9ZnVuY3Rpb24gbigpe3AuY3NzKHt2aXNpYmlsaXR5OlwidmlzaWJsZVwifSksdChiKS5yZW1vdmUoKSxpKCl9dmFyIG8sYSxyLGgsbCxjLHU9ZS5waWVjZXM/TWF0aC5yb3VuZChNYXRoLnNxcnQoZS5waWVjZXMpKTozLGQ9dSxwPXQodGhpcyksZj1lLm1vZGUsZz1cInNob3dcIj09PWYsbT1wLnNob3coKS5jc3MoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIikub2Zmc2V0KCksXz1NYXRoLmNlaWwocC5vdXRlcldpZHRoKCkvZCksdj1NYXRoLmNlaWwocC5vdXRlckhlaWdodCgpL3UpLGI9W107Zm9yKG89MDt1Pm87bysrKWZvcihoPW0udG9wK28qdixjPW8tKHUtMSkvMixhPTA7ZD5hO2ErKylyPW0ubGVmdCthKl8sbD1hLShkLTEpLzIscC5jbG9uZSgpLmFwcGVuZFRvKFwiYm9keVwiKS53cmFwKFwiPGRpdj48L2Rpdj5cIikuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsdmlzaWJpbGl0eTpcInZpc2libGVcIixsZWZ0Oi1hKl8sdG9wOi1vKnZ9KS5wYXJlbnQoKS5hZGRDbGFzcyhcInVpLWVmZmVjdHMtZXhwbG9kZVwiKS5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixvdmVyZmxvdzpcImhpZGRlblwiLHdpZHRoOl8saGVpZ2h0OnYsbGVmdDpyKyhnP2wqXzowKSx0b3A6aCsoZz9jKnY6MCksb3BhY2l0eTpnPzA6MX0pLmFuaW1hdGUoe2xlZnQ6cisoZz8wOmwqXyksdG9wOmgrKGc/MDpjKnYpLG9wYWNpdHk6Zz8xOjB9LGUuZHVyYXRpb258fDUwMCxlLmVhc2luZyxzKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJmYWRlXCIsXCJ0b2dnbGVcIixmdW5jdGlvbihlLGkpe3ZhciBzPVwic2hvd1wiPT09ZS5tb2RlO3QodGhpcykuY3NzKFwib3BhY2l0eVwiLHM/MDoxKS5hbmltYXRlKHtvcGFjaXR5OnM/MTowfSx7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSksdC5lZmZlY3RzLmRlZmluZShcImZvbGRcIixcImhpZGVcIixmdW5jdGlvbihlLGkpe3ZhciBzPXQodGhpcyksbj1lLm1vZGUsbz1cInNob3dcIj09PW4sYT1cImhpZGVcIj09PW4scj1lLnNpemV8fDE1LGg9LyhbMC05XSspJS8uZXhlYyhyKSxsPSEhZS5ob3JpekZpcnN0LGM9bD9bXCJyaWdodFwiLFwiYm90dG9tXCJdOltcImJvdHRvbVwiLFwicmlnaHRcIl0sdT1lLmR1cmF0aW9uLzIsZD10LmVmZmVjdHMuY3JlYXRlUGxhY2Vob2xkZXIocykscD1zLmNzc0NsaXAoKSxmPXtjbGlwOnQuZXh0ZW5kKHt9LHApfSxnPXtjbGlwOnQuZXh0ZW5kKHt9LHApfSxtPVtwW2NbMF1dLHBbY1sxXV1dLF89cy5xdWV1ZSgpLmxlbmd0aDtoJiYocj1wYXJzZUludChoWzFdLDEwKS8xMDAqbVthPzA6MV0pLGYuY2xpcFtjWzBdXT1yLGcuY2xpcFtjWzBdXT1yLGcuY2xpcFtjWzFdXT0wLG8mJihzLmNzc0NsaXAoZy5jbGlwKSxkJiZkLmNzcyh0LmVmZmVjdHMuY2xpcFRvQm94KGcpKSxnLmNsaXA9cCkscy5xdWV1ZShmdW5jdGlvbihpKXtkJiZkLmFuaW1hdGUodC5lZmZlY3RzLmNsaXBUb0JveChmKSx1LGUuZWFzaW5nKS5hbmltYXRlKHQuZWZmZWN0cy5jbGlwVG9Cb3goZyksdSxlLmVhc2luZyksaSgpfSkuYW5pbWF0ZShmLHUsZS5lYXNpbmcpLmFuaW1hdGUoZyx1LGUuZWFzaW5nKS5xdWV1ZShpKSx0LmVmZmVjdHMudW5zaGlmdChzLF8sNCl9KSx0LmVmZmVjdHMuZGVmaW5lKFwiaGlnaGxpZ2h0XCIsXCJzaG93XCIsZnVuY3Rpb24oZSxpKXt2YXIgcz10KHRoaXMpLG49e2JhY2tncm91bmRDb2xvcjpzLmNzcyhcImJhY2tncm91bmRDb2xvclwiKX07XCJoaWRlXCI9PT1lLm1vZGUmJihuLm9wYWNpdHk9MCksdC5lZmZlY3RzLnNhdmVTdHlsZShzKSxzLmNzcyh7YmFja2dyb3VuZEltYWdlOlwibm9uZVwiLGJhY2tncm91bmRDb2xvcjplLmNvbG9yfHxcIiNmZmZmOTlcIn0pLmFuaW1hdGUobix7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSksdC5lZmZlY3RzLmRlZmluZShcInNpemVcIixmdW5jdGlvbihlLGkpe3ZhciBzLG4sbyxhPXQodGhpcykscj1bXCJmb250U2l6ZVwiXSxoPVtcImJvcmRlclRvcFdpZHRoXCIsXCJib3JkZXJCb3R0b21XaWR0aFwiLFwicGFkZGluZ1RvcFwiLFwicGFkZGluZ0JvdHRvbVwiXSxsPVtcImJvcmRlckxlZnRXaWR0aFwiLFwiYm9yZGVyUmlnaHRXaWR0aFwiLFwicGFkZGluZ0xlZnRcIixcInBhZGRpbmdSaWdodFwiXSxjPWUubW9kZSx1PVwiZWZmZWN0XCIhPT1jLGQ9ZS5zY2FsZXx8XCJib3RoXCIscD1lLm9yaWdpbnx8W1wibWlkZGxlXCIsXCJjZW50ZXJcIl0sZj1hLmNzcyhcInBvc2l0aW9uXCIpLGc9YS5wb3NpdGlvbigpLG09dC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoYSksXz1lLmZyb218fG0sdj1lLnRvfHx0LmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyhhLDApO3QuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlcihhKSxcInNob3dcIj09PWMmJihvPV8sXz12LHY9byksbj17ZnJvbTp7eTpfLmhlaWdodC9tLmhlaWdodCx4Ol8ud2lkdGgvbS53aWR0aH0sdG86e3k6di5oZWlnaHQvbS5oZWlnaHQseDp2LndpZHRoL20ud2lkdGh9fSwoXCJib3hcIj09PWR8fFwiYm90aFwiPT09ZCkmJihuLmZyb20ueSE9PW4udG8ueSYmKF89dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxoLG4uZnJvbS55LF8pLHY9dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxoLG4udG8ueSx2KSksbi5mcm9tLnghPT1uLnRvLngmJihfPXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGEsbCxuLmZyb20ueCxfKSx2PXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGEsbCxuLnRvLngsdikpKSwoXCJjb250ZW50XCI9PT1kfHxcImJvdGhcIj09PWQpJiZuLmZyb20ueSE9PW4udG8ueSYmKF89dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxyLG4uZnJvbS55LF8pLHY9dC5lZmZlY3RzLnNldFRyYW5zaXRpb24oYSxyLG4udG8ueSx2KSkscCYmKHM9dC5lZmZlY3RzLmdldEJhc2VsaW5lKHAsbSksXy50b3A9KG0ub3V0ZXJIZWlnaHQtXy5vdXRlckhlaWdodCkqcy55K2cudG9wLF8ubGVmdD0obS5vdXRlcldpZHRoLV8ub3V0ZXJXaWR0aCkqcy54K2cubGVmdCx2LnRvcD0obS5vdXRlckhlaWdodC12Lm91dGVySGVpZ2h0KSpzLnkrZy50b3Asdi5sZWZ0PShtLm91dGVyV2lkdGgtdi5vdXRlcldpZHRoKSpzLngrZy5sZWZ0KSxhLmNzcyhfKSwoXCJjb250ZW50XCI9PT1kfHxcImJvdGhcIj09PWQpJiYoaD1oLmNvbmNhdChbXCJtYXJnaW5Ub3BcIixcIm1hcmdpbkJvdHRvbVwiXSkuY29uY2F0KHIpLGw9bC5jb25jYXQoW1wibWFyZ2luTGVmdFwiLFwibWFyZ2luUmlnaHRcIl0pLGEuZmluZChcIipbd2lkdGhdXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLHM9dC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoaSksbz17aGVpZ2h0OnMuaGVpZ2h0Km4uZnJvbS55LHdpZHRoOnMud2lkdGgqbi5mcm9tLngsb3V0ZXJIZWlnaHQ6cy5vdXRlckhlaWdodCpuLmZyb20ueSxvdXRlcldpZHRoOnMub3V0ZXJXaWR0aCpuLmZyb20ueH0sYT17aGVpZ2h0OnMuaGVpZ2h0Km4udG8ueSx3aWR0aDpzLndpZHRoKm4udG8ueCxvdXRlckhlaWdodDpzLmhlaWdodCpuLnRvLnksb3V0ZXJXaWR0aDpzLndpZHRoKm4udG8ueH07bi5mcm9tLnkhPT1uLnRvLnkmJihvPXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGksaCxuLmZyb20ueSxvKSxhPXQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKGksaCxuLnRvLnksYSkpLG4uZnJvbS54IT09bi50by54JiYobz10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihpLGwsbi5mcm9tLngsbyksYT10LmVmZmVjdHMuc2V0VHJhbnNpdGlvbihpLGwsbi50by54LGEpKSx1JiZ0LmVmZmVjdHMuc2F2ZVN0eWxlKGkpLGkuY3NzKG8pLGkuYW5pbWF0ZShhLGUuZHVyYXRpb24sZS5lYXNpbmcsZnVuY3Rpb24oKXt1JiZ0LmVmZmVjdHMucmVzdG9yZVN0eWxlKGkpfSl9KSksYS5hbmltYXRlKHYse3F1ZXVlOiExLGR1cmF0aW9uOmUuZHVyYXRpb24sZWFzaW5nOmUuZWFzaW5nLGNvbXBsZXRlOmZ1bmN0aW9uKCl7dmFyIGU9YS5vZmZzZXQoKTswPT09di5vcGFjaXR5JiZhLmNzcyhcIm9wYWNpdHlcIixfLm9wYWNpdHkpLHV8fChhLmNzcyhcInBvc2l0aW9uXCIsXCJzdGF0aWNcIj09PWY/XCJyZWxhdGl2ZVwiOmYpLm9mZnNldChlKSx0LmVmZmVjdHMuc2F2ZVN0eWxlKGEpKSxpKCl9fSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwic2NhbGVcIixmdW5jdGlvbihlLGkpe3ZhciBzPXQodGhpcyksbj1lLm1vZGUsbz1wYXJzZUludChlLnBlcmNlbnQsMTApfHwoMD09PXBhcnNlSW50KGUucGVyY2VudCwxMCk/MDpcImVmZmVjdFwiIT09bj8wOjEwMCksYT10LmV4dGVuZCghMCx7ZnJvbTp0LmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyhzKSx0bzp0LmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyhzLG8sZS5kaXJlY3Rpb258fFwiYm90aFwiKSxvcmlnaW46ZS5vcmlnaW58fFtcIm1pZGRsZVwiLFwiY2VudGVyXCJdfSxlKTtlLmZhZGUmJihhLmZyb20ub3BhY2l0eT0xLGEudG8ub3BhY2l0eT0wKSx0LmVmZmVjdHMuZWZmZWN0LnNpemUuY2FsbCh0aGlzLGEsaSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwicHVmZlwiLFwiaGlkZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9dC5leHRlbmQoITAse30sZSx7ZmFkZTohMCxwZXJjZW50OnBhcnNlSW50KGUucGVyY2VudCwxMCl8fDE1MH0pO3QuZWZmZWN0cy5lZmZlY3Quc2NhbGUuY2FsbCh0aGlzLHMsaSl9KSx0LmVmZmVjdHMuZGVmaW5lKFwicHVsc2F0ZVwiLFwic2hvd1wiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9dCh0aGlzKSxuPWUubW9kZSxvPVwic2hvd1wiPT09bixhPVwiaGlkZVwiPT09bixyPW98fGEsaD0yKihlLnRpbWVzfHw1KSsocj8xOjApLGw9ZS5kdXJhdGlvbi9oLGM9MCx1PTEsZD1zLnF1ZXVlKCkubGVuZ3RoO2Zvcigob3x8IXMuaXMoXCI6dmlzaWJsZVwiKSkmJihzLmNzcyhcIm9wYWNpdHlcIiwwKS5zaG93KCksYz0xKTtoPnU7dSsrKXMuYW5pbWF0ZSh7b3BhY2l0eTpjfSxsLGUuZWFzaW5nKSxjPTEtYztzLmFuaW1hdGUoe29wYWNpdHk6Y30sbCxlLmVhc2luZykscy5xdWV1ZShpKSx0LmVmZmVjdHMudW5zaGlmdChzLGQsaCsxKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJzaGFrZVwiLGZ1bmN0aW9uKGUsaSl7dmFyIHM9MSxuPXQodGhpcyksbz1lLmRpcmVjdGlvbnx8XCJsZWZ0XCIsYT1lLmRpc3RhbmNlfHwyMCxyPWUudGltZXN8fDMsaD0yKnIrMSxsPU1hdGgucm91bmQoZS5kdXJhdGlvbi9oKSxjPVwidXBcIj09PW98fFwiZG93blwiPT09bz9cInRvcFwiOlwibGVmdFwiLHU9XCJ1cFwiPT09b3x8XCJsZWZ0XCI9PT1vLGQ9e30scD17fSxmPXt9LGc9bi5xdWV1ZSgpLmxlbmd0aDtmb3IodC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKG4pLGRbY109KHU/XCItPVwiOlwiKz1cIikrYSxwW2NdPSh1P1wiKz1cIjpcIi09XCIpKzIqYSxmW2NdPSh1P1wiLT1cIjpcIis9XCIpKzIqYSxuLmFuaW1hdGUoZCxsLGUuZWFzaW5nKTtyPnM7cysrKW4uYW5pbWF0ZShwLGwsZS5lYXNpbmcpLmFuaW1hdGUoZixsLGUuZWFzaW5nKTtuLmFuaW1hdGUocCxsLGUuZWFzaW5nKS5hbmltYXRlKGQsbC8yLGUuZWFzaW5nKS5xdWV1ZShpKSx0LmVmZmVjdHMudW5zaGlmdChuLGcsaCsxKX0pLHQuZWZmZWN0cy5kZWZpbmUoXCJzbGlkZVwiLFwic2hvd1wiLGZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvPXQodGhpcyksYT17dXA6W1wiYm90dG9tXCIsXCJ0b3BcIl0sZG93bjpbXCJ0b3BcIixcImJvdHRvbVwiXSxsZWZ0OltcInJpZ2h0XCIsXCJsZWZ0XCJdLHJpZ2h0OltcImxlZnRcIixcInJpZ2h0XCJdfSxyPWUubW9kZSxoPWUuZGlyZWN0aW9ufHxcImxlZnRcIixsPVwidXBcIj09PWh8fFwiZG93blwiPT09aD9cInRvcFwiOlwibGVmdFwiLGM9XCJ1cFwiPT09aHx8XCJsZWZ0XCI9PT1oLHU9ZS5kaXN0YW5jZXx8b1tcInRvcFwiPT09bD9cIm91dGVySGVpZ2h0XCI6XCJvdXRlcldpZHRoXCJdKCEwKSxkPXt9O3QuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlcihvKSxzPW8uY3NzQ2xpcCgpLG49by5wb3NpdGlvbigpW2xdLGRbbF09KGM/LTE6MSkqdStuLGQuY2xpcD1vLmNzc0NsaXAoKSxkLmNsaXBbYVtoXVsxXV09ZC5jbGlwW2FbaF1bMF1dLFwic2hvd1wiPT09ciYmKG8uY3NzQ2xpcChkLmNsaXApLG8uY3NzKGwsZFtsXSksZC5jbGlwPXMsZFtsXT1uKSxvLmFuaW1hdGUoZCx7cXVldWU6ITEsZHVyYXRpb246ZS5kdXJhdGlvbixlYXNpbmc6ZS5lYXNpbmcsY29tcGxldGU6aX0pfSk7dmFyIGY7dC51aUJhY2tDb21wYXQhPT0hMSYmKGY9dC5lZmZlY3RzLmRlZmluZShcInRyYW5zZmVyXCIsZnVuY3Rpb24oZSxpKXt0KHRoaXMpLnRyYW5zZmVyKGUsaSl9KSksdC51aS5mb2N1c2FibGU9ZnVuY3Rpb24oaSxzKXt2YXIgbixvLGEscixoLGw9aS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiYXJlYVwiPT09bD8obj1pLnBhcmVudE5vZGUsbz1uLm5hbWUsaS5ocmVmJiZvJiZcIm1hcFwiPT09bi5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpPyhhPXQoXCJpbWdbdXNlbWFwPScjXCIrbytcIiddXCIpLGEubGVuZ3RoPjAmJmEuaXMoXCI6dmlzaWJsZVwiKSk6ITEpOigvXihpbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkLy50ZXN0KGwpPyhyPSFpLmRpc2FibGVkLHImJihoPXQoaSkuY2xvc2VzdChcImZpZWxkc2V0XCIpWzBdLGgmJihyPSFoLmRpc2FibGVkKSkpOnI9XCJhXCI9PT1sP2kuaHJlZnx8czpzLHImJnQoaSkuaXMoXCI6dmlzaWJsZVwiKSYmZSh0KGkpKSl9LHQuZXh0ZW5kKHQuZXhwcltcIjpcIl0se2ZvY3VzYWJsZTpmdW5jdGlvbihlKXtyZXR1cm4gdC51aS5mb2N1c2FibGUoZSxudWxsIT10LmF0dHIoZSxcInRhYmluZGV4XCIpKX19KSx0LnVpLmZvY3VzYWJsZSx0LmZuLmZvcm09ZnVuY3Rpb24oKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdGhpc1swXS5mb3JtP3RoaXMuY2xvc2VzdChcImZvcm1cIik6dCh0aGlzWzBdLmZvcm0pfSx0LnVpLmZvcm1SZXNldE1peGluPXtfZm9ybVJlc2V0SGFuZGxlcjpmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7c2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBpPWUuZGF0YShcInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzXCIpO3QuZWFjaChpLGZ1bmN0aW9uKCl7dGhpcy5yZWZyZXNoKCl9KX0pfSxfYmluZEZvcm1SZXNldEhhbmRsZXI6ZnVuY3Rpb24oKXtpZih0aGlzLmZvcm09dGhpcy5lbGVtZW50LmZvcm0oKSx0aGlzLmZvcm0ubGVuZ3RoKXt2YXIgdD10aGlzLmZvcm0uZGF0YShcInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzXCIpfHxbXTt0Lmxlbmd0aHx8dGhpcy5mb3JtLm9uKFwicmVzZXQudWktZm9ybS1yZXNldFwiLHRoaXMuX2Zvcm1SZXNldEhhbmRsZXIpLHQucHVzaCh0aGlzKSx0aGlzLmZvcm0uZGF0YShcInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzXCIsdCl9fSxfdW5iaW5kRm9ybVJlc2V0SGFuZGxlcjpmdW5jdGlvbigpe2lmKHRoaXMuZm9ybS5sZW5ndGgpe3ZhciBlPXRoaXMuZm9ybS5kYXRhKFwidWktZm9ybS1yZXNldC1pbnN0YW5jZXNcIik7ZS5zcGxpY2UodC5pbkFycmF5KHRoaXMsZSksMSksZS5sZW5ndGg/dGhpcy5mb3JtLmRhdGEoXCJ1aS1mb3JtLXJlc2V0LWluc3RhbmNlc1wiLGUpOnRoaXMuZm9ybS5yZW1vdmVEYXRhKFwidWktZm9ybS1yZXNldC1pbnN0YW5jZXNcIikub2ZmKFwicmVzZXQudWktZm9ybS1yZXNldFwiKX19fSxcIjEuN1wiPT09dC5mbi5qcXVlcnkuc3Vic3RyaW5nKDAsMykmJih0LmVhY2goW1wiV2lkdGhcIixcIkhlaWdodFwiXSxmdW5jdGlvbihlLGkpe2Z1bmN0aW9uIHMoZSxpLHMsbyl7cmV0dXJuIHQuZWFjaChuLGZ1bmN0aW9uKCl7aS09cGFyc2VGbG9hdCh0LmNzcyhlLFwicGFkZGluZ1wiK3RoaXMpKXx8MCxzJiYoaS09cGFyc2VGbG9hdCh0LmNzcyhlLFwiYm9yZGVyXCIrdGhpcytcIldpZHRoXCIpKXx8MCksbyYmKGktPXBhcnNlRmxvYXQodC5jc3MoZSxcIm1hcmdpblwiK3RoaXMpKXx8MCl9KSxpfXZhciBuPVwiV2lkdGhcIj09PWk/W1wiTGVmdFwiLFwiUmlnaHRcIl06W1wiVG9wXCIsXCJCb3R0b21cIl0sbz1pLnRvTG93ZXJDYXNlKCksYT17aW5uZXJXaWR0aDp0LmZuLmlubmVyV2lkdGgsaW5uZXJIZWlnaHQ6dC5mbi5pbm5lckhlaWdodCxvdXRlcldpZHRoOnQuZm4ub3V0ZXJXaWR0aCxvdXRlckhlaWdodDp0LmZuLm91dGVySGVpZ2h0fTt0LmZuW1wiaW5uZXJcIitpXT1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZT9hW1wiaW5uZXJcIitpXS5jYWxsKHRoaXMpOnRoaXMuZWFjaChmdW5jdGlvbigpe3QodGhpcykuY3NzKG8scyh0aGlzLGUpK1wicHhcIil9KX0sdC5mbltcIm91dGVyXCIraV09ZnVuY3Rpb24oZSxuKXtyZXR1cm5cIm51bWJlclwiIT10eXBlb2YgZT9hW1wib3V0ZXJcIitpXS5jYWxsKHRoaXMsZSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dCh0aGlzKS5jc3MobyxzKHRoaXMsZSwhMCxuKStcInB4XCIpfSl9fSksdC5mbi5hZGRCYWNrPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFkZChudWxsPT10P3RoaXMucHJldk9iamVjdDp0aGlzLnByZXZPYmplY3QuZmlsdGVyKHQpKX0pLHQudWkua2V5Q29kZT17QkFDS1NQQUNFOjgsQ09NTUE6MTg4LERFTEVURTo0NixET1dOOjQwLEVORDozNSxFTlRFUjoxMyxFU0NBUEU6MjcsSE9NRTozNixMRUZUOjM3LFBBR0VfRE9XTjozNCxQQUdFX1VQOjMzLFBFUklPRDoxOTAsUklHSFQ6MzksU1BBQ0U6MzIsVEFCOjksVVA6Mzh9LHQudWkuZXNjYXBlU2VsZWN0b3I9ZnVuY3Rpb24oKXt2YXIgdD0vKFshXCIjJCUmJygpKissLlxcLzo7PD0+P0BbXFxdXmB7fH1+XSkvZztyZXR1cm4gZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSh0LFwiXFxcXCQxXCIpfX0oKSx0LmZuLmxhYmVscz1mdW5jdGlvbigpe3ZhciBlLGkscyxuLG87cmV0dXJuIHRoaXNbMF0ubGFiZWxzJiZ0aGlzWzBdLmxhYmVscy5sZW5ndGg/dGhpcy5wdXNoU3RhY2sodGhpc1swXS5sYWJlbHMpOihuPXRoaXMuZXEoMCkucGFyZW50cyhcImxhYmVsXCIpLHM9dGhpcy5hdHRyKFwiaWRcIikscyYmKGU9dGhpcy5lcSgwKS5wYXJlbnRzKCkubGFzdCgpLG89ZS5hZGQoZS5sZW5ndGg/ZS5zaWJsaW5ncygpOnRoaXMuc2libGluZ3MoKSksaT1cImxhYmVsW2Zvcj0nXCIrdC51aS5lc2NhcGVTZWxlY3RvcihzKStcIiddXCIsbj1uLmFkZChvLmZpbmQoaSkuYWRkQmFjayhpKSkpLHRoaXMucHVzaFN0YWNrKG4pKX0sdC5mbi5zY3JvbGxQYXJlbnQ9ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5jc3MoXCJwb3NpdGlvblwiKSxzPVwiYWJzb2x1dGVcIj09PWksbj1lPy8oYXV0b3xzY3JvbGx8aGlkZGVuKS86LyhhdXRvfHNjcm9sbCkvLG89dGhpcy5wYXJlbnRzKCkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtyZXR1cm4gcyYmXCJzdGF0aWNcIj09PWUuY3NzKFwicG9zaXRpb25cIik/ITE6bi50ZXN0KGUuY3NzKFwib3ZlcmZsb3dcIikrZS5jc3MoXCJvdmVyZmxvdy15XCIpK2UuY3NzKFwib3ZlcmZsb3cteFwiKSl9KS5lcSgwKTtyZXR1cm5cImZpeGVkXCIhPT1pJiZvLmxlbmd0aD9vOnQodGhpc1swXS5vd25lckRvY3VtZW50fHxkb2N1bWVudCl9LHQuZXh0ZW5kKHQuZXhwcltcIjpcIl0se3RhYmJhYmxlOmZ1bmN0aW9uKGUpe3ZhciBpPXQuYXR0cihlLFwidGFiaW5kZXhcIikscz1udWxsIT1pO3JldHVybighc3x8aT49MCkmJnQudWkuZm9jdXNhYmxlKGUscyl9fSksdC5mbi5leHRlbmQoe3VuaXF1ZUlkOmZ1bmN0aW9uKCl7dmFyIHQ9MDtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5pZHx8KHRoaXMuaWQ9XCJ1aS1pZC1cIisgKyt0KX0pfX0oKSxyZW1vdmVVbmlxdWVJZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXsvXnVpLWlkLVxcZCskLy50ZXN0KHRoaXMuaWQpJiZ0KHRoaXMpLnJlbW92ZUF0dHIoXCJpZFwiKX0pfX0pLHQud2lkZ2V0KFwidWkuYWNjb3JkaW9uXCIse3ZlcnNpb246XCIxLjEyLjFcIixvcHRpb25zOnthY3RpdmU6MCxhbmltYXRlOnt9LGNsYXNzZXM6e1widWktYWNjb3JkaW9uLWhlYWRlclwiOlwidWktY29ybmVyLXRvcFwiLFwidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWRcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLWFjY29yZGlvbi1jb250ZW50XCI6XCJ1aS1jb3JuZXItYm90dG9tXCJ9LGNvbGxhcHNpYmxlOiExLGV2ZW50OlwiY2xpY2tcIixoZWFkZXI6XCI+IGxpID4gOmZpcnN0LWNoaWxkLCA+IDpub3QobGkpOmV2ZW5cIixoZWlnaHRTdHlsZTpcImF1dG9cIixpY29uczp7YWN0aXZlSGVhZGVyOlwidWktaWNvbi10cmlhbmdsZS0xLXNcIixoZWFkZXI6XCJ1aS1pY29uLXRyaWFuZ2xlLTEtZVwifSxhY3RpdmF0ZTpudWxsLGJlZm9yZUFjdGl2YXRlOm51bGx9LGhpZGVQcm9wczp7Ym9yZGVyVG9wV2lkdGg6XCJoaWRlXCIsYm9yZGVyQm90dG9tV2lkdGg6XCJoaWRlXCIscGFkZGluZ1RvcDpcImhpZGVcIixwYWRkaW5nQm90dG9tOlwiaGlkZVwiLGhlaWdodDpcImhpZGVcIn0sc2hvd1Byb3BzOntib3JkZXJUb3BXaWR0aDpcInNob3dcIixib3JkZXJCb3R0b21XaWR0aDpcInNob3dcIixwYWRkaW5nVG9wOlwic2hvd1wiLHBhZGRpbmdCb3R0b206XCJzaG93XCIsaGVpZ2h0Olwic2hvd1wifSxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zO3RoaXMucHJldlNob3c9dGhpcy5wcmV2SGlkZT10KCksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1hY2NvcmRpb25cIixcInVpLXdpZGdldCB1aS1oZWxwZXItcmVzZXRcIiksdGhpcy5lbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJ0YWJsaXN0XCIpLGUuY29sbGFwc2libGV8fGUuYWN0aXZlIT09ITEmJm51bGwhPWUuYWN0aXZlfHwoZS5hY3RpdmU9MCksdGhpcy5fcHJvY2Vzc1BhbmVscygpLDA+ZS5hY3RpdmUmJihlLmFjdGl2ZSs9dGhpcy5oZWFkZXJzLmxlbmd0aCksdGhpcy5fcmVmcmVzaCgpfSxfZ2V0Q3JlYXRlRXZlbnREYXRhOmZ1bmN0aW9uKCl7cmV0dXJue2hlYWRlcjp0aGlzLmFjdGl2ZSxwYW5lbDp0aGlzLmFjdGl2ZS5sZW5ndGg/dGhpcy5hY3RpdmUubmV4dCgpOnQoKX19LF9jcmVhdGVJY29uczpmdW5jdGlvbigpe3ZhciBlLGkscz10aGlzLm9wdGlvbnMuaWNvbnM7cyYmKGU9dChcIjxzcGFuPlwiKSx0aGlzLl9hZGRDbGFzcyhlLFwidWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIsXCJ1aS1pY29uIFwiK3MuaGVhZGVyKSxlLnByZXBlbmRUbyh0aGlzLmhlYWRlcnMpLGk9dGhpcy5hY3RpdmUuY2hpbGRyZW4oXCIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uXCIpLHRoaXMuX3JlbW92ZUNsYXNzKGkscy5oZWFkZXIpLl9hZGRDbGFzcyhpLG51bGwscy5hY3RpdmVIZWFkZXIpLl9hZGRDbGFzcyh0aGlzLmhlYWRlcnMsXCJ1aS1hY2NvcmRpb24taWNvbnNcIikpfSxfZGVzdHJveUljb25zOmZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5oZWFkZXJzLFwidWktYWNjb3JkaW9uLWljb25zXCIpLHRoaXMuaGVhZGVycy5jaGlsZHJlbihcIi51aS1hY2NvcmRpb24taGVhZGVyLWljb25cIikucmVtb3ZlKCl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dmFyIHQ7dGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoXCJyb2xlXCIpLHRoaXMuaGVhZGVycy5yZW1vdmVBdHRyKFwicm9sZSBhcmlhLWV4cGFuZGVkIGFyaWEtc2VsZWN0ZWQgYXJpYS1jb250cm9scyB0YWJJbmRleFwiKS5yZW1vdmVVbmlxdWVJZCgpLHRoaXMuX2Rlc3Ryb3lJY29ucygpLHQ9dGhpcy5oZWFkZXJzLm5leHQoKS5jc3MoXCJkaXNwbGF5XCIsXCJcIikucmVtb3ZlQXR0cihcInJvbGUgYXJpYS1oaWRkZW4gYXJpYS1sYWJlbGxlZGJ5XCIpLnJlbW92ZVVuaXF1ZUlkKCksXCJjb250ZW50XCIhPT10aGlzLm9wdGlvbnMuaGVpZ2h0U3R5bGUmJnQuY3NzKFwiaGVpZ2h0XCIsXCJcIil9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtyZXR1cm5cImFjdGl2ZVwiPT09dD8odGhpcy5fYWN0aXZhdGUoZSksdm9pZCAwKTooXCJldmVudFwiPT09dCYmKHRoaXMub3B0aW9ucy5ldmVudCYmdGhpcy5fb2ZmKHRoaXMuaGVhZGVycyx0aGlzLm9wdGlvbnMuZXZlbnQpLHRoaXMuX3NldHVwRXZlbnRzKGUpKSx0aGlzLl9zdXBlcih0LGUpLFwiY29sbGFwc2libGVcIiE9PXR8fGV8fHRoaXMub3B0aW9ucy5hY3RpdmUhPT0hMXx8dGhpcy5fYWN0aXZhdGUoMCksXCJpY29uc1wiPT09dCYmKHRoaXMuX2Rlc3Ryb3lJY29ucygpLGUmJnRoaXMuX2NyZWF0ZUljb25zKCkpLHZvaWQgMCl9LF9zZXRPcHRpb25EaXNhYmxlZDpmdW5jdGlvbih0KXt0aGlzLl9zdXBlcih0KSx0aGlzLmVsZW1lbnQuYXR0cihcImFyaWEtZGlzYWJsZWRcIix0KSx0aGlzLl90b2dnbGVDbGFzcyhudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIiwhIXQpLHRoaXMuX3RvZ2dsZUNsYXNzKHRoaXMuaGVhZGVycy5hZGQodGhpcy5oZWFkZXJzLm5leHQoKSksbnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsISF0KX0sX2tleWRvd246ZnVuY3Rpb24oZSl7aWYoIWUuYWx0S2V5JiYhZS5jdHJsS2V5KXt2YXIgaT10LnVpLmtleUNvZGUscz10aGlzLmhlYWRlcnMubGVuZ3RoLG49dGhpcy5oZWFkZXJzLmluZGV4KGUudGFyZ2V0KSxvPSExO3N3aXRjaChlLmtleUNvZGUpe2Nhc2UgaS5SSUdIVDpjYXNlIGkuRE9XTjpvPXRoaXMuaGVhZGVyc1sobisxKSVzXTticmVhaztjYXNlIGkuTEVGVDpjYXNlIGkuVVA6bz10aGlzLmhlYWRlcnNbKG4tMStzKSVzXTticmVhaztjYXNlIGkuU1BBQ0U6Y2FzZSBpLkVOVEVSOnRoaXMuX2V2ZW50SGFuZGxlcihlKTticmVhaztjYXNlIGkuSE9NRTpvPXRoaXMuaGVhZGVyc1swXTticmVhaztjYXNlIGkuRU5EOm89dGhpcy5oZWFkZXJzW3MtMV19byYmKHQoZS50YXJnZXQpLmF0dHIoXCJ0YWJJbmRleFwiLC0xKSx0KG8pLmF0dHIoXCJ0YWJJbmRleFwiLDApLHQobykudHJpZ2dlcihcImZvY3VzXCIpLGUucHJldmVudERlZmF1bHQoKSl9fSxfcGFuZWxLZXlEb3duOmZ1bmN0aW9uKGUpe2Uua2V5Q29kZT09PXQudWkua2V5Q29kZS5VUCYmZS5jdHJsS2V5JiZ0KGUuY3VycmVudFRhcmdldCkucHJldigpLnRyaWdnZXIoXCJmb2N1c1wiKX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9uczt0aGlzLl9wcm9jZXNzUGFuZWxzKCksZS5hY3RpdmU9PT0hMSYmZS5jb2xsYXBzaWJsZT09PSEwfHwhdGhpcy5oZWFkZXJzLmxlbmd0aD8oZS5hY3RpdmU9ITEsdGhpcy5hY3RpdmU9dCgpKTplLmFjdGl2ZT09PSExP3RoaXMuX2FjdGl2YXRlKDApOnRoaXMuYWN0aXZlLmxlbmd0aCYmIXQuY29udGFpbnModGhpcy5lbGVtZW50WzBdLHRoaXMuYWN0aXZlWzBdKT90aGlzLmhlYWRlcnMubGVuZ3RoPT09dGhpcy5oZWFkZXJzLmZpbmQoXCIudWktc3RhdGUtZGlzYWJsZWRcIikubGVuZ3RoPyhlLmFjdGl2ZT0hMSx0aGlzLmFjdGl2ZT10KCkpOnRoaXMuX2FjdGl2YXRlKE1hdGgubWF4KDAsZS5hY3RpdmUtMSkpOmUuYWN0aXZlPXRoaXMuaGVhZGVycy5pbmRleCh0aGlzLmFjdGl2ZSksdGhpcy5fZGVzdHJveUljb25zKCksdGhpcy5fcmVmcmVzaCgpfSxfcHJvY2Vzc1BhbmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuaGVhZGVycyxlPXRoaXMucGFuZWxzO3RoaXMuaGVhZGVycz10aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaGVhZGVyKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmhlYWRlcnMsXCJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLWFjY29yZGlvbi1oZWFkZXItY29sbGFwc2VkXCIsXCJ1aS1zdGF0ZS1kZWZhdWx0XCIpLHRoaXMucGFuZWxzPXRoaXMuaGVhZGVycy5uZXh0KCkuZmlsdGVyKFwiOm5vdCgudWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlKVwiKS5oaWRlKCksdGhpcy5fYWRkQ2xhc3ModGhpcy5wYW5lbHMsXCJ1aS1hY2NvcmRpb24tY29udGVudFwiLFwidWktaGVscGVyLXJlc2V0IHVpLXdpZGdldC1jb250ZW50XCIpLGUmJih0aGlzLl9vZmYodC5ub3QodGhpcy5oZWFkZXJzKSksdGhpcy5fb2ZmKGUubm90KHRoaXMucGFuZWxzKSkpfSxfcmVmcmVzaDpmdW5jdGlvbigpe3ZhciBlLGk9dGhpcy5vcHRpb25zLHM9aS5oZWlnaHRTdHlsZSxuPXRoaXMuZWxlbWVudC5wYXJlbnQoKTt0aGlzLmFjdGl2ZT10aGlzLl9maW5kQWN0aXZlKGkuYWN0aXZlKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmFjdGl2ZSxcInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIikuX3JlbW92ZUNsYXNzKHRoaXMuYWN0aXZlLFwidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWRcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5hY3RpdmUubmV4dCgpLFwidWktYWNjb3JkaW9uLWNvbnRlbnQtYWN0aXZlXCIpLHRoaXMuYWN0aXZlLm5leHQoKS5zaG93KCksdGhpcy5oZWFkZXJzLmF0dHIoXCJyb2xlXCIsXCJ0YWJcIikuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyksaT1lLnVuaXF1ZUlkKCkuYXR0cihcImlkXCIpLHM9ZS5uZXh0KCksbj1zLnVuaXF1ZUlkKCkuYXR0cihcImlkXCIpO2UuYXR0cihcImFyaWEtY29udHJvbHNcIixuKSxzLmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIixpKX0pLm5leHQoKS5hdHRyKFwicm9sZVwiLFwidGFicGFuZWxcIiksdGhpcy5oZWFkZXJzLm5vdCh0aGlzLmFjdGl2ZSkuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIix0YWJJbmRleDotMX0pLm5leHQoKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KS5oaWRlKCksdGhpcy5hY3RpdmUubGVuZ3RoP3RoaXMuYWN0aXZlLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwidHJ1ZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwidHJ1ZVwiLHRhYkluZGV4OjB9KS5uZXh0KCkuYXR0cih7XCJhcmlhLWhpZGRlblwiOlwiZmFsc2VcIn0pOnRoaXMuaGVhZGVycy5lcSgwKS5hdHRyKFwidGFiSW5kZXhcIiwwKSx0aGlzLl9jcmVhdGVJY29ucygpLHRoaXMuX3NldHVwRXZlbnRzKGkuZXZlbnQpLFwiZmlsbFwiPT09cz8oZT1uLmhlaWdodCgpLHRoaXMuZWxlbWVudC5zaWJsaW5ncyhcIjp2aXNpYmxlXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLHM9aS5jc3MoXCJwb3NpdGlvblwiKTtcImFic29sdXRlXCIhPT1zJiZcImZpeGVkXCIhPT1zJiYoZS09aS5vdXRlckhlaWdodCghMCkpfSksdGhpcy5oZWFkZXJzLmVhY2goZnVuY3Rpb24oKXtlLT10KHRoaXMpLm91dGVySGVpZ2h0KCEwKX0pLHRoaXMuaGVhZGVycy5uZXh0KCkuZWFjaChmdW5jdGlvbigpe3QodGhpcykuaGVpZ2h0KE1hdGgubWF4KDAsZS10KHRoaXMpLmlubmVySGVpZ2h0KCkrdCh0aGlzKS5oZWlnaHQoKSkpfSkuY3NzKFwib3ZlcmZsb3dcIixcImF1dG9cIikpOlwiYXV0b1wiPT09cyYmKGU9MCx0aGlzLmhlYWRlcnMubmV4dCgpLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLmlzKFwiOnZpc2libGVcIik7aXx8dCh0aGlzKS5zaG93KCksZT1NYXRoLm1heChlLHQodGhpcykuY3NzKFwiaGVpZ2h0XCIsXCJcIikuaGVpZ2h0KCkpLGl8fHQodGhpcykuaGlkZSgpfSkuaGVpZ2h0KGUpKX0sX2FjdGl2YXRlOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2ZpbmRBY3RpdmUoZSlbMF07aSE9PXRoaXMuYWN0aXZlWzBdJiYoaT1pfHx0aGlzLmFjdGl2ZVswXSx0aGlzLl9ldmVudEhhbmRsZXIoe3RhcmdldDppLGN1cnJlbnRUYXJnZXQ6aSxwcmV2ZW50RGVmYXVsdDp0Lm5vb3B9KSl9LF9maW5kQWN0aXZlOmZ1bmN0aW9uKGUpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiBlP3RoaXMuaGVhZGVycy5lcShlKTp0KCl9LF9zZXR1cEV2ZW50czpmdW5jdGlvbihlKXt2YXIgaT17a2V5ZG93bjpcIl9rZXlkb3duXCJ9O2UmJnQuZWFjaChlLnNwbGl0KFwiIFwiKSxmdW5jdGlvbih0LGUpe2lbZV09XCJfZXZlbnRIYW5kbGVyXCJ9KSx0aGlzLl9vZmYodGhpcy5oZWFkZXJzLmFkZCh0aGlzLmhlYWRlcnMubmV4dCgpKSksdGhpcy5fb24odGhpcy5oZWFkZXJzLGkpLHRoaXMuX29uKHRoaXMuaGVhZGVycy5uZXh0KCkse2tleWRvd246XCJfcGFuZWxLZXlEb3duXCJ9KSx0aGlzLl9ob3ZlcmFibGUodGhpcy5oZWFkZXJzKSx0aGlzLl9mb2N1c2FibGUodGhpcy5oZWFkZXJzKX0sX2V2ZW50SGFuZGxlcjpmdW5jdGlvbihlKXt2YXIgaSxzLG49dGhpcy5vcHRpb25zLG89dGhpcy5hY3RpdmUsYT10KGUuY3VycmVudFRhcmdldCkscj1hWzBdPT09b1swXSxoPXImJm4uY29sbGFwc2libGUsbD1oP3QoKTphLm5leHQoKSxjPW8ubmV4dCgpLHU9e29sZEhlYWRlcjpvLG9sZFBhbmVsOmMsbmV3SGVhZGVyOmg/dCgpOmEsbmV3UGFuZWw6bH07ZS5wcmV2ZW50RGVmYXVsdCgpLHImJiFuLmNvbGxhcHNpYmxlfHx0aGlzLl90cmlnZ2VyKFwiYmVmb3JlQWN0aXZhdGVcIixlLHUpPT09ITF8fChuLmFjdGl2ZT1oPyExOnRoaXMuaGVhZGVycy5pbmRleChhKSx0aGlzLmFjdGl2ZT1yP3QoKTphLHRoaXMuX3RvZ2dsZSh1KSx0aGlzLl9yZW1vdmVDbGFzcyhvLFwidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmVcIixcInVpLXN0YXRlLWFjdGl2ZVwiKSxuLmljb25zJiYoaT1vLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKSx0aGlzLl9yZW1vdmVDbGFzcyhpLG51bGwsbi5pY29ucy5hY3RpdmVIZWFkZXIpLl9hZGRDbGFzcyhpLG51bGwsbi5pY29ucy5oZWFkZXIpKSxyfHwodGhpcy5fcmVtb3ZlQ2xhc3MoYSxcInVpLWFjY29yZGlvbi1oZWFkZXItY29sbGFwc2VkXCIpLl9hZGRDbGFzcyhhLFwidWktYWNjb3JkaW9uLWhlYWRlci1hY3RpdmVcIixcInVpLXN0YXRlLWFjdGl2ZVwiKSxuLmljb25zJiYocz1hLmNoaWxkcmVuKFwiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvblwiKSx0aGlzLl9yZW1vdmVDbGFzcyhzLG51bGwsbi5pY29ucy5oZWFkZXIpLl9hZGRDbGFzcyhzLG51bGwsbi5pY29ucy5hY3RpdmVIZWFkZXIpKSx0aGlzLl9hZGRDbGFzcyhhLm5leHQoKSxcInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZVwiKSkpfSxfdG9nZ2xlOmZ1bmN0aW9uKGUpe3ZhciBpPWUubmV3UGFuZWwscz10aGlzLnByZXZTaG93Lmxlbmd0aD90aGlzLnByZXZTaG93OmUub2xkUGFuZWw7dGhpcy5wcmV2U2hvdy5hZGQodGhpcy5wcmV2SGlkZSkuc3RvcCghMCwhMCksdGhpcy5wcmV2U2hvdz1pLHRoaXMucHJldkhpZGU9cyx0aGlzLm9wdGlvbnMuYW5pbWF0ZT90aGlzLl9hbmltYXRlKGkscyxlKToocy5oaWRlKCksaS5zaG93KCksdGhpcy5fdG9nZ2xlQ29tcGxldGUoZSkpLHMuYXR0cih7XCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwifSkscy5wcmV2KCkuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIn0pLGkubGVuZ3RoJiZzLmxlbmd0aD9zLnByZXYoKS5hdHRyKHt0YWJJbmRleDotMSxcImFyaWEtZXhwYW5kZWRcIjpcImZhbHNlXCJ9KTppLmxlbmd0aCYmdGhpcy5oZWFkZXJzLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiAwPT09cGFyc2VJbnQodCh0aGlzKS5hdHRyKFwidGFiSW5kZXhcIiksMTApfSkuYXR0cihcInRhYkluZGV4XCIsLTEpLGkuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKS5wcmV2KCkuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJ0cnVlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJ0cnVlXCIsdGFiSW5kZXg6MH0pfSxfYW5pbWF0ZTpmdW5jdGlvbih0LGUsaSl7dmFyIHMsbixvLGE9dGhpcyxyPTAsaD10LmNzcyhcImJveC1zaXppbmdcIiksbD10Lmxlbmd0aCYmKCFlLmxlbmd0aHx8dC5pbmRleCgpPGUuaW5kZXgoKSksYz10aGlzLm9wdGlvbnMuYW5pbWF0ZXx8e30sdT1sJiZjLmRvd258fGMsZD1mdW5jdGlvbigpe2EuX3RvZ2dsZUNvbXBsZXRlKGkpfTtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdSYmKG89dSksXCJzdHJpbmdcIj09dHlwZW9mIHUmJihuPXUpLG49bnx8dS5lYXNpbmd8fGMuZWFzaW5nLG89b3x8dS5kdXJhdGlvbnx8Yy5kdXJhdGlvbixlLmxlbmd0aD90Lmxlbmd0aD8ocz10LnNob3coKS5vdXRlckhlaWdodCgpLGUuYW5pbWF0ZSh0aGlzLmhpZGVQcm9wcyx7ZHVyYXRpb246byxlYXNpbmc6bixzdGVwOmZ1bmN0aW9uKHQsZSl7ZS5ub3c9TWF0aC5yb3VuZCh0KX19KSx0LmhpZGUoKS5hbmltYXRlKHRoaXMuc2hvd1Byb3BzLHtkdXJhdGlvbjpvLGVhc2luZzpuLGNvbXBsZXRlOmQsc3RlcDpmdW5jdGlvbih0LGkpe2kubm93PU1hdGgucm91bmQodCksXCJoZWlnaHRcIiE9PWkucHJvcD9cImNvbnRlbnQtYm94XCI9PT1oJiYocis9aS5ub3cpOlwiY29udGVudFwiIT09YS5vcHRpb25zLmhlaWdodFN0eWxlJiYoaS5ub3c9TWF0aC5yb3VuZChzLWUub3V0ZXJIZWlnaHQoKS1yKSxyPTApfX0pLHZvaWQgMCk6ZS5hbmltYXRlKHRoaXMuaGlkZVByb3BzLG8sbixkKTp0LmFuaW1hdGUodGhpcy5zaG93UHJvcHMsbyxuLGQpfSxfdG9nZ2xlQ29tcGxldGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5vbGRQYW5lbCxpPWUucHJldigpO3RoaXMuX3JlbW92ZUNsYXNzKGUsXCJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmVcIiksdGhpcy5fcmVtb3ZlQ2xhc3MoaSxcInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlXCIpLl9hZGRDbGFzcyhpLFwidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWRcIiksZS5sZW5ndGgmJihlLnBhcmVudCgpWzBdLmNsYXNzTmFtZT1lLnBhcmVudCgpWzBdLmNsYXNzTmFtZSksdGhpcy5fdHJpZ2dlcihcImFjdGl2YXRlXCIsbnVsbCx0KX19KSx0LnVpLnNhZmVBY3RpdmVFbGVtZW50PWZ1bmN0aW9uKHQpe3ZhciBlO3RyeXtlPXQuYWN0aXZlRWxlbWVudH1jYXRjaChpKXtlPXQuYm9keX1yZXR1cm4gZXx8KGU9dC5ib2R5KSxlLm5vZGVOYW1lfHwoZT10LmJvZHkpLGV9LHQud2lkZ2V0KFwidWkubWVudVwiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsZGVmYXVsdEVsZW1lbnQ6XCI8dWw+XCIsZGVsYXk6MzAwLG9wdGlvbnM6e2ljb25zOntzdWJtZW51OlwidWktaWNvbi1jYXJldC0xLWVcIn0saXRlbXM6XCI+ICpcIixtZW51czpcInVsXCIscG9zaXRpb246e215OlwibGVmdCB0b3BcIixhdDpcInJpZ2h0IHRvcFwifSxyb2xlOlwibWVudVwiLGJsdXI6bnVsbCxmb2N1czpudWxsLHNlbGVjdDpudWxsfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5hY3RpdmVNZW51PXRoaXMuZWxlbWVudCx0aGlzLm1vdXNlSGFuZGxlZD0hMSx0aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hdHRyKHtyb2xlOnRoaXMub3B0aW9ucy5yb2xlLHRhYkluZGV4OjB9KSx0aGlzLl9hZGRDbGFzcyhcInVpLW1lbnVcIixcInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudFwiKSx0aGlzLl9vbih7XCJtb3VzZWRvd24gLnVpLW1lbnUtaXRlbVwiOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0sXCJjbGljayAudWktbWVudS1pdGVtXCI6ZnVuY3Rpb24oZSl7dmFyIGk9dChlLnRhcmdldCkscz10KHQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSkpOyF0aGlzLm1vdXNlSGFuZGxlZCYmaS5ub3QoXCIudWktc3RhdGUtZGlzYWJsZWRcIikubGVuZ3RoJiYodGhpcy5zZWxlY3QoZSksZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpfHwodGhpcy5tb3VzZUhhbmRsZWQ9ITApLGkuaGFzKFwiLnVpLW1lbnVcIikubGVuZ3RoP3RoaXMuZXhwYW5kKGUpOiF0aGlzLmVsZW1lbnQuaXMoXCI6Zm9jdXNcIikmJnMuY2xvc2VzdChcIi51aS1tZW51XCIpLmxlbmd0aCYmKHRoaXMuZWxlbWVudC50cmlnZ2VyKFwiZm9jdXNcIixbITBdKSx0aGlzLmFjdGl2ZSYmMT09PXRoaXMuYWN0aXZlLnBhcmVudHMoXCIudWktbWVudVwiKS5sZW5ndGgmJmNsZWFyVGltZW91dCh0aGlzLnRpbWVyKSkpfSxcIm1vdXNlZW50ZXIgLnVpLW1lbnUtaXRlbVwiOmZ1bmN0aW9uKGUpe2lmKCF0aGlzLnByZXZpb3VzRmlsdGVyKXt2YXIgaT10KGUudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiKSxzPXQoZS5jdXJyZW50VGFyZ2V0KTtpWzBdPT09c1swXSYmKHRoaXMuX3JlbW92ZUNsYXNzKHMuc2libGluZ3MoKS5jaGlsZHJlbihcIi51aS1zdGF0ZS1hY3RpdmVcIiksbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLmZvY3VzKGUscykpfX0sbW91c2VsZWF2ZTpcImNvbGxhcHNlQWxsXCIsXCJtb3VzZWxlYXZlIC51aS1tZW51XCI6XCJjb2xsYXBzZUFsbFwiLGZvY3VzOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5hY3RpdmV8fHRoaXMuZWxlbWVudC5maW5kKHRoaXMub3B0aW9ucy5pdGVtcykuZXEoMCk7ZXx8dGhpcy5mb2N1cyh0LGkpfSxibHVyOmZ1bmN0aW9uKGUpe3RoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dmFyIGk9IXQuY29udGFpbnModGhpcy5lbGVtZW50WzBdLHQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSkpO2kmJnRoaXMuY29sbGFwc2VBbGwoZSl9KX0sa2V5ZG93bjpcIl9rZXlkb3duXCJ9KSx0aGlzLnJlZnJlc2goKSx0aGlzLl9vbih0aGlzLmRvY3VtZW50LHtjbGljazpmdW5jdGlvbih0KXt0aGlzLl9jbG9zZU9uRG9jdW1lbnRDbGljayh0KSYmdGhpcy5jb2xsYXBzZUFsbCh0KSx0aGlzLm1vdXNlSGFuZGxlZD0hMX19KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51LWl0ZW1cIikucmVtb3ZlQXR0cihcInJvbGUgYXJpYS1kaXNhYmxlZFwiKSxpPWUuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtLXdyYXBwZXJcIikucmVtb3ZlVW5pcXVlSWQoKS5yZW1vdmVBdHRyKFwidGFiSW5kZXggcm9sZSBhcmlhLWhhc3BvcHVwXCIpO3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIpLmZpbmQoXCIudWktbWVudVwiKS5hZGRCYWNrKCkucmVtb3ZlQXR0cihcInJvbGUgYXJpYS1sYWJlbGxlZGJ5IGFyaWEtZXhwYW5kZWQgYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCB0YWJJbmRleFwiKS5yZW1vdmVVbmlxdWVJZCgpLnNob3coKSxpLmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7ZS5kYXRhKFwidWktbWVudS1zdWJtZW51LWNhcmV0XCIpJiZlLnJlbW92ZSgpfSl9LF9rZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGE9ITA7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSB0LnVpLmtleUNvZGUuUEFHRV9VUDp0aGlzLnByZXZpb3VzUGFnZShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5QQUdFX0RPV046dGhpcy5uZXh0UGFnZShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5IT01FOnRoaXMuX21vdmUoXCJmaXJzdFwiLFwiZmlyc3RcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FTkQ6dGhpcy5fbW92ZShcImxhc3RcIixcImxhc3RcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5VUDp0aGlzLnByZXZpb3VzKGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkRPV046dGhpcy5uZXh0KGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkxFRlQ6dGhpcy5jb2xsYXBzZShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5SSUdIVDp0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLmlzKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpJiZ0aGlzLmV4cGFuZChlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FTlRFUjpjYXNlIHQudWkua2V5Q29kZS5TUEFDRTp0aGlzLl9hY3RpdmF0ZShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5FU0NBUEU6dGhpcy5jb2xsYXBzZShlKTticmVhaztkZWZhdWx0OmE9ITEscz10aGlzLnByZXZpb3VzRmlsdGVyfHxcIlwiLG89ITEsbj1lLmtleUNvZGU+PTk2JiYxMDU+PWUua2V5Q29kZT9cIlwiKyhlLmtleUNvZGUtOTYpOlN0cmluZy5mcm9tQ2hhckNvZGUoZS5rZXlDb2RlKSxjbGVhclRpbWVvdXQodGhpcy5maWx0ZXJUaW1lciksbj09PXM/bz0hMDpuPXMrbixpPXRoaXMuX2ZpbHRlck1lbnVJdGVtcyhuKSxpPW8mJi0xIT09aS5pbmRleCh0aGlzLmFjdGl2ZS5uZXh0KCkpP3RoaXMuYWN0aXZlLm5leHRBbGwoXCIudWktbWVudS1pdGVtXCIpOmksaS5sZW5ndGh8fChuPVN0cmluZy5mcm9tQ2hhckNvZGUoZS5rZXlDb2RlKSxpPXRoaXMuX2ZpbHRlck1lbnVJdGVtcyhuKSksaS5sZW5ndGg/KHRoaXMuZm9jdXMoZSxpKSx0aGlzLnByZXZpb3VzRmlsdGVyPW4sdGhpcy5maWx0ZXJUaW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyfSwxZTMpKTpkZWxldGUgdGhpcy5wcmV2aW91c0ZpbHRlcn1hJiZlLnByZXZlbnREZWZhdWx0KCl9LF9hY3RpdmF0ZTpmdW5jdGlvbih0KXt0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLmlzKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpJiYodGhpcy5hY3RpdmUuY2hpbGRyZW4oXCJbYXJpYS1oYXNwb3B1cD0ndHJ1ZSddXCIpLmxlbmd0aD90aGlzLmV4cGFuZCh0KTp0aGlzLnNlbGVjdCh0KSl9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgZSxpLHMsbixvLGE9dGhpcyxyPXRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51LGg9dGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLm1lbnVzKTt0aGlzLl90b2dnbGVDbGFzcyhcInVpLW1lbnUtaWNvbnNcIixudWxsLCEhdGhpcy5lbGVtZW50LmZpbmQoXCIudWktaWNvblwiKS5sZW5ndGgpLHM9aC5maWx0ZXIoXCI6bm90KC51aS1tZW51KVwiKS5oaWRlKCkuYXR0cih7cm9sZTp0aGlzLm9wdGlvbnMucm9sZSxcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCIsXCJhcmlhLWV4cGFuZGVkXCI6XCJmYWxzZVwifSkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyksaT1lLnByZXYoKSxzPXQoXCI8c3Bhbj5cIikuZGF0YShcInVpLW1lbnUtc3VibWVudS1jYXJldFwiLCEwKTthLl9hZGRDbGFzcyhzLFwidWktbWVudS1pY29uXCIsXCJ1aS1pY29uIFwiK3IpLGkuYXR0cihcImFyaWEtaGFzcG9wdXBcIixcInRydWVcIikucHJlcGVuZChzKSxlLmF0dHIoXCJhcmlhLWxhYmVsbGVkYnlcIixpLmF0dHIoXCJpZFwiKSl9KSx0aGlzLl9hZGRDbGFzcyhzLFwidWktbWVudVwiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWZyb250XCIpLGU9aC5hZGQodGhpcy5lbGVtZW50KSxpPWUuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLGkubm90KFwiLnVpLW1lbnUtaXRlbVwiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTthLl9pc0RpdmlkZXIoZSkmJmEuX2FkZENsYXNzKGUsXCJ1aS1tZW51LWRpdmlkZXJcIixcInVpLXdpZGdldC1jb250ZW50XCIpfSksbj1pLm5vdChcIi51aS1tZW51LWl0ZW0sIC51aS1tZW51LWRpdmlkZXJcIiksbz1uLmNoaWxkcmVuKCkubm90KFwiLnVpLW1lbnVcIikudW5pcXVlSWQoKS5hdHRyKHt0YWJJbmRleDotMSxyb2xlOnRoaXMuX2l0ZW1Sb2xlKCl9KSx0aGlzLl9hZGRDbGFzcyhuLFwidWktbWVudS1pdGVtXCIpLl9hZGRDbGFzcyhvLFwidWktbWVudS1pdGVtLXdyYXBwZXJcIiksaS5maWx0ZXIoXCIudWktc3RhdGUtZGlzYWJsZWRcIikuYXR0cihcImFyaWEtZGlzYWJsZWRcIixcInRydWVcIiksdGhpcy5hY3RpdmUmJiF0LmNvbnRhaW5zKHRoaXMuZWxlbWVudFswXSx0aGlzLmFjdGl2ZVswXSkmJnRoaXMuYmx1cigpfSxfaXRlbVJvbGU6ZnVuY3Rpb24oKXtyZXR1cm57bWVudTpcIm1lbnVpdGVtXCIsbGlzdGJveDpcIm9wdGlvblwifVt0aGlzLm9wdGlvbnMucm9sZV19LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtpZihcImljb25zXCI9PT10KXt2YXIgaT10aGlzLmVsZW1lbnQuZmluZChcIi51aS1tZW51LWljb25cIik7dGhpcy5fcmVtb3ZlQ2xhc3MoaSxudWxsLHRoaXMub3B0aW9ucy5pY29ucy5zdWJtZW51KS5fYWRkQ2xhc3MoaSxudWxsLGUuc3VibWVudSl9dGhpcy5fc3VwZXIodCxlKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMuZWxlbWVudC5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLHQrXCJcIiksdGhpcy5fdG9nZ2xlQ2xhc3MobnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsISF0KX0sZm9jdXM6ZnVuY3Rpb24odCxlKXt2YXIgaSxzLG47dGhpcy5ibHVyKHQsdCYmXCJmb2N1c1wiPT09dC50eXBlKSx0aGlzLl9zY3JvbGxJbnRvVmlldyhlKSx0aGlzLmFjdGl2ZT1lLmZpcnN0KCkscz10aGlzLmFjdGl2ZS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKSx0aGlzLl9hZGRDbGFzcyhzLG51bGwsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5vcHRpb25zLnJvbGUmJnRoaXMuZWxlbWVudC5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIscy5hdHRyKFwiaWRcIikpLG49dGhpcy5hY3RpdmUucGFyZW50KCkuY2xvc2VzdChcIi51aS1tZW51LWl0ZW1cIikuY2hpbGRyZW4oXCIudWktbWVudS1pdGVtLXdyYXBwZXJcIiksdGhpcy5fYWRkQ2xhc3MobixudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHQmJlwia2V5ZG93blwiPT09dC50eXBlP3RoaXMuX2Nsb3NlKCk6dGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuX2Nsb3NlKCl9LHRoaXMuZGVsYXkpLGk9ZS5jaGlsZHJlbihcIi51aS1tZW51XCIpLGkubGVuZ3RoJiZ0JiYvXm1vdXNlLy50ZXN0KHQudHlwZSkmJnRoaXMuX3N0YXJ0T3BlbmluZyhpKSx0aGlzLmFjdGl2ZU1lbnU9ZS5wYXJlbnQoKSx0aGlzLl90cmlnZ2VyKFwiZm9jdXNcIix0LHtpdGVtOmV9KX0sX3Njcm9sbEludG9WaWV3OmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGEscjt0aGlzLl9oYXNTY3JvbGwoKSYmKGk9cGFyc2VGbG9hdCh0LmNzcyh0aGlzLmFjdGl2ZU1lbnVbMF0sXCJib3JkZXJUb3BXaWR0aFwiKSl8fDAscz1wYXJzZUZsb2F0KHQuY3NzKHRoaXMuYWN0aXZlTWVudVswXSxcInBhZGRpbmdUb3BcIikpfHwwLG49ZS5vZmZzZXQoKS50b3AtdGhpcy5hY3RpdmVNZW51Lm9mZnNldCgpLnRvcC1pLXMsbz10aGlzLmFjdGl2ZU1lbnUuc2Nyb2xsVG9wKCksYT10aGlzLmFjdGl2ZU1lbnUuaGVpZ2h0KCkscj1lLm91dGVySGVpZ2h0KCksMD5uP3RoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AobytuKTpuK3I+YSYmdGhpcy5hY3RpdmVNZW51LnNjcm9sbFRvcChvK24tYStyKSl9LGJsdXI6ZnVuY3Rpb24odCxlKXtlfHxjbGVhclRpbWVvdXQodGhpcy50aW1lciksdGhpcy5hY3RpdmUmJih0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmFjdGl2ZS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKSxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuX3RyaWdnZXIoXCJibHVyXCIsdCx7aXRlbTp0aGlzLmFjdGl2ZX0pLHRoaXMuYWN0aXZlPW51bGwpfSxfc3RhcnRPcGVuaW5nOmZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dCh0aGlzLnRpbWVyKSxcInRydWVcIj09PXQuYXR0cihcImFyaWEtaGlkZGVuXCIpJiYodGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMuX2Nsb3NlKCksdGhpcy5fb3Blbih0KX0sdGhpcy5kZWxheSkpfSxfb3BlbjpmdW5jdGlvbihlKXt2YXIgaT10LmV4dGVuZCh7b2Y6dGhpcy5hY3RpdmV9LHRoaXMub3B0aW9ucy5wb3NpdGlvbik7Y2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLHRoaXMuZWxlbWVudC5maW5kKFwiLnVpLW1lbnVcIikubm90KGUucGFyZW50cyhcIi51aS1tZW51XCIpKS5oaWRlKCkuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJ0cnVlXCIpLGUuc2hvdygpLnJlbW92ZUF0dHIoXCJhcmlhLWhpZGRlblwiKS5hdHRyKFwiYXJpYS1leHBhbmRlZFwiLFwidHJ1ZVwiKS5wb3NpdGlvbihpKX0sY29sbGFwc2VBbGw6ZnVuY3Rpb24oZSxpKXtjbGVhclRpbWVvdXQodGhpcy50aW1lciksdGhpcy50aW1lcj10aGlzLl9kZWxheShmdW5jdGlvbigpe3ZhciBzPWk/dGhpcy5lbGVtZW50OnQoZSYmZS50YXJnZXQpLmNsb3Nlc3QodGhpcy5lbGVtZW50LmZpbmQoXCIudWktbWVudVwiKSk7cy5sZW5ndGh8fChzPXRoaXMuZWxlbWVudCksdGhpcy5fY2xvc2UocyksdGhpcy5ibHVyKGUpLHRoaXMuX3JlbW92ZUNsYXNzKHMuZmluZChcIi51aS1zdGF0ZS1hY3RpdmVcIiksbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLmFjdGl2ZU1lbnU9c30sdGhpcy5kZWxheSl9LF9jbG9zZTpmdW5jdGlvbih0KXt0fHwodD10aGlzLmFjdGl2ZT90aGlzLmFjdGl2ZS5wYXJlbnQoKTp0aGlzLmVsZW1lbnQpLHQuZmluZChcIi51aS1tZW51XCIpLmhpZGUoKS5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIikuYXR0cihcImFyaWEtZXhwYW5kZWRcIixcImZhbHNlXCIpfSxfY2xvc2VPbkRvY3VtZW50Q2xpY2s6ZnVuY3Rpb24oZSl7cmV0dXJuIXQoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktbWVudVwiKS5sZW5ndGh9LF9pc0RpdmlkZXI6ZnVuY3Rpb24odCl7cmV0dXJuIS9bXlxcLVxcdTIwMTRcXHUyMDEzXFxzXS8udGVzdCh0LnRleHQoKSl9LGNvbGxhcHNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuYWN0aXZlJiZ0aGlzLmFjdGl2ZS5wYXJlbnQoKS5jbG9zZXN0KFwiLnVpLW1lbnUtaXRlbVwiLHRoaXMuZWxlbWVudCk7ZSYmZS5sZW5ndGgmJih0aGlzLl9jbG9zZSgpLHRoaXMuZm9jdXModCxlKSl9LGV4cGFuZDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmFjdGl2ZSYmdGhpcy5hY3RpdmUuY2hpbGRyZW4oXCIudWktbWVudSBcIikuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLmZpcnN0KCk7ZSYmZS5sZW5ndGgmJih0aGlzLl9vcGVuKGUucGFyZW50KCkpLHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5mb2N1cyh0LGUpfSkpfSxuZXh0OmZ1bmN0aW9uKHQpe3RoaXMuX21vdmUoXCJuZXh0XCIsXCJmaXJzdFwiLHQpfSxwcmV2aW91czpmdW5jdGlvbih0KXt0aGlzLl9tb3ZlKFwicHJldlwiLFwibGFzdFwiLHQpfSxpc0ZpcnN0SXRlbTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLnByZXZBbGwoXCIudWktbWVudS1pdGVtXCIpLmxlbmd0aH0saXNMYXN0SXRlbTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmFjdGl2ZSYmIXRoaXMuYWN0aXZlLm5leHRBbGwoXCIudWktbWVudS1pdGVtXCIpLmxlbmd0aH0sX21vdmU6ZnVuY3Rpb24odCxlLGkpe3ZhciBzO3RoaXMuYWN0aXZlJiYocz1cImZpcnN0XCI9PT10fHxcImxhc3RcIj09PXQ/dGhpcy5hY3RpdmVbXCJmaXJzdFwiPT09dD9cInByZXZBbGxcIjpcIm5leHRBbGxcIl0oXCIudWktbWVudS1pdGVtXCIpLmVxKC0xKTp0aGlzLmFjdGl2ZVt0K1wiQWxsXCJdKFwiLnVpLW1lbnUtaXRlbVwiKS5lcSgwKSkscyYmcy5sZW5ndGgmJnRoaXMuYWN0aXZlfHwocz10aGlzLmFjdGl2ZU1lbnUuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpW2VdKCkpLHRoaXMuZm9jdXMoaSxzKX0sbmV4dFBhZ2U6ZnVuY3Rpb24oZSl7dmFyIGkscyxuO3JldHVybiB0aGlzLmFjdGl2ZT8odGhpcy5pc0xhc3RJdGVtKCl8fCh0aGlzLl9oYXNTY3JvbGwoKT8ocz10aGlzLmFjdGl2ZS5vZmZzZXQoKS50b3Asbj10aGlzLmVsZW1lbnQuaGVpZ2h0KCksdGhpcy5hY3RpdmUubmV4dEFsbChcIi51aS1tZW51LWl0ZW1cIikuZWFjaChmdW5jdGlvbigpe3JldHVybiBpPXQodGhpcyksMD5pLm9mZnNldCgpLnRvcC1zLW59KSx0aGlzLmZvY3VzKGUsaSkpOnRoaXMuZm9jdXMoZSx0aGlzLmFjdGl2ZU1lbnUuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpW3RoaXMuYWN0aXZlP1wibGFzdFwiOlwiZmlyc3RcIl0oKSkpLHZvaWQgMCk6KHRoaXMubmV4dChlKSx2b2lkIDApfSxwcmV2aW91c1BhZ2U6ZnVuY3Rpb24oZSl7dmFyIGkscyxuO3JldHVybiB0aGlzLmFjdGl2ZT8odGhpcy5pc0ZpcnN0SXRlbSgpfHwodGhpcy5faGFzU2Nyb2xsKCk/KHM9dGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wLG49dGhpcy5lbGVtZW50LmhlaWdodCgpLHRoaXMuYWN0aXZlLnByZXZBbGwoXCIudWktbWVudS1pdGVtXCIpLmVhY2goZnVuY3Rpb24oKXtyZXR1cm4gaT10KHRoaXMpLGkub2Zmc2V0KCkudG9wLXMrbj4wfSksdGhpcy5mb2N1cyhlLGkpKTp0aGlzLmZvY3VzKGUsdGhpcy5hY3RpdmVNZW51LmZpbmQodGhpcy5vcHRpb25zLml0ZW1zKS5maXJzdCgpKSksdm9pZCAwKToodGhpcy5uZXh0KGUpLHZvaWQgMCl9LF9oYXNTY3JvbGw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCk8dGhpcy5lbGVtZW50LnByb3AoXCJzY3JvbGxIZWlnaHRcIil9LHNlbGVjdDpmdW5jdGlvbihlKXt0aGlzLmFjdGl2ZT10aGlzLmFjdGl2ZXx8dChlLnRhcmdldCkuY2xvc2VzdChcIi51aS1tZW51LWl0ZW1cIik7dmFyIGk9e2l0ZW06dGhpcy5hY3RpdmV9O3RoaXMuYWN0aXZlLmhhcyhcIi51aS1tZW51XCIpLmxlbmd0aHx8dGhpcy5jb2xsYXBzZUFsbChlLCEwKSx0aGlzLl90cmlnZ2VyKFwic2VsZWN0XCIsZSxpKX0sX2ZpbHRlck1lbnVJdGVtczpmdW5jdGlvbihlKXt2YXIgaT1lLnJlcGxhY2UoL1tcXC1cXFtcXF17fSgpKis/LixcXFxcXFxeJHwjXFxzXS9nLFwiXFxcXCQmXCIpLHM9UmVnRXhwKFwiXlwiK2ksXCJpXCIpO3JldHVybiB0aGlzLmFjdGl2ZU1lbnUuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMpLmZpbHRlcihcIi51aS1tZW51LWl0ZW1cIikuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuIHMudGVzdCh0LnRyaW0odCh0aGlzKS5jaGlsZHJlbihcIi51aS1tZW51LWl0ZW0td3JhcHBlclwiKS50ZXh0KCkpKX0pfX0pLHQud2lkZ2V0KFwidWkuYXV0b2NvbXBsZXRlXCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjxpbnB1dD5cIixvcHRpb25zOnthcHBlbmRUbzpudWxsLGF1dG9Gb2N1czohMSxkZWxheTozMDAsbWluTGVuZ3RoOjEscG9zaXRpb246e215OlwibGVmdCB0b3BcIixhdDpcImxlZnQgYm90dG9tXCIsY29sbGlzaW9uOlwibm9uZVwifSxzb3VyY2U6bnVsbCxjaGFuZ2U6bnVsbCxjbG9zZTpudWxsLGZvY3VzOm51bGwsb3BlbjpudWxsLHJlc3BvbnNlOm51bGwsc2VhcmNoOm51bGwsc2VsZWN0Om51bGx9LHJlcXVlc3RJbmRleDowLHBlbmRpbmc6MCxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGUsaSxzLG49dGhpcy5lbGVtZW50WzBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksbz1cInRleHRhcmVhXCI9PT1uLGE9XCJpbnB1dFwiPT09bjtcbnRoaXMuaXNNdWx0aUxpbmU9b3x8IWEmJnRoaXMuX2lzQ29udGVudEVkaXRhYmxlKHRoaXMuZWxlbWVudCksdGhpcy52YWx1ZU1ldGhvZD10aGlzLmVsZW1lbnRbb3x8YT9cInZhbFwiOlwidGV4dFwiXSx0aGlzLmlzTmV3TWVudT0hMCx0aGlzLl9hZGRDbGFzcyhcInVpLWF1dG9jb21wbGV0ZS1pbnB1dFwiKSx0aGlzLmVsZW1lbnQuYXR0cihcImF1dG9jb21wbGV0ZVwiLFwib2ZmXCIpLHRoaXMuX29uKHRoaXMuZWxlbWVudCx7a2V5ZG93bjpmdW5jdGlvbihuKXtpZih0aGlzLmVsZW1lbnQucHJvcChcInJlYWRPbmx5XCIpKXJldHVybiBlPSEwLHM9ITAsaT0hMCx2b2lkIDA7ZT0hMSxzPSExLGk9ITE7dmFyIG89dC51aS5rZXlDb2RlO3N3aXRjaChuLmtleUNvZGUpe2Nhc2Ugby5QQUdFX1VQOmU9ITAsdGhpcy5fbW92ZShcInByZXZpb3VzUGFnZVwiLG4pO2JyZWFrO2Nhc2Ugby5QQUdFX0RPV046ZT0hMCx0aGlzLl9tb3ZlKFwibmV4dFBhZ2VcIixuKTticmVhaztjYXNlIG8uVVA6ZT0hMCx0aGlzLl9rZXlFdmVudChcInByZXZpb3VzXCIsbik7YnJlYWs7Y2FzZSBvLkRPV046ZT0hMCx0aGlzLl9rZXlFdmVudChcIm5leHRcIixuKTticmVhaztjYXNlIG8uRU5URVI6dGhpcy5tZW51LmFjdGl2ZSYmKGU9ITAsbi5wcmV2ZW50RGVmYXVsdCgpLHRoaXMubWVudS5zZWxlY3QobikpO2JyZWFrO2Nhc2Ugby5UQUI6dGhpcy5tZW51LmFjdGl2ZSYmdGhpcy5tZW51LnNlbGVjdChuKTticmVhaztjYXNlIG8uRVNDQVBFOnRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikmJih0aGlzLmlzTXVsdGlMaW5lfHx0aGlzLl92YWx1ZSh0aGlzLnRlcm0pLHRoaXMuY2xvc2Uobiksbi5wcmV2ZW50RGVmYXVsdCgpKTticmVhaztkZWZhdWx0Omk9ITAsdGhpcy5fc2VhcmNoVGltZW91dChuKX19LGtleXByZXNzOmZ1bmN0aW9uKHMpe2lmKGUpcmV0dXJuIGU9ITEsKCF0aGlzLmlzTXVsdGlMaW5lfHx0aGlzLm1lbnUuZWxlbWVudC5pcyhcIjp2aXNpYmxlXCIpKSYmcy5wcmV2ZW50RGVmYXVsdCgpLHZvaWQgMDtpZighaSl7dmFyIG49dC51aS5rZXlDb2RlO3N3aXRjaChzLmtleUNvZGUpe2Nhc2Ugbi5QQUdFX1VQOnRoaXMuX21vdmUoXCJwcmV2aW91c1BhZ2VcIixzKTticmVhaztjYXNlIG4uUEFHRV9ET1dOOnRoaXMuX21vdmUoXCJuZXh0UGFnZVwiLHMpO2JyZWFrO2Nhc2Ugbi5VUDp0aGlzLl9rZXlFdmVudChcInByZXZpb3VzXCIscyk7YnJlYWs7Y2FzZSBuLkRPV046dGhpcy5fa2V5RXZlbnQoXCJuZXh0XCIscyl9fX0saW5wdXQ6ZnVuY3Rpb24odCl7cmV0dXJuIHM/KHM9ITEsdC5wcmV2ZW50RGVmYXVsdCgpLHZvaWQgMCk6KHRoaXMuX3NlYXJjaFRpbWVvdXQodCksdm9pZCAwKX0sZm9jdXM6ZnVuY3Rpb24oKXt0aGlzLnNlbGVjdGVkSXRlbT1udWxsLHRoaXMucHJldmlvdXM9dGhpcy5fdmFsdWUoKX0sYmx1cjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jYW5jZWxCbHVyPyhkZWxldGUgdGhpcy5jYW5jZWxCbHVyLHZvaWQgMCk6KGNsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5jbG9zZSh0KSx0aGlzLl9jaGFuZ2UodCksdm9pZCAwKX19KSx0aGlzLl9pbml0U291cmNlKCksdGhpcy5tZW51PXQoXCI8dWw+XCIpLmFwcGVuZFRvKHRoaXMuX2FwcGVuZFRvKCkpLm1lbnUoe3JvbGU6bnVsbH0pLmhpZGUoKS5tZW51KFwiaW5zdGFuY2VcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5tZW51LmVsZW1lbnQsXCJ1aS1hdXRvY29tcGxldGVcIixcInVpLWZyb250XCIpLHRoaXMuX29uKHRoaXMubWVudS5lbGVtZW50LHttb3VzZWRvd246ZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuY2FuY2VsQmx1cj0hMCx0aGlzLl9kZWxheShmdW5jdGlvbigpe2RlbGV0ZSB0aGlzLmNhbmNlbEJsdXIsdGhpcy5lbGVtZW50WzBdIT09dC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSYmdGhpcy5lbGVtZW50LnRyaWdnZXIoXCJmb2N1c1wiKX0pfSxtZW51Zm9jdXM6ZnVuY3Rpb24oZSxpKXt2YXIgcyxuO3JldHVybiB0aGlzLmlzTmV3TWVudSYmKHRoaXMuaXNOZXdNZW51PSExLGUub3JpZ2luYWxFdmVudCYmL15tb3VzZS8udGVzdChlLm9yaWdpbmFsRXZlbnQudHlwZSkpPyh0aGlzLm1lbnUuYmx1cigpLHRoaXMuZG9jdW1lbnQub25lKFwibW91c2Vtb3ZlXCIsZnVuY3Rpb24oKXt0KGUudGFyZ2V0KS50cmlnZ2VyKGUub3JpZ2luYWxFdmVudCl9KSx2b2lkIDApOihuPWkuaXRlbS5kYXRhKFwidWktYXV0b2NvbXBsZXRlLWl0ZW1cIiksITEhPT10aGlzLl90cmlnZ2VyKFwiZm9jdXNcIixlLHtpdGVtOm59KSYmZS5vcmlnaW5hbEV2ZW50JiYvXmtleS8udGVzdChlLm9yaWdpbmFsRXZlbnQudHlwZSkmJnRoaXMuX3ZhbHVlKG4udmFsdWUpLHM9aS5pdGVtLmF0dHIoXCJhcmlhLWxhYmVsXCIpfHxuLnZhbHVlLHMmJnQudHJpbShzKS5sZW5ndGgmJih0aGlzLmxpdmVSZWdpb24uY2hpbGRyZW4oKS5oaWRlKCksdChcIjxkaXY+XCIpLnRleHQocykuYXBwZW5kVG8odGhpcy5saXZlUmVnaW9uKSksdm9pZCAwKX0sbWVudXNlbGVjdDpmdW5jdGlvbihlLGkpe3ZhciBzPWkuaXRlbS5kYXRhKFwidWktYXV0b2NvbXBsZXRlLWl0ZW1cIiksbj10aGlzLnByZXZpb3VzO3RoaXMuZWxlbWVudFswXSE9PXQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSkmJih0aGlzLmVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIpLHRoaXMucHJldmlvdXM9bix0aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMucHJldmlvdXM9bix0aGlzLnNlbGVjdGVkSXRlbT1zfSkpLCExIT09dGhpcy5fdHJpZ2dlcihcInNlbGVjdFwiLGUse2l0ZW06c30pJiZ0aGlzLl92YWx1ZShzLnZhbHVlKSx0aGlzLnRlcm09dGhpcy5fdmFsdWUoKSx0aGlzLmNsb3NlKGUpLHRoaXMuc2VsZWN0ZWRJdGVtPXN9fSksdGhpcy5saXZlUmVnaW9uPXQoXCI8ZGl2PlwiLHtyb2xlOlwic3RhdHVzXCIsXCJhcmlhLWxpdmVcIjpcImFzc2VydGl2ZVwiLFwiYXJpYS1yZWxldmFudFwiOlwiYWRkaXRpb25zXCJ9KS5hcHBlbmRUbyh0aGlzLmRvY3VtZW50WzBdLmJvZHkpLHRoaXMuX2FkZENsYXNzKHRoaXMubGl2ZVJlZ2lvbixudWxsLFwidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlXCIpLHRoaXMuX29uKHRoaXMud2luZG93LHtiZWZvcmV1bmxvYWQ6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcImF1dG9jb21wbGV0ZVwiKX19KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodGhpcy5zZWFyY2hpbmcpLHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlXCIpLHRoaXMubWVudS5lbGVtZW50LnJlbW92ZSgpLHRoaXMubGl2ZVJlZ2lvbi5yZW1vdmUoKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3RoaXMuX3N1cGVyKHQsZSksXCJzb3VyY2VcIj09PXQmJnRoaXMuX2luaXRTb3VyY2UoKSxcImFwcGVuZFRvXCI9PT10JiZ0aGlzLm1lbnUuZWxlbWVudC5hcHBlbmRUbyh0aGlzLl9hcHBlbmRUbygpKSxcImRpc2FibGVkXCI9PT10JiZlJiZ0aGlzLnhociYmdGhpcy54aHIuYWJvcnQoKX0sX2lzRXZlbnRUYXJnZXRJbldpZGdldDpmdW5jdGlvbihlKXt2YXIgaT10aGlzLm1lbnUuZWxlbWVudFswXTtyZXR1cm4gZS50YXJnZXQ9PT10aGlzLmVsZW1lbnRbMF18fGUudGFyZ2V0PT09aXx8dC5jb250YWlucyhpLGUudGFyZ2V0KX0sX2Nsb3NlT25DbGlja091dHNpZGU6ZnVuY3Rpb24odCl7dGhpcy5faXNFdmVudFRhcmdldEluV2lkZ2V0KHQpfHx0aGlzLmNsb3NlKCl9LF9hcHBlbmRUbzpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucy5hcHBlbmRUbztyZXR1cm4gZSYmKGU9ZS5qcXVlcnl8fGUubm9kZVR5cGU/dChlKTp0aGlzLmRvY3VtZW50LmZpbmQoZSkuZXEoMCkpLGUmJmVbMF18fChlPXRoaXMuZWxlbWVudC5jbG9zZXN0KFwiLnVpLWZyb250LCBkaWFsb2dcIikpLGUubGVuZ3RofHwoZT10aGlzLmRvY3VtZW50WzBdLmJvZHkpLGV9LF9pbml0U291cmNlOmZ1bmN0aW9uKCl7dmFyIGUsaSxzPXRoaXM7dC5pc0FycmF5KHRoaXMub3B0aW9ucy5zb3VyY2UpPyhlPXRoaXMub3B0aW9ucy5zb3VyY2UsdGhpcy5zb3VyY2U9ZnVuY3Rpb24oaSxzKXtzKHQudWkuYXV0b2NvbXBsZXRlLmZpbHRlcihlLGkudGVybSkpfSk6XCJzdHJpbmdcIj09dHlwZW9mIHRoaXMub3B0aW9ucy5zb3VyY2U/KGk9dGhpcy5vcHRpb25zLnNvdXJjZSx0aGlzLnNvdXJjZT1mdW5jdGlvbihlLG4pe3MueGhyJiZzLnhoci5hYm9ydCgpLHMueGhyPXQuYWpheCh7dXJsOmksZGF0YTplLGRhdGFUeXBlOlwianNvblwiLHN1Y2Nlc3M6ZnVuY3Rpb24odCl7bih0KX0sZXJyb3I6ZnVuY3Rpb24oKXtuKFtdKX19KX0pOnRoaXMuc291cmNlPXRoaXMub3B0aW9ucy5zb3VyY2V9LF9zZWFyY2hUaW1lb3V0OmZ1bmN0aW9uKHQpe2NsZWFyVGltZW91dCh0aGlzLnNlYXJjaGluZyksdGhpcy5zZWFyY2hpbmc9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt2YXIgZT10aGlzLnRlcm09PT10aGlzLl92YWx1ZSgpLGk9dGhpcy5tZW51LmVsZW1lbnQuaXMoXCI6dmlzaWJsZVwiKSxzPXQuYWx0S2V5fHx0LmN0cmxLZXl8fHQubWV0YUtleXx8dC5zaGlmdEtleTsoIWV8fGUmJiFpJiYhcykmJih0aGlzLnNlbGVjdGVkSXRlbT1udWxsLHRoaXMuc2VhcmNoKG51bGwsdCkpfSx0aGlzLm9wdGlvbnMuZGVsYXkpfSxzZWFyY2g6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD1udWxsIT10P3Q6dGhpcy5fdmFsdWUoKSx0aGlzLnRlcm09dGhpcy5fdmFsdWUoKSx0Lmxlbmd0aDx0aGlzLm9wdGlvbnMubWluTGVuZ3RoP3RoaXMuY2xvc2UoZSk6dGhpcy5fdHJpZ2dlcihcInNlYXJjaFwiLGUpIT09ITE/dGhpcy5fc2VhcmNoKHQpOnZvaWQgMH0sX3NlYXJjaDpmdW5jdGlvbih0KXt0aGlzLnBlbmRpbmcrKyx0aGlzLl9hZGRDbGFzcyhcInVpLWF1dG9jb21wbGV0ZS1sb2FkaW5nXCIpLHRoaXMuY2FuY2VsU2VhcmNoPSExLHRoaXMuc291cmNlKHt0ZXJtOnR9LHRoaXMuX3Jlc3BvbnNlKCkpfSxfcmVzcG9uc2U6ZnVuY3Rpb24oKXt2YXIgZT0rK3RoaXMucmVxdWVzdEluZGV4O3JldHVybiB0LnByb3h5KGZ1bmN0aW9uKHQpe2U9PT10aGlzLnJlcXVlc3RJbmRleCYmdGhpcy5fX3Jlc3BvbnNlKHQpLHRoaXMucGVuZGluZy0tLHRoaXMucGVuZGluZ3x8dGhpcy5fcmVtb3ZlQ2xhc3MoXCJ1aS1hdXRvY29tcGxldGUtbG9hZGluZ1wiKX0sdGhpcyl9LF9fcmVzcG9uc2U6ZnVuY3Rpb24odCl7dCYmKHQ9dGhpcy5fbm9ybWFsaXplKHQpKSx0aGlzLl90cmlnZ2VyKFwicmVzcG9uc2VcIixudWxsLHtjb250ZW50OnR9KSwhdGhpcy5vcHRpb25zLmRpc2FibGVkJiZ0JiZ0Lmxlbmd0aCYmIXRoaXMuY2FuY2VsU2VhcmNoPyh0aGlzLl9zdWdnZXN0KHQpLHRoaXMuX3RyaWdnZXIoXCJvcGVuXCIpKTp0aGlzLl9jbG9zZSgpfSxjbG9zZTpmdW5jdGlvbih0KXt0aGlzLmNhbmNlbFNlYXJjaD0hMCx0aGlzLl9jbG9zZSh0KX0sX2Nsb3NlOmZ1bmN0aW9uKHQpe3RoaXMuX29mZih0aGlzLmRvY3VtZW50LFwibW91c2Vkb3duXCIpLHRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikmJih0aGlzLm1lbnUuZWxlbWVudC5oaWRlKCksdGhpcy5tZW51LmJsdXIoKSx0aGlzLmlzTmV3TWVudT0hMCx0aGlzLl90cmlnZ2VyKFwiY2xvc2VcIix0KSl9LF9jaGFuZ2U6ZnVuY3Rpb24odCl7dGhpcy5wcmV2aW91cyE9PXRoaXMuX3ZhbHVlKCkmJnRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIix0LHtpdGVtOnRoaXMuc2VsZWN0ZWRJdGVtfSl9LF9ub3JtYWxpemU6ZnVuY3Rpb24oZSl7cmV0dXJuIGUubGVuZ3RoJiZlWzBdLmxhYmVsJiZlWzBdLnZhbHVlP2U6dC5tYXAoZSxmdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZT97bGFiZWw6ZSx2YWx1ZTplfTp0LmV4dGVuZCh7fSxlLHtsYWJlbDplLmxhYmVsfHxlLnZhbHVlLHZhbHVlOmUudmFsdWV8fGUubGFiZWx9KX0pfSxfc3VnZ2VzdDpmdW5jdGlvbihlKXt2YXIgaT10aGlzLm1lbnUuZWxlbWVudC5lbXB0eSgpO3RoaXMuX3JlbmRlck1lbnUoaSxlKSx0aGlzLmlzTmV3TWVudT0hMCx0aGlzLm1lbnUucmVmcmVzaCgpLGkuc2hvdygpLHRoaXMuX3Jlc2l6ZU1lbnUoKSxpLnBvc2l0aW9uKHQuZXh0ZW5kKHtvZjp0aGlzLmVsZW1lbnR9LHRoaXMub3B0aW9ucy5wb3NpdGlvbikpLHRoaXMub3B0aW9ucy5hdXRvRm9jdXMmJnRoaXMubWVudS5uZXh0KCksdGhpcy5fb24odGhpcy5kb2N1bWVudCx7bW91c2Vkb3duOlwiX2Nsb3NlT25DbGlja091dHNpZGVcIn0pfSxfcmVzaXplTWVudTpmdW5jdGlvbigpe3ZhciB0PXRoaXMubWVudS5lbGVtZW50O3Qub3V0ZXJXaWR0aChNYXRoLm1heCh0LndpZHRoKFwiXCIpLm91dGVyV2lkdGgoKSsxLHRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCkpKX0sX3JlbmRlck1lbnU6ZnVuY3Rpb24oZSxpKXt2YXIgcz10aGlzO3QuZWFjaChpLGZ1bmN0aW9uKHQsaSl7cy5fcmVuZGVySXRlbURhdGEoZSxpKX0pfSxfcmVuZGVySXRlbURhdGE6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5fcmVuZGVySXRlbSh0LGUpLmRhdGEoXCJ1aS1hdXRvY29tcGxldGUtaXRlbVwiLGUpfSxfcmVuZGVySXRlbTpmdW5jdGlvbihlLGkpe3JldHVybiB0KFwiPGxpPlwiKS5hcHBlbmQodChcIjxkaXY+XCIpLnRleHQoaS5sYWJlbCkpLmFwcGVuZFRvKGUpfSxfbW92ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLm1lbnUuZWxlbWVudC5pcyhcIjp2aXNpYmxlXCIpP3RoaXMubWVudS5pc0ZpcnN0SXRlbSgpJiYvXnByZXZpb3VzLy50ZXN0KHQpfHx0aGlzLm1lbnUuaXNMYXN0SXRlbSgpJiYvXm5leHQvLnRlc3QodCk/KHRoaXMuaXNNdWx0aUxpbmV8fHRoaXMuX3ZhbHVlKHRoaXMudGVybSksdGhpcy5tZW51LmJsdXIoKSx2b2lkIDApOih0aGlzLm1lbnVbdF0oZSksdm9pZCAwKToodGhpcy5zZWFyY2gobnVsbCxlKSx2b2lkIDApfSx3aWRnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tZW51LmVsZW1lbnR9LF92YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlTWV0aG9kLmFwcGx5KHRoaXMuZWxlbWVudCxhcmd1bWVudHMpfSxfa2V5RXZlbnQ6ZnVuY3Rpb24odCxlKXsoIXRoaXMuaXNNdWx0aUxpbmV8fHRoaXMubWVudS5lbGVtZW50LmlzKFwiOnZpc2libGVcIikpJiYodGhpcy5fbW92ZSh0LGUpLGUucHJldmVudERlZmF1bHQoKSl9LF9pc0NvbnRlbnRFZGl0YWJsZTpmdW5jdGlvbih0KXtpZighdC5sZW5ndGgpcmV0dXJuITE7dmFyIGU9dC5wcm9wKFwiY29udGVudEVkaXRhYmxlXCIpO3JldHVyblwiaW5oZXJpdFwiPT09ZT90aGlzLl9pc0NvbnRlbnRFZGl0YWJsZSh0LnBhcmVudCgpKTpcInRydWVcIj09PWV9fSksdC5leHRlbmQodC51aS5hdXRvY29tcGxldGUse2VzY2FwZVJlZ2V4OmZ1bmN0aW9uKHQpe3JldHVybiB0LnJlcGxhY2UoL1tcXC1cXFtcXF17fSgpKis/LixcXFxcXFxeJHwjXFxzXS9nLFwiXFxcXCQmXCIpfSxmaWx0ZXI6ZnVuY3Rpb24oZSxpKXt2YXIgcz1SZWdFeHAodC51aS5hdXRvY29tcGxldGUuZXNjYXBlUmVnZXgoaSksXCJpXCIpO3JldHVybiB0LmdyZXAoZSxmdW5jdGlvbih0KXtyZXR1cm4gcy50ZXN0KHQubGFiZWx8fHQudmFsdWV8fHQpfSl9fSksdC53aWRnZXQoXCJ1aS5hdXRvY29tcGxldGVcIix0LnVpLmF1dG9jb21wbGV0ZSx7b3B0aW9uczp7bWVzc2FnZXM6e25vUmVzdWx0czpcIk5vIHNlYXJjaCByZXN1bHRzLlwiLHJlc3VsdHM6ZnVuY3Rpb24odCl7cmV0dXJuIHQrKHQ+MT9cIiByZXN1bHRzIGFyZVwiOlwiIHJlc3VsdCBpc1wiKStcIiBhdmFpbGFibGUsIHVzZSB1cCBhbmQgZG93biBhcnJvdyBrZXlzIHRvIG5hdmlnYXRlLlwifX19LF9fcmVzcG9uc2U6ZnVuY3Rpb24oZSl7dmFyIGk7dGhpcy5fc3VwZXJBcHBseShhcmd1bWVudHMpLHRoaXMub3B0aW9ucy5kaXNhYmxlZHx8dGhpcy5jYW5jZWxTZWFyY2h8fChpPWUmJmUubGVuZ3RoP3RoaXMub3B0aW9ucy5tZXNzYWdlcy5yZXN1bHRzKGUubGVuZ3RoKTp0aGlzLm9wdGlvbnMubWVzc2FnZXMubm9SZXN1bHRzLHRoaXMubGl2ZVJlZ2lvbi5jaGlsZHJlbigpLmhpZGUoKSx0KFwiPGRpdj5cIikudGV4dChpKS5hcHBlbmRUbyh0aGlzLmxpdmVSZWdpb24pKX19KSx0LnVpLmF1dG9jb21wbGV0ZTt2YXIgZz0vdWktY29ybmVyLShbYS16XSl7Miw2fS9nO3Qud2lkZ2V0KFwidWkuY29udHJvbGdyb3VwXCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjxkaXY+XCIsb3B0aW9uczp7ZGlyZWN0aW9uOlwiaG9yaXpvbnRhbFwiLGRpc2FibGVkOm51bGwsb25seVZpc2libGU6ITAsaXRlbXM6e2J1dHRvbjpcImlucHV0W3R5cGU9YnV0dG9uXSwgaW5wdXRbdHlwZT1zdWJtaXRdLCBpbnB1dFt0eXBlPXJlc2V0XSwgYnV0dG9uLCBhXCIsY29udHJvbGdyb3VwTGFiZWw6XCIudWktY29udHJvbGdyb3VwLWxhYmVsXCIsY2hlY2tib3hyYWRpbzpcImlucHV0W3R5cGU9J2NoZWNrYm94J10sIGlucHV0W3R5cGU9J3JhZGlvJ11cIixzZWxlY3RtZW51Olwic2VsZWN0XCIsc3Bpbm5lcjpcIi51aS1zcGlubmVyLWlucHV0XCJ9fSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5fZW5oYW5jZSgpfSxfZW5oYW5jZTpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5hdHRyKFwicm9sZVwiLFwidG9vbGJhclwiKSx0aGlzLnJlZnJlc2goKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLl9jYWxsQ2hpbGRNZXRob2QoXCJkZXN0cm95XCIpLHRoaXMuY2hpbGRXaWRnZXRzLnJlbW92ZURhdGEoXCJ1aS1jb250cm9sZ3JvdXAtZGF0YVwiKSx0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcInJvbGVcIiksdGhpcy5vcHRpb25zLml0ZW1zLmNvbnRyb2xncm91cExhYmVsJiZ0aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaXRlbXMuY29udHJvbGdyb3VwTGFiZWwpLmZpbmQoXCIudWktY29udHJvbGdyb3VwLWxhYmVsLWNvbnRlbnRzXCIpLmNvbnRlbnRzKCkudW53cmFwKCl9LF9pbml0V2lkZ2V0czpmdW5jdGlvbigpe3ZhciBlPXRoaXMsaT1bXTt0LmVhY2godGhpcy5vcHRpb25zLml0ZW1zLGZ1bmN0aW9uKHMsbil7dmFyIG8sYT17fTtyZXR1cm4gbj9cImNvbnRyb2xncm91cExhYmVsXCI9PT1zPyhvPWUuZWxlbWVudC5maW5kKG4pLG8uZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7ZS5jaGlsZHJlbihcIi51aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHNcIikubGVuZ3RofHxlLmNvbnRlbnRzKCkud3JhcEFsbChcIjxzcGFuIGNsYXNzPSd1aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMnPjwvc3Bhbj5cIil9KSxlLl9hZGRDbGFzcyhvLG51bGwsXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktc3RhdGUtZGVmYXVsdFwiKSxpPWkuY29uY2F0KG8uZ2V0KCkpLHZvaWQgMCk6KHQuZm5bc10mJihhPWVbXCJfXCIrcytcIk9wdGlvbnNcIl0/ZVtcIl9cIitzK1wiT3B0aW9uc1wiXShcIm1pZGRsZVwiKTp7Y2xhc3Nlczp7fX0sZS5lbGVtZW50LmZpbmQobikuZWFjaChmdW5jdGlvbigpe3ZhciBuPXQodGhpcyksbz1uW3NdKFwiaW5zdGFuY2VcIikscj10LndpZGdldC5leHRlbmQoe30sYSk7aWYoXCJidXR0b25cIiE9PXN8fCFuLnBhcmVudChcIi51aS1zcGlubmVyXCIpLmxlbmd0aCl7b3x8KG89bltzXSgpW3NdKFwiaW5zdGFuY2VcIikpLG8mJihyLmNsYXNzZXM9ZS5fcmVzb2x2ZUNsYXNzZXNWYWx1ZXMoci5jbGFzc2VzLG8pKSxuW3NdKHIpO3ZhciBoPW5bc10oXCJ3aWRnZXRcIik7dC5kYXRhKGhbMF0sXCJ1aS1jb250cm9sZ3JvdXAtZGF0YVwiLG8/bzpuW3NdKFwiaW5zdGFuY2VcIikpLGkucHVzaChoWzBdKX19KSksdm9pZCAwKTp2b2lkIDB9KSx0aGlzLmNoaWxkV2lkZ2V0cz10KHQudW5pcXVlKGkpKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmNoaWxkV2lkZ2V0cyxcInVpLWNvbnRyb2xncm91cC1pdGVtXCIpfSxfY2FsbENoaWxkTWV0aG9kOmZ1bmN0aW9uKGUpe3RoaXMuY2hpbGRXaWRnZXRzLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLHM9aS5kYXRhKFwidWktY29udHJvbGdyb3VwLWRhdGFcIik7cyYmc1tlXSYmc1tlXSgpfSl9LF91cGRhdGVDb3JuZXJDbGFzczpmdW5jdGlvbih0LGUpe3ZhciBpPVwidWktY29ybmVyLXRvcCB1aS1jb3JuZXItYm90dG9tIHVpLWNvcm5lci1sZWZ0IHVpLWNvcm5lci1yaWdodCB1aS1jb3JuZXItYWxsXCIscz10aGlzLl9idWlsZFNpbXBsZU9wdGlvbnMoZSxcImxhYmVsXCIpLmNsYXNzZXMubGFiZWw7dGhpcy5fcmVtb3ZlQ2xhc3ModCxudWxsLGkpLHRoaXMuX2FkZENsYXNzKHQsbnVsbCxzKX0sX2J1aWxkU2ltcGxlT3B0aW9uczpmdW5jdGlvbih0LGUpe3ZhciBpPVwidmVydGljYWxcIj09PXRoaXMub3B0aW9ucy5kaXJlY3Rpb24scz17Y2xhc3Nlczp7fX07cmV0dXJuIHMuY2xhc3Nlc1tlXT17bWlkZGxlOlwiXCIsZmlyc3Q6XCJ1aS1jb3JuZXItXCIrKGk/XCJ0b3BcIjpcImxlZnRcIiksbGFzdDpcInVpLWNvcm5lci1cIisoaT9cImJvdHRvbVwiOlwicmlnaHRcIiksb25seTpcInVpLWNvcm5lci1hbGxcIn1bdF0sc30sX3NwaW5uZXJPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyh0LFwidWktc3Bpbm5lclwiKTtyZXR1cm4gZS5jbGFzc2VzW1widWktc3Bpbm5lci11cFwiXT1cIlwiLGUuY2xhc3Nlc1tcInVpLXNwaW5uZXItZG93blwiXT1cIlwiLGV9LF9idXR0b25PcHRpb25zOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9idWlsZFNpbXBsZU9wdGlvbnModCxcInVpLWJ1dHRvblwiKX0sX2NoZWNrYm94cmFkaW9PcHRpb25zOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9idWlsZFNpbXBsZU9wdGlvbnModCxcInVpLWNoZWNrYm94cmFkaW8tbGFiZWxcIil9LF9zZWxlY3RtZW51T3B0aW9uczpmdW5jdGlvbih0KXt2YXIgZT1cInZlcnRpY2FsXCI9PT10aGlzLm9wdGlvbnMuZGlyZWN0aW9uO3JldHVybnt3aWR0aDplP1wiYXV0b1wiOiExLGNsYXNzZXM6e21pZGRsZTp7XCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuXCI6XCJcIixcInVpLXNlbGVjdG1lbnUtYnV0dG9uLWNsb3NlZFwiOlwiXCJ9LGZpcnN0OntcInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW5cIjpcInVpLWNvcm5lci1cIisoZT9cInRvcFwiOlwidGxcIiksXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWRcIjpcInVpLWNvcm5lci1cIisoZT9cInRvcFwiOlwibGVmdFwiKX0sbGFzdDp7XCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuXCI6ZT9cIlwiOlwidWktY29ybmVyLXRyXCIsXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWRcIjpcInVpLWNvcm5lci1cIisoZT9cImJvdHRvbVwiOlwicmlnaHRcIil9LG9ubHk6e1widWktc2VsZWN0bWVudS1idXR0b24tb3BlblwiOlwidWktY29ybmVyLXRvcFwiLFwidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkXCI6XCJ1aS1jb3JuZXItYWxsXCJ9fVt0XX19LF9yZXNvbHZlQ2xhc3Nlc1ZhbHVlczpmdW5jdGlvbihlLGkpe3ZhciBzPXt9O3JldHVybiB0LmVhY2goZSxmdW5jdGlvbihuKXt2YXIgbz1pLm9wdGlvbnMuY2xhc3Nlc1tuXXx8XCJcIjtvPXQudHJpbShvLnJlcGxhY2UoZyxcIlwiKSksc1tuXT0obytcIiBcIitlW25dKS5yZXBsYWNlKC9cXHMrL2csXCIgXCIpfSksc30sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3JldHVyblwiZGlyZWN0aW9uXCI9PT10JiZ0aGlzLl9yZW1vdmVDbGFzcyhcInVpLWNvbnRyb2xncm91cC1cIit0aGlzLm9wdGlvbnMuZGlyZWN0aW9uKSx0aGlzLl9zdXBlcih0LGUpLFwiZGlzYWJsZWRcIj09PXQ/KHRoaXMuX2NhbGxDaGlsZE1ldGhvZChlP1wiZGlzYWJsZVwiOlwiZW5hYmxlXCIpLHZvaWQgMCk6KHRoaXMucmVmcmVzaCgpLHZvaWQgMCl9LHJlZnJlc2g6ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXM7dGhpcy5fYWRkQ2xhc3MoXCJ1aS1jb250cm9sZ3JvdXAgdWktY29udHJvbGdyb3VwLVwiK3RoaXMub3B0aW9ucy5kaXJlY3Rpb24pLFwiaG9yaXpvbnRhbFwiPT09dGhpcy5vcHRpb25zLmRpcmVjdGlvbiYmdGhpcy5fYWRkQ2xhc3MobnVsbCxcInVpLWhlbHBlci1jbGVhcmZpeFwiKSx0aGlzLl9pbml0V2lkZ2V0cygpLGU9dGhpcy5jaGlsZFdpZGdldHMsdGhpcy5vcHRpb25zLm9ubHlWaXNpYmxlJiYoZT1lLmZpbHRlcihcIjp2aXNpYmxlXCIpKSxlLmxlbmd0aCYmKHQuZWFjaChbXCJmaXJzdFwiLFwibGFzdFwiXSxmdW5jdGlvbih0LHMpe3ZhciBuPWVbc10oKS5kYXRhKFwidWktY29udHJvbGdyb3VwLWRhdGFcIik7aWYobiYmaVtcIl9cIituLndpZGdldE5hbWUrXCJPcHRpb25zXCJdKXt2YXIgbz1pW1wiX1wiK24ud2lkZ2V0TmFtZStcIk9wdGlvbnNcIl0oMT09PWUubGVuZ3RoP1wib25seVwiOnMpO28uY2xhc3Nlcz1pLl9yZXNvbHZlQ2xhc3Nlc1ZhbHVlcyhvLmNsYXNzZXMsbiksbi5lbGVtZW50W24ud2lkZ2V0TmFtZV0obyl9ZWxzZSBpLl91cGRhdGVDb3JuZXJDbGFzcyhlW3NdKCkscyl9KSx0aGlzLl9jYWxsQ2hpbGRNZXRob2QoXCJyZWZyZXNoXCIpKX19KSx0LndpZGdldChcInVpLmNoZWNrYm94cmFkaW9cIixbdC51aS5mb3JtUmVzZXRNaXhpbix7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2Rpc2FibGVkOm51bGwsbGFiZWw6bnVsbCxpY29uOiEwLGNsYXNzZXM6e1widWktY2hlY2tib3hyYWRpby1sYWJlbFwiOlwidWktY29ybmVyLWFsbFwiLFwidWktY2hlY2tib3hyYWRpby1pY29uXCI6XCJ1aS1jb3JuZXItYWxsXCJ9fSxfZ2V0Q3JlYXRlT3B0aW9uczpmdW5jdGlvbigpe3ZhciBlLGkscz10aGlzLG49dGhpcy5fc3VwZXIoKXx8e307cmV0dXJuIHRoaXMuX3JlYWRUeXBlKCksaT10aGlzLmVsZW1lbnQubGFiZWxzKCksdGhpcy5sYWJlbD10KGlbaS5sZW5ndGgtMV0pLHRoaXMubGFiZWwubGVuZ3RofHx0LmVycm9yKFwiTm8gbGFiZWwgZm91bmQgZm9yIGNoZWNrYm94cmFkaW8gd2lkZ2V0XCIpLHRoaXMub3JpZ2luYWxMYWJlbD1cIlwiLHRoaXMubGFiZWwuY29udGVudHMoKS5ub3QodGhpcy5lbGVtZW50WzBdKS5lYWNoKGZ1bmN0aW9uKCl7cy5vcmlnaW5hbExhYmVsKz0zPT09dGhpcy5ub2RlVHlwZT90KHRoaXMpLnRleHQoKTp0aGlzLm91dGVySFRNTH0pLHRoaXMub3JpZ2luYWxMYWJlbCYmKG4ubGFiZWw9dGhpcy5vcmlnaW5hbExhYmVsKSxlPXRoaXMuZWxlbWVudFswXS5kaXNhYmxlZCxudWxsIT1lJiYobi5kaXNhYmxlZD1lKSxufSxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50WzBdLmNoZWNrZWQ7dGhpcy5fYmluZEZvcm1SZXNldEhhbmRsZXIoKSxudWxsPT10aGlzLm9wdGlvbnMuZGlzYWJsZWQmJih0aGlzLm9wdGlvbnMuZGlzYWJsZWQ9dGhpcy5lbGVtZW50WzBdLmRpc2FibGVkKSx0aGlzLl9zZXRPcHRpb24oXCJkaXNhYmxlZFwiLHRoaXMub3B0aW9ucy5kaXNhYmxlZCksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1jaGVja2JveHJhZGlvXCIsXCJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGVcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5sYWJlbCxcInVpLWNoZWNrYm94cmFkaW8tbGFiZWxcIixcInVpLWJ1dHRvbiB1aS13aWRnZXRcIiksXCJyYWRpb1wiPT09dGhpcy50eXBlJiZ0aGlzLl9hZGRDbGFzcyh0aGlzLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1yYWRpby1sYWJlbFwiKSx0aGlzLm9wdGlvbnMubGFiZWwmJnRoaXMub3B0aW9ucy5sYWJlbCE9PXRoaXMub3JpZ2luYWxMYWJlbD90aGlzLl91cGRhdGVMYWJlbCgpOnRoaXMub3JpZ2luYWxMYWJlbCYmKHRoaXMub3B0aW9ucy5sYWJlbD10aGlzLm9yaWdpbmFsTGFiZWwpLHRoaXMuX2VuaGFuY2UoKSx0JiYodGhpcy5fYWRkQ2xhc3ModGhpcy5sYWJlbCxcInVpLWNoZWNrYm94cmFkaW8tY2hlY2tlZFwiLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuaWNvbiYmdGhpcy5fYWRkQ2xhc3ModGhpcy5pY29uLG51bGwsXCJ1aS1zdGF0ZS1ob3ZlclwiKSksdGhpcy5fb24oe2NoYW5nZTpcIl90b2dnbGVDbGFzc2VzXCIsZm9jdXM6ZnVuY3Rpb24oKXt0aGlzLl9hZGRDbGFzcyh0aGlzLmxhYmVsLG51bGwsXCJ1aS1zdGF0ZS1mb2N1cyB1aS12aXN1YWwtZm9jdXNcIil9LGJsdXI6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmxhYmVsLG51bGwsXCJ1aS1zdGF0ZS1mb2N1cyB1aS12aXN1YWwtZm9jdXNcIil9fSl9LF9yZWFkVHlwZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZWxlbWVudFswXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3RoaXMudHlwZT10aGlzLmVsZW1lbnRbMF0udHlwZSxcImlucHV0XCI9PT1lJiYvcmFkaW98Y2hlY2tib3gvLnRlc3QodGhpcy50eXBlKXx8dC5lcnJvcihcIkNhbid0IGNyZWF0ZSBjaGVja2JveHJhZGlvIG9uIGVsZW1lbnQubm9kZU5hbWU9XCIrZStcIiBhbmQgZWxlbWVudC50eXBlPVwiK3RoaXMudHlwZSl9LF9lbmhhbmNlOmZ1bmN0aW9uKCl7dGhpcy5fdXBkYXRlSWNvbih0aGlzLmVsZW1lbnRbMF0uY2hlY2tlZCl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmxhYmVsfSxfZ2V0UmFkaW9Hcm91cDpmdW5jdGlvbigpe3ZhciBlLGk9dGhpcy5lbGVtZW50WzBdLm5hbWUscz1cImlucHV0W25hbWU9J1wiK3QudWkuZXNjYXBlU2VsZWN0b3IoaSkrXCInXVwiO3JldHVybiBpPyhlPXRoaXMuZm9ybS5sZW5ndGg/dCh0aGlzLmZvcm1bMF0uZWxlbWVudHMpLmZpbHRlcihzKTp0KHMpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiAwPT09dCh0aGlzKS5mb3JtKCkubGVuZ3RofSksZS5ub3QodGhpcy5lbGVtZW50KSk6dChbXSl9LF90b2dnbGVDbGFzc2VzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5lbGVtZW50WzBdLmNoZWNrZWQ7dGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5sYWJlbCxcInVpLWNoZWNrYm94cmFkaW8tY2hlY2tlZFwiLFwidWktc3RhdGUtYWN0aXZlXCIsZSksdGhpcy5vcHRpb25zLmljb24mJlwiY2hlY2tib3hcIj09PXRoaXMudHlwZSYmdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5pY29uLG51bGwsXCJ1aS1pY29uLWNoZWNrIHVpLXN0YXRlLWNoZWNrZWRcIixlKS5fdG9nZ2xlQ2xhc3ModGhpcy5pY29uLG51bGwsXCJ1aS1pY29uLWJsYW5rXCIsIWUpLFwicmFkaW9cIj09PXRoaXMudHlwZSYmdGhpcy5fZ2V0UmFkaW9Hcm91cCgpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLmNoZWNrYm94cmFkaW8oXCJpbnN0YW5jZVwiKTtlJiZlLl9yZW1vdmVDbGFzcyhlLmxhYmVsLFwidWktY2hlY2tib3hyYWRpby1jaGVja2VkXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIil9KX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLl91bmJpbmRGb3JtUmVzZXRIYW5kbGVyKCksdGhpcy5pY29uJiYodGhpcy5pY29uLnJlbW92ZSgpLHRoaXMuaWNvblNwYWNlLnJlbW92ZSgpKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3JldHVyblwibGFiZWxcIiE9PXR8fGU/KHRoaXMuX3N1cGVyKHQsZSksXCJkaXNhYmxlZFwiPT09dD8odGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5sYWJlbCxudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIixlKSx0aGlzLmVsZW1lbnRbMF0uZGlzYWJsZWQ9ZSx2b2lkIDApOih0aGlzLnJlZnJlc2goKSx2b2lkIDApKTp2b2lkIDB9LF91cGRhdGVJY29uOmZ1bmN0aW9uKGUpe3ZhciBpPVwidWktaWNvbiB1aS1pY29uLWJhY2tncm91bmQgXCI7dGhpcy5vcHRpb25zLmljb24/KHRoaXMuaWNvbnx8KHRoaXMuaWNvbj10KFwiPHNwYW4+XCIpLHRoaXMuaWNvblNwYWNlPXQoXCI8c3Bhbj4gPC9zcGFuPlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmljb25TcGFjZSxcInVpLWNoZWNrYm94cmFkaW8taWNvbi1zcGFjZVwiKSksXCJjaGVja2JveFwiPT09dGhpcy50eXBlPyhpKz1lP1widWktaWNvbi1jaGVjayB1aS1zdGF0ZS1jaGVja2VkXCI6XCJ1aS1pY29uLWJsYW5rXCIsdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5pY29uLG51bGwsZT9cInVpLWljb24tYmxhbmtcIjpcInVpLWljb24tY2hlY2tcIikpOmkrPVwidWktaWNvbi1ibGFua1wiLHRoaXMuX2FkZENsYXNzKHRoaXMuaWNvbixcInVpLWNoZWNrYm94cmFkaW8taWNvblwiLGkpLGV8fHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaWNvbixudWxsLFwidWktaWNvbi1jaGVjayB1aS1zdGF0ZS1jaGVja2VkXCIpLHRoaXMuaWNvbi5wcmVwZW5kVG8odGhpcy5sYWJlbCkuYWZ0ZXIodGhpcy5pY29uU3BhY2UpKTp2b2lkIDAhPT10aGlzLmljb24mJih0aGlzLmljb24ucmVtb3ZlKCksdGhpcy5pY29uU3BhY2UucmVtb3ZlKCksZGVsZXRlIHRoaXMuaWNvbil9LF91cGRhdGVMYWJlbDpmdW5jdGlvbigpe3ZhciB0PXRoaXMubGFiZWwuY29udGVudHMoKS5ub3QodGhpcy5lbGVtZW50WzBdKTt0aGlzLmljb24mJih0PXQubm90KHRoaXMuaWNvblswXSkpLHRoaXMuaWNvblNwYWNlJiYodD10Lm5vdCh0aGlzLmljb25TcGFjZVswXSkpLHQucmVtb3ZlKCksdGhpcy5sYWJlbC5hcHBlbmQodGhpcy5vcHRpb25zLmxhYmVsKX0scmVmcmVzaDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZWxlbWVudFswXS5jaGVja2VkLGU9dGhpcy5lbGVtZW50WzBdLmRpc2FibGVkO3RoaXMuX3VwZGF0ZUljb24odCksdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5sYWJlbCxcInVpLWNoZWNrYm94cmFkaW8tY2hlY2tlZFwiLFwidWktc3RhdGUtYWN0aXZlXCIsdCksbnVsbCE9PXRoaXMub3B0aW9ucy5sYWJlbCYmdGhpcy5fdXBkYXRlTGFiZWwoKSxlIT09dGhpcy5vcHRpb25zLmRpc2FibGVkJiZ0aGlzLl9zZXRPcHRpb25zKHtkaXNhYmxlZDplfSl9fV0pLHQudWkuY2hlY2tib3hyYWRpbyx0LndpZGdldChcInVpLmJ1dHRvblwiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsZGVmYXVsdEVsZW1lbnQ6XCI8YnV0dG9uPlwiLG9wdGlvbnM6e2NsYXNzZXM6e1widWktYnV0dG9uXCI6XCJ1aS1jb3JuZXItYWxsXCJ9LGRpc2FibGVkOm51bGwsaWNvbjpudWxsLGljb25Qb3NpdGlvbjpcImJlZ2lubmluZ1wiLGxhYmVsOm51bGwsc2hvd0xhYmVsOiEwfSxfZ2V0Q3JlYXRlT3B0aW9uczpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5fc3VwZXIoKXx8e307cmV0dXJuIHRoaXMuaXNJbnB1dD10aGlzLmVsZW1lbnQuaXMoXCJpbnB1dFwiKSx0PXRoaXMuZWxlbWVudFswXS5kaXNhYmxlZCxudWxsIT10JiYoZS5kaXNhYmxlZD10KSx0aGlzLm9yaWdpbmFsTGFiZWw9dGhpcy5pc0lucHV0P3RoaXMuZWxlbWVudC52YWwoKTp0aGlzLmVsZW1lbnQuaHRtbCgpLHRoaXMub3JpZ2luYWxMYWJlbCYmKGUubGFiZWw9dGhpcy5vcmlnaW5hbExhYmVsKSxlfSxfY3JlYXRlOmZ1bmN0aW9uKCl7IXRoaXMub3B0aW9uLnNob3dMYWJlbCYhdGhpcy5vcHRpb25zLmljb24mJih0aGlzLm9wdGlvbnMuc2hvd0xhYmVsPSEwKSxudWxsPT10aGlzLm9wdGlvbnMuZGlzYWJsZWQmJih0aGlzLm9wdGlvbnMuZGlzYWJsZWQ9dGhpcy5lbGVtZW50WzBdLmRpc2FibGVkfHwhMSksdGhpcy5oYXNUaXRsZT0hIXRoaXMuZWxlbWVudC5hdHRyKFwidGl0bGVcIiksdGhpcy5vcHRpb25zLmxhYmVsJiZ0aGlzLm9wdGlvbnMubGFiZWwhPT10aGlzLm9yaWdpbmFsTGFiZWwmJih0aGlzLmlzSW5wdXQ/dGhpcy5lbGVtZW50LnZhbCh0aGlzLm9wdGlvbnMubGFiZWwpOnRoaXMuZWxlbWVudC5odG1sKHRoaXMub3B0aW9ucy5sYWJlbCkpLHRoaXMuX2FkZENsYXNzKFwidWktYnV0dG9uXCIsXCJ1aS13aWRnZXRcIiksdGhpcy5fc2V0T3B0aW9uKFwiZGlzYWJsZWRcIix0aGlzLm9wdGlvbnMuZGlzYWJsZWQpLHRoaXMuX2VuaGFuY2UoKSx0aGlzLmVsZW1lbnQuaXMoXCJhXCIpJiZ0aGlzLl9vbih7a2V5dXA6ZnVuY3Rpb24oZSl7ZS5rZXlDb2RlPT09dC51aS5rZXlDb2RlLlNQQUNFJiYoZS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuZWxlbWVudFswXS5jbGljaz90aGlzLmVsZW1lbnRbMF0uY2xpY2soKTp0aGlzLmVsZW1lbnQudHJpZ2dlcihcImNsaWNrXCIpKX19KX0sX2VuaGFuY2U6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQuaXMoXCJidXR0b25cIil8fHRoaXMuZWxlbWVudC5hdHRyKFwicm9sZVwiLFwiYnV0dG9uXCIpLHRoaXMub3B0aW9ucy5pY29uJiYodGhpcy5fdXBkYXRlSWNvbihcImljb25cIix0aGlzLm9wdGlvbnMuaWNvbiksdGhpcy5fdXBkYXRlVG9vbHRpcCgpKX0sX3VwZGF0ZVRvb2x0aXA6ZnVuY3Rpb24oKXt0aGlzLnRpdGxlPXRoaXMuZWxlbWVudC5hdHRyKFwidGl0bGVcIiksdGhpcy5vcHRpb25zLnNob3dMYWJlbHx8dGhpcy50aXRsZXx8dGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiLHRoaXMub3B0aW9ucy5sYWJlbCl9LF91cGRhdGVJY29uOmZ1bmN0aW9uKGUsaSl7dmFyIHM9XCJpY29uUG9zaXRpb25cIiE9PWUsbj1zP3RoaXMub3B0aW9ucy5pY29uUG9zaXRpb246aSxvPVwidG9wXCI9PT1ufHxcImJvdHRvbVwiPT09bjt0aGlzLmljb24/cyYmdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5pY29uLG51bGwsdGhpcy5vcHRpb25zLmljb24pOih0aGlzLmljb249dChcIjxzcGFuPlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmljb24sXCJ1aS1idXR0b24taWNvblwiLFwidWktaWNvblwiKSx0aGlzLm9wdGlvbnMuc2hvd0xhYmVsfHx0aGlzLl9hZGRDbGFzcyhcInVpLWJ1dHRvbi1pY29uLW9ubHlcIikpLHMmJnRoaXMuX2FkZENsYXNzKHRoaXMuaWNvbixudWxsLGkpLHRoaXMuX2F0dGFjaEljb24obiksbz8odGhpcy5fYWRkQ2xhc3ModGhpcy5pY29uLG51bGwsXCJ1aS13aWRnZXQtaWNvbi1ibG9ja1wiKSx0aGlzLmljb25TcGFjZSYmdGhpcy5pY29uU3BhY2UucmVtb3ZlKCkpOih0aGlzLmljb25TcGFjZXx8KHRoaXMuaWNvblNwYWNlPXQoXCI8c3Bhbj4gPC9zcGFuPlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmljb25TcGFjZSxcInVpLWJ1dHRvbi1pY29uLXNwYWNlXCIpKSx0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmljb24sbnVsbCxcInVpLXdpZ2V0LWljb24tYmxvY2tcIiksdGhpcy5fYXR0YWNoSWNvblNwYWNlKG4pKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcInJvbGVcIiksdGhpcy5pY29uJiZ0aGlzLmljb24ucmVtb3ZlKCksdGhpcy5pY29uU3BhY2UmJnRoaXMuaWNvblNwYWNlLnJlbW92ZSgpLHRoaXMuaGFzVGl0bGV8fHRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwidGl0bGVcIil9LF9hdHRhY2hJY29uU3BhY2U6ZnVuY3Rpb24odCl7dGhpcy5pY29uWy9eKD86ZW5kfGJvdHRvbSkvLnRlc3QodCk/XCJiZWZvcmVcIjpcImFmdGVyXCJdKHRoaXMuaWNvblNwYWNlKX0sX2F0dGFjaEljb246ZnVuY3Rpb24odCl7dGhpcy5lbGVtZW50Wy9eKD86ZW5kfGJvdHRvbSkvLnRlc3QodCk/XCJhcHBlbmRcIjpcInByZXBlbmRcIl0odGhpcy5pY29uKX0sX3NldE9wdGlvbnM6ZnVuY3Rpb24odCl7dmFyIGU9dm9pZCAwPT09dC5zaG93TGFiZWw/dGhpcy5vcHRpb25zLnNob3dMYWJlbDp0LnNob3dMYWJlbCxpPXZvaWQgMD09PXQuaWNvbj90aGlzLm9wdGlvbnMuaWNvbjp0Lmljb247ZXx8aXx8KHQuc2hvd0xhYmVsPSEwKSx0aGlzLl9zdXBlcih0KX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe1wiaWNvblwiPT09dCYmKGU/dGhpcy5fdXBkYXRlSWNvbih0LGUpOnRoaXMuaWNvbiYmKHRoaXMuaWNvbi5yZW1vdmUoKSx0aGlzLmljb25TcGFjZSYmdGhpcy5pY29uU3BhY2UucmVtb3ZlKCkpKSxcImljb25Qb3NpdGlvblwiPT09dCYmdGhpcy5fdXBkYXRlSWNvbih0LGUpLFwic2hvd0xhYmVsXCI9PT10JiYodGhpcy5fdG9nZ2xlQ2xhc3MoXCJ1aS1idXR0b24taWNvbi1vbmx5XCIsbnVsbCwhZSksdGhpcy5fdXBkYXRlVG9vbHRpcCgpKSxcImxhYmVsXCI9PT10JiYodGhpcy5pc0lucHV0P3RoaXMuZWxlbWVudC52YWwoZSk6KHRoaXMuZWxlbWVudC5odG1sKGUpLHRoaXMuaWNvbiYmKHRoaXMuX2F0dGFjaEljb24odGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbiksdGhpcy5fYXR0YWNoSWNvblNwYWNlKHRoaXMub3B0aW9ucy5pY29uUG9zaXRpb24pKSkpLHRoaXMuX3N1cGVyKHQsZSksXCJkaXNhYmxlZFwiPT09dCYmKHRoaXMuX3RvZ2dsZUNsYXNzKG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLGUpLHRoaXMuZWxlbWVudFswXS5kaXNhYmxlZD1lLGUmJnRoaXMuZWxlbWVudC5ibHVyKCkpfSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5lbGVtZW50LmlzKFwiaW5wdXQsIGJ1dHRvblwiKT90aGlzLmVsZW1lbnRbMF0uZGlzYWJsZWQ6dGhpcy5lbGVtZW50Lmhhc0NsYXNzKFwidWktYnV0dG9uLWRpc2FibGVkXCIpO3QhPT10aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMuX3NldE9wdGlvbnMoe2Rpc2FibGVkOnR9KSx0aGlzLl91cGRhdGVUb29sdGlwKCl9fSksdC51aUJhY2tDb21wYXQhPT0hMSYmKHQud2lkZ2V0KFwidWkuYnV0dG9uXCIsdC51aS5idXR0b24se29wdGlvbnM6e3RleHQ6ITAsaWNvbnM6e3ByaW1hcnk6bnVsbCxzZWNvbmRhcnk6bnVsbH19LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLm9wdGlvbnMuc2hvd0xhYmVsJiYhdGhpcy5vcHRpb25zLnRleHQmJih0aGlzLm9wdGlvbnMuc2hvd0xhYmVsPXRoaXMub3B0aW9ucy50ZXh0KSwhdGhpcy5vcHRpb25zLnNob3dMYWJlbCYmdGhpcy5vcHRpb25zLnRleHQmJih0aGlzLm9wdGlvbnMudGV4dD10aGlzLm9wdGlvbnMuc2hvd0xhYmVsKSx0aGlzLm9wdGlvbnMuaWNvbnx8IXRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5JiYhdGhpcy5vcHRpb25zLmljb25zLnNlY29uZGFyeT90aGlzLm9wdGlvbnMuaWNvbiYmKHRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5PXRoaXMub3B0aW9ucy5pY29uKTp0aGlzLm9wdGlvbnMuaWNvbnMucHJpbWFyeT90aGlzLm9wdGlvbnMuaWNvbj10aGlzLm9wdGlvbnMuaWNvbnMucHJpbWFyeToodGhpcy5vcHRpb25zLmljb249dGhpcy5vcHRpb25zLmljb25zLnNlY29uZGFyeSx0aGlzLm9wdGlvbnMuaWNvblBvc2l0aW9uPVwiZW5kXCIpLHRoaXMuX3N1cGVyKCl9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtyZXR1cm5cInRleHRcIj09PXQ/KHRoaXMuX3N1cGVyKFwic2hvd0xhYmVsXCIsZSksdm9pZCAwKTooXCJzaG93TGFiZWxcIj09PXQmJih0aGlzLm9wdGlvbnMudGV4dD1lKSxcImljb25cIj09PXQmJih0aGlzLm9wdGlvbnMuaWNvbnMucHJpbWFyeT1lKSxcImljb25zXCI9PT10JiYoZS5wcmltYXJ5Pyh0aGlzLl9zdXBlcihcImljb25cIixlLnByaW1hcnkpLHRoaXMuX3N1cGVyKFwiaWNvblBvc2l0aW9uXCIsXCJiZWdpbm5pbmdcIikpOmUuc2Vjb25kYXJ5JiYodGhpcy5fc3VwZXIoXCJpY29uXCIsZS5zZWNvbmRhcnkpLHRoaXMuX3N1cGVyKFwiaWNvblBvc2l0aW9uXCIsXCJlbmRcIikpKSx0aGlzLl9zdXBlckFwcGx5KGFyZ3VtZW50cyksdm9pZCAwKX19KSx0LmZuLmJ1dHRvbj1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5sZW5ndGh8fHRoaXMubGVuZ3RoJiZcIklOUFVUXCIhPT10aGlzWzBdLnRhZ05hbWV8fHRoaXMubGVuZ3RoJiZcIklOUFVUXCI9PT10aGlzWzBdLnRhZ05hbWUmJlwiY2hlY2tib3hcIiE9PXRoaXMuYXR0cihcInR5cGVcIikmJlwicmFkaW9cIiE9PXRoaXMuYXR0cihcInR5cGVcIik/ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyk6KHQudWkuY2hlY2tib3hyYWRpb3x8dC5lcnJvcihcIkNoZWNrYm94cmFkaW8gd2lkZ2V0IG1pc3NpbmdcIiksMD09PWFyZ3VtZW50cy5sZW5ndGg/dGhpcy5jaGVja2JveHJhZGlvKHtpY29uOiExfSk6dGhpcy5jaGVja2JveHJhZGlvLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9fSh0LmZuLmJ1dHRvbiksdC5mbi5idXR0b25zZXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdC51aS5jb250cm9sZ3JvdXB8fHQuZXJyb3IoXCJDb250cm9sZ3JvdXAgd2lkZ2V0IG1pc3NpbmdcIiksXCJvcHRpb25cIj09PWFyZ3VtZW50c1swXSYmXCJpdGVtc1wiPT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMl0/dGhpcy5jb250cm9sZ3JvdXAuYXBwbHkodGhpcyxbYXJndW1lbnRzWzBdLFwiaXRlbXMuYnV0dG9uXCIsYXJndW1lbnRzWzJdXSk6XCJvcHRpb25cIj09PWFyZ3VtZW50c1swXSYmXCJpdGVtc1wiPT09YXJndW1lbnRzWzFdP3RoaXMuY29udHJvbGdyb3VwLmFwcGx5KHRoaXMsW2FyZ3VtZW50c1swXSxcIml0ZW1zLmJ1dHRvblwiXSk6KFwib2JqZWN0XCI9PXR5cGVvZiBhcmd1bWVudHNbMF0mJmFyZ3VtZW50c1swXS5pdGVtcyYmKGFyZ3VtZW50c1swXS5pdGVtcz17YnV0dG9uOmFyZ3VtZW50c1swXS5pdGVtc30pLHRoaXMuY29udHJvbGdyb3VwLmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9KSx0LnVpLmJ1dHRvbix0LmV4dGVuZCh0LnVpLHtkYXRlcGlja2VyOnt2ZXJzaW9uOlwiMS4xMi4xXCJ9fSk7dmFyIG07dC5leHRlbmQocy5wcm90b3R5cGUse21hcmtlckNsYXNzTmFtZTpcImhhc0RhdGVwaWNrZXJcIixtYXhSb3dzOjQsX3dpZGdldERhdGVwaWNrZXI6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kcERpdn0sc2V0RGVmYXVsdHM6ZnVuY3Rpb24odCl7cmV0dXJuIGEodGhpcy5fZGVmYXVsdHMsdHx8e30pLHRoaXN9LF9hdHRhY2hEYXRlcGlja2VyOmZ1bmN0aW9uKGUsaSl7dmFyIHMsbixvO3M9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLG49XCJkaXZcIj09PXN8fFwic3BhblwiPT09cyxlLmlkfHwodGhpcy51dWlkKz0xLGUuaWQ9XCJkcFwiK3RoaXMudXVpZCksbz10aGlzLl9uZXdJbnN0KHQoZSksbiksby5zZXR0aW5ncz10LmV4dGVuZCh7fSxpfHx7fSksXCJpbnB1dFwiPT09cz90aGlzLl9jb25uZWN0RGF0ZXBpY2tlcihlLG8pOm4mJnRoaXMuX2lubGluZURhdGVwaWNrZXIoZSxvKX0sX25ld0luc3Q6ZnVuY3Rpb24oZSxpKXt2YXIgcz1lWzBdLmlkLnJlcGxhY2UoLyhbXkEtWmEtejAtOV9cXC1dKS9nLFwiXFxcXFxcXFwkMVwiKTtyZXR1cm57aWQ6cyxpbnB1dDplLHNlbGVjdGVkRGF5OjAsc2VsZWN0ZWRNb250aDowLHNlbGVjdGVkWWVhcjowLGRyYXdNb250aDowLGRyYXdZZWFyOjAsaW5saW5lOmksZHBEaXY6aT9uKHQoXCI8ZGl2IGNsYXNzPSdcIit0aGlzLl9pbmxpbmVDbGFzcytcIiB1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+XCIpKTp0aGlzLmRwRGl2fX0sX2Nvbm5lY3REYXRlcGlja2VyOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dChlKTtpLmFwcGVuZD10KFtdKSxpLnRyaWdnZXI9dChbXSkscy5oYXNDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSl8fCh0aGlzLl9hdHRhY2htZW50cyhzLGkpLHMuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLm9uKFwia2V5ZG93blwiLHRoaXMuX2RvS2V5RG93bikub24oXCJrZXlwcmVzc1wiLHRoaXMuX2RvS2V5UHJlc3MpLm9uKFwia2V5dXBcIix0aGlzLl9kb0tleVVwKSx0aGlzLl9hdXRvU2l6ZShpKSx0LmRhdGEoZSxcImRhdGVwaWNrZXJcIixpKSxpLnNldHRpbmdzLmRpc2FibGVkJiZ0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlcihlKSl9LF9hdHRhY2htZW50czpmdW5jdGlvbihlLGkpe3ZhciBzLG4sbyxhPXRoaXMuX2dldChpLFwiYXBwZW5kVGV4dFwiKSxyPXRoaXMuX2dldChpLFwiaXNSVExcIik7aS5hcHBlbmQmJmkuYXBwZW5kLnJlbW92ZSgpLGEmJihpLmFwcGVuZD10KFwiPHNwYW4gY2xhc3M9J1wiK3RoaXMuX2FwcGVuZENsYXNzK1wiJz5cIithK1wiPC9zcGFuPlwiKSxlW3I/XCJiZWZvcmVcIjpcImFmdGVyXCJdKGkuYXBwZW5kKSksZS5vZmYoXCJmb2N1c1wiLHRoaXMuX3Nob3dEYXRlcGlja2VyKSxpLnRyaWdnZXImJmkudHJpZ2dlci5yZW1vdmUoKSxzPXRoaXMuX2dldChpLFwic2hvd09uXCIpLChcImZvY3VzXCI9PT1zfHxcImJvdGhcIj09PXMpJiZlLm9uKFwiZm9jdXNcIix0aGlzLl9zaG93RGF0ZXBpY2tlciksKFwiYnV0dG9uXCI9PT1zfHxcImJvdGhcIj09PXMpJiYobj10aGlzLl9nZXQoaSxcImJ1dHRvblRleHRcIiksbz10aGlzLl9nZXQoaSxcImJ1dHRvbkltYWdlXCIpLGkudHJpZ2dlcj10KHRoaXMuX2dldChpLFwiYnV0dG9uSW1hZ2VPbmx5XCIpP3QoXCI8aW1nLz5cIikuYWRkQ2xhc3ModGhpcy5fdHJpZ2dlckNsYXNzKS5hdHRyKHtzcmM6byxhbHQ6bix0aXRsZTpufSk6dChcIjxidXR0b24gdHlwZT0nYnV0dG9uJz48L2J1dHRvbj5cIikuYWRkQ2xhc3ModGhpcy5fdHJpZ2dlckNsYXNzKS5odG1sKG8/dChcIjxpbWcvPlwiKS5hdHRyKHtzcmM6byxhbHQ6bix0aXRsZTpufSk6bikpLGVbcj9cImJlZm9yZVwiOlwiYWZ0ZXJcIl0oaS50cmlnZ2VyKSxpLnRyaWdnZXIub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcmJnQuZGF0ZXBpY2tlci5fbGFzdElucHV0PT09ZVswXT90LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk6dC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmdC5kYXRlcGlja2VyLl9sYXN0SW5wdXQhPT1lWzBdPyh0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCksdC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihlWzBdKSk6dC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlcihlWzBdKSwhMX0pKX0sX2F1dG9TaXplOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX2dldCh0LFwiYXV0b1NpemVcIikmJiF0LmlubGluZSl7dmFyIGUsaSxzLG4sbz1uZXcgRGF0ZSgyMDA5LDExLDIwKSxhPXRoaXMuX2dldCh0LFwiZGF0ZUZvcm1hdFwiKTthLm1hdGNoKC9bRE1dLykmJihlPWZ1bmN0aW9uKHQpe2ZvcihpPTAscz0wLG49MDt0Lmxlbmd0aD5uO24rKyl0W25dLmxlbmd0aD5pJiYoaT10W25dLmxlbmd0aCxzPW4pO3JldHVybiBzfSxvLnNldE1vbnRoKGUodGhpcy5fZ2V0KHQsYS5tYXRjaCgvTU0vKT9cIm1vbnRoTmFtZXNcIjpcIm1vbnRoTmFtZXNTaG9ydFwiKSkpLG8uc2V0RGF0ZShlKHRoaXMuX2dldCh0LGEubWF0Y2goL0RELyk/XCJkYXlOYW1lc1wiOlwiZGF5TmFtZXNTaG9ydFwiKSkrMjAtby5nZXREYXkoKSkpLHQuaW5wdXQuYXR0cihcInNpemVcIix0aGlzLl9mb3JtYXREYXRlKHQsbykubGVuZ3RoKX19LF9pbmxpbmVEYXRlcGlja2VyOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dChlKTtzLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKXx8KHMuYWRkQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpLmFwcGVuZChpLmRwRGl2KSx0LmRhdGEoZSxcImRhdGVwaWNrZXJcIixpKSx0aGlzLl9zZXREYXRlKGksdGhpcy5fZ2V0RGVmYXVsdERhdGUoaSksITApLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaSksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGkpLGkuc2V0dGluZ3MuZGlzYWJsZWQmJnRoaXMuX2Rpc2FibGVEYXRlcGlja2VyKGUpLGkuZHBEaXYuY3NzKFwiZGlzcGxheVwiLFwiYmxvY2tcIikpfSxfZGlhbG9nRGF0ZXBpY2tlcjpmdW5jdGlvbihlLGkscyxuLG8pe3ZhciByLGgsbCxjLHUsZD10aGlzLl9kaWFsb2dJbnN0O3JldHVybiBkfHwodGhpcy51dWlkKz0xLHI9XCJkcFwiK3RoaXMudXVpZCx0aGlzLl9kaWFsb2dJbnB1dD10KFwiPGlucHV0IHR5cGU9J3RleHQnIGlkPSdcIityK1wiJyBzdHlsZT0ncG9zaXRpb246IGFic29sdXRlOyB0b3A6IC0xMDBweDsgd2lkdGg6IDBweDsnLz5cIiksdGhpcy5fZGlhbG9nSW5wdXQub24oXCJrZXlkb3duXCIsdGhpcy5fZG9LZXlEb3duKSx0KFwiYm9keVwiKS5hcHBlbmQodGhpcy5fZGlhbG9nSW5wdXQpLGQ9dGhpcy5fZGlhbG9nSW5zdD10aGlzLl9uZXdJbnN0KHRoaXMuX2RpYWxvZ0lucHV0LCExKSxkLnNldHRpbmdzPXt9LHQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSxcImRhdGVwaWNrZXJcIixkKSksYShkLnNldHRpbmdzLG58fHt9KSxpPWkmJmkuY29uc3RydWN0b3I9PT1EYXRlP3RoaXMuX2Zvcm1hdERhdGUoZCxpKTppLHRoaXMuX2RpYWxvZ0lucHV0LnZhbChpKSx0aGlzLl9wb3M9bz9vLmxlbmd0aD9vOltvLnBhZ2VYLG8ucGFnZVldOm51bGwsdGhpcy5fcG9zfHwoaD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsbD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LGM9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnR8fGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCx1PWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3B8fGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wLHRoaXMuX3Bvcz1baC8yLTEwMCtjLGwvMi0xNTArdV0pLHRoaXMuX2RpYWxvZ0lucHV0LmNzcyhcImxlZnRcIix0aGlzLl9wb3NbMF0rMjArXCJweFwiKS5jc3MoXCJ0b3BcIix0aGlzLl9wb3NbMV0rXCJweFwiKSxkLnNldHRpbmdzLm9uU2VsZWN0PXMsdGhpcy5faW5EaWFsb2c9ITAsdGhpcy5kcERpdi5hZGRDbGFzcyh0aGlzLl9kaWFsb2dDbGFzcyksdGhpcy5fc2hvd0RhdGVwaWNrZXIodGhpcy5fZGlhbG9nSW5wdXRbMF0pLHQuYmxvY2tVSSYmdC5ibG9ja1VJKHRoaXMuZHBEaXYpLHQuZGF0YSh0aGlzLl9kaWFsb2dJbnB1dFswXSxcImRhdGVwaWNrZXJcIixkKSx0aGlzfSxfZGVzdHJveURhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7dmFyIGkscz10KGUpLG49dC5kYXRhKGUsXCJkYXRlcGlja2VyXCIpO3MuaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpJiYoaT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksdC5yZW1vdmVEYXRhKGUsXCJkYXRlcGlja2VyXCIpLFwiaW5wdXRcIj09PWk/KG4uYXBwZW5kLnJlbW92ZSgpLG4udHJpZ2dlci5yZW1vdmUoKSxzLnJlbW92ZUNsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKS5vZmYoXCJmb2N1c1wiLHRoaXMuX3Nob3dEYXRlcGlja2VyKS5vZmYoXCJrZXlkb3duXCIsdGhpcy5fZG9LZXlEb3duKS5vZmYoXCJrZXlwcmVzc1wiLHRoaXMuX2RvS2V5UHJlc3MpLm9mZihcImtleXVwXCIsdGhpcy5fZG9LZXlVcCkpOihcImRpdlwiPT09aXx8XCJzcGFuXCI9PT1pKSYmcy5yZW1vdmVDbGFzcyh0aGlzLm1hcmtlckNsYXNzTmFtZSkuZW1wdHkoKSxtPT09biYmKG09bnVsbCkpfSxfZW5hYmxlRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt2YXIgaSxzLG49dChlKSxvPXQuZGF0YShlLFwiZGF0ZXBpY2tlclwiKTtuLmhhc0NsYXNzKHRoaXMubWFya2VyQ2xhc3NOYW1lKSYmKGk9ZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpLFwiaW5wdXRcIj09PWk/KGUuZGlzYWJsZWQ9ITEsby50cmlnZ2VyLmZpbHRlcihcImJ1dHRvblwiKS5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5kaXNhYmxlZD0hMX0pLmVuZCgpLmZpbHRlcihcImltZ1wiKS5jc3Moe29wYWNpdHk6XCIxLjBcIixjdXJzb3I6XCJcIn0pKTooXCJkaXZcIj09PWl8fFwic3BhblwiPT09aSkmJihzPW4uY2hpbGRyZW4oXCIuXCIrdGhpcy5faW5saW5lQ2xhc3MpLHMuY2hpbGRyZW4oKS5yZW1vdmVDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpLHMuZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLW1vbnRoLCBzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyXCIpLnByb3AoXCJkaXNhYmxlZFwiLCExKSksdGhpcy5fZGlzYWJsZWRJbnB1dHM9dC5tYXAodGhpcy5fZGlzYWJsZWRJbnB1dHMsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lP251bGw6dH0pKX0sX2Rpc2FibGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10KGUpLG89dC5kYXRhKGUsXCJkYXRlcGlja2VyXCIpO24uaGFzQ2xhc3ModGhpcy5tYXJrZXJDbGFzc05hbWUpJiYoaT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXCJpbnB1dFwiPT09aT8oZS5kaXNhYmxlZD0hMCxvLnRyaWdnZXIuZmlsdGVyKFwiYnV0dG9uXCIpLmVhY2goZnVuY3Rpb24oKXt0aGlzLmRpc2FibGVkPSEwfSkuZW5kKCkuZmlsdGVyKFwiaW1nXCIpLmNzcyh7b3BhY2l0eTpcIjAuNVwiLGN1cnNvcjpcImRlZmF1bHRcIn0pKTooXCJkaXZcIj09PWl8fFwic3BhblwiPT09aSkmJihzPW4uY2hpbGRyZW4oXCIuXCIrdGhpcy5faW5saW5lQ2xhc3MpLHMuY2hpbGRyZW4oKS5hZGRDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpLHMuZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLW1vbnRoLCBzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyXCIpLnByb3AoXCJkaXNhYmxlZFwiLCEwKSksdGhpcy5fZGlzYWJsZWRJbnB1dHM9dC5tYXAodGhpcy5fZGlzYWJsZWRJbnB1dHMsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1lP251bGw6dH0pLHRoaXMuX2Rpc2FibGVkSW5wdXRzW3RoaXMuX2Rpc2FibGVkSW5wdXRzLmxlbmd0aF09ZSl9LF9pc0Rpc2FibGVkRGF0ZXBpY2tlcjpmdW5jdGlvbih0KXtpZighdClyZXR1cm4hMTtmb3IodmFyIGU9MDt0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGg+ZTtlKyspaWYodGhpcy5fZGlzYWJsZWRJbnB1dHNbZV09PT10KXJldHVybiEwO3JldHVybiExfSxfZ2V0SW5zdDpmdW5jdGlvbihlKXt0cnl7cmV0dXJuIHQuZGF0YShlLFwiZGF0ZXBpY2tlclwiKX1jYXRjaChpKXt0aHJvd1wiTWlzc2luZyBpbnN0YW5jZSBkYXRhIGZvciB0aGlzIGRhdGVwaWNrZXJcIn19LF9vcHRpb25EYXRlcGlja2VyOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvLHIsaCxsPXRoaXMuX2dldEluc3QoZSk7cmV0dXJuIDI9PT1hcmd1bWVudHMubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgaT9cImRlZmF1bHRzXCI9PT1pP3QuZXh0ZW5kKHt9LHQuZGF0ZXBpY2tlci5fZGVmYXVsdHMpOmw/XCJhbGxcIj09PWk/dC5leHRlbmQoe30sbC5zZXR0aW5ncyk6dGhpcy5fZ2V0KGwsaSk6bnVsbDoobj1pfHx7fSxcInN0cmluZ1wiPT10eXBlb2YgaSYmKG49e30sbltpXT1zKSxsJiYodGhpcy5fY3VySW5zdD09PWwmJnRoaXMuX2hpZGVEYXRlcGlja2VyKCksbz10aGlzLl9nZXREYXRlRGF0ZXBpY2tlcihlLCEwKSxyPXRoaXMuX2dldE1pbk1heERhdGUobCxcIm1pblwiKSxoPXRoaXMuX2dldE1pbk1heERhdGUobCxcIm1heFwiKSxhKGwuc2V0dGluZ3MsbiksbnVsbCE9PXImJnZvaWQgMCE9PW4uZGF0ZUZvcm1hdCYmdm9pZCAwPT09bi5taW5EYXRlJiYobC5zZXR0aW5ncy5taW5EYXRlPXRoaXMuX2Zvcm1hdERhdGUobCxyKSksbnVsbCE9PWgmJnZvaWQgMCE9PW4uZGF0ZUZvcm1hdCYmdm9pZCAwPT09bi5tYXhEYXRlJiYobC5zZXR0aW5ncy5tYXhEYXRlPXRoaXMuX2Zvcm1hdERhdGUobCxoKSksXCJkaXNhYmxlZFwiaW4gbiYmKG4uZGlzYWJsZWQ/dGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoZSk6dGhpcy5fZW5hYmxlRGF0ZXBpY2tlcihlKSksdGhpcy5fYXR0YWNobWVudHModChlKSxsKSx0aGlzLl9hdXRvU2l6ZShsKSx0aGlzLl9zZXREYXRlKGwsbyksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGwpLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIobCkpLHZvaWQgMCl9LF9jaGFuZ2VEYXRlcGlja2VyOmZ1bmN0aW9uKHQsZSxpKXt0aGlzLl9vcHRpb25EYXRlcGlja2VyKHQsZSxpKX0sX3JlZnJlc2hEYXRlcGlja2VyOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2dldEluc3QodCk7ZSYmdGhpcy5fdXBkYXRlRGF0ZXBpY2tlcihlKX0sX3NldERhdGVEYXRlcGlja2VyOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fZ2V0SW5zdCh0KTtpJiYodGhpcy5fc2V0RGF0ZShpLGUpLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoaSksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKGkpKX0sX2dldERhdGVEYXRlcGlja2VyOmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5fZ2V0SW5zdCh0KTtyZXR1cm4gaSYmIWkuaW5saW5lJiZ0aGlzLl9zZXREYXRlRnJvbUZpZWxkKGksZSksaT90aGlzLl9nZXREYXRlKGkpOm51bGx9LF9kb0tleURvd246ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG89dC5kYXRlcGlja2VyLl9nZXRJbnN0KGUudGFyZ2V0KSxhPSEwLHI9by5kcERpdi5pcyhcIi51aS1kYXRlcGlja2VyLXJ0bFwiKTtpZihvLl9rZXlFdmVudD0hMCx0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nKXN3aXRjaChlLmtleUNvZGUpe2Nhc2UgOTp0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCksYT0hMTticmVhaztjYXNlIDEzOnJldHVybiBuPXQoXCJ0ZC5cIit0LmRhdGVwaWNrZXIuX2RheU92ZXJDbGFzcytcIjpub3QoLlwiK3QuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzK1wiKVwiLG8uZHBEaXYpLG5bMF0mJnQuZGF0ZXBpY2tlci5fc2VsZWN0RGF5KGUudGFyZ2V0LG8uc2VsZWN0ZWRNb250aCxvLnNlbGVjdGVkWWVhcixuWzBdKSxpPXQuZGF0ZXBpY2tlci5fZ2V0KG8sXCJvblNlbGVjdFwiKSxpPyhzPXQuZGF0ZXBpY2tlci5fZm9ybWF0RGF0ZShvKSxpLmFwcGx5KG8uaW5wdXQ/by5pbnB1dFswXTpudWxsLFtzLG9dKSk6dC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpLCExO2Nhc2UgMjc6dC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpO2JyZWFrO2Nhc2UgMzM6dC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LGUuY3RybEtleT8tdC5kYXRlcGlja2VyLl9nZXQobyxcInN0ZXBCaWdNb250aHNcIik6LXQuZGF0ZXBpY2tlci5fZ2V0KG8sXCJzdGVwTW9udGhzXCIpLFwiTVwiKTticmVhaztjYXNlIDM0OnQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZShlLnRhcmdldCxlLmN0cmxLZXk/K3QuZGF0ZXBpY2tlci5fZ2V0KG8sXCJzdGVwQmlnTW9udGhzXCIpOit0LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcE1vbnRoc1wiKSxcIk1cIik7YnJlYWs7Y2FzZSAzNTooZS5jdHJsS2V5fHxlLm1ldGFLZXkpJiZ0LmRhdGVwaWNrZXIuX2NsZWFyRGF0ZShlLnRhcmdldCksYT1lLmN0cmxLZXl8fGUubWV0YUtleTticmVhaztjYXNlIDM2OihlLmN0cmxLZXl8fGUubWV0YUtleSkmJnQuZGF0ZXBpY2tlci5fZ290b1RvZGF5KGUudGFyZ2V0KSxhPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzc6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmdC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LHI/MTotMSxcIkRcIiksYT1lLmN0cmxLZXl8fGUubWV0YUtleSxlLm9yaWdpbmFsRXZlbnQuYWx0S2V5JiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5Py10LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcEJpZ01vbnRoc1wiKTotdC5kYXRlcGlja2VyLl9nZXQobyxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgMzg6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmdC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LC03LFwiRFwiKSxhPWUuY3RybEtleXx8ZS5tZXRhS2V5O2JyZWFrO2Nhc2UgMzk6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmdC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LHI/LTE6MSxcIkRcIiksYT1lLmN0cmxLZXl8fGUubWV0YUtleSxlLm9yaWdpbmFsRXZlbnQuYWx0S2V5JiZ0LmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZS50YXJnZXQsZS5jdHJsS2V5Pyt0LmRhdGVwaWNrZXIuX2dldChvLFwic3RlcEJpZ01vbnRoc1wiKTordC5kYXRlcGlja2VyLl9nZXQobyxcInN0ZXBNb250aHNcIiksXCJNXCIpO2JyZWFrO2Nhc2UgNDA6KGUuY3RybEtleXx8ZS5tZXRhS2V5KSYmdC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKGUudGFyZ2V0LDcsXCJEXCIpLGE9ZS5jdHJsS2V5fHxlLm1ldGFLZXk7YnJlYWs7ZGVmYXVsdDphPSExfWVsc2UgMzY9PT1lLmtleUNvZGUmJmUuY3RybEtleT90LmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKHRoaXMpOmE9ITE7YSYmKGUucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpKX0sX2RvS2V5UHJlc3M6ZnVuY3Rpb24oZSl7dmFyIGkscyxuPXQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlLnRhcmdldCk7cmV0dXJuIHQuZGF0ZXBpY2tlci5fZ2V0KG4sXCJjb25zdHJhaW5JbnB1dFwiKT8oaT10LmRhdGVwaWNrZXIuX3Bvc3NpYmxlQ2hhcnModC5kYXRlcGlja2VyLl9nZXQobixcImRhdGVGb3JtYXRcIikpLHM9U3RyaW5nLmZyb21DaGFyQ29kZShudWxsPT1lLmNoYXJDb2RlP2Uua2V5Q29kZTplLmNoYXJDb2RlKSxlLmN0cmxLZXl8fGUubWV0YUtleXx8XCIgXCI+c3x8IWl8fGkuaW5kZXhPZihzKT4tMSk6dm9pZCAwfSxfZG9LZXlVcDpmdW5jdGlvbihlKXt2YXIgaSxzPXQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlLnRhcmdldCk7aWYocy5pbnB1dC52YWwoKSE9PXMubGFzdFZhbCl0cnl7aT10LmRhdGVwaWNrZXIucGFyc2VEYXRlKHQuZGF0ZXBpY2tlci5fZ2V0KHMsXCJkYXRlRm9ybWF0XCIpLHMuaW5wdXQ/cy5pbnB1dC52YWwoKTpudWxsLHQuZGF0ZXBpY2tlci5fZ2V0Rm9ybWF0Q29uZmlnKHMpKSxpJiYodC5kYXRlcGlja2VyLl9zZXREYXRlRnJvbUZpZWxkKHMpLHQuZGF0ZXBpY2tlci5fdXBkYXRlQWx0ZXJuYXRlKHMpLHQuZGF0ZXBpY2tlci5fdXBkYXRlRGF0ZXBpY2tlcihzKSl9Y2F0Y2gobil7fXJldHVybiEwfSxfc2hvd0RhdGVwaWNrZXI6ZnVuY3Rpb24oZSl7aWYoZT1lLnRhcmdldHx8ZSxcImlucHV0XCIhPT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJihlPXQoXCJpbnB1dFwiLGUucGFyZW50Tm9kZSlbMF0pLCF0LmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKGUpJiZ0LmRhdGVwaWNrZXIuX2xhc3RJbnB1dCE9PWUpe3ZhciBzLG4sbyxyLGgsbCxjO3M9dC5kYXRlcGlja2VyLl9nZXRJbnN0KGUpLHQuZGF0ZXBpY2tlci5fY3VySW5zdCYmdC5kYXRlcGlja2VyLl9jdXJJbnN0IT09cyYmKHQuZGF0ZXBpY2tlci5fY3VySW5zdC5kcERpdi5zdG9wKCEwLCEwKSxzJiZ0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiZ0LmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKHQuZGF0ZXBpY2tlci5fY3VySW5zdC5pbnB1dFswXSkpLG49dC5kYXRlcGlja2VyLl9nZXQocyxcImJlZm9yZVNob3dcIiksbz1uP24uYXBwbHkoZSxbZSxzXSk6e30sbyE9PSExJiYoYShzLnNldHRpbmdzLG8pLHMubGFzdFZhbD1udWxsLHQuZGF0ZXBpY2tlci5fbGFzdElucHV0PWUsdC5kYXRlcGlja2VyLl9zZXREYXRlRnJvbUZpZWxkKHMpLHQuZGF0ZXBpY2tlci5faW5EaWFsb2cmJihlLnZhbHVlPVwiXCIpLHQuZGF0ZXBpY2tlci5fcG9zfHwodC5kYXRlcGlja2VyLl9wb3M9dC5kYXRlcGlja2VyLl9maW5kUG9zKGUpLHQuZGF0ZXBpY2tlci5fcG9zWzFdKz1lLm9mZnNldEhlaWdodCkscj0hMSx0KGUpLnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIHJ8PVwiZml4ZWRcIj09PXQodGhpcykuY3NzKFwicG9zaXRpb25cIiksIXJ9KSxoPXtsZWZ0OnQuZGF0ZXBpY2tlci5fcG9zWzBdLHRvcDp0LmRhdGVwaWNrZXIuX3Bvc1sxXX0sdC5kYXRlcGlja2VyLl9wb3M9bnVsbCxzLmRwRGl2LmVtcHR5KCkscy5kcERpdi5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixkaXNwbGF5OlwiYmxvY2tcIix0b3A6XCItMTAwMHB4XCJ9KSx0LmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIocyksaD10LmRhdGVwaWNrZXIuX2NoZWNrT2Zmc2V0KHMsaCxyKSxzLmRwRGl2LmNzcyh7cG9zaXRpb246dC5kYXRlcGlja2VyLl9pbkRpYWxvZyYmdC5ibG9ja1VJP1wic3RhdGljXCI6cj9cImZpeGVkXCI6XCJhYnNvbHV0ZVwiLGRpc3BsYXk6XCJub25lXCIsbGVmdDpoLmxlZnQrXCJweFwiLHRvcDpoLnRvcCtcInB4XCJ9KSxzLmlubGluZXx8KGw9dC5kYXRlcGlja2VyLl9nZXQocyxcInNob3dBbmltXCIpLGM9dC5kYXRlcGlja2VyLl9nZXQocyxcImR1cmF0aW9uXCIpLHMuZHBEaXYuY3NzKFwiei1pbmRleFwiLGkodChlKSkrMSksdC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZz0hMCx0LmVmZmVjdHMmJnQuZWZmZWN0cy5lZmZlY3RbbF0/cy5kcERpdi5zaG93KGwsdC5kYXRlcGlja2VyLl9nZXQocyxcInNob3dPcHRpb25zXCIpLGMpOnMuZHBEaXZbbHx8XCJzaG93XCJdKGw/YzpudWxsKSx0LmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQocykmJnMuaW5wdXQudHJpZ2dlcihcImZvY3VzXCIpLHQuZGF0ZXBpY2tlci5fY3VySW5zdD1zKSlcbn19LF91cGRhdGVEYXRlcGlja2VyOmZ1bmN0aW9uKGUpe3RoaXMubWF4Um93cz00LG09ZSxlLmRwRGl2LmVtcHR5KCkuYXBwZW5kKHRoaXMuX2dlbmVyYXRlSFRNTChlKSksdGhpcy5fYXR0YWNoSGFuZGxlcnMoZSk7dmFyIGkscz10aGlzLl9nZXROdW1iZXJPZk1vbnRocyhlKSxuPXNbMV0sYT0xNyxyPWUuZHBEaXYuZmluZChcIi5cIit0aGlzLl9kYXlPdmVyQ2xhc3MrXCIgYVwiKTtyLmxlbmd0aD4wJiZvLmFwcGx5KHIuZ2V0KDApKSxlLmRwRGl2LnJlbW92ZUNsYXNzKFwidWktZGF0ZXBpY2tlci1tdWx0aS0yIHVpLWRhdGVwaWNrZXItbXVsdGktMyB1aS1kYXRlcGlja2VyLW11bHRpLTRcIikud2lkdGgoXCJcIiksbj4xJiZlLmRwRGl2LmFkZENsYXNzKFwidWktZGF0ZXBpY2tlci1tdWx0aS1cIituKS5jc3MoXCJ3aWR0aFwiLGEqbitcImVtXCIpLGUuZHBEaXZbKDEhPT1zWzBdfHwxIT09c1sxXT9cImFkZFwiOlwicmVtb3ZlXCIpK1wiQ2xhc3NcIl0oXCJ1aS1kYXRlcGlja2VyLW11bHRpXCIpLGUuZHBEaXZbKHRoaXMuX2dldChlLFwiaXNSVExcIik/XCJhZGRcIjpcInJlbW92ZVwiKStcIkNsYXNzXCJdKFwidWktZGF0ZXBpY2tlci1ydGxcIiksZT09PXQuZGF0ZXBpY2tlci5fY3VySW5zdCYmdC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyYmdC5kYXRlcGlja2VyLl9zaG91bGRGb2N1c0lucHV0KGUpJiZlLmlucHV0LnRyaWdnZXIoXCJmb2N1c1wiKSxlLnllYXJzaHRtbCYmKGk9ZS55ZWFyc2h0bWwsc2V0VGltZW91dChmdW5jdGlvbigpe2k9PT1lLnllYXJzaHRtbCYmZS55ZWFyc2h0bWwmJmUuZHBEaXYuZmluZChcInNlbGVjdC51aS1kYXRlcGlja2VyLXllYXI6Zmlyc3RcIikucmVwbGFjZVdpdGgoZS55ZWFyc2h0bWwpLGk9ZS55ZWFyc2h0bWw9bnVsbH0sMCkpfSxfc2hvdWxkRm9jdXNJbnB1dDpmdW5jdGlvbih0KXtyZXR1cm4gdC5pbnB1dCYmdC5pbnB1dC5pcyhcIjp2aXNpYmxlXCIpJiYhdC5pbnB1dC5pcyhcIjpkaXNhYmxlZFwiKSYmIXQuaW5wdXQuaXMoXCI6Zm9jdXNcIil9LF9jaGVja09mZnNldDpmdW5jdGlvbihlLGkscyl7dmFyIG49ZS5kcERpdi5vdXRlcldpZHRoKCksbz1lLmRwRGl2Lm91dGVySGVpZ2h0KCksYT1lLmlucHV0P2UuaW5wdXQub3V0ZXJXaWR0aCgpOjAscj1lLmlucHV0P2UuaW5wdXQub3V0ZXJIZWlnaHQoKTowLGg9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRoKyhzPzA6dChkb2N1bWVudCkuc2Nyb2xsTGVmdCgpKSxsPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHQrKHM/MDp0KGRvY3VtZW50KS5zY3JvbGxUb3AoKSk7cmV0dXJuIGkubGVmdC09dGhpcy5fZ2V0KGUsXCJpc1JUTFwiKT9uLWE6MCxpLmxlZnQtPXMmJmkubGVmdD09PWUuaW5wdXQub2Zmc2V0KCkubGVmdD90KGRvY3VtZW50KS5zY3JvbGxMZWZ0KCk6MCxpLnRvcC09cyYmaS50b3A9PT1lLmlucHV0Lm9mZnNldCgpLnRvcCtyP3QoZG9jdW1lbnQpLnNjcm9sbFRvcCgpOjAsaS5sZWZ0LT1NYXRoLm1pbihpLmxlZnQsaS5sZWZ0K24+aCYmaD5uP01hdGguYWJzKGkubGVmdCtuLWgpOjApLGkudG9wLT1NYXRoLm1pbihpLnRvcCxpLnRvcCtvPmwmJmw+bz9NYXRoLmFicyhvK3IpOjApLGl9LF9maW5kUG9zOmZ1bmN0aW9uKGUpe2Zvcih2YXIgaSxzPXRoaXMuX2dldEluc3QoZSksbj10aGlzLl9nZXQocyxcImlzUlRMXCIpO2UmJihcImhpZGRlblwiPT09ZS50eXBlfHwxIT09ZS5ub2RlVHlwZXx8dC5leHByLmZpbHRlcnMuaGlkZGVuKGUpKTspZT1lW24/XCJwcmV2aW91c1NpYmxpbmdcIjpcIm5leHRTaWJsaW5nXCJdO3JldHVybiBpPXQoZSkub2Zmc2V0KCksW2kubGVmdCxpLnRvcF19LF9oaWRlRGF0ZXBpY2tlcjpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbyxhPXRoaXMuX2N1ckluc3Q7IWF8fGUmJmEhPT10LmRhdGEoZSxcImRhdGVwaWNrZXJcIil8fHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nJiYoaT10aGlzLl9nZXQoYSxcInNob3dBbmltXCIpLHM9dGhpcy5fZ2V0KGEsXCJkdXJhdGlvblwiKSxuPWZ1bmN0aW9uKCl7dC5kYXRlcGlja2VyLl90aWR5RGlhbG9nKGEpfSx0LmVmZmVjdHMmJih0LmVmZmVjdHMuZWZmZWN0W2ldfHx0LmVmZmVjdHNbaV0pP2EuZHBEaXYuaGlkZShpLHQuZGF0ZXBpY2tlci5fZ2V0KGEsXCJzaG93T3B0aW9uc1wiKSxzLG4pOmEuZHBEaXZbXCJzbGlkZURvd25cIj09PWk/XCJzbGlkZVVwXCI6XCJmYWRlSW5cIj09PWk/XCJmYWRlT3V0XCI6XCJoaWRlXCJdKGk/czpudWxsLG4pLGl8fG4oKSx0aGlzLl9kYXRlcGlja2VyU2hvd2luZz0hMSxvPXRoaXMuX2dldChhLFwib25DbG9zZVwiKSxvJiZvLmFwcGx5KGEuaW5wdXQ/YS5pbnB1dFswXTpudWxsLFthLmlucHV0P2EuaW5wdXQudmFsKCk6XCJcIixhXSksdGhpcy5fbGFzdElucHV0PW51bGwsdGhpcy5faW5EaWFsb2cmJih0aGlzLl9kaWFsb2dJbnB1dC5jc3Moe3Bvc2l0aW9uOlwiYWJzb2x1dGVcIixsZWZ0OlwiMFwiLHRvcDpcIi0xMDBweFwifSksdC5ibG9ja1VJJiYodC51bmJsb2NrVUkoKSx0KFwiYm9keVwiKS5hcHBlbmQodGhpcy5kcERpdikpKSx0aGlzLl9pbkRpYWxvZz0hMSl9LF90aWR5RGlhbG9nOmZ1bmN0aW9uKHQpe3QuZHBEaXYucmVtb3ZlQ2xhc3ModGhpcy5fZGlhbG9nQ2xhc3MpLm9mZihcIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyXCIpfSxfY2hlY2tFeHRlcm5hbENsaWNrOmZ1bmN0aW9uKGUpe2lmKHQuZGF0ZXBpY2tlci5fY3VySW5zdCl7dmFyIGk9dChlLnRhcmdldCkscz10LmRhdGVwaWNrZXIuX2dldEluc3QoaVswXSk7KGlbMF0uaWQhPT10LmRhdGVwaWNrZXIuX21haW5EaXZJZCYmMD09PWkucGFyZW50cyhcIiNcIit0LmRhdGVwaWNrZXIuX21haW5EaXZJZCkubGVuZ3RoJiYhaS5oYXNDbGFzcyh0LmRhdGVwaWNrZXIubWFya2VyQ2xhc3NOYW1lKSYmIWkuY2xvc2VzdChcIi5cIit0LmRhdGVwaWNrZXIuX3RyaWdnZXJDbGFzcykubGVuZ3RoJiZ0LmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nJiYoIXQuZGF0ZXBpY2tlci5faW5EaWFsb2d8fCF0LmJsb2NrVUkpfHxpLmhhc0NsYXNzKHQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUpJiZ0LmRhdGVwaWNrZXIuX2N1ckluc3QhPT1zKSYmdC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfX0sX2FkanVzdERhdGU6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQoZSksbz10aGlzLl9nZXRJbnN0KG5bMF0pO3RoaXMuX2lzRGlzYWJsZWREYXRlcGlja2VyKG5bMF0pfHwodGhpcy5fYWRqdXN0SW5zdERhdGUobyxpKyhcIk1cIj09PXM/dGhpcy5fZ2V0KG8sXCJzaG93Q3VycmVudEF0UG9zXCIpOjApLHMpLHRoaXMuX3VwZGF0ZURhdGVwaWNrZXIobykpfSxfZ290b1RvZGF5OmZ1bmN0aW9uKGUpe3ZhciBpLHM9dChlKSxuPXRoaXMuX2dldEluc3Qoc1swXSk7dGhpcy5fZ2V0KG4sXCJnb3RvQ3VycmVudFwiKSYmbi5jdXJyZW50RGF5PyhuLnNlbGVjdGVkRGF5PW4uY3VycmVudERheSxuLmRyYXdNb250aD1uLnNlbGVjdGVkTW9udGg9bi5jdXJyZW50TW9udGgsbi5kcmF3WWVhcj1uLnNlbGVjdGVkWWVhcj1uLmN1cnJlbnRZZWFyKTooaT1uZXcgRGF0ZSxuLnNlbGVjdGVkRGF5PWkuZ2V0RGF0ZSgpLG4uZHJhd01vbnRoPW4uc2VsZWN0ZWRNb250aD1pLmdldE1vbnRoKCksbi5kcmF3WWVhcj1uLnNlbGVjdGVkWWVhcj1pLmdldEZ1bGxZZWFyKCkpLHRoaXMuX25vdGlmeUNoYW5nZShuKSx0aGlzLl9hZGp1c3REYXRlKHMpfSxfc2VsZWN0TW9udGhZZWFyOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj10KGUpLG89dGhpcy5fZ2V0SW5zdChuWzBdKTtvW1wic2VsZWN0ZWRcIisoXCJNXCI9PT1zP1wiTW9udGhcIjpcIlllYXJcIildPW9bXCJkcmF3XCIrKFwiTVwiPT09cz9cIk1vbnRoXCI6XCJZZWFyXCIpXT1wYXJzZUludChpLm9wdGlvbnNbaS5zZWxlY3RlZEluZGV4XS52YWx1ZSwxMCksdGhpcy5fbm90aWZ5Q2hhbmdlKG8pLHRoaXMuX2FkanVzdERhdGUobil9LF9zZWxlY3REYXk6ZnVuY3Rpb24oZSxpLHMsbil7dmFyIG8sYT10KGUpO3QobikuaGFzQ2xhc3ModGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MpfHx0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlcihhWzBdKXx8KG89dGhpcy5fZ2V0SW5zdChhWzBdKSxvLnNlbGVjdGVkRGF5PW8uY3VycmVudERheT10KFwiYVwiLG4pLmh0bWwoKSxvLnNlbGVjdGVkTW9udGg9by5jdXJyZW50TW9udGg9aSxvLnNlbGVjdGVkWWVhcj1vLmN1cnJlbnRZZWFyPXMsdGhpcy5fc2VsZWN0RGF0ZShlLHRoaXMuX2Zvcm1hdERhdGUobyxvLmN1cnJlbnREYXksby5jdXJyZW50TW9udGgsby5jdXJyZW50WWVhcikpKX0sX2NsZWFyRGF0ZTpmdW5jdGlvbihlKXt2YXIgaT10KGUpO3RoaXMuX3NlbGVjdERhdGUoaSxcIlwiKX0sX3NlbGVjdERhdGU6ZnVuY3Rpb24oZSxpKXt2YXIgcyxuPXQoZSksbz10aGlzLl9nZXRJbnN0KG5bMF0pO2k9bnVsbCE9aT9pOnRoaXMuX2Zvcm1hdERhdGUobyksby5pbnB1dCYmby5pbnB1dC52YWwoaSksdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKG8pLHM9dGhpcy5fZ2V0KG8sXCJvblNlbGVjdFwiKSxzP3MuYXBwbHkoby5pbnB1dD9vLmlucHV0WzBdOm51bGwsW2ksb10pOm8uaW5wdXQmJm8uaW5wdXQudHJpZ2dlcihcImNoYW5nZVwiKSxvLmlubGluZT90aGlzLl91cGRhdGVEYXRlcGlja2VyKG8pOih0aGlzLl9oaWRlRGF0ZXBpY2tlcigpLHRoaXMuX2xhc3RJbnB1dD1vLmlucHV0WzBdLFwib2JqZWN0XCIhPXR5cGVvZiBvLmlucHV0WzBdJiZvLmlucHV0LnRyaWdnZXIoXCJmb2N1c1wiKSx0aGlzLl9sYXN0SW5wdXQ9bnVsbCl9LF91cGRhdGVBbHRlcm5hdGU6ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG89dGhpcy5fZ2V0KGUsXCJhbHRGaWVsZFwiKTtvJiYoaT10aGlzLl9nZXQoZSxcImFsdEZvcm1hdFwiKXx8dGhpcy5fZ2V0KGUsXCJkYXRlRm9ybWF0XCIpLHM9dGhpcy5fZ2V0RGF0ZShlKSxuPXRoaXMuZm9ybWF0RGF0ZShpLHMsdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKGUpKSx0KG8pLnZhbChuKSl9LG5vV2Vla2VuZHM6ZnVuY3Rpb24odCl7dmFyIGU9dC5nZXREYXkoKTtyZXR1cm5bZT4wJiY2PmUsXCJcIl19LGlzbzg2MDFXZWVrOmZ1bmN0aW9uKHQpe3ZhciBlLGk9bmV3IERhdGUodC5nZXRUaW1lKCkpO3JldHVybiBpLnNldERhdGUoaS5nZXREYXRlKCkrNC0oaS5nZXREYXkoKXx8NykpLGU9aS5nZXRUaW1lKCksaS5zZXRNb250aCgwKSxpLnNldERhdGUoMSksTWF0aC5mbG9vcihNYXRoLnJvdW5kKChlLWkpLzg2NGU1KS83KSsxfSxwYXJzZURhdGU6ZnVuY3Rpb24oZSxpLHMpe2lmKG51bGw9PWV8fG51bGw9PWkpdGhyb3dcIkludmFsaWQgYXJndW1lbnRzXCI7aWYoaT1cIm9iamVjdFwiPT10eXBlb2YgaT9cIlwiK2k6aStcIlwiLFwiXCI9PT1pKXJldHVybiBudWxsO3ZhciBuLG8sYSxyLGg9MCxsPShzP3Muc2hvcnRZZWFyQ3V0b2ZmOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5zaG9ydFllYXJDdXRvZmYsYz1cInN0cmluZ1wiIT10eXBlb2YgbD9sOihuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSUxMDArcGFyc2VJbnQobCwxMCksdT0ocz9zLmRheU5hbWVzU2hvcnQ6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzU2hvcnQsZD0ocz9zLmRheU5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lcyxwPShzP3MubW9udGhOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzU2hvcnQsZj0ocz9zLm1vbnRoTmFtZXM6bnVsbCl8fHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXMsZz0tMSxtPS0xLF89LTEsdj0tMSxiPSExLHk9ZnVuY3Rpb24odCl7dmFyIGk9ZS5sZW5ndGg+bisxJiZlLmNoYXJBdChuKzEpPT09dDtyZXR1cm4gaSYmbisrLGl9LHc9ZnVuY3Rpb24odCl7dmFyIGU9eSh0KSxzPVwiQFwiPT09dD8xNDpcIiFcIj09PXQ/MjA6XCJ5XCI9PT10JiZlPzQ6XCJvXCI9PT10PzM6MixuPVwieVwiPT09dD9zOjEsbz1SZWdFeHAoXCJeXFxcXGR7XCIrbitcIixcIitzK1wifVwiKSxhPWkuc3Vic3RyaW5nKGgpLm1hdGNoKG8pO2lmKCFhKXRocm93XCJNaXNzaW5nIG51bWJlciBhdCBwb3NpdGlvbiBcIitoO3JldHVybiBoKz1hWzBdLmxlbmd0aCxwYXJzZUludChhWzBdLDEwKX0saz1mdW5jdGlvbihlLHMsbil7dmFyIG89LTEsYT10Lm1hcCh5KGUpP246cyxmdW5jdGlvbih0LGUpe3JldHVybltbZSx0XV19KS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuLSh0WzFdLmxlbmd0aC1lWzFdLmxlbmd0aCl9KTtpZih0LmVhY2goYSxmdW5jdGlvbih0LGUpe3ZhciBzPWVbMV07cmV0dXJuIGkuc3Vic3RyKGgscy5sZW5ndGgpLnRvTG93ZXJDYXNlKCk9PT1zLnRvTG93ZXJDYXNlKCk/KG89ZVswXSxoKz1zLmxlbmd0aCwhMSk6dm9pZCAwfSksLTEhPT1vKXJldHVybiBvKzE7dGhyb3dcIlVua25vd24gbmFtZSBhdCBwb3NpdGlvbiBcIitofSx4PWZ1bmN0aW9uKCl7aWYoaS5jaGFyQXQoaCkhPT1lLmNoYXJBdChuKSl0aHJvd1wiVW5leHBlY3RlZCBsaXRlcmFsIGF0IHBvc2l0aW9uIFwiK2g7aCsrfTtmb3Iobj0wO2UubGVuZ3RoPm47bisrKWlmKGIpXCInXCIhPT1lLmNoYXJBdChuKXx8eShcIidcIik/eCgpOmI9ITE7ZWxzZSBzd2l0Y2goZS5jaGFyQXQobikpe2Nhc2VcImRcIjpfPXcoXCJkXCIpO2JyZWFrO2Nhc2VcIkRcIjprKFwiRFwiLHUsZCk7YnJlYWs7Y2FzZVwib1wiOnY9dyhcIm9cIik7YnJlYWs7Y2FzZVwibVwiOm09dyhcIm1cIik7YnJlYWs7Y2FzZVwiTVwiOm09ayhcIk1cIixwLGYpO2JyZWFrO2Nhc2VcInlcIjpnPXcoXCJ5XCIpO2JyZWFrO2Nhc2VcIkBcIjpyPW5ldyBEYXRlKHcoXCJAXCIpKSxnPXIuZ2V0RnVsbFllYXIoKSxtPXIuZ2V0TW9udGgoKSsxLF89ci5nZXREYXRlKCk7YnJlYWs7Y2FzZVwiIVwiOnI9bmV3IERhdGUoKHcoXCIhXCIpLXRoaXMuX3RpY2tzVG8xOTcwKS8xZTQpLGc9ci5nZXRGdWxsWWVhcigpLG09ci5nZXRNb250aCgpKzEsXz1yLmdldERhdGUoKTticmVhaztjYXNlXCInXCI6eShcIidcIik/eCgpOmI9ITA7YnJlYWs7ZGVmYXVsdDp4KCl9aWYoaS5sZW5ndGg+aCYmKGE9aS5zdWJzdHIoaCksIS9eXFxzKy8udGVzdChhKSkpdGhyb3dcIkV4dHJhL3VucGFyc2VkIGNoYXJhY3RlcnMgZm91bmQgaW4gZGF0ZTogXCIrYTtpZigtMT09PWc/Zz0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCk6MTAwPmcmJihnKz0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCktKG5ldyBEYXRlKS5nZXRGdWxsWWVhcigpJTEwMCsoYz49Zz8wOi0xMDApKSx2Pi0xKWZvcihtPTEsXz12Ozspe2lmKG89dGhpcy5fZ2V0RGF5c0luTW9udGgoZyxtLTEpLG8+PV8pYnJlYWs7bSsrLF8tPW99aWYocj10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShnLG0tMSxfKSksci5nZXRGdWxsWWVhcigpIT09Z3x8ci5nZXRNb250aCgpKzEhPT1tfHxyLmdldERhdGUoKSE9PV8pdGhyb3dcIkludmFsaWQgZGF0ZVwiO3JldHVybiByfSxBVE9NOlwieXktbW0tZGRcIixDT09LSUU6XCJELCBkZCBNIHl5XCIsSVNPXzg2MDE6XCJ5eS1tbS1kZFwiLFJGQ184MjI6XCJELCBkIE0geVwiLFJGQ184NTA6XCJERCwgZGQtTS15XCIsUkZDXzEwMzY6XCJELCBkIE0geVwiLFJGQ18xMTIzOlwiRCwgZCBNIHl5XCIsUkZDXzI4MjI6XCJELCBkIE0geXlcIixSU1M6XCJELCBkIE0geVwiLFRJQ0tTOlwiIVwiLFRJTUVTVEFNUDpcIkBcIixXM0M6XCJ5eS1tbS1kZFwiLF90aWNrc1RvMTk3MDoxZTcqNjAqNjAqMjQqKDcxODY4NStNYXRoLmZsb29yKDQ5Mi41KS1NYXRoLmZsb29yKDE5LjcpK01hdGguZmxvb3IoNC45MjUpKSxmb3JtYXREYXRlOmZ1bmN0aW9uKHQsZSxpKXtpZighZSlyZXR1cm5cIlwiO3ZhciBzLG49KGk/aS5kYXlOYW1lc1Nob3J0Om51bGwpfHx0aGlzLl9kZWZhdWx0cy5kYXlOYW1lc1Nob3J0LG89KGk/aS5kYXlOYW1lczpudWxsKXx8dGhpcy5fZGVmYXVsdHMuZGF5TmFtZXMsYT0oaT9pLm1vbnRoTmFtZXNTaG9ydDpudWxsKXx8dGhpcy5fZGVmYXVsdHMubW9udGhOYW1lc1Nob3J0LHI9KGk/aS5tb250aE5hbWVzOm51bGwpfHx0aGlzLl9kZWZhdWx0cy5tb250aE5hbWVzLGg9ZnVuY3Rpb24oZSl7dmFyIGk9dC5sZW5ndGg+cysxJiZ0LmNoYXJBdChzKzEpPT09ZTtyZXR1cm4gaSYmcysrLGl9LGw9ZnVuY3Rpb24odCxlLGkpe3ZhciBzPVwiXCIrZTtpZihoKHQpKWZvcig7aT5zLmxlbmd0aDspcz1cIjBcIitzO3JldHVybiBzfSxjPWZ1bmN0aW9uKHQsZSxpLHMpe3JldHVybiBoKHQpP3NbZV06aVtlXX0sdT1cIlwiLGQ9ITE7aWYoZSlmb3Iocz0wO3QubGVuZ3RoPnM7cysrKWlmKGQpXCInXCIhPT10LmNoYXJBdChzKXx8aChcIidcIik/dSs9dC5jaGFyQXQocyk6ZD0hMTtlbHNlIHN3aXRjaCh0LmNoYXJBdChzKSl7Y2FzZVwiZFwiOnUrPWwoXCJkXCIsZS5nZXREYXRlKCksMik7YnJlYWs7Y2FzZVwiRFwiOnUrPWMoXCJEXCIsZS5nZXREYXkoKSxuLG8pO2JyZWFrO2Nhc2VcIm9cIjp1Kz1sKFwib1wiLE1hdGgucm91bmQoKG5ldyBEYXRlKGUuZ2V0RnVsbFllYXIoKSxlLmdldE1vbnRoKCksZS5nZXREYXRlKCkpLmdldFRpbWUoKS1uZXcgRGF0ZShlLmdldEZ1bGxZZWFyKCksMCwwKS5nZXRUaW1lKCkpLzg2NGU1KSwzKTticmVhaztjYXNlXCJtXCI6dSs9bChcIm1cIixlLmdldE1vbnRoKCkrMSwyKTticmVhaztjYXNlXCJNXCI6dSs9YyhcIk1cIixlLmdldE1vbnRoKCksYSxyKTticmVhaztjYXNlXCJ5XCI6dSs9aChcInlcIik/ZS5nZXRGdWxsWWVhcigpOigxMD5lLmdldEZ1bGxZZWFyKCklMTAwP1wiMFwiOlwiXCIpK2UuZ2V0RnVsbFllYXIoKSUxMDA7YnJlYWs7Y2FzZVwiQFwiOnUrPWUuZ2V0VGltZSgpO2JyZWFrO2Nhc2VcIiFcIjp1Kz0xZTQqZS5nZXRUaW1lKCkrdGhpcy5fdGlja3NUbzE5NzA7YnJlYWs7Y2FzZVwiJ1wiOmgoXCInXCIpP3UrPVwiJ1wiOmQ9ITA7YnJlYWs7ZGVmYXVsdDp1Kz10LmNoYXJBdChzKX1yZXR1cm4gdX0sX3Bvc3NpYmxlQ2hhcnM6ZnVuY3Rpb24odCl7dmFyIGUsaT1cIlwiLHM9ITEsbj1mdW5jdGlvbihpKXt2YXIgcz10Lmxlbmd0aD5lKzEmJnQuY2hhckF0KGUrMSk9PT1pO3JldHVybiBzJiZlKyssc307Zm9yKGU9MDt0Lmxlbmd0aD5lO2UrKylpZihzKVwiJ1wiIT09dC5jaGFyQXQoZSl8fG4oXCInXCIpP2krPXQuY2hhckF0KGUpOnM9ITE7ZWxzZSBzd2l0Y2godC5jaGFyQXQoZSkpe2Nhc2VcImRcIjpjYXNlXCJtXCI6Y2FzZVwieVwiOmNhc2VcIkBcIjppKz1cIjAxMjM0NTY3ODlcIjticmVhaztjYXNlXCJEXCI6Y2FzZVwiTVwiOnJldHVybiBudWxsO2Nhc2VcIidcIjpuKFwiJ1wiKT9pKz1cIidcIjpzPSEwO2JyZWFrO2RlZmF1bHQ6aSs9dC5jaGFyQXQoZSl9cmV0dXJuIGl9LF9nZXQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwIT09dC5zZXR0aW5nc1tlXT90LnNldHRpbmdzW2VdOnRoaXMuX2RlZmF1bHRzW2VdfSxfc2V0RGF0ZUZyb21GaWVsZDpmdW5jdGlvbih0LGUpe2lmKHQuaW5wdXQudmFsKCkhPT10Lmxhc3RWYWwpe3ZhciBpPXRoaXMuX2dldCh0LFwiZGF0ZUZvcm1hdFwiKSxzPXQubGFzdFZhbD10LmlucHV0P3QuaW5wdXQudmFsKCk6bnVsbCxuPXRoaXMuX2dldERlZmF1bHREYXRlKHQpLG89bixhPXRoaXMuX2dldEZvcm1hdENvbmZpZyh0KTt0cnl7bz10aGlzLnBhcnNlRGF0ZShpLHMsYSl8fG59Y2F0Y2gocil7cz1lP1wiXCI6c310LnNlbGVjdGVkRGF5PW8uZ2V0RGF0ZSgpLHQuZHJhd01vbnRoPXQuc2VsZWN0ZWRNb250aD1vLmdldE1vbnRoKCksdC5kcmF3WWVhcj10LnNlbGVjdGVkWWVhcj1vLmdldEZ1bGxZZWFyKCksdC5jdXJyZW50RGF5PXM/by5nZXREYXRlKCk6MCx0LmN1cnJlbnRNb250aD1zP28uZ2V0TW9udGgoKTowLHQuY3VycmVudFllYXI9cz9vLmdldEZ1bGxZZWFyKCk6MCx0aGlzLl9hZGp1c3RJbnN0RGF0ZSh0KX19LF9nZXREZWZhdWx0RGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmVzdHJpY3RNaW5NYXgodCx0aGlzLl9kZXRlcm1pbmVEYXRlKHQsdGhpcy5fZ2V0KHQsXCJkZWZhdWx0RGF0ZVwiKSxuZXcgRGF0ZSkpfSxfZGV0ZXJtaW5lRGF0ZTpmdW5jdGlvbihlLGkscyl7dmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9bmV3IERhdGU7cmV0dXJuIGUuc2V0RGF0ZShlLmdldERhdGUoKSt0KSxlfSxvPWZ1bmN0aW9uKGkpe3RyeXtyZXR1cm4gdC5kYXRlcGlja2VyLnBhcnNlRGF0ZSh0LmRhdGVwaWNrZXIuX2dldChlLFwiZGF0ZUZvcm1hdFwiKSxpLHQuZGF0ZXBpY2tlci5fZ2V0Rm9ybWF0Q29uZmlnKGUpKX1jYXRjaChzKXt9Zm9yKHZhciBuPShpLnRvTG93ZXJDYXNlKCkubWF0Y2goL15jLyk/dC5kYXRlcGlja2VyLl9nZXREYXRlKGUpOm51bGwpfHxuZXcgRGF0ZSxvPW4uZ2V0RnVsbFllYXIoKSxhPW4uZ2V0TW9udGgoKSxyPW4uZ2V0RGF0ZSgpLGg9LyhbK1xcLV0/WzAtOV0rKVxccyooZHxEfHd8V3xtfE18eXxZKT8vZyxsPWguZXhlYyhpKTtsOyl7c3dpdGNoKGxbMl18fFwiZFwiKXtjYXNlXCJkXCI6Y2FzZVwiRFwiOnIrPXBhcnNlSW50KGxbMV0sMTApO2JyZWFrO2Nhc2VcIndcIjpjYXNlXCJXXCI6cis9NypwYXJzZUludChsWzFdLDEwKTticmVhaztjYXNlXCJtXCI6Y2FzZVwiTVwiOmErPXBhcnNlSW50KGxbMV0sMTApLHI9TWF0aC5taW4ocix0LmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKG8sYSkpO2JyZWFrO2Nhc2VcInlcIjpjYXNlXCJZXCI6bys9cGFyc2VJbnQobFsxXSwxMCkscj1NYXRoLm1pbihyLHQuZGF0ZXBpY2tlci5fZ2V0RGF5c0luTW9udGgobyxhKSl9bD1oLmV4ZWMoaSl9cmV0dXJuIG5ldyBEYXRlKG8sYSxyKX0sYT1udWxsPT1pfHxcIlwiPT09aT9zOlwic3RyaW5nXCI9PXR5cGVvZiBpP28oaSk6XCJudW1iZXJcIj09dHlwZW9mIGk/aXNOYU4oaSk/czpuKGkpOm5ldyBEYXRlKGkuZ2V0VGltZSgpKTtyZXR1cm4gYT1hJiZcIkludmFsaWQgRGF0ZVwiPT1cIlwiK2E/czphLGEmJihhLnNldEhvdXJzKDApLGEuc2V0TWludXRlcygwKSxhLnNldFNlY29uZHMoMCksYS5zZXRNaWxsaXNlY29uZHMoMCkpLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KGEpfSxfZGF5bGlnaHRTYXZpbmdBZGp1c3Q6ZnVuY3Rpb24odCl7cmV0dXJuIHQ/KHQuc2V0SG91cnModC5nZXRIb3VycygpPjEyP3QuZ2V0SG91cnMoKSsyOjApLHQpOm51bGx9LF9zZXREYXRlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcz0hZSxuPXQuc2VsZWN0ZWRNb250aCxvPXQuc2VsZWN0ZWRZZWFyLGE9dGhpcy5fcmVzdHJpY3RNaW5NYXgodCx0aGlzLl9kZXRlcm1pbmVEYXRlKHQsZSxuZXcgRGF0ZSkpO3Quc2VsZWN0ZWREYXk9dC5jdXJyZW50RGF5PWEuZ2V0RGF0ZSgpLHQuZHJhd01vbnRoPXQuc2VsZWN0ZWRNb250aD10LmN1cnJlbnRNb250aD1hLmdldE1vbnRoKCksdC5kcmF3WWVhcj10LnNlbGVjdGVkWWVhcj10LmN1cnJlbnRZZWFyPWEuZ2V0RnVsbFllYXIoKSxuPT09dC5zZWxlY3RlZE1vbnRoJiZvPT09dC5zZWxlY3RlZFllYXJ8fGl8fHRoaXMuX25vdGlmeUNoYW5nZSh0KSx0aGlzLl9hZGp1c3RJbnN0RGF0ZSh0KSx0LmlucHV0JiZ0LmlucHV0LnZhbChzP1wiXCI6dGhpcy5fZm9ybWF0RGF0ZSh0KSl9LF9nZXREYXRlOmZ1bmN0aW9uKHQpe3ZhciBlPSF0LmN1cnJlbnRZZWFyfHx0LmlucHV0JiZcIlwiPT09dC5pbnB1dC52YWwoKT9udWxsOnRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHQuY3VycmVudFllYXIsdC5jdXJyZW50TW9udGgsdC5jdXJyZW50RGF5KSk7cmV0dXJuIGV9LF9hdHRhY2hIYW5kbGVyczpmdW5jdGlvbihlKXt2YXIgaT10aGlzLl9nZXQoZSxcInN0ZXBNb250aHNcIikscz1cIiNcIitlLmlkLnJlcGxhY2UoL1xcXFxcXFxcL2csXCJcXFxcXCIpO2UuZHBEaXYuZmluZChcIltkYXRhLWhhbmRsZXJdXCIpLm1hcChmdW5jdGlvbigpe3ZhciBlPXtwcmV2OmZ1bmN0aW9uKCl7dC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKHMsLWksXCJNXCIpfSxuZXh0OmZ1bmN0aW9uKCl7dC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKHMsK2ksXCJNXCIpfSxoaWRlOmZ1bmN0aW9uKCl7dC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpfSx0b2RheTpmdW5jdGlvbigpe3QuZGF0ZXBpY2tlci5fZ290b1RvZGF5KHMpfSxzZWxlY3REYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdC5kYXRlcGlja2VyLl9zZWxlY3REYXkocywrdGhpcy5nZXRBdHRyaWJ1dGUoXCJkYXRhLW1vbnRoXCIpLCt0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEteWVhclwiKSx0aGlzKSwhMX0sc2VsZWN0TW9udGg6ZnVuY3Rpb24oKXtyZXR1cm4gdC5kYXRlcGlja2VyLl9zZWxlY3RNb250aFllYXIocyx0aGlzLFwiTVwiKSwhMX0sc2VsZWN0WWVhcjpmdW5jdGlvbigpe3JldHVybiB0LmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhcihzLHRoaXMsXCJZXCIpLCExfX07dCh0aGlzKS5vbih0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtZXZlbnRcIiksZVt0aGlzLmdldEF0dHJpYnV0ZShcImRhdGEtaGFuZGxlclwiKV0pfSl9LF9nZW5lcmF0ZUhUTUw6ZnVuY3Rpb24odCl7dmFyIGUsaSxzLG4sbyxhLHIsaCxsLGMsdSxkLHAsZixnLG0sXyx2LGIseSx3LGsseCxDLEQsSSxULFAsTSxTLEgseixPLEEsTixXLEUsRixMLFI9bmV3IERhdGUsQj10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShSLmdldEZ1bGxZZWFyKCksUi5nZXRNb250aCgpLFIuZ2V0RGF0ZSgpKSksWT10aGlzLl9nZXQodCxcImlzUlRMXCIpLGo9dGhpcy5fZ2V0KHQsXCJzaG93QnV0dG9uUGFuZWxcIikscT10aGlzLl9nZXQodCxcImhpZGVJZk5vUHJldk5leHRcIiksSz10aGlzLl9nZXQodCxcIm5hdmlnYXRpb25Bc0RhdGVGb3JtYXRcIiksVT10aGlzLl9nZXROdW1iZXJPZk1vbnRocyh0KSxWPXRoaXMuX2dldCh0LFwic2hvd0N1cnJlbnRBdFBvc1wiKSwkPXRoaXMuX2dldCh0LFwic3RlcE1vbnRoc1wiKSxYPTEhPT1VWzBdfHwxIT09VVsxXSxHPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KHQuY3VycmVudERheT9uZXcgRGF0ZSh0LmN1cnJlbnRZZWFyLHQuY3VycmVudE1vbnRoLHQuY3VycmVudERheSk6bmV3IERhdGUoOTk5OSw5LDkpKSxRPXRoaXMuX2dldE1pbk1heERhdGUodCxcIm1pblwiKSxKPXRoaXMuX2dldE1pbk1heERhdGUodCxcIm1heFwiKSxaPXQuZHJhd01vbnRoLVYsdGU9dC5kcmF3WWVhcjtpZigwPlomJihaKz0xMix0ZS0tKSxKKWZvcihlPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKEouZ2V0RnVsbFllYXIoKSxKLmdldE1vbnRoKCktVVswXSpVWzFdKzEsSi5nZXREYXRlKCkpKSxlPVEmJlE+ZT9ROmU7dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodGUsWiwxKSk+ZTspWi0tLDA+WiYmKFo9MTEsdGUtLSk7Zm9yKHQuZHJhd01vbnRoPVosdC5kcmF3WWVhcj10ZSxpPXRoaXMuX2dldCh0LFwicHJldlRleHRcIiksaT1LP3RoaXMuZm9ybWF0RGF0ZShpLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHRlLFotJCwxKSksdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKHQpKTppLHM9dGhpcy5fY2FuQWRqdXN0TW9udGgodCwtMSx0ZSxaKT9cIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdwcmV2JyBkYXRhLWV2ZW50PSdjbGljaycgdGl0bGU9J1wiK2krXCInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLVwiKyhZP1wiZVwiOlwid1wiKStcIic+XCIraStcIjwvc3Bhbj48L2E+XCI6cT9cIlwiOlwiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsIHVpLXN0YXRlLWRpc2FibGVkJyB0aXRsZT0nXCIraStcIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtXCIrKFk/XCJlXCI6XCJ3XCIpK1wiJz5cIitpK1wiPC9zcGFuPjwvYT5cIixuPXRoaXMuX2dldCh0LFwibmV4dFRleHRcIiksbj1LP3RoaXMuZm9ybWF0RGF0ZShuLHRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHRlLForJCwxKSksdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKHQpKTpuLG89dGhpcy5fY2FuQWRqdXN0TW9udGgodCwxLHRlLFopP1wiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItbmV4dCB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J25leHQnIGRhdGEtZXZlbnQ9J2NsaWNrJyB0aXRsZT0nXCIrbitcIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtXCIrKFk/XCJ3XCI6XCJlXCIpK1wiJz5cIituK1wiPC9zcGFuPjwvYT5cIjpxP1wiXCI6XCI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWQnIHRpdGxlPSdcIituK1wiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS1cIisoWT9cIndcIjpcImVcIikrXCInPlwiK24rXCI8L3NwYW4+PC9hPlwiLGE9dGhpcy5fZ2V0KHQsXCJjdXJyZW50VGV4dFwiKSxyPXRoaXMuX2dldCh0LFwiZ290b0N1cnJlbnRcIikmJnQuY3VycmVudERheT9HOkIsYT1LP3RoaXMuZm9ybWF0RGF0ZShhLHIsdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKHQpKTphLGg9dC5pbmxpbmU/XCJcIjpcIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0ndWktZGF0ZXBpY2tlci1jbG9zZSB1aS1zdGF0ZS1kZWZhdWx0IHVpLXByaW9yaXR5LXByaW1hcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSdoaWRlJyBkYXRhLWV2ZW50PSdjbGljayc+XCIrdGhpcy5fZ2V0KHQsXCJjbG9zZVRleHRcIikrXCI8L2J1dHRvbj5cIixsPWo/XCI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWJ1dHRvbnBhbmUgdWktd2lkZ2V0LWNvbnRlbnQnPlwiKyhZP2g6XCJcIikrKHRoaXMuX2lzSW5SYW5nZSh0LHIpP1wiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSd1aS1kYXRlcGlja2VyLWN1cnJlbnQgdWktc3RhdGUtZGVmYXVsdCB1aS1wcmlvcml0eS1zZWNvbmRhcnkgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSd0b2RheScgZGF0YS1ldmVudD0nY2xpY2snPlwiK2ErXCI8L2J1dHRvbj5cIjpcIlwiKSsoWT9cIlwiOmgpK1wiPC9kaXY+XCI6XCJcIixjPXBhcnNlSW50KHRoaXMuX2dldCh0LFwiZmlyc3REYXlcIiksMTApLGM9aXNOYU4oYyk/MDpjLHU9dGhpcy5fZ2V0KHQsXCJzaG93V2Vla1wiKSxkPXRoaXMuX2dldCh0LFwiZGF5TmFtZXNcIikscD10aGlzLl9nZXQodCxcImRheU5hbWVzTWluXCIpLGY9dGhpcy5fZ2V0KHQsXCJtb250aE5hbWVzXCIpLGc9dGhpcy5fZ2V0KHQsXCJtb250aE5hbWVzU2hvcnRcIiksbT10aGlzLl9nZXQodCxcImJlZm9yZVNob3dEYXlcIiksXz10aGlzLl9nZXQodCxcInNob3dPdGhlck1vbnRoc1wiKSx2PXRoaXMuX2dldCh0LFwic2VsZWN0T3RoZXJNb250aHNcIiksYj10aGlzLl9nZXREZWZhdWx0RGF0ZSh0KSx5PVwiXCIsaz0wO1VbMF0+aztrKyspe2Zvcih4PVwiXCIsdGhpcy5tYXhSb3dzPTQsQz0wO1VbMV0+QztDKyspe2lmKEQ9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUodGUsWix0LnNlbGVjdGVkRGF5KSksST1cIiB1aS1jb3JuZXItYWxsXCIsVD1cIlwiLFgpe2lmKFQrPVwiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1ncm91cFwiLFVbMV0+MSlzd2l0Y2goQyl7Y2FzZSAwOlQrPVwiIHVpLWRhdGVwaWNrZXItZ3JvdXAtZmlyc3RcIixJPVwiIHVpLWNvcm5lci1cIisoWT9cInJpZ2h0XCI6XCJsZWZ0XCIpO2JyZWFrO2Nhc2UgVVsxXS0xOlQrPVwiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbGFzdFwiLEk9XCIgdWktY29ybmVyLVwiKyhZP1wibGVmdFwiOlwicmlnaHRcIik7YnJlYWs7ZGVmYXVsdDpUKz1cIiB1aS1kYXRlcGlja2VyLWdyb3VwLW1pZGRsZVwiLEk9XCJcIn1UKz1cIic+XCJ9Zm9yKFQrPVwiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1oZWFkZXIgdWktd2lkZ2V0LWhlYWRlciB1aS1oZWxwZXItY2xlYXJmaXhcIitJK1wiJz5cIisoL2FsbHxsZWZ0Ly50ZXN0KEkpJiYwPT09az9ZP286czpcIlwiKSsoL2FsbHxyaWdodC8udGVzdChJKSYmMD09PWs/WT9zOm86XCJcIikrdGhpcy5fZ2VuZXJhdGVNb250aFllYXJIZWFkZXIodCxaLHRlLFEsSixrPjB8fEM+MCxmLGcpK1wiPC9kaXY+PHRhYmxlIGNsYXNzPSd1aS1kYXRlcGlja2VyLWNhbGVuZGFyJz48dGhlYWQ+XCIrXCI8dHI+XCIsUD11P1wiPHRoIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstY29sJz5cIit0aGlzLl9nZXQodCxcIndlZWtIZWFkZXJcIikrXCI8L3RoPlwiOlwiXCIsdz0wOzc+dzt3KyspTT0odytjKSU3LFArPVwiPHRoIHNjb3BlPSdjb2wnXCIrKCh3K2MrNiklNz49NT9cIiBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWVuZCdcIjpcIlwiKStcIj5cIitcIjxzcGFuIHRpdGxlPSdcIitkW01dK1wiJz5cIitwW01dK1wiPC9zcGFuPjwvdGg+XCI7Zm9yKFQrPVArXCI8L3RyPjwvdGhlYWQ+PHRib2R5PlwiLFM9dGhpcy5fZ2V0RGF5c0luTW9udGgodGUsWiksdGU9PT10LnNlbGVjdGVkWWVhciYmWj09PXQuc2VsZWN0ZWRNb250aCYmKHQuc2VsZWN0ZWREYXk9TWF0aC5taW4odC5zZWxlY3RlZERheSxTKSksSD0odGhpcy5fZ2V0Rmlyc3REYXlPZk1vbnRoKHRlLFopLWMrNyklNyx6PU1hdGguY2VpbCgoSCtTKS83KSxPPVg/dGhpcy5tYXhSb3dzPno/dGhpcy5tYXhSb3dzOno6eix0aGlzLm1heFJvd3M9TyxBPXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KG5ldyBEYXRlKHRlLFosMS1IKSksTj0wO08+TjtOKyspe2ZvcihUKz1cIjx0cj5cIixXPXU/XCI8dGQgY2xhc3M9J3VpLWRhdGVwaWNrZXItd2Vlay1jb2wnPlwiK3RoaXMuX2dldCh0LFwiY2FsY3VsYXRlV2Vla1wiKShBKStcIjwvdGQ+XCI6XCJcIix3PTA7Nz53O3crKylFPW0/bS5hcHBseSh0LmlucHV0P3QuaW5wdXRbMF06bnVsbCxbQV0pOlshMCxcIlwiXSxGPUEuZ2V0TW9udGgoKSE9PVosTD1GJiYhdnx8IUVbMF18fFEmJlE+QXx8SiYmQT5KLFcrPVwiPHRkIGNsYXNzPSdcIisoKHcrYys2KSU3Pj01P1wiIHVpLWRhdGVwaWNrZXItd2Vlay1lbmRcIjpcIlwiKSsoRj9cIiB1aS1kYXRlcGlja2VyLW90aGVyLW1vbnRoXCI6XCJcIikrKEEuZ2V0VGltZSgpPT09RC5nZXRUaW1lKCkmJlo9PT10LnNlbGVjdGVkTW9udGgmJnQuX2tleUV2ZW50fHxiLmdldFRpbWUoKT09PUEuZ2V0VGltZSgpJiZiLmdldFRpbWUoKT09PUQuZ2V0VGltZSgpP1wiIFwiK3RoaXMuX2RheU92ZXJDbGFzczpcIlwiKSsoTD9cIiBcIit0aGlzLl91bnNlbGVjdGFibGVDbGFzcytcIiB1aS1zdGF0ZS1kaXNhYmxlZFwiOlwiXCIpKyhGJiYhXz9cIlwiOlwiIFwiK0VbMV0rKEEuZ2V0VGltZSgpPT09Ry5nZXRUaW1lKCk/XCIgXCIrdGhpcy5fY3VycmVudENsYXNzOlwiXCIpKyhBLmdldFRpbWUoKT09PUIuZ2V0VGltZSgpP1wiIHVpLWRhdGVwaWNrZXItdG9kYXlcIjpcIlwiKSkrXCInXCIrKEYmJiFffHwhRVsyXT9cIlwiOlwiIHRpdGxlPSdcIitFWzJdLnJlcGxhY2UoLycvZyxcIiYjMzk7XCIpK1wiJ1wiKSsoTD9cIlwiOlwiIGRhdGEtaGFuZGxlcj0nc2VsZWN0RGF5JyBkYXRhLWV2ZW50PSdjbGljaycgZGF0YS1tb250aD0nXCIrQS5nZXRNb250aCgpK1wiJyBkYXRhLXllYXI9J1wiK0EuZ2V0RnVsbFllYXIoKStcIidcIikrXCI+XCIrKEYmJiFfP1wiJiN4YTA7XCI6TD9cIjxzcGFuIGNsYXNzPSd1aS1zdGF0ZS1kZWZhdWx0Jz5cIitBLmdldERhdGUoKStcIjwvc3Bhbj5cIjpcIjxhIGNsYXNzPSd1aS1zdGF0ZS1kZWZhdWx0XCIrKEEuZ2V0VGltZSgpPT09Qi5nZXRUaW1lKCk/XCIgdWktc3RhdGUtaGlnaGxpZ2h0XCI6XCJcIikrKEEuZ2V0VGltZSgpPT09Ry5nZXRUaW1lKCk/XCIgdWktc3RhdGUtYWN0aXZlXCI6XCJcIikrKEY/XCIgdWktcHJpb3JpdHktc2Vjb25kYXJ5XCI6XCJcIikrXCInIGhyZWY9JyMnPlwiK0EuZ2V0RGF0ZSgpK1wiPC9hPlwiKStcIjwvdGQ+XCIsQS5zZXREYXRlKEEuZ2V0RGF0ZSgpKzEpLEE9dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoQSk7VCs9VytcIjwvdHI+XCJ9WisrLFo+MTEmJihaPTAsdGUrKyksVCs9XCI8L3Rib2R5PjwvdGFibGU+XCIrKFg/XCI8L2Rpdj5cIisoVVswXT4wJiZDPT09VVsxXS0xP1wiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1yb3ctYnJlYWsnPjwvZGl2PlwiOlwiXCIpOlwiXCIpLHgrPVR9eSs9eH1yZXR1cm4geSs9bCx0Ll9rZXlFdmVudD0hMSx5fSxfZ2VuZXJhdGVNb250aFllYXJIZWFkZXI6ZnVuY3Rpb24odCxlLGkscyxuLG8sYSxyKXt2YXIgaCxsLGMsdSxkLHAsZixnLG09dGhpcy5fZ2V0KHQsXCJjaGFuZ2VNb250aFwiKSxfPXRoaXMuX2dldCh0LFwiY2hhbmdlWWVhclwiKSx2PXRoaXMuX2dldCh0LFwic2hvd01vbnRoQWZ0ZXJZZWFyXCIpLGI9XCI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLXRpdGxlJz5cIix5PVwiXCI7aWYob3x8IW0peSs9XCI8c3BhbiBjbGFzcz0ndWktZGF0ZXBpY2tlci1tb250aCc+XCIrYVtlXStcIjwvc3Bhbj5cIjtlbHNle2ZvcihoPXMmJnMuZ2V0RnVsbFllYXIoKT09PWksbD1uJiZuLmdldEZ1bGxZZWFyKCk9PT1pLHkrPVwiPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci1tb250aCcgZGF0YS1oYW5kbGVyPSdzZWxlY3RNb250aCcgZGF0YS1ldmVudD0nY2hhbmdlJz5cIixjPTA7MTI+YztjKyspKCFofHxjPj1zLmdldE1vbnRoKCkpJiYoIWx8fG4uZ2V0TW9udGgoKT49YykmJih5Kz1cIjxvcHRpb24gdmFsdWU9J1wiK2MrXCInXCIrKGM9PT1lP1wiIHNlbGVjdGVkPSdzZWxlY3RlZCdcIjpcIlwiKStcIj5cIityW2NdK1wiPC9vcHRpb24+XCIpO3krPVwiPC9zZWxlY3Q+XCJ9aWYodnx8KGIrPXkrKCFvJiZtJiZfP1wiXCI6XCImI3hhMDtcIikpLCF0LnllYXJzaHRtbClpZih0LnllYXJzaHRtbD1cIlwiLG98fCFfKWIrPVwiPHNwYW4gY2xhc3M9J3VpLWRhdGVwaWNrZXIteWVhcic+XCIraStcIjwvc3Bhbj5cIjtlbHNle2Zvcih1PXRoaXMuX2dldCh0LFwieWVhclJhbmdlXCIpLnNwbGl0KFwiOlwiKSxkPShuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSxwPWZ1bmN0aW9uKHQpe3ZhciBlPXQubWF0Y2goL2NbK1xcLV0uKi8pP2krcGFyc2VJbnQodC5zdWJzdHJpbmcoMSksMTApOnQubWF0Y2goL1srXFwtXS4qLyk/ZCtwYXJzZUludCh0LDEwKTpwYXJzZUludCh0LDEwKTtyZXR1cm4gaXNOYU4oZSk/ZDplfSxmPXAodVswXSksZz1NYXRoLm1heChmLHAodVsxXXx8XCJcIikpLGY9cz9NYXRoLm1heChmLHMuZ2V0RnVsbFllYXIoKSk6ZixnPW4/TWF0aC5taW4oZyxuLmdldEZ1bGxZZWFyKCkpOmcsdC55ZWFyc2h0bWwrPVwiPHNlbGVjdCBjbGFzcz0ndWktZGF0ZXBpY2tlci15ZWFyJyBkYXRhLWhhbmRsZXI9J3NlbGVjdFllYXInIGRhdGEtZXZlbnQ9J2NoYW5nZSc+XCI7Zz49ZjtmKyspdC55ZWFyc2h0bWwrPVwiPG9wdGlvbiB2YWx1ZT0nXCIrZitcIidcIisoZj09PWk/XCIgc2VsZWN0ZWQ9J3NlbGVjdGVkJ1wiOlwiXCIpK1wiPlwiK2YrXCI8L29wdGlvbj5cIjt0LnllYXJzaHRtbCs9XCI8L3NlbGVjdD5cIixiKz10LnllYXJzaHRtbCx0LnllYXJzaHRtbD1udWxsfXJldHVybiBiKz10aGlzLl9nZXQodCxcInllYXJTdWZmaXhcIiksdiYmKGIrPSghbyYmbSYmXz9cIlwiOlwiJiN4YTA7XCIpK3kpLGIrPVwiPC9kaXY+XCJ9LF9hZGp1c3RJbnN0RGF0ZTpmdW5jdGlvbih0LGUsaSl7dmFyIHM9dC5zZWxlY3RlZFllYXIrKFwiWVwiPT09aT9lOjApLG49dC5zZWxlY3RlZE1vbnRoKyhcIk1cIj09PWk/ZTowKSxvPU1hdGgubWluKHQuc2VsZWN0ZWREYXksdGhpcy5fZ2V0RGF5c0luTW9udGgocyxuKSkrKFwiRFwiPT09aT9lOjApLGE9dGhpcy5fcmVzdHJpY3RNaW5NYXgodCx0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShzLG4sbykpKTt0LnNlbGVjdGVkRGF5PWEuZ2V0RGF0ZSgpLHQuZHJhd01vbnRoPXQuc2VsZWN0ZWRNb250aD1hLmdldE1vbnRoKCksdC5kcmF3WWVhcj10LnNlbGVjdGVkWWVhcj1hLmdldEZ1bGxZZWFyKCksKFwiTVwiPT09aXx8XCJZXCI9PT1pKSYmdGhpcy5fbm90aWZ5Q2hhbmdlKHQpfSxfcmVzdHJpY3RNaW5NYXg6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLl9nZXRNaW5NYXhEYXRlKHQsXCJtaW5cIikscz10aGlzLl9nZXRNaW5NYXhEYXRlKHQsXCJtYXhcIiksbj1pJiZpPmU/aTplO3JldHVybiBzJiZuPnM/czpufSxfbm90aWZ5Q2hhbmdlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX2dldCh0LFwib25DaGFuZ2VNb250aFllYXJcIik7ZSYmZS5hcHBseSh0LmlucHV0P3QuaW5wdXRbMF06bnVsbCxbdC5zZWxlY3RlZFllYXIsdC5zZWxlY3RlZE1vbnRoKzEsdF0pfSxfZ2V0TnVtYmVyT2ZNb250aHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fZ2V0KHQsXCJudW1iZXJPZk1vbnRoc1wiKTtyZXR1cm4gbnVsbD09ZT9bMSwxXTpcIm51bWJlclwiPT10eXBlb2YgZT9bMSxlXTplfSxfZ2V0TWluTWF4RGF0ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9kZXRlcm1pbmVEYXRlKHQsdGhpcy5fZ2V0KHQsZStcIkRhdGVcIiksbnVsbCl9LF9nZXREYXlzSW5Nb250aDpmdW5jdGlvbih0LGUpe3JldHVybiAzMi10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh0LGUsMzIpKS5nZXREYXRlKCl9LF9nZXRGaXJzdERheU9mTW9udGg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IERhdGUodCxlLDEpLmdldERheSgpfSxfY2FuQWRqdXN0TW9udGg6ZnVuY3Rpb24odCxlLGkscyl7dmFyIG49dGhpcy5fZ2V0TnVtYmVyT2ZNb250aHModCksbz10aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZShpLHMrKDA+ZT9lOm5bMF0qblsxXSksMSkpO3JldHVybiAwPmUmJm8uc2V0RGF0ZSh0aGlzLl9nZXREYXlzSW5Nb250aChvLmdldEZ1bGxZZWFyKCksby5nZXRNb250aCgpKSksdGhpcy5faXNJblJhbmdlKHQsbyl9LF9pc0luUmFuZ2U6ZnVuY3Rpb24odCxlKXt2YXIgaSxzLG49dGhpcy5fZ2V0TWluTWF4RGF0ZSh0LFwibWluXCIpLG89dGhpcy5fZ2V0TWluTWF4RGF0ZSh0LFwibWF4XCIpLGE9bnVsbCxyPW51bGwsaD10aGlzLl9nZXQodCxcInllYXJSYW5nZVwiKTtyZXR1cm4gaCYmKGk9aC5zcGxpdChcIjpcIikscz0obmV3IERhdGUpLmdldEZ1bGxZZWFyKCksYT1wYXJzZUludChpWzBdLDEwKSxyPXBhcnNlSW50KGlbMV0sMTApLGlbMF0ubWF0Y2goL1srXFwtXS4qLykmJihhKz1zKSxpWzFdLm1hdGNoKC9bK1xcLV0uKi8pJiYocis9cykpLCghbnx8ZS5nZXRUaW1lKCk+PW4uZ2V0VGltZSgpKSYmKCFvfHxlLmdldFRpbWUoKTw9by5nZXRUaW1lKCkpJiYoIWF8fGUuZ2V0RnVsbFllYXIoKT49YSkmJighcnx8cj49ZS5nZXRGdWxsWWVhcigpKX0sX2dldEZvcm1hdENvbmZpZzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl9nZXQodCxcInNob3J0WWVhckN1dG9mZlwiKTtyZXR1cm4gZT1cInN0cmluZ1wiIT10eXBlb2YgZT9lOihuZXcgRGF0ZSkuZ2V0RnVsbFllYXIoKSUxMDArcGFyc2VJbnQoZSwxMCkse3Nob3J0WWVhckN1dG9mZjplLGRheU5hbWVzU2hvcnQ6dGhpcy5fZ2V0KHQsXCJkYXlOYW1lc1Nob3J0XCIpLGRheU5hbWVzOnRoaXMuX2dldCh0LFwiZGF5TmFtZXNcIiksbW9udGhOYW1lc1Nob3J0OnRoaXMuX2dldCh0LFwibW9udGhOYW1lc1Nob3J0XCIpLG1vbnRoTmFtZXM6dGhpcy5fZ2V0KHQsXCJtb250aE5hbWVzXCIpfX0sX2Zvcm1hdERhdGU6ZnVuY3Rpb24odCxlLGkscyl7ZXx8KHQuY3VycmVudERheT10LnNlbGVjdGVkRGF5LHQuY3VycmVudE1vbnRoPXQuc2VsZWN0ZWRNb250aCx0LmN1cnJlbnRZZWFyPXQuc2VsZWN0ZWRZZWFyKTt2YXIgbj1lP1wib2JqZWN0XCI9PXR5cGVvZiBlP2U6dGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QobmV3IERhdGUocyxpLGUpKTp0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdChuZXcgRGF0ZSh0LmN1cnJlbnRZZWFyLHQuY3VycmVudE1vbnRoLHQuY3VycmVudERheSkpO3JldHVybiB0aGlzLmZvcm1hdERhdGUodGhpcy5fZ2V0KHQsXCJkYXRlRm9ybWF0XCIpLG4sdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKHQpKX19KSx0LmZuLmRhdGVwaWNrZXI9ZnVuY3Rpb24oZSl7aWYoIXRoaXMubGVuZ3RoKXJldHVybiB0aGlzO3QuZGF0ZXBpY2tlci5pbml0aWFsaXplZHx8KHQoZG9jdW1lbnQpLm9uKFwibW91c2Vkb3duXCIsdC5kYXRlcGlja2VyLl9jaGVja0V4dGVybmFsQ2xpY2spLHQuZGF0ZXBpY2tlci5pbml0aWFsaXplZD0hMCksMD09PXQoXCIjXCIrdC5kYXRlcGlja2VyLl9tYWluRGl2SWQpLmxlbmd0aCYmdChcImJvZHlcIikuYXBwZW5kKHQuZGF0ZXBpY2tlci5kcERpdik7dmFyIGk9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVyblwic3RyaW5nXCIhPXR5cGVvZiBlfHxcImlzRGlzYWJsZWRcIiE9PWUmJlwiZ2V0RGF0ZVwiIT09ZSYmXCJ3aWRnZXRcIiE9PWU/XCJvcHRpb25cIj09PWUmJjI9PT1hcmd1bWVudHMubGVuZ3RoJiZcInN0cmluZ1wiPT10eXBlb2YgYXJndW1lbnRzWzFdP3QuZGF0ZXBpY2tlcltcIl9cIitlK1wiRGF0ZXBpY2tlclwiXS5hcHBseSh0LmRhdGVwaWNrZXIsW3RoaXNbMF1dLmNvbmNhdChpKSk6dGhpcy5lYWNoKGZ1bmN0aW9uKCl7XCJzdHJpbmdcIj09dHlwZW9mIGU/dC5kYXRlcGlja2VyW1wiX1wiK2UrXCJEYXRlcGlja2VyXCJdLmFwcGx5KHQuZGF0ZXBpY2tlcixbdGhpc10uY29uY2F0KGkpKTp0LmRhdGVwaWNrZXIuX2F0dGFjaERhdGVwaWNrZXIodGhpcyxlKX0pOnQuZGF0ZXBpY2tlcltcIl9cIitlK1wiRGF0ZXBpY2tlclwiXS5hcHBseSh0LmRhdGVwaWNrZXIsW3RoaXNbMF1dLmNvbmNhdChpKSl9LHQuZGF0ZXBpY2tlcj1uZXcgcyx0LmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQ9ITEsdC5kYXRlcGlja2VyLnV1aWQ9KG5ldyBEYXRlKS5nZXRUaW1lKCksdC5kYXRlcGlja2VyLnZlcnNpb249XCIxLjEyLjFcIix0LmRhdGVwaWNrZXIsdC51aS5pZT0hIS9tc2llIFtcXHcuXSsvLmV4ZWMobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpKTt2YXIgXz0hMTt0KGRvY3VtZW50KS5vbihcIm1vdXNldXBcIixmdW5jdGlvbigpe189ITF9KSx0LndpZGdldChcInVpLm1vdXNlXCIse3ZlcnNpb246XCIxLjEyLjFcIixvcHRpb25zOntjYW5jZWw6XCJpbnB1dCwgdGV4dGFyZWEsIGJ1dHRvbiwgc2VsZWN0LCBvcHRpb25cIixkaXN0YW5jZToxLGRlbGF5OjB9LF9tb3VzZUluaXQ6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuZWxlbWVudC5vbihcIm1vdXNlZG93bi5cIit0aGlzLndpZGdldE5hbWUsZnVuY3Rpb24odCl7cmV0dXJuIGUuX21vdXNlRG93bih0KX0pLm9uKFwiY2xpY2suXCIrdGhpcy53aWRnZXROYW1lLGZ1bmN0aW9uKGkpe3JldHVybiEwPT09dC5kYXRhKGkudGFyZ2V0LGUud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiKT8odC5yZW1vdmVEYXRhKGkudGFyZ2V0LGUud2lkZ2V0TmFtZStcIi5wcmV2ZW50Q2xpY2tFdmVudFwiKSxpLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLCExKTp2b2lkIDB9KSx0aGlzLnN0YXJ0ZWQ9ITF9LF9tb3VzZURlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQub2ZmKFwiLlwiK3RoaXMud2lkZ2V0TmFtZSksdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUmJnRoaXMuZG9jdW1lbnQub2ZmKFwibW91c2Vtb3ZlLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSkub2ZmKFwibW91c2V1cC5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VVcERlbGVnYXRlKX0sX21vdXNlRG93bjpmdW5jdGlvbihlKXtpZighXyl7dGhpcy5fbW91c2VNb3ZlZD0hMSx0aGlzLl9tb3VzZVN0YXJ0ZWQmJnRoaXMuX21vdXNlVXAoZSksdGhpcy5fbW91c2VEb3duRXZlbnQ9ZTt2YXIgaT10aGlzLHM9MT09PWUud2hpY2gsbj1cInN0cmluZ1wiPT10eXBlb2YgdGhpcy5vcHRpb25zLmNhbmNlbCYmZS50YXJnZXQubm9kZU5hbWU/dChlLnRhcmdldCkuY2xvc2VzdCh0aGlzLm9wdGlvbnMuY2FuY2VsKS5sZW5ndGg6ITE7cmV0dXJuIHMmJiFuJiZ0aGlzLl9tb3VzZUNhcHR1cmUoZSk/KHRoaXMubW91c2VEZWxheU1ldD0hdGhpcy5vcHRpb25zLmRlbGF5LHRoaXMubW91c2VEZWxheU1ldHx8KHRoaXMuX21vdXNlRGVsYXlUaW1lcj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7aS5tb3VzZURlbGF5TWV0PSEwfSx0aGlzLm9wdGlvbnMuZGVsYXkpKSx0aGlzLl9tb3VzZURpc3RhbmNlTWV0KGUpJiZ0aGlzLl9tb3VzZURlbGF5TWV0KGUpJiYodGhpcy5fbW91c2VTdGFydGVkPXRoaXMuX21vdXNlU3RhcnQoZSkhPT0hMSwhdGhpcy5fbW91c2VTdGFydGVkKT8oZS5wcmV2ZW50RGVmYXVsdCgpLCEwKTooITA9PT10LmRhdGEoZS50YXJnZXQsdGhpcy53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpJiZ0LnJlbW92ZURhdGEoZS50YXJnZXQsdGhpcy53aWRnZXROYW1lK1wiLnByZXZlbnRDbGlja0V2ZW50XCIpLHRoaXMuX21vdXNlTW92ZURlbGVnYXRlPWZ1bmN0aW9uKHQpe3JldHVybiBpLl9tb3VzZU1vdmUodCl9LHRoaXMuX21vdXNlVXBEZWxlZ2F0ZT1mdW5jdGlvbih0KXtyZXR1cm4gaS5fbW91c2VVcCh0KX0sdGhpcy5kb2N1bWVudC5vbihcIm1vdXNlbW92ZS5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUpLm9uKFwibW91c2V1cC5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VVcERlbGVnYXRlKSxlLnByZXZlbnREZWZhdWx0KCksXz0hMCwhMCkpOiEwfX0sX21vdXNlTW92ZTpmdW5jdGlvbihlKXtpZih0aGlzLl9tb3VzZU1vdmVkKXtpZih0LnVpLmllJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OT5kb2N1bWVudC5kb2N1bWVudE1vZGUpJiYhZS5idXR0b24pcmV0dXJuIHRoaXMuX21vdXNlVXAoZSk7aWYoIWUud2hpY2gpaWYoZS5vcmlnaW5hbEV2ZW50LmFsdEtleXx8ZS5vcmlnaW5hbEV2ZW50LmN0cmxLZXl8fGUub3JpZ2luYWxFdmVudC5tZXRhS2V5fHxlLm9yaWdpbmFsRXZlbnQuc2hpZnRLZXkpdGhpcy5pZ25vcmVNaXNzaW5nV2hpY2g9ITA7ZWxzZSBpZighdGhpcy5pZ25vcmVNaXNzaW5nV2hpY2gpcmV0dXJuIHRoaXMuX21vdXNlVXAoZSl9cmV0dXJuKGUud2hpY2h8fGUuYnV0dG9uKSYmKHRoaXMuX21vdXNlTW92ZWQ9ITApLHRoaXMuX21vdXNlU3RhcnRlZD8odGhpcy5fbW91c2VEcmFnKGUpLGUucHJldmVudERlZmF1bHQoKSk6KHRoaXMuX21vdXNlRGlzdGFuY2VNZXQoZSkmJnRoaXMuX21vdXNlRGVsYXlNZXQoZSkmJih0aGlzLl9tb3VzZVN0YXJ0ZWQ9dGhpcy5fbW91c2VTdGFydCh0aGlzLl9tb3VzZURvd25FdmVudCxlKSE9PSExLHRoaXMuX21vdXNlU3RhcnRlZD90aGlzLl9tb3VzZURyYWcoZSk6dGhpcy5fbW91c2VVcChlKSksIXRoaXMuX21vdXNlU3RhcnRlZCl9LF9tb3VzZVVwOmZ1bmN0aW9uKGUpe3RoaXMuZG9jdW1lbnQub2ZmKFwibW91c2Vtb3ZlLlwiK3RoaXMud2lkZ2V0TmFtZSx0aGlzLl9tb3VzZU1vdmVEZWxlZ2F0ZSkub2ZmKFwibW91c2V1cC5cIit0aGlzLndpZGdldE5hbWUsdGhpcy5fbW91c2VVcERlbGVnYXRlKSx0aGlzLl9tb3VzZVN0YXJ0ZWQmJih0aGlzLl9tb3VzZVN0YXJ0ZWQ9ITEsZS50YXJnZXQ9PT10aGlzLl9tb3VzZURvd25FdmVudC50YXJnZXQmJnQuZGF0YShlLnRhcmdldCx0aGlzLndpZGdldE5hbWUrXCIucHJldmVudENsaWNrRXZlbnRcIiwhMCksdGhpcy5fbW91c2VTdG9wKGUpKSx0aGlzLl9tb3VzZURlbGF5VGltZXImJihjbGVhclRpbWVvdXQodGhpcy5fbW91c2VEZWxheVRpbWVyKSxkZWxldGUgdGhpcy5fbW91c2VEZWxheVRpbWVyKSx0aGlzLmlnbm9yZU1pc3NpbmdXaGljaD0hMSxfPSExLGUucHJldmVudERlZmF1bHQoKX0sX21vdXNlRGlzdGFuY2VNZXQ6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgubWF4KE1hdGguYWJzKHRoaXMuX21vdXNlRG93bkV2ZW50LnBhZ2VYLXQucGFnZVgpLE1hdGguYWJzKHRoaXMuX21vdXNlRG93bkV2ZW50LnBhZ2VZLXQucGFnZVkpKT49dGhpcy5vcHRpb25zLmRpc3RhbmNlfSxfbW91c2VEZWxheU1ldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vdXNlRGVsYXlNZXR9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKCl7fSxfbW91c2VEcmFnOmZ1bmN0aW9uKCl7fSxfbW91c2VTdG9wOmZ1bmN0aW9uKCl7fSxfbW91c2VDYXB0dXJlOmZ1bmN0aW9uKCl7cmV0dXJuITB9fSksdC51aS5wbHVnaW49e2FkZDpmdW5jdGlvbihlLGkscyl7dmFyIG4sbz10LnVpW2VdLnByb3RvdHlwZTtmb3IobiBpbiBzKW8ucGx1Z2luc1tuXT1vLnBsdWdpbnNbbl18fFtdLG8ucGx1Z2luc1tuXS5wdXNoKFtpLHNbbl1dKX0sY2FsbDpmdW5jdGlvbih0LGUsaSxzKXt2YXIgbixvPXQucGx1Z2luc1tlXTtpZihvJiYoc3x8dC5lbGVtZW50WzBdLnBhcmVudE5vZGUmJjExIT09dC5lbGVtZW50WzBdLnBhcmVudE5vZGUubm9kZVR5cGUpKWZvcihuPTA7by5sZW5ndGg+bjtuKyspdC5vcHRpb25zW29bbl1bMF1dJiZvW25dWzFdLmFwcGx5KHQuZWxlbWVudCxpKX19LHQudWkuc2FmZUJsdXI9ZnVuY3Rpb24oZSl7ZSYmXCJib2R5XCIhPT1lLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkmJnQoZSkudHJpZ2dlcihcImJsdXJcIil9LHQud2lkZ2V0KFwidWkuZHJhZ2dhYmxlXCIsdC51aS5tb3VzZSx7dmVyc2lvbjpcIjEuMTIuMVwiLHdpZGdldEV2ZW50UHJlZml4OlwiZHJhZ1wiLG9wdGlvbnM6e2FkZENsYXNzZXM6ITAsYXBwZW5kVG86XCJwYXJlbnRcIixheGlzOiExLGNvbm5lY3RUb1NvcnRhYmxlOiExLGNvbnRhaW5tZW50OiExLGN1cnNvcjpcImF1dG9cIixjdXJzb3JBdDohMSxncmlkOiExLGhhbmRsZTohMSxoZWxwZXI6XCJvcmlnaW5hbFwiLGlmcmFtZUZpeDohMSxvcGFjaXR5OiExLHJlZnJlc2hQb3NpdGlvbnM6ITEscmV2ZXJ0OiExLHJldmVydER1cmF0aW9uOjUwMCxzY29wZTpcImRlZmF1bHRcIixzY3JvbGw6ITAsc2Nyb2xsU2Vuc2l0aXZpdHk6MjAsc2Nyb2xsU3BlZWQ6MjAsc25hcDohMSxzbmFwTW9kZTpcImJvdGhcIixzbmFwVG9sZXJhbmNlOjIwLHN0YWNrOiExLHpJbmRleDohMSxkcmFnOm51bGwsc3RhcnQ6bnVsbCxzdG9wOm51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXtcIm9yaWdpbmFsXCI9PT10aGlzLm9wdGlvbnMuaGVscGVyJiZ0aGlzLl9zZXRQb3NpdGlvblJlbGF0aXZlKCksdGhpcy5vcHRpb25zLmFkZENsYXNzZXMmJnRoaXMuX2FkZENsYXNzKFwidWktZHJhZ2dhYmxlXCIpLHRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpLHRoaXMuX21vdXNlSW5pdCgpfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7dGhpcy5fc3VwZXIodCxlKSxcImhhbmRsZVwiPT09dCYmKHRoaXMuX3JlbW92ZUhhbmRsZUNsYXNzTmFtZSgpLHRoaXMuX3NldEhhbmRsZUNsYXNzTmFtZSgpKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXtyZXR1cm4odGhpcy5oZWxwZXJ8fHRoaXMuZWxlbWVudCkuaXMoXCIudWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpPyh0aGlzLmRlc3Ryb3lPbkNsZWFyPSEwLHZvaWQgMCk6KHRoaXMuX3JlbW92ZUhhbmRsZUNsYXNzTmFtZSgpLHRoaXMuX21vdXNlRGVzdHJveSgpLHZvaWQgMCl9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpcy5vcHRpb25zO3JldHVybiB0aGlzLmhlbHBlcnx8aS5kaXNhYmxlZHx8dChlLnRhcmdldCkuY2xvc2VzdChcIi51aS1yZXNpemFibGUtaGFuZGxlXCIpLmxlbmd0aD4wPyExOih0aGlzLmhhbmRsZT10aGlzLl9nZXRIYW5kbGUoZSksdGhpcy5oYW5kbGU/KHRoaXMuX2JsdXJBY3RpdmVFbGVtZW50KGUpLHRoaXMuX2Jsb2NrRnJhbWVzKGkuaWZyYW1lRml4PT09ITA/XCJpZnJhbWVcIjppLmlmcmFtZUZpeCksITApOiExKX0sX2Jsb2NrRnJhbWVzOmZ1bmN0aW9uKGUpe3RoaXMuaWZyYW1lQmxvY2tzPXRoaXMuZG9jdW1lbnQuZmluZChlKS5tYXAoZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO3JldHVybiB0KFwiPGRpdj5cIikuY3NzKFwicG9zaXRpb25cIixcImFic29sdXRlXCIpLmFwcGVuZFRvKGUucGFyZW50KCkpLm91dGVyV2lkdGgoZS5vdXRlcldpZHRoKCkpLm91dGVySGVpZ2h0KGUub3V0ZXJIZWlnaHQoKSkub2Zmc2V0KGUub2Zmc2V0KCkpWzBdfSl9LF91bmJsb2NrRnJhbWVzOmZ1bmN0aW9uKCl7dGhpcy5pZnJhbWVCbG9ja3MmJih0aGlzLmlmcmFtZUJsb2Nrcy5yZW1vdmUoKSxkZWxldGUgdGhpcy5pZnJhbWVCbG9ja3MpfSxfYmx1ckFjdGl2ZUVsZW1lbnQ6ZnVuY3Rpb24oZSl7dmFyIGk9dC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSxzPXQoZS50YXJnZXQpO3MuY2xvc2VzdChpKS5sZW5ndGh8fHQudWkuc2FmZUJsdXIoaSl9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucztyZXR1cm4gdGhpcy5oZWxwZXI9dGhpcy5fY3JlYXRlSGVscGVyKGUpLHRoaXMuX2FkZENsYXNzKHRoaXMuaGVscGVyLFwidWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpLHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSx0LnVpLmRkbWFuYWdlciYmKHQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ9dGhpcyksdGhpcy5fY2FjaGVNYXJnaW5zKCksdGhpcy5jc3NQb3NpdGlvbj10aGlzLmhlbHBlci5jc3MoXCJwb3NpdGlvblwiKSx0aGlzLnNjcm9sbFBhcmVudD10aGlzLmhlbHBlci5zY3JvbGxQYXJlbnQoITApLHRoaXMub2Zmc2V0UGFyZW50PXRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpLHRoaXMuaGFzRml4ZWRBbmNlc3Rvcj10aGlzLmhlbHBlci5wYXJlbnRzKCkuZmlsdGVyKGZ1bmN0aW9uKCl7cmV0dXJuXCJmaXhlZFwiPT09dCh0aGlzKS5jc3MoXCJwb3NpdGlvblwiKX0pLmxlbmd0aD4wLHRoaXMucG9zaXRpb25BYnM9dGhpcy5lbGVtZW50Lm9mZnNldCgpLHRoaXMuX3JlZnJlc2hPZmZzZXRzKGUpLHRoaXMub3JpZ2luYWxQb3NpdGlvbj10aGlzLnBvc2l0aW9uPXRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZSwhMSksdGhpcy5vcmlnaW5hbFBhZ2VYPWUucGFnZVgsdGhpcy5vcmlnaW5hbFBhZ2VZPWUucGFnZVksaS5jdXJzb3JBdCYmdGhpcy5fYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcihpLmN1cnNvckF0KSx0aGlzLl9zZXRDb250YWlubWVudCgpLHRoaXMuX3RyaWdnZXIoXCJzdGFydFwiLGUpPT09ITE/KHRoaXMuX2NsZWFyKCksITEpOih0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCksdC51aS5kZG1hbmFnZXImJiFpLmRyb3BCZWhhdmlvdXImJnQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKHRoaXMsZSksdGhpcy5fbW91c2VEcmFnKGUsITApLHQudWkuZGRtYW5hZ2VyJiZ0LnVpLmRkbWFuYWdlci5kcmFnU3RhcnQodGhpcyxlKSwhMCl9LF9yZWZyZXNoT2Zmc2V0czpmdW5jdGlvbih0KXt0aGlzLm9mZnNldD17dG9wOnRoaXMucG9zaXRpb25BYnMudG9wLXRoaXMubWFyZ2lucy50b3AsbGVmdDp0aGlzLnBvc2l0aW9uQWJzLmxlZnQtdGhpcy5tYXJnaW5zLmxlZnQsc2Nyb2xsOiExLHBhcmVudDp0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSxyZWxhdGl2ZTp0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpfSx0aGlzLm9mZnNldC5jbGljaz17bGVmdDp0LnBhZ2VYLXRoaXMub2Zmc2V0LmxlZnQsdG9wOnQucGFnZVktdGhpcy5vZmZzZXQudG9wfX0sX21vdXNlRHJhZzpmdW5jdGlvbihlLGkpe2lmKHRoaXMuaGFzRml4ZWRBbmNlc3RvciYmKHRoaXMub2Zmc2V0LnBhcmVudD10aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSksdGhpcy5wb3NpdGlvbj10aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKGUsITApLHRoaXMucG9zaXRpb25BYnM9dGhpcy5fY29udmVydFBvc2l0aW9uVG8oXCJhYnNvbHV0ZVwiKSwhaSl7dmFyIHM9dGhpcy5fdWlIYXNoKCk7aWYodGhpcy5fdHJpZ2dlcihcImRyYWdcIixlLHMpPT09ITEpcmV0dXJuIHRoaXMuX21vdXNlVXAobmV3IHQuRXZlbnQoXCJtb3VzZXVwXCIsZSkpLCExO3RoaXMucG9zaXRpb249cy5wb3NpdGlvbn1yZXR1cm4gdGhpcy5oZWxwZXJbMF0uc3R5bGUubGVmdD10aGlzLnBvc2l0aW9uLmxlZnQrXCJweFwiLHRoaXMuaGVscGVyWzBdLnN0eWxlLnRvcD10aGlzLnBvc2l0aW9uLnRvcCtcInB4XCIsdC51aS5kZG1hbmFnZXImJnQudWkuZGRtYW5hZ2VyLmRyYWcodGhpcyxlKSwhMX0sX21vdXNlU3RvcDpmdW5jdGlvbihlKXt2YXIgaT10aGlzLHM9ITE7cmV0dXJuIHQudWkuZGRtYW5hZ2VyJiYhdGhpcy5vcHRpb25zLmRyb3BCZWhhdmlvdXImJihzPXQudWkuZGRtYW5hZ2VyLmRyb3AodGhpcyxlKSksdGhpcy5kcm9wcGVkJiYocz10aGlzLmRyb3BwZWQsdGhpcy5kcm9wcGVkPSExKSxcImludmFsaWRcIj09PXRoaXMub3B0aW9ucy5yZXZlcnQmJiFzfHxcInZhbGlkXCI9PT10aGlzLm9wdGlvbnMucmV2ZXJ0JiZzfHx0aGlzLm9wdGlvbnMucmV2ZXJ0PT09ITB8fHQuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMucmV2ZXJ0KSYmdGhpcy5vcHRpb25zLnJldmVydC5jYWxsKHRoaXMuZWxlbWVudCxzKT90KHRoaXMuaGVscGVyKS5hbmltYXRlKHRoaXMub3JpZ2luYWxQb3NpdGlvbixwYXJzZUludCh0aGlzLm9wdGlvbnMucmV2ZXJ0RHVyYXRpb24sMTApLGZ1bmN0aW9uKCl7aS5fdHJpZ2dlcihcInN0b3BcIixlKSE9PSExJiZpLl9jbGVhcigpfSk6dGhpcy5fdHJpZ2dlcihcInN0b3BcIixlKSE9PSExJiZ0aGlzLl9jbGVhcigpLCExfSxfbW91c2VVcDpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5fdW5ibG9ja0ZyYW1lcygpLHQudWkuZGRtYW5hZ2VyJiZ0LnVpLmRkbWFuYWdlci5kcmFnU3RvcCh0aGlzLGUpLHRoaXMuaGFuZGxlRWxlbWVudC5pcyhlLnRhcmdldCkmJnRoaXMuZWxlbWVudC50cmlnZ2VyKFwiZm9jdXNcIiksdC51aS5tb3VzZS5wcm90b3R5cGUuX21vdXNlVXAuY2FsbCh0aGlzLGUpfSxjYW5jZWw6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oZWxwZXIuaXMoXCIudWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpP3RoaXMuX21vdXNlVXAobmV3IHQuRXZlbnQoXCJtb3VzZXVwXCIse3RhcmdldDp0aGlzLmVsZW1lbnRbMF19KSk6dGhpcy5fY2xlYXIoKSx0aGlzfSxfZ2V0SGFuZGxlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLm9wdGlvbnMuaGFuZGxlPyEhdChlLnRhcmdldCkuY2xvc2VzdCh0aGlzLmVsZW1lbnQuZmluZCh0aGlzLm9wdGlvbnMuaGFuZGxlKSkubGVuZ3RoOiEwfSxfc2V0SGFuZGxlQ2xhc3NOYW1lOmZ1bmN0aW9uKCl7dGhpcy5oYW5kbGVFbGVtZW50PXRoaXMub3B0aW9ucy5oYW5kbGU/dGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLmhhbmRsZSk6dGhpcy5lbGVtZW50LHRoaXMuX2FkZENsYXNzKHRoaXMuaGFuZGxlRWxlbWVudCxcInVpLWRyYWdnYWJsZS1oYW5kbGVcIil9LF9yZW1vdmVIYW5kbGVDbGFzc05hbWU6ZnVuY3Rpb24oKXt0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmhhbmRsZUVsZW1lbnQsXCJ1aS1kcmFnZ2FibGUtaGFuZGxlXCIpfSxfY3JlYXRlSGVscGVyOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucyxzPXQuaXNGdW5jdGlvbihpLmhlbHBlciksbj1zP3QoaS5oZWxwZXIuYXBwbHkodGhpcy5lbGVtZW50WzBdLFtlXSkpOlwiY2xvbmVcIj09PWkuaGVscGVyP3RoaXMuZWxlbWVudC5jbG9uZSgpLnJlbW92ZUF0dHIoXCJpZFwiKTp0aGlzLmVsZW1lbnQ7cmV0dXJuIG4ucGFyZW50cyhcImJvZHlcIikubGVuZ3RofHxuLmFwcGVuZFRvKFwicGFyZW50XCI9PT1pLmFwcGVuZFRvP3RoaXMuZWxlbWVudFswXS5wYXJlbnROb2RlOmkuYXBwZW5kVG8pLHMmJm5bMF09PT10aGlzLmVsZW1lbnRbMF0mJnRoaXMuX3NldFBvc2l0aW9uUmVsYXRpdmUoKSxuWzBdPT09dGhpcy5lbGVtZW50WzBdfHwvKGZpeGVkfGFic29sdXRlKS8udGVzdChuLmNzcyhcInBvc2l0aW9uXCIpKXx8bi5jc3MoXCJwb3NpdGlvblwiLFwiYWJzb2x1dGVcIiksbn0sX3NldFBvc2l0aW9uUmVsYXRpdmU6ZnVuY3Rpb24oKXsvXig/OnJ8YXxmKS8udGVzdCh0aGlzLmVsZW1lbnQuY3NzKFwicG9zaXRpb25cIikpfHwodGhpcy5lbGVtZW50WzBdLnN0eWxlLnBvc2l0aW9uPVwicmVsYXRpdmVcIil9LF9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOmZ1bmN0aW9uKGUpe1wic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT1lLnNwbGl0KFwiIFwiKSksdC5pc0FycmF5KGUpJiYoZT17bGVmdDorZVswXSx0b3A6K2VbMV18fDB9KSxcImxlZnRcImluIGUmJih0aGlzLm9mZnNldC5jbGljay5sZWZ0PWUubGVmdCt0aGlzLm1hcmdpbnMubGVmdCksXCJyaWdodFwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ9dGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC1lLnJpZ2h0K3RoaXMubWFyZ2lucy5sZWZ0KSxcInRvcFwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD1lLnRvcCt0aGlzLm1hcmdpbnMudG9wKSxcImJvdHRvbVwiaW4gZSYmKHRoaXMub2Zmc2V0LmNsaWNrLnRvcD10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC1lLmJvdHRvbSt0aGlzLm1hcmdpbnMudG9wKX0sX2lzUm9vdE5vZGU6ZnVuY3Rpb24odCl7cmV0dXJuLyhodG1sfGJvZHkpL2kudGVzdCh0LnRhZ05hbWUpfHx0PT09dGhpcy5kb2N1bWVudFswXX0sX2dldFBhcmVudE9mZnNldDpmdW5jdGlvbigpe3ZhciBlPXRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpLGk9dGhpcy5kb2N1bWVudFswXTtyZXR1cm5cImFic29sdXRlXCI9PT10aGlzLmNzc1Bvc2l0aW9uJiZ0aGlzLnNjcm9sbFBhcmVudFswXSE9PWkmJnQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sdGhpcy5vZmZzZXRQYXJlbnRbMF0pJiYoZS5sZWZ0Kz10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCksZS50b3ArPXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpKSx0aGlzLl9pc1Jvb3ROb2RlKHRoaXMub2Zmc2V0UGFyZW50WzBdKSYmKGU9e3RvcDowLGxlZnQ6MH0pLHt0b3A6ZS50b3ArKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlclRvcFdpZHRoXCIpLDEwKXx8MCksbGVmdDplLmxlZnQrKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApfX0sX2dldFJlbGF0aXZlT2Zmc2V0OmZ1bmN0aW9uKCl7aWYoXCJyZWxhdGl2ZVwiIT09dGhpcy5jc3NQb3NpdGlvbilyZXR1cm57dG9wOjAsbGVmdDowfTt2YXIgdD10aGlzLmVsZW1lbnQucG9zaXRpb24oKSxlPXRoaXMuX2lzUm9vdE5vZGUodGhpcy5zY3JvbGxQYXJlbnRbMF0pO3JldHVybnt0b3A6dC50b3AtKHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyhcInRvcFwiKSwxMCl8fDApKyhlPzA6dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkpLGxlZnQ6dC5sZWZ0LShwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoXCJsZWZ0XCIpLDEwKXx8MCkrKGU/MDp0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkpfVxufSxfY2FjaGVNYXJnaW5zOmZ1bmN0aW9uKCl7dGhpcy5tYXJnaW5zPXtsZWZ0OnBhcnNlSW50KHRoaXMuZWxlbWVudC5jc3MoXCJtYXJnaW5MZWZ0XCIpLDEwKXx8MCx0b3A6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpblRvcFwiKSwxMCl8fDAscmlnaHQ6cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpblJpZ2h0XCIpLDEwKXx8MCxib3R0b206cGFyc2VJbnQodGhpcy5lbGVtZW50LmNzcyhcIm1hcmdpbkJvdHRvbVwiKSwxMCl8fDB9fSxfY2FjaGVIZWxwZXJQcm9wb3J0aW9uczpmdW5jdGlvbigpe3RoaXMuaGVscGVyUHJvcG9ydGlvbnM9e3dpZHRoOnRoaXMuaGVscGVyLm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKX19LF9zZXRDb250YWlubWVudDpmdW5jdGlvbigpe3ZhciBlLGkscyxuPXRoaXMub3B0aW9ucyxvPXRoaXMuZG9jdW1lbnRbMF07cmV0dXJuIHRoaXMucmVsYXRpdmVDb250YWluZXI9bnVsbCxuLmNvbnRhaW5tZW50P1wid2luZG93XCI9PT1uLmNvbnRhaW5tZW50Pyh0aGlzLmNvbnRhaW5tZW50PVt0KHdpbmRvdykuc2Nyb2xsTGVmdCgpLXRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQtdGhpcy5vZmZzZXQucGFyZW50LmxlZnQsdCh3aW5kb3cpLnNjcm9sbFRvcCgpLXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wLHQod2luZG93KS5zY3JvbGxMZWZ0KCkrdCh3aW5kb3cpLndpZHRoKCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC10aGlzLm1hcmdpbnMubGVmdCx0KHdpbmRvdykuc2Nyb2xsVG9wKCkrKHQod2luZG93KS5oZWlnaHQoKXx8by5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0KS10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10aGlzLm1hcmdpbnMudG9wXSx2b2lkIDApOlwiZG9jdW1lbnRcIj09PW4uY29udGFpbm1lbnQ/KHRoaXMuY29udGFpbm1lbnQ9WzAsMCx0KG8pLndpZHRoKCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC10aGlzLm1hcmdpbnMubGVmdCwodChvKS5oZWlnaHQoKXx8by5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0KS10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10aGlzLm1hcmdpbnMudG9wXSx2b2lkIDApOm4uY29udGFpbm1lbnQuY29uc3RydWN0b3I9PT1BcnJheT8odGhpcy5jb250YWlubWVudD1uLmNvbnRhaW5tZW50LHZvaWQgMCk6KFwicGFyZW50XCI9PT1uLmNvbnRhaW5tZW50JiYobi5jb250YWlubWVudD10aGlzLmhlbHBlclswXS5wYXJlbnROb2RlKSxpPXQobi5jb250YWlubWVudCkscz1pWzBdLHMmJihlPS8oc2Nyb2xsfGF1dG8pLy50ZXN0KGkuY3NzKFwib3ZlcmZsb3dcIikpLHRoaXMuY29udGFpbm1lbnQ9WyhwYXJzZUludChpLmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludChpLmNzcyhcInBhZGRpbmdMZWZ0XCIpLDEwKXx8MCksKHBhcnNlSW50KGkuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKSsocGFyc2VJbnQoaS5jc3MoXCJwYWRkaW5nVG9wXCIpLDEwKXx8MCksKGU/TWF0aC5tYXgocy5zY3JvbGxXaWR0aCxzLm9mZnNldFdpZHRoKTpzLm9mZnNldFdpZHRoKS0ocGFyc2VJbnQoaS5jc3MoXCJib3JkZXJSaWdodFdpZHRoXCIpLDEwKXx8MCktKHBhcnNlSW50KGkuY3NzKFwicGFkZGluZ1JpZ2h0XCIpLDEwKXx8MCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC10aGlzLm1hcmdpbnMubGVmdC10aGlzLm1hcmdpbnMucmlnaHQsKGU/TWF0aC5tYXgocy5zY3JvbGxIZWlnaHQscy5vZmZzZXRIZWlnaHQpOnMub2Zmc2V0SGVpZ2h0KS0ocGFyc2VJbnQoaS5jc3MoXCJib3JkZXJCb3R0b21XaWR0aFwiKSwxMCl8fDApLShwYXJzZUludChpLmNzcyhcInBhZGRpbmdCb3R0b21cIiksMTApfHwwKS10aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC10aGlzLm1hcmdpbnMudG9wLXRoaXMubWFyZ2lucy5ib3R0b21dLHRoaXMucmVsYXRpdmVDb250YWluZXI9aSksdm9pZCAwKToodGhpcy5jb250YWlubWVudD1udWxsLHZvaWQgMCl9LF9jb252ZXJ0UG9zaXRpb25UbzpmdW5jdGlvbih0LGUpe2V8fChlPXRoaXMucG9zaXRpb24pO3ZhciBpPVwiYWJzb2x1dGVcIj09PXQ/MTotMSxzPXRoaXMuX2lzUm9vdE5vZGUodGhpcy5zY3JvbGxQYXJlbnRbMF0pO3JldHVybnt0b3A6ZS50b3ArdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wKmkrdGhpcy5vZmZzZXQucGFyZW50LnRvcCppLShcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLm9mZnNldC5zY3JvbGwudG9wOnM/MDp0aGlzLm9mZnNldC5zY3JvbGwudG9wKSppLGxlZnQ6ZS5sZWZ0K3RoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQqaSt0aGlzLm9mZnNldC5wYXJlbnQubGVmdCppLShcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLm9mZnNldC5zY3JvbGwubGVmdDpzPzA6dGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQpKml9fSxfZ2VuZXJhdGVQb3NpdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbixvLGE9dGhpcy5vcHRpb25zLHI9dGhpcy5faXNSb290Tm9kZSh0aGlzLnNjcm9sbFBhcmVudFswXSksaD10LnBhZ2VYLGw9dC5wYWdlWTtyZXR1cm4gciYmdGhpcy5vZmZzZXQuc2Nyb2xsfHwodGhpcy5vZmZzZXQuc2Nyb2xsPXt0b3A6dGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCksbGVmdDp0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCl9KSxlJiYodGhpcy5jb250YWlubWVudCYmKHRoaXMucmVsYXRpdmVDb250YWluZXI/KHM9dGhpcy5yZWxhdGl2ZUNvbnRhaW5lci5vZmZzZXQoKSxpPVt0aGlzLmNvbnRhaW5tZW50WzBdK3MubGVmdCx0aGlzLmNvbnRhaW5tZW50WzFdK3MudG9wLHRoaXMuY29udGFpbm1lbnRbMl0rcy5sZWZ0LHRoaXMuY29udGFpbm1lbnRbM10rcy50b3BdKTppPXRoaXMuY29udGFpbm1lbnQsdC5wYWdlWC10aGlzLm9mZnNldC5jbGljay5sZWZ0PGlbMF0mJihoPWlbMF0rdGhpcy5vZmZzZXQuY2xpY2subGVmdCksdC5wYWdlWS10aGlzLm9mZnNldC5jbGljay50b3A8aVsxXSYmKGw9aVsxXSt0aGlzLm9mZnNldC5jbGljay50b3ApLHQucGFnZVgtdGhpcy5vZmZzZXQuY2xpY2subGVmdD5pWzJdJiYoaD1pWzJdK3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQpLHQucGFnZVktdGhpcy5vZmZzZXQuY2xpY2sudG9wPmlbM10mJihsPWlbM10rdGhpcy5vZmZzZXQuY2xpY2sudG9wKSksYS5ncmlkJiYobj1hLmdyaWRbMV0/dGhpcy5vcmlnaW5hbFBhZ2VZK01hdGgucm91bmQoKGwtdGhpcy5vcmlnaW5hbFBhZ2VZKS9hLmdyaWRbMV0pKmEuZ3JpZFsxXTp0aGlzLm9yaWdpbmFsUGFnZVksbD1pP24tdGhpcy5vZmZzZXQuY2xpY2sudG9wPj1pWzFdfHxuLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD5pWzNdP246bi10aGlzLm9mZnNldC5jbGljay50b3A+PWlbMV0/bi1hLmdyaWRbMV06bithLmdyaWRbMV06bixvPWEuZ3JpZFswXT90aGlzLm9yaWdpbmFsUGFnZVgrTWF0aC5yb3VuZCgoaC10aGlzLm9yaWdpbmFsUGFnZVgpL2EuZ3JpZFswXSkqYS5ncmlkWzBdOnRoaXMub3JpZ2luYWxQYWdlWCxoPWk/by10aGlzLm9mZnNldC5jbGljay5sZWZ0Pj1pWzBdfHxvLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+aVsyXT9vOm8tdGhpcy5vZmZzZXQuY2xpY2subGVmdD49aVswXT9vLWEuZ3JpZFswXTpvK2EuZ3JpZFswXTpvKSxcInlcIj09PWEuYXhpcyYmKGg9dGhpcy5vcmlnaW5hbFBhZ2VYKSxcInhcIj09PWEuYXhpcyYmKGw9dGhpcy5vcmlnaW5hbFBhZ2VZKSkse3RvcDpsLXRoaXMub2Zmc2V0LmNsaWNrLnRvcC10aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AtdGhpcy5vZmZzZXQucGFyZW50LnRvcCsoXCJmaXhlZFwiPT09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5vZmZzZXQuc2Nyb2xsLnRvcDpyPzA6dGhpcy5vZmZzZXQuc2Nyb2xsLnRvcCksbGVmdDpoLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQtdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdCsoXCJmaXhlZFwiPT09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQ6cj8wOnRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0KX19LF9jbGVhcjpmdW5jdGlvbigpe3RoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaGVscGVyLFwidWktZHJhZ2dhYmxlLWRyYWdnaW5nXCIpLHRoaXMuaGVscGVyWzBdPT09dGhpcy5lbGVtZW50WzBdfHx0aGlzLmNhbmNlbEhlbHBlclJlbW92YWx8fHRoaXMuaGVscGVyLnJlbW92ZSgpLHRoaXMuaGVscGVyPW51bGwsdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsPSExLHRoaXMuZGVzdHJveU9uQ2xlYXImJnRoaXMuZGVzdHJveSgpfSxfdHJpZ2dlcjpmdW5jdGlvbihlLGkscyl7cmV0dXJuIHM9c3x8dGhpcy5fdWlIYXNoKCksdC51aS5wbHVnaW4uY2FsbCh0aGlzLGUsW2kscyx0aGlzXSwhMCksL14oZHJhZ3xzdGFydHxzdG9wKS8udGVzdChlKSYmKHRoaXMucG9zaXRpb25BYnM9dGhpcy5fY29udmVydFBvc2l0aW9uVG8oXCJhYnNvbHV0ZVwiKSxzLm9mZnNldD10aGlzLnBvc2l0aW9uQWJzKSx0LldpZGdldC5wcm90b3R5cGUuX3RyaWdnZXIuY2FsbCh0aGlzLGUsaSxzKX0scGx1Z2luczp7fSxfdWlIYXNoOmZ1bmN0aW9uKCl7cmV0dXJue2hlbHBlcjp0aGlzLmhlbHBlcixwb3NpdGlvbjp0aGlzLnBvc2l0aW9uLG9yaWdpbmFsUG9zaXRpb246dGhpcy5vcmlnaW5hbFBvc2l0aW9uLG9mZnNldDp0aGlzLnBvc2l0aW9uQWJzfX19KSx0LnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcImNvbm5lY3RUb1NvcnRhYmxlXCIse3N0YXJ0OmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj10LmV4dGVuZCh7fSxpLHtpdGVtOnMuZWxlbWVudH0pO3Muc29ydGFibGVzPVtdLHQocy5vcHRpb25zLmNvbm5lY3RUb1NvcnRhYmxlKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9dCh0aGlzKS5zb3J0YWJsZShcImluc3RhbmNlXCIpO2kmJiFpLm9wdGlvbnMuZGlzYWJsZWQmJihzLnNvcnRhYmxlcy5wdXNoKGkpLGkucmVmcmVzaFBvc2l0aW9ucygpLGkuX3RyaWdnZXIoXCJhY3RpdmF0ZVwiLGUsbikpfSl9LHN0b3A6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQuZXh0ZW5kKHt9LGkse2l0ZW06cy5lbGVtZW50fSk7cy5jYW5jZWxIZWxwZXJSZW1vdmFsPSExLHQuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5pc092ZXI/KHQuaXNPdmVyPTAscy5jYW5jZWxIZWxwZXJSZW1vdmFsPSEwLHQuY2FuY2VsSGVscGVyUmVtb3ZhbD0hMSx0Ll9zdG9yZWRDU1M9e3Bvc2l0aW9uOnQucGxhY2Vob2xkZXIuY3NzKFwicG9zaXRpb25cIiksdG9wOnQucGxhY2Vob2xkZXIuY3NzKFwidG9wXCIpLGxlZnQ6dC5wbGFjZWhvbGRlci5jc3MoXCJsZWZ0XCIpfSx0Ll9tb3VzZVN0b3AoZSksdC5vcHRpb25zLmhlbHBlcj10Lm9wdGlvbnMuX2hlbHBlcik6KHQuY2FuY2VsSGVscGVyUmVtb3ZhbD0hMCx0Ll90cmlnZ2VyKFwiZGVhY3RpdmF0ZVwiLGUsbikpfSl9LGRyYWc6ZnVuY3Rpb24oZSxpLHMpe3QuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3ZhciBuPSExLG89dGhpcztvLnBvc2l0aW9uQWJzPXMucG9zaXRpb25BYnMsby5oZWxwZXJQcm9wb3J0aW9ucz1zLmhlbHBlclByb3BvcnRpb25zLG8ub2Zmc2V0LmNsaWNrPXMub2Zmc2V0LmNsaWNrLG8uX2ludGVyc2VjdHNXaXRoKG8uY29udGFpbmVyQ2FjaGUpJiYobj0hMCx0LmVhY2gocy5zb3J0YWJsZXMsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wb3NpdGlvbkFicz1zLnBvc2l0aW9uQWJzLHRoaXMuaGVscGVyUHJvcG9ydGlvbnM9cy5oZWxwZXJQcm9wb3J0aW9ucyx0aGlzLm9mZnNldC5jbGljaz1zLm9mZnNldC5jbGljayx0aGlzIT09byYmdGhpcy5faW50ZXJzZWN0c1dpdGgodGhpcy5jb250YWluZXJDYWNoZSkmJnQuY29udGFpbnMoby5lbGVtZW50WzBdLHRoaXMuZWxlbWVudFswXSkmJihuPSExKSxufSkpLG4/KG8uaXNPdmVyfHwoby5pc092ZXI9MSxzLl9wYXJlbnQ9aS5oZWxwZXIucGFyZW50KCksby5jdXJyZW50SXRlbT1pLmhlbHBlci5hcHBlbmRUbyhvLmVsZW1lbnQpLmRhdGEoXCJ1aS1zb3J0YWJsZS1pdGVtXCIsITApLG8ub3B0aW9ucy5faGVscGVyPW8ub3B0aW9ucy5oZWxwZXIsby5vcHRpb25zLmhlbHBlcj1mdW5jdGlvbigpe3JldHVybiBpLmhlbHBlclswXX0sZS50YXJnZXQ9by5jdXJyZW50SXRlbVswXSxvLl9tb3VzZUNhcHR1cmUoZSwhMCksby5fbW91c2VTdGFydChlLCEwLCEwKSxvLm9mZnNldC5jbGljay50b3A9cy5vZmZzZXQuY2xpY2sudG9wLG8ub2Zmc2V0LmNsaWNrLmxlZnQ9cy5vZmZzZXQuY2xpY2subGVmdCxvLm9mZnNldC5wYXJlbnQubGVmdC09cy5vZmZzZXQucGFyZW50LmxlZnQtby5vZmZzZXQucGFyZW50LmxlZnQsby5vZmZzZXQucGFyZW50LnRvcC09cy5vZmZzZXQucGFyZW50LnRvcC1vLm9mZnNldC5wYXJlbnQudG9wLHMuX3RyaWdnZXIoXCJ0b1NvcnRhYmxlXCIsZSkscy5kcm9wcGVkPW8uZWxlbWVudCx0LmVhY2gocy5zb3J0YWJsZXMsZnVuY3Rpb24oKXt0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKX0pLHMuY3VycmVudEl0ZW09cy5lbGVtZW50LG8uZnJvbU91dHNpZGU9cyksby5jdXJyZW50SXRlbSYmKG8uX21vdXNlRHJhZyhlKSxpLnBvc2l0aW9uPW8ucG9zaXRpb24pKTpvLmlzT3ZlciYmKG8uaXNPdmVyPTAsby5jYW5jZWxIZWxwZXJSZW1vdmFsPSEwLG8ub3B0aW9ucy5fcmV2ZXJ0PW8ub3B0aW9ucy5yZXZlcnQsby5vcHRpb25zLnJldmVydD0hMSxvLl90cmlnZ2VyKFwib3V0XCIsZSxvLl91aUhhc2gobykpLG8uX21vdXNlU3RvcChlLCEwKSxvLm9wdGlvbnMucmV2ZXJ0PW8ub3B0aW9ucy5fcmV2ZXJ0LG8ub3B0aW9ucy5oZWxwZXI9by5vcHRpb25zLl9oZWxwZXIsby5wbGFjZWhvbGRlciYmby5wbGFjZWhvbGRlci5yZW1vdmUoKSxpLmhlbHBlci5hcHBlbmRUbyhzLl9wYXJlbnQpLHMuX3JlZnJlc2hPZmZzZXRzKGUpLGkucG9zaXRpb249cy5fZ2VuZXJhdGVQb3NpdGlvbihlLCEwKSxzLl90cmlnZ2VyKFwiZnJvbVNvcnRhYmxlXCIsZSkscy5kcm9wcGVkPSExLHQuZWFjaChzLnNvcnRhYmxlcyxmdW5jdGlvbigpe3RoaXMucmVmcmVzaFBvc2l0aW9ucygpfSkpfSl9fSksdC51aS5wbHVnaW4uYWRkKFwiZHJhZ2dhYmxlXCIsXCJjdXJzb3JcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQoXCJib2R5XCIpLG89cy5vcHRpb25zO24uY3NzKFwiY3Vyc29yXCIpJiYoby5fY3Vyc29yPW4uY3NzKFwiY3Vyc29yXCIpKSxuLmNzcyhcImN1cnNvclwiLG8uY3Vyc29yKX0sc3RvcDpmdW5jdGlvbihlLGkscyl7dmFyIG49cy5vcHRpb25zO24uX2N1cnNvciYmdChcImJvZHlcIikuY3NzKFwiY3Vyc29yXCIsbi5fY3Vyc29yKX19KSx0LnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcIm9wYWNpdHlcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXQoaS5oZWxwZXIpLG89cy5vcHRpb25zO24uY3NzKFwib3BhY2l0eVwiKSYmKG8uX29wYWNpdHk9bi5jc3MoXCJvcGFjaXR5XCIpKSxuLmNzcyhcIm9wYWNpdHlcIixvLm9wYWNpdHkpfSxzdG9wOmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj1zLm9wdGlvbnM7bi5fb3BhY2l0eSYmdChpLmhlbHBlcikuY3NzKFwib3BhY2l0eVwiLG4uX29wYWNpdHkpfX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwic2Nyb2xsXCIse3N0YXJ0OmZ1bmN0aW9uKHQsZSxpKXtpLnNjcm9sbFBhcmVudE5vdEhpZGRlbnx8KGkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuPWkuaGVscGVyLnNjcm9sbFBhcmVudCghMSkpLGkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuWzBdIT09aS5kb2N1bWVudFswXSYmXCJIVE1MXCIhPT1pLnNjcm9sbFBhcmVudE5vdEhpZGRlblswXS50YWdOYW1lJiYoaS5vdmVyZmxvd09mZnNldD1pLnNjcm9sbFBhcmVudE5vdEhpZGRlbi5vZmZzZXQoKSl9LGRyYWc6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXMub3B0aW9ucyxvPSExLGE9cy5zY3JvbGxQYXJlbnROb3RIaWRkZW5bMF0scj1zLmRvY3VtZW50WzBdO2EhPT1yJiZcIkhUTUxcIiE9PWEudGFnTmFtZT8obi5heGlzJiZcInhcIj09PW4uYXhpc3x8KHMub3ZlcmZsb3dPZmZzZXQudG9wK2Eub2Zmc2V0SGVpZ2h0LWUucGFnZVk8bi5zY3JvbGxTZW5zaXRpdml0eT9hLnNjcm9sbFRvcD1vPWEuc2Nyb2xsVG9wK24uc2Nyb2xsU3BlZWQ6ZS5wYWdlWS1zLm92ZXJmbG93T2Zmc2V0LnRvcDxuLnNjcm9sbFNlbnNpdGl2aXR5JiYoYS5zY3JvbGxUb3A9bz1hLnNjcm9sbFRvcC1uLnNjcm9sbFNwZWVkKSksbi5heGlzJiZcInlcIj09PW4uYXhpc3x8KHMub3ZlcmZsb3dPZmZzZXQubGVmdCthLm9mZnNldFdpZHRoLWUucGFnZVg8bi5zY3JvbGxTZW5zaXRpdml0eT9hLnNjcm9sbExlZnQ9bz1hLnNjcm9sbExlZnQrbi5zY3JvbGxTcGVlZDplLnBhZ2VYLXMub3ZlcmZsb3dPZmZzZXQubGVmdDxuLnNjcm9sbFNlbnNpdGl2aXR5JiYoYS5zY3JvbGxMZWZ0PW89YS5zY3JvbGxMZWZ0LW4uc2Nyb2xsU3BlZWQpKSk6KG4uYXhpcyYmXCJ4XCI9PT1uLmF4aXN8fChlLnBhZ2VZLXQocikuc2Nyb2xsVG9wKCk8bi5zY3JvbGxTZW5zaXRpdml0eT9vPXQocikuc2Nyb2xsVG9wKHQocikuc2Nyb2xsVG9wKCktbi5zY3JvbGxTcGVlZCk6dCh3aW5kb3cpLmhlaWdodCgpLShlLnBhZ2VZLXQocikuc2Nyb2xsVG9wKCkpPG4uc2Nyb2xsU2Vuc2l0aXZpdHkmJihvPXQocikuc2Nyb2xsVG9wKHQocikuc2Nyb2xsVG9wKCkrbi5zY3JvbGxTcGVlZCkpKSxuLmF4aXMmJlwieVwiPT09bi5heGlzfHwoZS5wYWdlWC10KHIpLnNjcm9sbExlZnQoKTxuLnNjcm9sbFNlbnNpdGl2aXR5P289dChyKS5zY3JvbGxMZWZ0KHQocikuc2Nyb2xsTGVmdCgpLW4uc2Nyb2xsU3BlZWQpOnQod2luZG93KS53aWR0aCgpLShlLnBhZ2VYLXQocikuc2Nyb2xsTGVmdCgpKTxuLnNjcm9sbFNlbnNpdGl2aXR5JiYobz10KHIpLnNjcm9sbExlZnQodChyKS5zY3JvbGxMZWZ0KCkrbi5zY3JvbGxTcGVlZCkpKSksbyE9PSExJiZ0LnVpLmRkbWFuYWdlciYmIW4uZHJvcEJlaGF2aW91ciYmdC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMocyxlKX19KSx0LnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcInNuYXBcIix7c3RhcnQ6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXMub3B0aW9ucztzLnNuYXBFbGVtZW50cz1bXSx0KG4uc25hcC5jb25zdHJ1Y3RvciE9PVN0cmluZz9uLnNuYXAuaXRlbXN8fFwiOmRhdGEodWktZHJhZ2dhYmxlKVwiOm4uc25hcCkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyksaT1lLm9mZnNldCgpO3RoaXMhPT1zLmVsZW1lbnRbMF0mJnMuc25hcEVsZW1lbnRzLnB1c2goe2l0ZW06dGhpcyx3aWR0aDplLm91dGVyV2lkdGgoKSxoZWlnaHQ6ZS5vdXRlckhlaWdodCgpLHRvcDppLnRvcCxsZWZ0OmkubGVmdH0pfSl9LGRyYWc6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuLG8sYSxyLGgsbCxjLHUsZCxwLGY9cy5vcHRpb25zLGc9Zi5zbmFwVG9sZXJhbmNlLG09aS5vZmZzZXQubGVmdCxfPW0rcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCx2PWkub2Zmc2V0LnRvcCxiPXYrcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQ7Zm9yKGQ9cy5zbmFwRWxlbWVudHMubGVuZ3RoLTE7ZD49MDtkLS0paD1zLnNuYXBFbGVtZW50c1tkXS5sZWZ0LXMubWFyZ2lucy5sZWZ0LGw9aCtzLnNuYXBFbGVtZW50c1tkXS53aWR0aCxjPXMuc25hcEVsZW1lbnRzW2RdLnRvcC1zLm1hcmdpbnMudG9wLHU9YytzLnNuYXBFbGVtZW50c1tkXS5oZWlnaHQsaC1nPl98fG0+bCtnfHxjLWc+Ynx8dj51K2d8fCF0LmNvbnRhaW5zKHMuc25hcEVsZW1lbnRzW2RdLml0ZW0ub3duZXJEb2N1bWVudCxzLnNuYXBFbGVtZW50c1tkXS5pdGVtKT8ocy5zbmFwRWxlbWVudHNbZF0uc25hcHBpbmcmJnMub3B0aW9ucy5zbmFwLnJlbGVhc2UmJnMub3B0aW9ucy5zbmFwLnJlbGVhc2UuY2FsbChzLmVsZW1lbnQsZSx0LmV4dGVuZChzLl91aUhhc2goKSx7c25hcEl0ZW06cy5zbmFwRWxlbWVudHNbZF0uaXRlbX0pKSxzLnNuYXBFbGVtZW50c1tkXS5zbmFwcGluZz0hMSk6KFwiaW5uZXJcIiE9PWYuc25hcE1vZGUmJihuPWc+PU1hdGguYWJzKGMtYiksbz1nPj1NYXRoLmFicyh1LXYpLGE9Zz49TWF0aC5hYnMoaC1fKSxyPWc+PU1hdGguYWJzKGwtbSksbiYmKGkucG9zaXRpb24udG9wPXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOmMtcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsbGVmdDowfSkudG9wKSxvJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6dSxsZWZ0OjB9KS50b3ApLGEmJihpLnBvc2l0aW9uLmxlZnQ9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6MCxsZWZ0Omgtcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aH0pLmxlZnQpLHImJihpLnBvc2l0aW9uLmxlZnQ9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6MCxsZWZ0Omx9KS5sZWZ0KSkscD1ufHxvfHxhfHxyLFwib3V0ZXJcIiE9PWYuc25hcE1vZGUmJihuPWc+PU1hdGguYWJzKGMtdiksbz1nPj1NYXRoLmFicyh1LWIpLGE9Zz49TWF0aC5hYnMoaC1tKSxyPWc+PU1hdGguYWJzKGwtXyksbiYmKGkucG9zaXRpb24udG9wPXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOmMsbGVmdDowfSkudG9wKSxvJiYoaS5wb3NpdGlvbi50b3A9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6dS1zLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCxsZWZ0OjB9KS50b3ApLGEmJihpLnBvc2l0aW9uLmxlZnQ9cy5fY29udmVydFBvc2l0aW9uVG8oXCJyZWxhdGl2ZVwiLHt0b3A6MCxsZWZ0Omh9KS5sZWZ0KSxyJiYoaS5wb3NpdGlvbi5sZWZ0PXMuX2NvbnZlcnRQb3NpdGlvblRvKFwicmVsYXRpdmVcIix7dG9wOjAsbGVmdDpsLXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGh9KS5sZWZ0KSksIXMuc25hcEVsZW1lbnRzW2RdLnNuYXBwaW5nJiYobnx8b3x8YXx8cnx8cCkmJnMub3B0aW9ucy5zbmFwLnNuYXAmJnMub3B0aW9ucy5zbmFwLnNuYXAuY2FsbChzLmVsZW1lbnQsZSx0LmV4dGVuZChzLl91aUhhc2goKSx7c25hcEl0ZW06cy5zbmFwRWxlbWVudHNbZF0uaXRlbX0pKSxzLnNuYXBFbGVtZW50c1tkXS5zbmFwcGluZz1ufHxvfHxhfHxyfHxwKX19KSx0LnVpLnBsdWdpbi5hZGQoXCJkcmFnZ2FibGVcIixcInN0YWNrXCIse3N0YXJ0OmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvPXMub3B0aW9ucyxhPXQubWFrZUFycmF5KHQoby5zdGFjaykpLnNvcnQoZnVuY3Rpb24oZSxpKXtyZXR1cm4ocGFyc2VJbnQodChlKS5jc3MoXCJ6SW5kZXhcIiksMTApfHwwKS0ocGFyc2VJbnQodChpKS5jc3MoXCJ6SW5kZXhcIiksMTApfHwwKX0pO2EubGVuZ3RoJiYobj1wYXJzZUludCh0KGFbMF0pLmNzcyhcInpJbmRleFwiKSwxMCl8fDAsdChhKS5lYWNoKGZ1bmN0aW9uKGUpe3QodGhpcykuY3NzKFwiekluZGV4XCIsbitlKX0pLHRoaXMuY3NzKFwiekluZGV4XCIsbithLmxlbmd0aCkpfX0pLHQudWkucGx1Z2luLmFkZChcImRyYWdnYWJsZVwiLFwiekluZGV4XCIse3N0YXJ0OmZ1bmN0aW9uKGUsaSxzKXt2YXIgbj10KGkuaGVscGVyKSxvPXMub3B0aW9ucztuLmNzcyhcInpJbmRleFwiKSYmKG8uX3pJbmRleD1uLmNzcyhcInpJbmRleFwiKSksbi5jc3MoXCJ6SW5kZXhcIixvLnpJbmRleCl9LHN0b3A6ZnVuY3Rpb24oZSxpLHMpe3ZhciBuPXMub3B0aW9ucztuLl96SW5kZXgmJnQoaS5oZWxwZXIpLmNzcyhcInpJbmRleFwiLG4uX3pJbmRleCl9fSksdC51aS5kcmFnZ2FibGUsdC53aWRnZXQoXCJ1aS5yZXNpemFibGVcIix0LnVpLm1vdXNlLHt2ZXJzaW9uOlwiMS4xMi4xXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJyZXNpemVcIixvcHRpb25zOnthbHNvUmVzaXplOiExLGFuaW1hdGU6ITEsYW5pbWF0ZUR1cmF0aW9uOlwic2xvd1wiLGFuaW1hdGVFYXNpbmc6XCJzd2luZ1wiLGFzcGVjdFJhdGlvOiExLGF1dG9IaWRlOiExLGNsYXNzZXM6e1widWktcmVzaXphYmxlLXNlXCI6XCJ1aS1pY29uIHVpLWljb24tZ3JpcHNtYWxsLWRpYWdvbmFsLXNlXCJ9LGNvbnRhaW5tZW50OiExLGdob3N0OiExLGdyaWQ6ITEsaGFuZGxlczpcImUscyxzZVwiLGhlbHBlcjohMSxtYXhIZWlnaHQ6bnVsbCxtYXhXaWR0aDpudWxsLG1pbkhlaWdodDoxMCxtaW5XaWR0aDoxMCx6SW5kZXg6OTAscmVzaXplOm51bGwsc3RhcnQ6bnVsbCxzdG9wOm51bGx9LF9udW06ZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlRmxvYXQodCl8fDB9LF9pc051bWJlcjpmdW5jdGlvbih0KXtyZXR1cm4haXNOYU4ocGFyc2VGbG9hdCh0KSl9LF9oYXNTY3JvbGw6ZnVuY3Rpb24oZSxpKXtpZihcImhpZGRlblwiPT09dChlKS5jc3MoXCJvdmVyZmxvd1wiKSlyZXR1cm4hMTt2YXIgcz1pJiZcImxlZnRcIj09PWk/XCJzY3JvbGxMZWZ0XCI6XCJzY3JvbGxUb3BcIixuPSExO3JldHVybiBlW3NdPjA/ITA6KGVbc109MSxuPWVbc10+MCxlW3NdPTAsbil9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMub3B0aW9ucyxzPXRoaXM7dGhpcy5fYWRkQ2xhc3MoXCJ1aS1yZXNpemFibGVcIiksdC5leHRlbmQodGhpcyx7X2FzcGVjdFJhdGlvOiEhaS5hc3BlY3RSYXRpbyxhc3BlY3RSYXRpbzppLmFzcGVjdFJhdGlvLG9yaWdpbmFsRWxlbWVudDp0aGlzLmVsZW1lbnQsX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHM6W10sX2hlbHBlcjppLmhlbHBlcnx8aS5naG9zdHx8aS5hbmltYXRlP2kuaGVscGVyfHxcInVpLXJlc2l6YWJsZS1oZWxwZXJcIjpudWxsfSksdGhpcy5lbGVtZW50WzBdLm5vZGVOYW1lLm1hdGNoKC9eKGNhbnZhc3x0ZXh0YXJlYXxpbnB1dHxzZWxlY3R8YnV0dG9ufGltZykkL2kpJiYodGhpcy5lbGVtZW50LndyYXAodChcIjxkaXYgY2xhc3M9J3VpLXdyYXBwZXInIHN0eWxlPSdvdmVyZmxvdzogaGlkZGVuOyc+PC9kaXY+XCIpLmNzcyh7cG9zaXRpb246dGhpcy5lbGVtZW50LmNzcyhcInBvc2l0aW9uXCIpLHdpZHRoOnRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksaGVpZ2h0OnRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpLHRvcDp0aGlzLmVsZW1lbnQuY3NzKFwidG9wXCIpLGxlZnQ6dGhpcy5lbGVtZW50LmNzcyhcImxlZnRcIil9KSksdGhpcy5lbGVtZW50PXRoaXMuZWxlbWVudC5wYXJlbnQoKS5kYXRhKFwidWktcmVzaXphYmxlXCIsdGhpcy5lbGVtZW50LnJlc2l6YWJsZShcImluc3RhbmNlXCIpKSx0aGlzLmVsZW1lbnRJc1dyYXBwZXI9ITAsZT17bWFyZ2luVG9wOnRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcIm1hcmdpblRvcFwiKSxtYXJnaW5SaWdodDp0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5SaWdodFwiKSxtYXJnaW5Cb3R0b206dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luQm90dG9tXCIpLG1hcmdpbkxlZnQ6dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwibWFyZ2luTGVmdFwiKX0sdGhpcy5lbGVtZW50LmNzcyhlKSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoXCJtYXJnaW5cIiwwKSx0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGU9dGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwicmVzaXplXCIpLHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyhcInJlc2l6ZVwiLFwibm9uZVwiKSx0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLnB1c2godGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHtwb3NpdGlvbjpcInN0YXRpY1wiLHpvb206MSxkaXNwbGF5OlwiYmxvY2tcIn0pKSx0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoZSksdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKSksdGhpcy5fc2V0dXBIYW5kbGVzKCksaS5hdXRvSGlkZSYmdCh0aGlzLmVsZW1lbnQpLm9uKFwibW91c2VlbnRlclwiLGZ1bmN0aW9uKCl7aS5kaXNhYmxlZHx8KHMuX3JlbW92ZUNsYXNzKFwidWktcmVzaXphYmxlLWF1dG9oaWRlXCIpLHMuX2hhbmRsZXMuc2hvdygpKX0pLm9uKFwibW91c2VsZWF2ZVwiLGZ1bmN0aW9uKCl7aS5kaXNhYmxlZHx8cy5yZXNpemluZ3x8KHMuX2FkZENsYXNzKFwidWktcmVzaXphYmxlLWF1dG9oaWRlXCIpLHMuX2hhbmRsZXMuaGlkZSgpKX0pLHRoaXMuX21vdXNlSW5pdCgpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuX21vdXNlRGVzdHJveSgpO3ZhciBlLGk9ZnVuY3Rpb24oZSl7dChlKS5yZW1vdmVEYXRhKFwicmVzaXphYmxlXCIpLnJlbW92ZURhdGEoXCJ1aS1yZXNpemFibGVcIikub2ZmKFwiLnJlc2l6YWJsZVwiKS5maW5kKFwiLnVpLXJlc2l6YWJsZS1oYW5kbGVcIikucmVtb3ZlKCl9O3JldHVybiB0aGlzLmVsZW1lbnRJc1dyYXBwZXImJihpKHRoaXMuZWxlbWVudCksZT10aGlzLmVsZW1lbnQsdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKHtwb3NpdGlvbjplLmNzcyhcInBvc2l0aW9uXCIpLHdpZHRoOmUub3V0ZXJXaWR0aCgpLGhlaWdodDplLm91dGVySGVpZ2h0KCksdG9wOmUuY3NzKFwidG9wXCIpLGxlZnQ6ZS5jc3MoXCJsZWZ0XCIpfSkuaW5zZXJ0QWZ0ZXIoZSksZS5yZW1vdmUoKSksdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKFwicmVzaXplXCIsdGhpcy5vcmlnaW5hbFJlc2l6ZVN0eWxlKSxpKHRoaXMub3JpZ2luYWxFbGVtZW50KSx0aGlzfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7c3dpdGNoKHRoaXMuX3N1cGVyKHQsZSksdCl7Y2FzZVwiaGFuZGxlc1wiOnRoaXMuX3JlbW92ZUhhbmRsZXMoKSx0aGlzLl9zZXR1cEhhbmRsZXMoKTticmVhaztkZWZhdWx0On19LF9zZXR1cEhhbmRsZXM6ZnVuY3Rpb24oKXt2YXIgZSxpLHMsbixvLGE9dGhpcy5vcHRpb25zLHI9dGhpcztpZih0aGlzLmhhbmRsZXM9YS5oYW5kbGVzfHwodChcIi51aS1yZXNpemFibGUtaGFuZGxlXCIsdGhpcy5lbGVtZW50KS5sZW5ndGg/e246XCIudWktcmVzaXphYmxlLW5cIixlOlwiLnVpLXJlc2l6YWJsZS1lXCIsczpcIi51aS1yZXNpemFibGUtc1wiLHc6XCIudWktcmVzaXphYmxlLXdcIixzZTpcIi51aS1yZXNpemFibGUtc2VcIixzdzpcIi51aS1yZXNpemFibGUtc3dcIixuZTpcIi51aS1yZXNpemFibGUtbmVcIixudzpcIi51aS1yZXNpemFibGUtbndcIn06XCJlLHMsc2VcIiksdGhpcy5faGFuZGxlcz10KCksdGhpcy5oYW5kbGVzLmNvbnN0cnVjdG9yPT09U3RyaW5nKWZvcihcImFsbFwiPT09dGhpcy5oYW5kbGVzJiYodGhpcy5oYW5kbGVzPVwibixlLHMsdyxzZSxzdyxuZSxud1wiKSxzPXRoaXMuaGFuZGxlcy5zcGxpdChcIixcIiksdGhpcy5oYW5kbGVzPXt9LGk9MDtzLmxlbmd0aD5pO2krKyllPXQudHJpbShzW2ldKSxuPVwidWktcmVzaXphYmxlLVwiK2Usbz10KFwiPGRpdj5cIiksdGhpcy5fYWRkQ2xhc3MobyxcInVpLXJlc2l6YWJsZS1oYW5kbGUgXCIrbiksby5jc3Moe3pJbmRleDphLnpJbmRleH0pLHRoaXMuaGFuZGxlc1tlXT1cIi51aS1yZXNpemFibGUtXCIrZSx0aGlzLmVsZW1lbnQuYXBwZW5kKG8pO3RoaXMuX3JlbmRlckF4aXM9ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG87ZT1lfHx0aGlzLmVsZW1lbnQ7Zm9yKGkgaW4gdGhpcy5oYW5kbGVzKXRoaXMuaGFuZGxlc1tpXS5jb25zdHJ1Y3Rvcj09PVN0cmluZz90aGlzLmhhbmRsZXNbaV09dGhpcy5lbGVtZW50LmNoaWxkcmVuKHRoaXMuaGFuZGxlc1tpXSkuZmlyc3QoKS5zaG93KCk6KHRoaXMuaGFuZGxlc1tpXS5qcXVlcnl8fHRoaXMuaGFuZGxlc1tpXS5ub2RlVHlwZSkmJih0aGlzLmhhbmRsZXNbaV09dCh0aGlzLmhhbmRsZXNbaV0pLHRoaXMuX29uKHRoaXMuaGFuZGxlc1tpXSx7bW91c2Vkb3duOnIuX21vdXNlRG93bn0pKSx0aGlzLmVsZW1lbnRJc1dyYXBwZXImJnRoaXMub3JpZ2luYWxFbGVtZW50WzBdLm5vZGVOYW1lLm1hdGNoKC9eKHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b24pJC9pKSYmKHM9dCh0aGlzLmhhbmRsZXNbaV0sdGhpcy5lbGVtZW50KSxvPS9zd3xuZXxud3xzZXxufHMvLnRlc3QoaSk/cy5vdXRlckhlaWdodCgpOnMub3V0ZXJXaWR0aCgpLG49W1wicGFkZGluZ1wiLC9uZXxud3xuLy50ZXN0KGkpP1wiVG9wXCI6L3NlfHN3fHMvLnRlc3QoaSk/XCJCb3R0b21cIjovXmUkLy50ZXN0KGkpP1wiUmlnaHRcIjpcIkxlZnRcIl0uam9pbihcIlwiKSxlLmNzcyhuLG8pLHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCkpLHRoaXMuX2hhbmRsZXM9dGhpcy5faGFuZGxlcy5hZGQodGhpcy5oYW5kbGVzW2ldKX0sdGhpcy5fcmVuZGVyQXhpcyh0aGlzLmVsZW1lbnQpLHRoaXMuX2hhbmRsZXM9dGhpcy5faGFuZGxlcy5hZGQodGhpcy5lbGVtZW50LmZpbmQoXCIudWktcmVzaXphYmxlLWhhbmRsZVwiKSksdGhpcy5faGFuZGxlcy5kaXNhYmxlU2VsZWN0aW9uKCksdGhpcy5faGFuZGxlcy5vbihcIm1vdXNlb3ZlclwiLGZ1bmN0aW9uKCl7ci5yZXNpemluZ3x8KHRoaXMuY2xhc3NOYW1lJiYobz10aGlzLmNsYXNzTmFtZS5tYXRjaCgvdWktcmVzaXphYmxlLShzZXxzd3xuZXxud3xufGV8c3x3KS9pKSksci5heGlzPW8mJm9bMV0/b1sxXTpcInNlXCIpfSksYS5hdXRvSGlkZSYmKHRoaXMuX2hhbmRsZXMuaGlkZSgpLHRoaXMuX2FkZENsYXNzKFwidWktcmVzaXphYmxlLWF1dG9oaWRlXCIpKX0sX3JlbW92ZUhhbmRsZXM6ZnVuY3Rpb24oKXt0aGlzLl9oYW5kbGVzLnJlbW92ZSgpfSxfbW91c2VDYXB0dXJlOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj0hMTtmb3IoaSBpbiB0aGlzLmhhbmRsZXMpcz10KHRoaXMuaGFuZGxlc1tpXSlbMF0sKHM9PT1lLnRhcmdldHx8dC5jb250YWlucyhzLGUudGFyZ2V0KSkmJihuPSEwKTtyZXR1cm4hdGhpcy5vcHRpb25zLmRpc2FibGVkJiZufSxfbW91c2VTdGFydDpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbz10aGlzLm9wdGlvbnMsYT10aGlzLmVsZW1lbnQ7cmV0dXJuIHRoaXMucmVzaXppbmc9ITAsdGhpcy5fcmVuZGVyUHJveHkoKSxpPXRoaXMuX251bSh0aGlzLmhlbHBlci5jc3MoXCJsZWZ0XCIpKSxzPXRoaXMuX251bSh0aGlzLmhlbHBlci5jc3MoXCJ0b3BcIikpLG8uY29udGFpbm1lbnQmJihpKz10KG8uY29udGFpbm1lbnQpLnNjcm9sbExlZnQoKXx8MCxzKz10KG8uY29udGFpbm1lbnQpLnNjcm9sbFRvcCgpfHwwKSx0aGlzLm9mZnNldD10aGlzLmhlbHBlci5vZmZzZXQoKSx0aGlzLnBvc2l0aW9uPXtsZWZ0OmksdG9wOnN9LHRoaXMuc2l6ZT10aGlzLl9oZWxwZXI/e3dpZHRoOnRoaXMuaGVscGVyLndpZHRoKCksaGVpZ2h0OnRoaXMuaGVscGVyLmhlaWdodCgpfTp7d2lkdGg6YS53aWR0aCgpLGhlaWdodDphLmhlaWdodCgpfSx0aGlzLm9yaWdpbmFsU2l6ZT10aGlzLl9oZWxwZXI/e3dpZHRoOmEub3V0ZXJXaWR0aCgpLGhlaWdodDphLm91dGVySGVpZ2h0KCl9Ont3aWR0aDphLndpZHRoKCksaGVpZ2h0OmEuaGVpZ2h0KCl9LHRoaXMuc2l6ZURpZmY9e3dpZHRoOmEub3V0ZXJXaWR0aCgpLWEud2lkdGgoKSxoZWlnaHQ6YS5vdXRlckhlaWdodCgpLWEuaGVpZ2h0KCl9LHRoaXMub3JpZ2luYWxQb3NpdGlvbj17bGVmdDppLHRvcDpzfSx0aGlzLm9yaWdpbmFsTW91c2VQb3NpdGlvbj17bGVmdDplLnBhZ2VYLHRvcDplLnBhZ2VZfSx0aGlzLmFzcGVjdFJhdGlvPVwibnVtYmVyXCI9PXR5cGVvZiBvLmFzcGVjdFJhdGlvP28uYXNwZWN0UmF0aW86dGhpcy5vcmlnaW5hbFNpemUud2lkdGgvdGhpcy5vcmlnaW5hbFNpemUuaGVpZ2h0fHwxLG49dChcIi51aS1yZXNpemFibGUtXCIrdGhpcy5heGlzKS5jc3MoXCJjdXJzb3JcIiksdChcImJvZHlcIikuY3NzKFwiY3Vyc29yXCIsXCJhdXRvXCI9PT1uP3RoaXMuYXhpcytcIi1yZXNpemVcIjpuKSx0aGlzLl9hZGRDbGFzcyhcInVpLXJlc2l6YWJsZS1yZXNpemluZ1wiKSx0aGlzLl9wcm9wYWdhdGUoXCJzdGFydFwiLGUpLCEwfSxfbW91c2VEcmFnOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10aGlzLm9yaWdpbmFsTW91c2VQb3NpdGlvbixvPXRoaXMuYXhpcyxhPWUucGFnZVgtbi5sZWZ0fHwwLHI9ZS5wYWdlWS1uLnRvcHx8MCxoPXRoaXMuX2NoYW5nZVtvXTtyZXR1cm4gdGhpcy5fdXBkYXRlUHJldlByb3BlcnRpZXMoKSxoPyhpPWguYXBwbHkodGhpcyxbZSxhLHJdKSx0aGlzLl91cGRhdGVWaXJ0dWFsQm91bmRhcmllcyhlLnNoaWZ0S2V5KSwodGhpcy5fYXNwZWN0UmF0aW98fGUuc2hpZnRLZXkpJiYoaT10aGlzLl91cGRhdGVSYXRpbyhpLGUpKSxpPXRoaXMuX3Jlc3BlY3RTaXplKGksZSksdGhpcy5fdXBkYXRlQ2FjaGUoaSksdGhpcy5fcHJvcGFnYXRlKFwicmVzaXplXCIsZSkscz10aGlzLl9hcHBseUNoYW5nZXMoKSwhdGhpcy5faGVscGVyJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aCYmdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKSx0LmlzRW1wdHlPYmplY3Qocyl8fCh0aGlzLl91cGRhdGVQcmV2UHJvcGVydGllcygpLHRoaXMuX3RyaWdnZXIoXCJyZXNpemVcIixlLHRoaXMudWkoKSksdGhpcy5fYXBwbHlDaGFuZ2VzKCkpLCExKTohMX0sX21vdXNlU3RvcDpmdW5jdGlvbihlKXt0aGlzLnJlc2l6aW5nPSExO3ZhciBpLHMsbixvLGEscixoLGw9dGhpcy5vcHRpb25zLGM9dGhpcztyZXR1cm4gdGhpcy5faGVscGVyJiYoaT10aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLHM9aS5sZW5ndGgmJi90ZXh0YXJlYS9pLnRlc3QoaVswXS5ub2RlTmFtZSksbj1zJiZ0aGlzLl9oYXNTY3JvbGwoaVswXSxcImxlZnRcIik/MDpjLnNpemVEaWZmLmhlaWdodCxvPXM/MDpjLnNpemVEaWZmLndpZHRoLGE9e3dpZHRoOmMuaGVscGVyLndpZHRoKCktbyxoZWlnaHQ6Yy5oZWxwZXIuaGVpZ2h0KCktbn0scj1wYXJzZUZsb2F0KGMuZWxlbWVudC5jc3MoXCJsZWZ0XCIpKSsoYy5wb3NpdGlvbi5sZWZ0LWMub3JpZ2luYWxQb3NpdGlvbi5sZWZ0KXx8bnVsbCxoPXBhcnNlRmxvYXQoYy5lbGVtZW50LmNzcyhcInRvcFwiKSkrKGMucG9zaXRpb24udG9wLWMub3JpZ2luYWxQb3NpdGlvbi50b3ApfHxudWxsLGwuYW5pbWF0ZXx8dGhpcy5lbGVtZW50LmNzcyh0LmV4dGVuZChhLHt0b3A6aCxsZWZ0OnJ9KSksYy5oZWxwZXIuaGVpZ2h0KGMuc2l6ZS5oZWlnaHQpLGMuaGVscGVyLndpZHRoKGMuc2l6ZS53aWR0aCksdGhpcy5faGVscGVyJiYhbC5hbmltYXRlJiZ0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpKSx0KFwiYm9keVwiKS5jc3MoXCJjdXJzb3JcIixcImF1dG9cIiksdGhpcy5fcmVtb3ZlQ2xhc3MoXCJ1aS1yZXNpemFibGUtcmVzaXppbmdcIiksdGhpcy5fcHJvcGFnYXRlKFwic3RvcFwiLGUpLHRoaXMuX2hlbHBlciYmdGhpcy5oZWxwZXIucmVtb3ZlKCksITF9LF91cGRhdGVQcmV2UHJvcGVydGllczpmdW5jdGlvbigpe3RoaXMucHJldlBvc2l0aW9uPXt0b3A6dGhpcy5wb3NpdGlvbi50b3AsbGVmdDp0aGlzLnBvc2l0aW9uLmxlZnR9LHRoaXMucHJldlNpemU9e3dpZHRoOnRoaXMuc2l6ZS53aWR0aCxoZWlnaHQ6dGhpcy5zaXplLmhlaWdodH19LF9hcHBseUNoYW5nZXM6ZnVuY3Rpb24oKXt2YXIgdD17fTtyZXR1cm4gdGhpcy5wb3NpdGlvbi50b3AhPT10aGlzLnByZXZQb3NpdGlvbi50b3AmJih0LnRvcD10aGlzLnBvc2l0aW9uLnRvcCtcInB4XCIpLHRoaXMucG9zaXRpb24ubGVmdCE9PXRoaXMucHJldlBvc2l0aW9uLmxlZnQmJih0LmxlZnQ9dGhpcy5wb3NpdGlvbi5sZWZ0K1wicHhcIiksdGhpcy5zaXplLndpZHRoIT09dGhpcy5wcmV2U2l6ZS53aWR0aCYmKHQud2lkdGg9dGhpcy5zaXplLndpZHRoK1wicHhcIiksdGhpcy5zaXplLmhlaWdodCE9PXRoaXMucHJldlNpemUuaGVpZ2h0JiYodC5oZWlnaHQ9dGhpcy5zaXplLmhlaWdodCtcInB4XCIpLHRoaXMuaGVscGVyLmNzcyh0KSx0fSxfdXBkYXRlVmlydHVhbEJvdW5kYXJpZXM6ZnVuY3Rpb24odCl7dmFyIGUsaSxzLG4sbyxhPXRoaXMub3B0aW9ucztvPXttaW5XaWR0aDp0aGlzLl9pc051bWJlcihhLm1pbldpZHRoKT9hLm1pbldpZHRoOjAsbWF4V2lkdGg6dGhpcy5faXNOdW1iZXIoYS5tYXhXaWR0aCk/YS5tYXhXaWR0aDoxLzAsbWluSGVpZ2h0OnRoaXMuX2lzTnVtYmVyKGEubWluSGVpZ2h0KT9hLm1pbkhlaWdodDowLG1heEhlaWdodDp0aGlzLl9pc051bWJlcihhLm1heEhlaWdodCk/YS5tYXhIZWlnaHQ6MS8wfSwodGhpcy5fYXNwZWN0UmF0aW98fHQpJiYoZT1vLm1pbkhlaWdodCp0aGlzLmFzcGVjdFJhdGlvLHM9by5taW5XaWR0aC90aGlzLmFzcGVjdFJhdGlvLGk9by5tYXhIZWlnaHQqdGhpcy5hc3BlY3RSYXRpbyxuPW8ubWF4V2lkdGgvdGhpcy5hc3BlY3RSYXRpbyxlPm8ubWluV2lkdGgmJihvLm1pbldpZHRoPWUpLHM+by5taW5IZWlnaHQmJihvLm1pbkhlaWdodD1zKSxvLm1heFdpZHRoPmkmJihvLm1heFdpZHRoPWkpLG8ubWF4SGVpZ2h0Pm4mJihvLm1heEhlaWdodD1uKSksdGhpcy5fdkJvdW5kYXJpZXM9b30sX3VwZGF0ZUNhY2hlOmZ1bmN0aW9uKHQpe3RoaXMub2Zmc2V0PXRoaXMuaGVscGVyLm9mZnNldCgpLHRoaXMuX2lzTnVtYmVyKHQubGVmdCkmJih0aGlzLnBvc2l0aW9uLmxlZnQ9dC5sZWZ0KSx0aGlzLl9pc051bWJlcih0LnRvcCkmJih0aGlzLnBvc2l0aW9uLnRvcD10LnRvcCksdGhpcy5faXNOdW1iZXIodC5oZWlnaHQpJiYodGhpcy5zaXplLmhlaWdodD10LmhlaWdodCksdGhpcy5faXNOdW1iZXIodC53aWR0aCkmJih0aGlzLnNpemUud2lkdGg9dC53aWR0aCl9LF91cGRhdGVSYXRpbzpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBvc2l0aW9uLGk9dGhpcy5zaXplLHM9dGhpcy5heGlzO3JldHVybiB0aGlzLl9pc051bWJlcih0LmhlaWdodCk/dC53aWR0aD10LmhlaWdodCp0aGlzLmFzcGVjdFJhdGlvOnRoaXMuX2lzTnVtYmVyKHQud2lkdGgpJiYodC5oZWlnaHQ9dC53aWR0aC90aGlzLmFzcGVjdFJhdGlvKSxcInN3XCI9PT1zJiYodC5sZWZ0PWUubGVmdCsoaS53aWR0aC10LndpZHRoKSx0LnRvcD1udWxsKSxcIm53XCI9PT1zJiYodC50b3A9ZS50b3ArKGkuaGVpZ2h0LXQuaGVpZ2h0KSx0LmxlZnQ9ZS5sZWZ0KyhpLndpZHRoLXQud2lkdGgpKSx0fSxfcmVzcGVjdFNpemU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fdkJvdW5kYXJpZXMsaT10aGlzLmF4aXMscz10aGlzLl9pc051bWJlcih0LndpZHRoKSYmZS5tYXhXaWR0aCYmZS5tYXhXaWR0aDx0LndpZHRoLG49dGhpcy5faXNOdW1iZXIodC5oZWlnaHQpJiZlLm1heEhlaWdodCYmZS5tYXhIZWlnaHQ8dC5oZWlnaHQsbz10aGlzLl9pc051bWJlcih0LndpZHRoKSYmZS5taW5XaWR0aCYmZS5taW5XaWR0aD50LndpZHRoLGE9dGhpcy5faXNOdW1iZXIodC5oZWlnaHQpJiZlLm1pbkhlaWdodCYmZS5taW5IZWlnaHQ+dC5oZWlnaHQscj10aGlzLm9yaWdpbmFsUG9zaXRpb24ubGVmdCt0aGlzLm9yaWdpbmFsU2l6ZS53aWR0aCxoPXRoaXMub3JpZ2luYWxQb3NpdGlvbi50b3ArdGhpcy5vcmlnaW5hbFNpemUuaGVpZ2h0LGw9L3N3fG53fHcvLnRlc3QoaSksYz0vbnd8bmV8bi8udGVzdChpKTtyZXR1cm4gbyYmKHQud2lkdGg9ZS5taW5XaWR0aCksYSYmKHQuaGVpZ2h0PWUubWluSGVpZ2h0KSxzJiYodC53aWR0aD1lLm1heFdpZHRoKSxuJiYodC5oZWlnaHQ9ZS5tYXhIZWlnaHQpLG8mJmwmJih0LmxlZnQ9ci1lLm1pbldpZHRoKSxzJiZsJiYodC5sZWZ0PXItZS5tYXhXaWR0aCksYSYmYyYmKHQudG9wPWgtZS5taW5IZWlnaHQpLG4mJmMmJih0LnRvcD1oLWUubWF4SGVpZ2h0KSx0LndpZHRofHx0LmhlaWdodHx8dC5sZWZ0fHwhdC50b3A/dC53aWR0aHx8dC5oZWlnaHR8fHQudG9wfHwhdC5sZWZ0fHwodC5sZWZ0PW51bGwpOnQudG9wPW51bGwsdH0sX2dldFBhZGRpbmdQbHVzQm9yZGVyRGltZW5zaW9uczpmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxpPVtdLHM9W3QuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksdC5jc3MoXCJib3JkZXJSaWdodFdpZHRoXCIpLHQuY3NzKFwiYm9yZGVyQm90dG9tV2lkdGhcIiksdC5jc3MoXCJib3JkZXJMZWZ0V2lkdGhcIildLG49W3QuY3NzKFwicGFkZGluZ1RvcFwiKSx0LmNzcyhcInBhZGRpbmdSaWdodFwiKSx0LmNzcyhcInBhZGRpbmdCb3R0b21cIiksdC5jc3MoXCJwYWRkaW5nTGVmdFwiKV07ND5lO2UrKylpW2VdPXBhcnNlRmxvYXQoc1tlXSl8fDAsaVtlXSs9cGFyc2VGbG9hdChuW2VdKXx8MDtyZXR1cm57aGVpZ2h0OmlbMF0raVsyXSx3aWR0aDppWzFdK2lbM119fSxfcHJvcG9ydGlvbmFsbHlSZXNpemU6ZnVuY3Rpb24oKXtpZih0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aClmb3IodmFyIHQsZT0wLGk9dGhpcy5oZWxwZXJ8fHRoaXMuZWxlbWVudDt0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLmxlbmd0aD5lO2UrKyl0PXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHNbZV0sdGhpcy5vdXRlckRpbWVuc2lvbnN8fCh0aGlzLm91dGVyRGltZW5zaW9ucz10aGlzLl9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnModCkpLHQuY3NzKHtoZWlnaHQ6aS5oZWlnaHQoKS10aGlzLm91dGVyRGltZW5zaW9ucy5oZWlnaHR8fDAsd2lkdGg6aS53aWR0aCgpLXRoaXMub3V0ZXJEaW1lbnNpb25zLndpZHRofHwwfSl9LF9yZW5kZXJQcm94eTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuZWxlbWVudCxpPXRoaXMub3B0aW9uczt0aGlzLmVsZW1lbnRPZmZzZXQ9ZS5vZmZzZXQoKSx0aGlzLl9oZWxwZXI/KHRoaXMuaGVscGVyPXRoaXMuaGVscGVyfHx0KFwiPGRpdiBzdHlsZT0nb3ZlcmZsb3c6aGlkZGVuOyc+PC9kaXY+XCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuaGVscGVyLHRoaXMuX2hlbHBlciksdGhpcy5oZWxwZXIuY3NzKHt3aWR0aDp0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpLGhlaWdodDp0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSxwb3NpdGlvbjpcImFic29sdXRlXCIsbGVmdDp0aGlzLmVsZW1lbnRPZmZzZXQubGVmdCtcInB4XCIsdG9wOnRoaXMuZWxlbWVudE9mZnNldC50b3ArXCJweFwiLHpJbmRleDorK2kuekluZGV4fSksdGhpcy5oZWxwZXIuYXBwZW5kVG8oXCJib2R5XCIpLmRpc2FibGVTZWxlY3Rpb24oKSk6dGhpcy5oZWxwZXI9dGhpcy5lbGVtZW50fSxfY2hhbmdlOntlOmZ1bmN0aW9uKHQsZSl7cmV0dXJue3dpZHRoOnRoaXMub3JpZ2luYWxTaXplLndpZHRoK2V9fSx3OmZ1bmN0aW9uKHQsZSl7dmFyIGk9dGhpcy5vcmlnaW5hbFNpemUscz10aGlzLm9yaWdpbmFsUG9zaXRpb247cmV0dXJue2xlZnQ6cy5sZWZ0K2Usd2lkdGg6aS53aWR0aC1lfX0sbjpmdW5jdGlvbih0LGUsaSl7dmFyIHM9dGhpcy5vcmlnaW5hbFNpemUsbj10aGlzLm9yaWdpbmFsUG9zaXRpb247cmV0dXJue3RvcDpuLnRvcCtpLGhlaWdodDpzLmhlaWdodC1pfX0sczpmdW5jdGlvbih0LGUsaSl7cmV0dXJue2hlaWdodDp0aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHQraX19LHNlOmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4gdC5leHRlbmQodGhpcy5fY2hhbmdlLnMuYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS5lLmFwcGx5KHRoaXMsW2UsaSxzXSkpfSxzdzpmdW5jdGlvbihlLGkscyl7cmV0dXJuIHQuZXh0ZW5kKHRoaXMuX2NoYW5nZS5zLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLl9jaGFuZ2Uudy5hcHBseSh0aGlzLFtlLGksc10pKX0sbmU6ZnVuY3Rpb24oZSxpLHMpe3JldHVybiB0LmV4dGVuZCh0aGlzLl9jaGFuZ2Uubi5hcHBseSh0aGlzLGFyZ3VtZW50cyksdGhpcy5fY2hhbmdlLmUuYXBwbHkodGhpcyxbZSxpLHNdKSl9LG53OmZ1bmN0aW9uKGUsaSxzKXtyZXR1cm4gdC5leHRlbmQodGhpcy5fY2hhbmdlLm4uYXBwbHkodGhpcyxhcmd1bWVudHMpLHRoaXMuX2NoYW5nZS53LmFwcGx5KHRoaXMsW2UsaSxzXSkpfX0sX3Byb3BhZ2F0ZTpmdW5jdGlvbihlLGkpe3QudWkucGx1Z2luLmNhbGwodGhpcyxlLFtpLHRoaXMudWkoKV0pLFwicmVzaXplXCIhPT1lJiZ0aGlzLl90cmlnZ2VyKGUsaSx0aGlzLnVpKCkpfSxwbHVnaW5zOnt9LHVpOmZ1bmN0aW9uKCl7cmV0dXJue29yaWdpbmFsRWxlbWVudDp0aGlzLm9yaWdpbmFsRWxlbWVudCxlbGVtZW50OnRoaXMuZWxlbWVudCxoZWxwZXI6dGhpcy5oZWxwZXIscG9zaXRpb246dGhpcy5wb3NpdGlvbixzaXplOnRoaXMuc2l6ZSxvcmlnaW5hbFNpemU6dGhpcy5vcmlnaW5hbFNpemUsb3JpZ2luYWxQb3NpdGlvbjp0aGlzLm9yaWdpbmFsUG9zaXRpb259fX0pLHQudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiYW5pbWF0ZVwiLHtzdG9wOmZ1bmN0aW9uKGUpe3ZhciBpPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIikscz1pLm9wdGlvbnMsbj1pLl9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzLG89bi5sZW5ndGgmJi90ZXh0YXJlYS9pLnRlc3QoblswXS5ub2RlTmFtZSksYT1vJiZpLl9oYXNTY3JvbGwoblswXSxcImxlZnRcIik/MDppLnNpemVEaWZmLmhlaWdodCxyPW8/MDppLnNpemVEaWZmLndpZHRoLGg9e3dpZHRoOmkuc2l6ZS53aWR0aC1yLGhlaWdodDppLnNpemUuaGVpZ2h0LWF9LGw9cGFyc2VGbG9hdChpLmVsZW1lbnQuY3NzKFwibGVmdFwiKSkrKGkucG9zaXRpb24ubGVmdC1pLm9yaWdpbmFsUG9zaXRpb24ubGVmdCl8fG51bGwsYz1wYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJ0b3BcIikpKyhpLnBvc2l0aW9uLnRvcC1pLm9yaWdpbmFsUG9zaXRpb24udG9wKXx8bnVsbDtpLmVsZW1lbnQuYW5pbWF0ZSh0LmV4dGVuZChoLGMmJmw/e3RvcDpjLGxlZnQ6bH06e30pLHtkdXJhdGlvbjpzLmFuaW1hdGVEdXJhdGlvbixlYXNpbmc6cy5hbmltYXRlRWFzaW5nLHN0ZXA6ZnVuY3Rpb24oKXt2YXIgcz17d2lkdGg6cGFyc2VGbG9hdChpLmVsZW1lbnQuY3NzKFwid2lkdGhcIikpLGhlaWdodDpwYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJoZWlnaHRcIikpLHRvcDpwYXJzZUZsb2F0KGkuZWxlbWVudC5jc3MoXCJ0b3BcIikpLGxlZnQ6cGFyc2VGbG9hdChpLmVsZW1lbnQuY3NzKFwibGVmdFwiKSl9O24mJm4ubGVuZ3RoJiZ0KG5bMF0pLmNzcyh7d2lkdGg6cy53aWR0aCxoZWlnaHQ6cy5oZWlnaHR9KSxpLl91cGRhdGVDYWNoZShzKSxpLl9wcm9wYWdhdGUoXCJyZXNpemVcIixlKX19KX19KSx0LnVpLnBsdWdpbi5hZGQoXCJyZXNpemFibGVcIixcImNvbnRhaW5tZW50XCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIGUsaSxzLG4sbyxhLHIsaD10KHRoaXMpLnJlc2l6YWJsZShcImluc3RhbmNlXCIpLGw9aC5vcHRpb25zLGM9aC5lbGVtZW50LHU9bC5jb250YWlubWVudCxkPXUgaW5zdGFuY2VvZiB0P3UuZ2V0KDApOi9wYXJlbnQvLnRlc3QodSk/Yy5wYXJlbnQoKS5nZXQoMCk6dTtkJiYoaC5jb250YWluZXJFbGVtZW50PXQoZCksL2RvY3VtZW50Ly50ZXN0KHUpfHx1PT09ZG9jdW1lbnQ/KGguY29udGFpbmVyT2Zmc2V0PXtsZWZ0OjAsdG9wOjB9LGguY29udGFpbmVyUG9zaXRpb249e2xlZnQ6MCx0b3A6MH0saC5wYXJlbnREYXRhPXtlbGVtZW50OnQoZG9jdW1lbnQpLGxlZnQ6MCx0b3A6MCx3aWR0aDp0KGRvY3VtZW50KS53aWR0aCgpLGhlaWdodDp0KGRvY3VtZW50KS5oZWlnaHQoKXx8ZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodH0pOihlPXQoZCksaT1bXSx0KFtcIlRvcFwiLFwiUmlnaHRcIixcIkxlZnRcIixcIkJvdHRvbVwiXSkuZWFjaChmdW5jdGlvbih0LHMpe2lbdF09aC5fbnVtKGUuY3NzKFwicGFkZGluZ1wiK3MpKX0pLGguY29udGFpbmVyT2Zmc2V0PWUub2Zmc2V0KCksaC5jb250YWluZXJQb3NpdGlvbj1lLnBvc2l0aW9uKCksaC5jb250YWluZXJTaXplPXtoZWlnaHQ6ZS5pbm5lckhlaWdodCgpLWlbM10sd2lkdGg6ZS5pbm5lcldpZHRoKCktaVsxXX0scz1oLmNvbnRhaW5lck9mZnNldCxuPWguY29udGFpbmVyU2l6ZS5oZWlnaHQsbz1oLmNvbnRhaW5lclNpemUud2lkdGgsYT1oLl9oYXNTY3JvbGwoZCxcImxlZnRcIik/ZC5zY3JvbGxXaWR0aDpvLHI9aC5faGFzU2Nyb2xsKGQpP2Quc2Nyb2xsSGVpZ2h0Om4saC5wYXJlbnREYXRhPXtlbGVtZW50OmQsbGVmdDpzLmxlZnQsdG9wOnMudG9wLHdpZHRoOmEsaGVpZ2h0OnJ9KSl9LHJlc2l6ZTpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbyxhPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIikscj1hLm9wdGlvbnMsaD1hLmNvbnRhaW5lck9mZnNldCxsPWEucG9zaXRpb24sYz1hLl9hc3BlY3RSYXRpb3x8ZS5zaGlmdEtleSx1PXt0b3A6MCxsZWZ0OjB9LGQ9YS5jb250YWluZXJFbGVtZW50LHA9ITA7ZFswXSE9PWRvY3VtZW50JiYvc3RhdGljLy50ZXN0KGQuY3NzKFwicG9zaXRpb25cIikpJiYodT1oKSxsLmxlZnQ8KGEuX2hlbHBlcj9oLmxlZnQ6MCkmJihhLnNpemUud2lkdGg9YS5zaXplLndpZHRoKyhhLl9oZWxwZXI/YS5wb3NpdGlvbi5sZWZ0LWgubGVmdDphLnBvc2l0aW9uLmxlZnQtdS5sZWZ0KSxjJiYoYS5zaXplLmhlaWdodD1hLnNpemUud2lkdGgvYS5hc3BlY3RSYXRpbyxwPSExKSxhLnBvc2l0aW9uLmxlZnQ9ci5oZWxwZXI/aC5sZWZ0OjApLGwudG9wPChhLl9oZWxwZXI/aC50b3A6MCkmJihhLnNpemUuaGVpZ2h0PWEuc2l6ZS5oZWlnaHQrKGEuX2hlbHBlcj9hLnBvc2l0aW9uLnRvcC1oLnRvcDphLnBvc2l0aW9uLnRvcCksYyYmKGEuc2l6ZS53aWR0aD1hLnNpemUuaGVpZ2h0KmEuYXNwZWN0UmF0aW8scD0hMSksYS5wb3NpdGlvbi50b3A9YS5faGVscGVyP2gudG9wOjApLG49YS5jb250YWluZXJFbGVtZW50LmdldCgwKT09PWEuZWxlbWVudC5wYXJlbnQoKS5nZXQoMCksbz0vcmVsYXRpdmV8YWJzb2x1dGUvLnRlc3QoYS5jb250YWluZXJFbGVtZW50LmNzcyhcInBvc2l0aW9uXCIpKSxuJiZvPyhhLm9mZnNldC5sZWZ0PWEucGFyZW50RGF0YS5sZWZ0K2EucG9zaXRpb24ubGVmdCxhLm9mZnNldC50b3A9YS5wYXJlbnREYXRhLnRvcCthLnBvc2l0aW9uLnRvcCk6KGEub2Zmc2V0LmxlZnQ9YS5lbGVtZW50Lm9mZnNldCgpLmxlZnQsYS5vZmZzZXQudG9wPWEuZWxlbWVudC5vZmZzZXQoKS50b3ApLGk9TWF0aC5hYnMoYS5zaXplRGlmZi53aWR0aCsoYS5faGVscGVyP2Eub2Zmc2V0LmxlZnQtdS5sZWZ0OmEub2Zmc2V0LmxlZnQtaC5sZWZ0KSkscz1NYXRoLmFicyhhLnNpemVEaWZmLmhlaWdodCsoYS5faGVscGVyP2Eub2Zmc2V0LnRvcC11LnRvcDphLm9mZnNldC50b3AtaC50b3ApKSxpK2Euc2l6ZS53aWR0aD49YS5wYXJlbnREYXRhLndpZHRoJiYoYS5zaXplLndpZHRoPWEucGFyZW50RGF0YS53aWR0aC1pLGMmJihhLnNpemUuaGVpZ2h0PWEuc2l6ZS53aWR0aC9hLmFzcGVjdFJhdGlvLHA9ITEpKSxzK2Euc2l6ZS5oZWlnaHQ+PWEucGFyZW50RGF0YS5oZWlnaHQmJihhLnNpemUuaGVpZ2h0PWEucGFyZW50RGF0YS5oZWlnaHQtcyxjJiYoYS5zaXplLndpZHRoPWEuc2l6ZS5oZWlnaHQqYS5hc3BlY3RSYXRpbyxwPSExKSkscHx8KGEucG9zaXRpb24ubGVmdD1hLnByZXZQb3NpdGlvbi5sZWZ0LGEucG9zaXRpb24udG9wPWEucHJldlBvc2l0aW9uLnRvcCxhLnNpemUud2lkdGg9YS5wcmV2U2l6ZS53aWR0aCxhLnNpemUuaGVpZ2h0PWEucHJldlNpemUuaGVpZ2h0KX0sc3RvcDpmdW5jdGlvbigpe3ZhciBlPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIiksaT1lLm9wdGlvbnMscz1lLmNvbnRhaW5lck9mZnNldCxuPWUuY29udGFpbmVyUG9zaXRpb24sbz1lLmNvbnRhaW5lckVsZW1lbnQsYT10KGUuaGVscGVyKSxyPWEub2Zmc2V0KCksaD1hLm91dGVyV2lkdGgoKS1lLnNpemVEaWZmLndpZHRoLGw9YS5vdXRlckhlaWdodCgpLWUuc2l6ZURpZmYuaGVpZ2h0O2UuX2hlbHBlciYmIWkuYW5pbWF0ZSYmL3JlbGF0aXZlLy50ZXN0KG8uY3NzKFwicG9zaXRpb25cIikpJiZ0KHRoaXMpLmNzcyh7bGVmdDpyLmxlZnQtbi5sZWZ0LXMubGVmdCx3aWR0aDpoLGhlaWdodDpsfSksZS5faGVscGVyJiYhaS5hbmltYXRlJiYvc3RhdGljLy50ZXN0KG8uY3NzKFwicG9zaXRpb25cIikpJiZ0KHRoaXMpLmNzcyh7bGVmdDpyLmxlZnQtbi5sZWZ0LXMubGVmdCx3aWR0aDpoLGhlaWdodDpsfSl9fSksdC51aS5wbHVnaW4uYWRkKFwicmVzaXphYmxlXCIsXCJhbHNvUmVzaXplXCIse3N0YXJ0OmZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKS5yZXNpemFibGUoXCJpbnN0YW5jZVwiKSxpPWUub3B0aW9uczt0KGkuYWxzb1Jlc2l6ZSkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcyk7ZS5kYXRhKFwidWktcmVzaXphYmxlLWFsc29yZXNpemVcIix7d2lkdGg6cGFyc2VGbG9hdChlLndpZHRoKCkpLGhlaWdodDpwYXJzZUZsb2F0KGUuaGVpZ2h0KCkpLGxlZnQ6cGFyc2VGbG9hdChlLmNzcyhcImxlZnRcIikpLHRvcDpwYXJzZUZsb2F0KGUuY3NzKFwidG9wXCIpKX0pfSl9LHJlc2l6ZTpmdW5jdGlvbihlLGkpe3ZhciBzPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIiksbj1zLm9wdGlvbnMsbz1zLm9yaWdpbmFsU2l6ZSxhPXMub3JpZ2luYWxQb3NpdGlvbixyPXtoZWlnaHQ6cy5zaXplLmhlaWdodC1vLmhlaWdodHx8MCx3aWR0aDpzLnNpemUud2lkdGgtby53aWR0aHx8MCx0b3A6cy5wb3NpdGlvbi50b3AtYS50b3B8fDAsbGVmdDpzLnBvc2l0aW9uLmxlZnQtYS5sZWZ0fHwwfTt0KG4uYWxzb1Jlc2l6ZSkuZWFjaChmdW5jdGlvbigpe3ZhciBlPXQodGhpcykscz10KHRoaXMpLmRhdGEoXCJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZVwiKSxuPXt9LG89ZS5wYXJlbnRzKGkub3JpZ2luYWxFbGVtZW50WzBdKS5sZW5ndGg/W1wid2lkdGhcIixcImhlaWdodFwiXTpbXCJ3aWR0aFwiLFwiaGVpZ2h0XCIsXCJ0b3BcIixcImxlZnRcIl07dC5lYWNoKG8sZnVuY3Rpb24odCxlKXt2YXIgaT0oc1tlXXx8MCkrKHJbZV18fDApO2kmJmk+PTAmJihuW2VdPWl8fG51bGwpfSksZS5jc3Mobil9KX0sc3RvcDpmdW5jdGlvbigpe3QodGhpcykucmVtb3ZlRGF0YShcInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplXCIpfX0pLHQudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiZ2hvc3RcIix7c3RhcnQ6ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLnJlc2l6YWJsZShcImluc3RhbmNlXCIpLGk9ZS5zaXplO2UuZ2hvc3Q9ZS5vcmlnaW5hbEVsZW1lbnQuY2xvbmUoKSxlLmdob3N0LmNzcyh7b3BhY2l0eTouMjUsZGlzcGxheTpcImJsb2NrXCIscG9zaXRpb246XCJyZWxhdGl2ZVwiLGhlaWdodDppLmhlaWdodCx3aWR0aDppLndpZHRoLG1hcmdpbjowLGxlZnQ6MCx0b3A6MH0pLGUuX2FkZENsYXNzKGUuZ2hvc3QsXCJ1aS1yZXNpemFibGUtZ2hvc3RcIiksdC51aUJhY2tDb21wYXQhPT0hMSYmXCJzdHJpbmdcIj09dHlwZW9mIGUub3B0aW9ucy5naG9zdCYmZS5naG9zdC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZ2hvc3QpLGUuZ2hvc3QuYXBwZW5kVG8oZS5oZWxwZXIpfSxyZXNpemU6ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLnJlc2l6YWJsZShcImluc3RhbmNlXCIpO2UuZ2hvc3QmJmUuZ2hvc3QuY3NzKHtwb3NpdGlvbjpcInJlbGF0aXZlXCIsaGVpZ2h0OmUuc2l6ZS5oZWlnaHQsd2lkdGg6ZS5zaXplLndpZHRofSl9LHN0b3A6ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLnJlc2l6YWJsZShcImluc3RhbmNlXCIpO2UuZ2hvc3QmJmUuaGVscGVyJiZlLmhlbHBlci5nZXQoMCkucmVtb3ZlQ2hpbGQoZS5naG9zdC5nZXQoMCkpfX0pLHQudWkucGx1Z2luLmFkZChcInJlc2l6YWJsZVwiLFwiZ3JpZFwiLHtyZXNpemU6ZnVuY3Rpb24oKXt2YXIgZSxpPXQodGhpcykucmVzaXphYmxlKFwiaW5zdGFuY2VcIikscz1pLm9wdGlvbnMsbj1pLnNpemUsbz1pLm9yaWdpbmFsU2l6ZSxhPWkub3JpZ2luYWxQb3NpdGlvbixyPWkuYXhpcyxoPVwibnVtYmVyXCI9PXR5cGVvZiBzLmdyaWQ/W3MuZ3JpZCxzLmdyaWRdOnMuZ3JpZCxsPWhbMF18fDEsYz1oWzFdfHwxLHU9TWF0aC5yb3VuZCgobi53aWR0aC1vLndpZHRoKS9sKSpsLGQ9TWF0aC5yb3VuZCgobi5oZWlnaHQtby5oZWlnaHQpL2MpKmMscD1vLndpZHRoK3UsZj1vLmhlaWdodCtkLGc9cy5tYXhXaWR0aCYmcD5zLm1heFdpZHRoLG09cy5tYXhIZWlnaHQmJmY+cy5tYXhIZWlnaHQsXz1zLm1pbldpZHRoJiZzLm1pbldpZHRoPnAsdj1zLm1pbkhlaWdodCYmcy5taW5IZWlnaHQ+ZjtzLmdyaWQ9aCxfJiYocCs9bCksdiYmKGYrPWMpLGcmJihwLT1sKSxtJiYoZi09YyksL14oc2V8c3xlKSQvLnRlc3Qocik/KGkuc2l6ZS53aWR0aD1wLGkuc2l6ZS5oZWlnaHQ9Zik6L14obmUpJC8udGVzdChyKT8oaS5zaXplLndpZHRoPXAsaS5zaXplLmhlaWdodD1mLGkucG9zaXRpb24udG9wPWEudG9wLWQpOi9eKHN3KSQvLnRlc3Qocik/KGkuc2l6ZS53aWR0aD1wLGkuc2l6ZS5oZWlnaHQ9ZixpLnBvc2l0aW9uLmxlZnQ9YS5sZWZ0LXUpOigoMD49Zi1jfHwwPj1wLWwpJiYoZT1pLl9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnModGhpcykpLGYtYz4wPyhpLnNpemUuaGVpZ2h0PWYsaS5wb3NpdGlvbi50b3A9YS50b3AtZCk6KGY9Yy1lLmhlaWdodCxpLnNpemUuaGVpZ2h0PWYsaS5wb3NpdGlvbi50b3A9YS50b3Arby5oZWlnaHQtZikscC1sPjA/KGkuc2l6ZS53aWR0aD1wLGkucG9zaXRpb24ubGVmdD1hLmxlZnQtdSk6KHA9bC1lLndpZHRoLGkuc2l6ZS53aWR0aD1wLGkucG9zaXRpb24ubGVmdD1hLmxlZnQrby53aWR0aC1wKSl9fSksdC51aS5yZXNpemFibGUsdC53aWRnZXQoXCJ1aS5kaWFsb2dcIix7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2FwcGVuZFRvOlwiYm9keVwiLGF1dG9PcGVuOiEwLGJ1dHRvbnM6W10sY2xhc3Nlczp7XCJ1aS1kaWFsb2dcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLWRpYWxvZy10aXRsZWJhclwiOlwidWktY29ybmVyLWFsbFwifSxjbG9zZU9uRXNjYXBlOiEwLGNsb3NlVGV4dDpcIkNsb3NlXCIsZHJhZ2dhYmxlOiEwLGhpZGU6bnVsbCxoZWlnaHQ6XCJhdXRvXCIsbWF4SGVpZ2h0Om51bGwsbWF4V2lkdGg6bnVsbCxtaW5IZWlnaHQ6MTUwLG1pbldpZHRoOjE1MCxtb2RhbDohMSxwb3NpdGlvbjp7bXk6XCJjZW50ZXJcIixhdDpcImNlbnRlclwiLG9mOndpbmRvdyxjb2xsaXNpb246XCJmaXRcIix1c2luZzpmdW5jdGlvbihlKXt2YXIgaT10KHRoaXMpLmNzcyhlKS5vZmZzZXQoKS50b3A7MD5pJiZ0KHRoaXMpLmNzcyhcInRvcFwiLGUudG9wLWkpfX0scmVzaXphYmxlOiEwLHNob3c6bnVsbCx0aXRsZTpudWxsLHdpZHRoOjMwMCxiZWZvcmVDbG9zZTpudWxsLGNsb3NlOm51bGwsZHJhZzpudWxsLGRyYWdTdGFydDpudWxsLGRyYWdTdG9wOm51bGwsZm9jdXM6bnVsbCxvcGVuOm51bGwscmVzaXplOm51bGwscmVzaXplU3RhcnQ6bnVsbCxyZXNpemVTdG9wOm51bGx9LHNpemVSZWxhdGVkT3B0aW9uczp7YnV0dG9uczohMCxoZWlnaHQ6ITAsbWF4SGVpZ2h0OiEwLG1heFdpZHRoOiEwLG1pbkhlaWdodDohMCxtaW5XaWR0aDohMCx3aWR0aDohMH0scmVzaXphYmxlUmVsYXRlZE9wdGlvbnM6e21heEhlaWdodDohMCxtYXhXaWR0aDohMCxtaW5IZWlnaHQ6ITAsbWluV2lkdGg6ITB9LF9jcmVhdGU6ZnVuY3Rpb24oKXt0aGlzLm9yaWdpbmFsQ3NzPXtkaXNwbGF5OnRoaXMuZWxlbWVudFswXS5zdHlsZS5kaXNwbGF5LHdpZHRoOnRoaXMuZWxlbWVudFswXS5zdHlsZS53aWR0aCxtaW5IZWlnaHQ6dGhpcy5lbGVtZW50WzBdLnN0eWxlLm1pbkhlaWdodCxtYXhIZWlnaHQ6dGhpcy5lbGVtZW50WzBdLnN0eWxlLm1heEhlaWdodCxoZWlnaHQ6dGhpcy5lbGVtZW50WzBdLnN0eWxlLmhlaWdodH0sdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXtwYXJlbnQ6dGhpcy5lbGVtZW50LnBhcmVudCgpLGluZGV4OnRoaXMuZWxlbWVudC5wYXJlbnQoKS5jaGlsZHJlbigpLmluZGV4KHRoaXMuZWxlbWVudCl9LHRoaXMub3JpZ2luYWxUaXRsZT10aGlzLmVsZW1lbnQuYXR0cihcInRpdGxlXCIpLG51bGw9PXRoaXMub3B0aW9ucy50aXRsZSYmbnVsbCE9dGhpcy5vcmlnaW5hbFRpdGxlJiYodGhpcy5vcHRpb25zLnRpdGxlPXRoaXMub3JpZ2luYWxUaXRsZSksdGhpcy5vcHRpb25zLmRpc2FibGVkJiYodGhpcy5vcHRpb25zLmRpc2FibGVkPSExKSx0aGlzLl9jcmVhdGVXcmFwcGVyKCksdGhpcy5lbGVtZW50LnNob3coKS5yZW1vdmVBdHRyKFwidGl0bGVcIikuYXBwZW5kVG8odGhpcy51aURpYWxvZyksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1kaWFsb2ctY29udGVudFwiLFwidWktd2lkZ2V0LWNvbnRlbnRcIiksdGhpcy5fY3JlYXRlVGl0bGViYXIoKSx0aGlzLl9jcmVhdGVCdXR0b25QYW5lKCksdGhpcy5vcHRpb25zLmRyYWdnYWJsZSYmdC5mbi5kcmFnZ2FibGUmJnRoaXMuX21ha2VEcmFnZ2FibGUoKSx0aGlzLm9wdGlvbnMucmVzaXphYmxlJiZ0LmZuLnJlc2l6YWJsZSYmdGhpcy5fbWFrZVJlc2l6YWJsZSgpLHRoaXMuX2lzT3Blbj0hMSx0aGlzLl90cmFja0ZvY3VzKCl9LF9pbml0OmZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmF1dG9PcGVuJiZ0aGlzLm9wZW4oKX0sX2FwcGVuZFRvOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zLmFwcGVuZFRvO3JldHVybiBlJiYoZS5qcXVlcnl8fGUubm9kZVR5cGUpP3QoZSk6dGhpcy5kb2N1bWVudC5maW5kKGV8fFwiYm9keVwiKS5lcSgwKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMub3JpZ2luYWxQb3NpdGlvbjt0aGlzLl91bnRyYWNrSW5zdGFuY2UoKSx0aGlzLl9kZXN0cm95T3ZlcmxheSgpLHRoaXMuZWxlbWVudC5yZW1vdmVVbmlxdWVJZCgpLmNzcyh0aGlzLm9yaWdpbmFsQ3NzKS5kZXRhY2goKSx0aGlzLnVpRGlhbG9nLnJlbW92ZSgpLHRoaXMub3JpZ2luYWxUaXRsZSYmdGhpcy5lbGVtZW50LmF0dHIoXCJ0aXRsZVwiLHRoaXMub3JpZ2luYWxUaXRsZSksdD1lLnBhcmVudC5jaGlsZHJlbigpLmVxKGUuaW5kZXgpLHQubGVuZ3RoJiZ0WzBdIT09dGhpcy5lbGVtZW50WzBdP3QuYmVmb3JlKHRoaXMuZWxlbWVudCk6ZS5wYXJlbnQuYXBwZW5kKHRoaXMuZWxlbWVudCl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnVpRGlhbG9nXG59LGRpc2FibGU6dC5ub29wLGVuYWJsZTp0Lm5vb3AsY2xvc2U6ZnVuY3Rpb24oZSl7dmFyIGk9dGhpczt0aGlzLl9pc09wZW4mJnRoaXMuX3RyaWdnZXIoXCJiZWZvcmVDbG9zZVwiLGUpIT09ITEmJih0aGlzLl9pc09wZW49ITEsdGhpcy5fZm9jdXNlZEVsZW1lbnQ9bnVsbCx0aGlzLl9kZXN0cm95T3ZlcmxheSgpLHRoaXMuX3VudHJhY2tJbnN0YW5jZSgpLHRoaXMub3BlbmVyLmZpbHRlcihcIjpmb2N1c2FibGVcIikudHJpZ2dlcihcImZvY3VzXCIpLmxlbmd0aHx8dC51aS5zYWZlQmx1cih0LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pKSx0aGlzLl9oaWRlKHRoaXMudWlEaWFsb2csdGhpcy5vcHRpb25zLmhpZGUsZnVuY3Rpb24oKXtpLl90cmlnZ2VyKFwiY2xvc2VcIixlKX0pKX0saXNPcGVuOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzT3Blbn0sbW92ZVRvVG9wOmZ1bmN0aW9uKCl7dGhpcy5fbW92ZVRvVG9wKCl9LF9tb3ZlVG9Ub3A6ZnVuY3Rpb24oZSxpKXt2YXIgcz0hMSxuPXRoaXMudWlEaWFsb2cuc2libGluZ3MoXCIudWktZnJvbnQ6dmlzaWJsZVwiKS5tYXAoZnVuY3Rpb24oKXtyZXR1cm4rdCh0aGlzKS5jc3MoXCJ6LWluZGV4XCIpfSkuZ2V0KCksbz1NYXRoLm1heC5hcHBseShudWxsLG4pO3JldHVybiBvPj0rdGhpcy51aURpYWxvZy5jc3MoXCJ6LWluZGV4XCIpJiYodGhpcy51aURpYWxvZy5jc3MoXCJ6LWluZGV4XCIsbysxKSxzPSEwKSxzJiYhaSYmdGhpcy5fdHJpZ2dlcihcImZvY3VzXCIsZSksc30sb3BlbjpmdW5jdGlvbigpe3ZhciBlPXRoaXM7cmV0dXJuIHRoaXMuX2lzT3Blbj8odGhpcy5fbW92ZVRvVG9wKCkmJnRoaXMuX2ZvY3VzVGFiYmFibGUoKSx2b2lkIDApOih0aGlzLl9pc09wZW49ITAsdGhpcy5vcGVuZXI9dCh0LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pKSx0aGlzLl9zaXplKCksdGhpcy5fcG9zaXRpb24oKSx0aGlzLl9jcmVhdGVPdmVybGF5KCksdGhpcy5fbW92ZVRvVG9wKG51bGwsITApLHRoaXMub3ZlcmxheSYmdGhpcy5vdmVybGF5LmNzcyhcInotaW5kZXhcIix0aGlzLnVpRGlhbG9nLmNzcyhcInotaW5kZXhcIiktMSksdGhpcy5fc2hvdyh0aGlzLnVpRGlhbG9nLHRoaXMub3B0aW9ucy5zaG93LGZ1bmN0aW9uKCl7ZS5fZm9jdXNUYWJiYWJsZSgpLGUuX3RyaWdnZXIoXCJmb2N1c1wiKX0pLHRoaXMuX21ha2VGb2N1c1RhcmdldCgpLHRoaXMuX3RyaWdnZXIoXCJvcGVuXCIpLHZvaWQgMCl9LF9mb2N1c1RhYmJhYmxlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fZm9jdXNlZEVsZW1lbnQ7dHx8KHQ9dGhpcy5lbGVtZW50LmZpbmQoXCJbYXV0b2ZvY3VzXVwiKSksdC5sZW5ndGh8fCh0PXRoaXMuZWxlbWVudC5maW5kKFwiOnRhYmJhYmxlXCIpKSx0Lmxlbmd0aHx8KHQ9dGhpcy51aURpYWxvZ0J1dHRvblBhbmUuZmluZChcIjp0YWJiYWJsZVwiKSksdC5sZW5ndGh8fCh0PXRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLmZpbHRlcihcIjp0YWJiYWJsZVwiKSksdC5sZW5ndGh8fCh0PXRoaXMudWlEaWFsb2cpLHQuZXEoMCkudHJpZ2dlcihcImZvY3VzXCIpfSxfa2VlcEZvY3VzOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkoKXt2YXIgZT10LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pLGk9dGhpcy51aURpYWxvZ1swXT09PWV8fHQuY29udGFpbnModGhpcy51aURpYWxvZ1swXSxlKTtpfHx0aGlzLl9mb2N1c1RhYmJhYmxlKCl9ZS5wcmV2ZW50RGVmYXVsdCgpLGkuY2FsbCh0aGlzKSx0aGlzLl9kZWxheShpKX0sX2NyZWF0ZVdyYXBwZXI6ZnVuY3Rpb24oKXt0aGlzLnVpRGlhbG9nPXQoXCI8ZGl2PlwiKS5oaWRlKCkuYXR0cih7dGFiSW5kZXg6LTEscm9sZTpcImRpYWxvZ1wifSkuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSksdGhpcy5fYWRkQ2xhc3ModGhpcy51aURpYWxvZyxcInVpLWRpYWxvZ1wiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLWZyb250XCIpLHRoaXMuX29uKHRoaXMudWlEaWFsb2cse2tleWRvd246ZnVuY3Rpb24oZSl7aWYodGhpcy5vcHRpb25zLmNsb3NlT25Fc2NhcGUmJiFlLmlzRGVmYXVsdFByZXZlbnRlZCgpJiZlLmtleUNvZGUmJmUua2V5Q29kZT09PXQudWkua2V5Q29kZS5FU0NBUEUpcmV0dXJuIGUucHJldmVudERlZmF1bHQoKSx0aGlzLmNsb3NlKGUpLHZvaWQgMDtpZihlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuVEFCJiYhZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSl7dmFyIGk9dGhpcy51aURpYWxvZy5maW5kKFwiOnRhYmJhYmxlXCIpLHM9aS5maWx0ZXIoXCI6Zmlyc3RcIiksbj1pLmZpbHRlcihcIjpsYXN0XCIpO2UudGFyZ2V0IT09blswXSYmZS50YXJnZXQhPT10aGlzLnVpRGlhbG9nWzBdfHxlLnNoaWZ0S2V5P2UudGFyZ2V0IT09c1swXSYmZS50YXJnZXQhPT10aGlzLnVpRGlhbG9nWzBdfHwhZS5zaGlmdEtleXx8KHRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7bi50cmlnZ2VyKFwiZm9jdXNcIil9KSxlLnByZXZlbnREZWZhdWx0KCkpOih0aGlzLl9kZWxheShmdW5jdGlvbigpe3MudHJpZ2dlcihcImZvY3VzXCIpfSksZS5wcmV2ZW50RGVmYXVsdCgpKX19LG1vdXNlZG93bjpmdW5jdGlvbih0KXt0aGlzLl9tb3ZlVG9Ub3AodCkmJnRoaXMuX2ZvY3VzVGFiYmFibGUoKX19KSx0aGlzLmVsZW1lbnQuZmluZChcIlthcmlhLWRlc2NyaWJlZGJ5XVwiKS5sZW5ndGh8fHRoaXMudWlEaWFsb2cuYXR0cih7XCJhcmlhLWRlc2NyaWJlZGJ5XCI6dGhpcy5lbGVtZW50LnVuaXF1ZUlkKCkuYXR0cihcImlkXCIpfSl9LF9jcmVhdGVUaXRsZWJhcjpmdW5jdGlvbigpe3ZhciBlO3RoaXMudWlEaWFsb2dUaXRsZWJhcj10KFwiPGRpdj5cIiksdGhpcy5fYWRkQ2xhc3ModGhpcy51aURpYWxvZ1RpdGxlYmFyLFwidWktZGlhbG9nLXRpdGxlYmFyXCIsXCJ1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeFwiKSx0aGlzLl9vbih0aGlzLnVpRGlhbG9nVGl0bGViYXIse21vdXNlZG93bjpmdW5jdGlvbihlKXt0KGUudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLWRpYWxvZy10aXRsZWJhci1jbG9zZVwiKXx8dGhpcy51aURpYWxvZy50cmlnZ2VyKFwiZm9jdXNcIil9fSksdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2U9dChcIjxidXR0b24gdHlwZT0nYnV0dG9uJz48L2J1dHRvbj5cIikuYnV0dG9uKHtsYWJlbDp0KFwiPGE+XCIpLnRleHQodGhpcy5vcHRpb25zLmNsb3NlVGV4dCkuaHRtbCgpLGljb246XCJ1aS1pY29uLWNsb3NldGhpY2tcIixzaG93TGFiZWw6ITF9KS5hcHBlbmRUbyh0aGlzLnVpRGlhbG9nVGl0bGViYXIpLHRoaXMuX2FkZENsYXNzKHRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLFwidWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlXCIpLHRoaXMuX29uKHRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLHtjbGljazpmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCksdGhpcy5jbG9zZSh0KX19KSxlPXQoXCI8c3Bhbj5cIikudW5pcXVlSWQoKS5wcmVwZW5kVG8odGhpcy51aURpYWxvZ1RpdGxlYmFyKSx0aGlzLl9hZGRDbGFzcyhlLFwidWktZGlhbG9nLXRpdGxlXCIpLHRoaXMuX3RpdGxlKGUpLHRoaXMudWlEaWFsb2dUaXRsZWJhci5wcmVwZW5kVG8odGhpcy51aURpYWxvZyksdGhpcy51aURpYWxvZy5hdHRyKHtcImFyaWEtbGFiZWxsZWRieVwiOmUuYXR0cihcImlkXCIpfSl9LF90aXRsZTpmdW5jdGlvbih0KXt0aGlzLm9wdGlvbnMudGl0bGU/dC50ZXh0KHRoaXMub3B0aW9ucy50aXRsZSk6dC5odG1sKFwiJiMxNjA7XCIpfSxfY3JlYXRlQnV0dG9uUGFuZTpmdW5jdGlvbigpe3RoaXMudWlEaWFsb2dCdXR0b25QYW5lPXQoXCI8ZGl2PlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnVpRGlhbG9nQnV0dG9uUGFuZSxcInVpLWRpYWxvZy1idXR0b25wYW5lXCIsXCJ1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXhcIiksdGhpcy51aUJ1dHRvblNldD10KFwiPGRpdj5cIikuYXBwZW5kVG8odGhpcy51aURpYWxvZ0J1dHRvblBhbmUpLHRoaXMuX2FkZENsYXNzKHRoaXMudWlCdXR0b25TZXQsXCJ1aS1kaWFsb2ctYnV0dG9uc2V0XCIpLHRoaXMuX2NyZWF0ZUJ1dHRvbnMoKX0sX2NyZWF0ZUJ1dHRvbnM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLGk9dGhpcy5vcHRpb25zLmJ1dHRvbnM7cmV0dXJuIHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLnJlbW92ZSgpLHRoaXMudWlCdXR0b25TZXQuZW1wdHkoKSx0LmlzRW1wdHlPYmplY3QoaSl8fHQuaXNBcnJheShpKSYmIWkubGVuZ3RoPyh0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLnVpRGlhbG9nLFwidWktZGlhbG9nLWJ1dHRvbnNcIiksdm9pZCAwKToodC5lYWNoKGksZnVuY3Rpb24oaSxzKXt2YXIgbixvO3M9dC5pc0Z1bmN0aW9uKHMpP3tjbGljazpzLHRleHQ6aX06cyxzPXQuZXh0ZW5kKHt0eXBlOlwiYnV0dG9uXCJ9LHMpLG49cy5jbGljayxvPXtpY29uOnMuaWNvbixpY29uUG9zaXRpb246cy5pY29uUG9zaXRpb24sc2hvd0xhYmVsOnMuc2hvd0xhYmVsLGljb25zOnMuaWNvbnMsdGV4dDpzLnRleHR9LGRlbGV0ZSBzLmNsaWNrLGRlbGV0ZSBzLmljb24sZGVsZXRlIHMuaWNvblBvc2l0aW9uLGRlbGV0ZSBzLnNob3dMYWJlbCxkZWxldGUgcy5pY29ucyxcImJvb2xlYW5cIj09dHlwZW9mIHMudGV4dCYmZGVsZXRlIHMudGV4dCx0KFwiPGJ1dHRvbj48L2J1dHRvbj5cIixzKS5idXR0b24obykuYXBwZW5kVG8oZS51aUJ1dHRvblNldCkub24oXCJjbGlja1wiLGZ1bmN0aW9uKCl7bi5hcHBseShlLmVsZW1lbnRbMF0sYXJndW1lbnRzKX0pfSksdGhpcy5fYWRkQ2xhc3ModGhpcy51aURpYWxvZyxcInVpLWRpYWxvZy1idXR0b25zXCIpLHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLmFwcGVuZFRvKHRoaXMudWlEaWFsb2cpLHZvaWQgMCl9LF9tYWtlRHJhZ2dhYmxlOmZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm57cG9zaXRpb246dC5wb3NpdGlvbixvZmZzZXQ6dC5vZmZzZXR9fXZhciBpPXRoaXMscz10aGlzLm9wdGlvbnM7dGhpcy51aURpYWxvZy5kcmFnZ2FibGUoe2NhbmNlbDpcIi51aS1kaWFsb2ctY29udGVudCwgLnVpLWRpYWxvZy10aXRsZWJhci1jbG9zZVwiLGhhbmRsZTpcIi51aS1kaWFsb2ctdGl0bGViYXJcIixjb250YWlubWVudDpcImRvY3VtZW50XCIsc3RhcnQ6ZnVuY3Rpb24ocyxuKXtpLl9hZGRDbGFzcyh0KHRoaXMpLFwidWktZGlhbG9nLWRyYWdnaW5nXCIpLGkuX2Jsb2NrRnJhbWVzKCksaS5fdHJpZ2dlcihcImRyYWdTdGFydFwiLHMsZShuKSl9LGRyYWc6ZnVuY3Rpb24odCxzKXtpLl90cmlnZ2VyKFwiZHJhZ1wiLHQsZShzKSl9LHN0b3A6ZnVuY3Rpb24obixvKXt2YXIgYT1vLm9mZnNldC5sZWZ0LWkuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLHI9by5vZmZzZXQudG9wLWkuZG9jdW1lbnQuc2Nyb2xsVG9wKCk7cy5wb3NpdGlvbj17bXk6XCJsZWZ0IHRvcFwiLGF0OlwibGVmdFwiKyhhPj0wP1wiK1wiOlwiXCIpK2ErXCIgXCIrXCJ0b3BcIisocj49MD9cIitcIjpcIlwiKStyLG9mOmkud2luZG93fSxpLl9yZW1vdmVDbGFzcyh0KHRoaXMpLFwidWktZGlhbG9nLWRyYWdnaW5nXCIpLGkuX3VuYmxvY2tGcmFtZXMoKSxpLl90cmlnZ2VyKFwiZHJhZ1N0b3BcIixuLGUobykpfX0pfSxfbWFrZVJlc2l6YWJsZTpmdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7cmV0dXJue29yaWdpbmFsUG9zaXRpb246dC5vcmlnaW5hbFBvc2l0aW9uLG9yaWdpbmFsU2l6ZTp0Lm9yaWdpbmFsU2l6ZSxwb3NpdGlvbjp0LnBvc2l0aW9uLHNpemU6dC5zaXplfX12YXIgaT10aGlzLHM9dGhpcy5vcHRpb25zLG49cy5yZXNpemFibGUsbz10aGlzLnVpRGlhbG9nLmNzcyhcInBvc2l0aW9uXCIpLGE9XCJzdHJpbmdcIj09dHlwZW9mIG4/bjpcIm4sZSxzLHcsc2Usc3csbmUsbndcIjt0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSh7Y2FuY2VsOlwiLnVpLWRpYWxvZy1jb250ZW50XCIsY29udGFpbm1lbnQ6XCJkb2N1bWVudFwiLGFsc29SZXNpemU6dGhpcy5lbGVtZW50LG1heFdpZHRoOnMubWF4V2lkdGgsbWF4SGVpZ2h0OnMubWF4SGVpZ2h0LG1pbldpZHRoOnMubWluV2lkdGgsbWluSGVpZ2h0OnRoaXMuX21pbkhlaWdodCgpLGhhbmRsZXM6YSxzdGFydDpmdW5jdGlvbihzLG4pe2kuX2FkZENsYXNzKHQodGhpcyksXCJ1aS1kaWFsb2ctcmVzaXppbmdcIiksaS5fYmxvY2tGcmFtZXMoKSxpLl90cmlnZ2VyKFwicmVzaXplU3RhcnRcIixzLGUobikpfSxyZXNpemU6ZnVuY3Rpb24odCxzKXtpLl90cmlnZ2VyKFwicmVzaXplXCIsdCxlKHMpKX0sc3RvcDpmdW5jdGlvbihuLG8pe3ZhciBhPWkudWlEaWFsb2cub2Zmc2V0KCkscj1hLmxlZnQtaS5kb2N1bWVudC5zY3JvbGxMZWZ0KCksaD1hLnRvcC1pLmRvY3VtZW50LnNjcm9sbFRvcCgpO3MuaGVpZ2h0PWkudWlEaWFsb2cuaGVpZ2h0KCkscy53aWR0aD1pLnVpRGlhbG9nLndpZHRoKCkscy5wb3NpdGlvbj17bXk6XCJsZWZ0IHRvcFwiLGF0OlwibGVmdFwiKyhyPj0wP1wiK1wiOlwiXCIpK3IrXCIgXCIrXCJ0b3BcIisoaD49MD9cIitcIjpcIlwiKStoLG9mOmkud2luZG93fSxpLl9yZW1vdmVDbGFzcyh0KHRoaXMpLFwidWktZGlhbG9nLXJlc2l6aW5nXCIpLGkuX3VuYmxvY2tGcmFtZXMoKSxpLl90cmlnZ2VyKFwicmVzaXplU3RvcFwiLG4sZShvKSl9fSkuY3NzKFwicG9zaXRpb25cIixvKX0sX3RyYWNrRm9jdXM6ZnVuY3Rpb24oKXt0aGlzLl9vbih0aGlzLndpZGdldCgpLHtmb2N1c2luOmZ1bmN0aW9uKGUpe3RoaXMuX21ha2VGb2N1c1RhcmdldCgpLHRoaXMuX2ZvY3VzZWRFbGVtZW50PXQoZS50YXJnZXQpfX0pfSxfbWFrZUZvY3VzVGFyZ2V0OmZ1bmN0aW9uKCl7dGhpcy5fdW50cmFja0luc3RhbmNlKCksdGhpcy5fdHJhY2tpbmdJbnN0YW5jZXMoKS51bnNoaWZ0KHRoaXMpfSxfdW50cmFja0luc3RhbmNlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fdHJhY2tpbmdJbnN0YW5jZXMoKSxpPXQuaW5BcnJheSh0aGlzLGUpOy0xIT09aSYmZS5zcGxpY2UoaSwxKX0sX3RyYWNraW5nSW5zdGFuY2VzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5kb2N1bWVudC5kYXRhKFwidWktZGlhbG9nLWluc3RhbmNlc1wiKTtyZXR1cm4gdHx8KHQ9W10sdGhpcy5kb2N1bWVudC5kYXRhKFwidWktZGlhbG9nLWluc3RhbmNlc1wiLHQpKSx0fSxfbWluSGVpZ2h0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zO3JldHVyblwiYXV0b1wiPT09dC5oZWlnaHQ/dC5taW5IZWlnaHQ6TWF0aC5taW4odC5taW5IZWlnaHQsdC5oZWlnaHQpfSxfcG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnVpRGlhbG9nLmlzKFwiOnZpc2libGVcIik7dHx8dGhpcy51aURpYWxvZy5zaG93KCksdGhpcy51aURpYWxvZy5wb3NpdGlvbih0aGlzLm9wdGlvbnMucG9zaXRpb24pLHR8fHRoaXMudWlEaWFsb2cuaGlkZSgpfSxfc2V0T3B0aW9uczpmdW5jdGlvbihlKXt2YXIgaT10aGlzLHM9ITEsbj17fTt0LmVhY2goZSxmdW5jdGlvbih0LGUpe2kuX3NldE9wdGlvbih0LGUpLHQgaW4gaS5zaXplUmVsYXRlZE9wdGlvbnMmJihzPSEwKSx0IGluIGkucmVzaXphYmxlUmVsYXRlZE9wdGlvbnMmJihuW3RdPWUpfSkscyYmKHRoaXMuX3NpemUoKSx0aGlzLl9wb3NpdGlvbigpKSx0aGlzLnVpRGlhbG9nLmlzKFwiOmRhdGEodWktcmVzaXphYmxlKVwiKSYmdGhpcy51aURpYWxvZy5yZXNpemFibGUoXCJvcHRpb25cIixuKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLGkpe3ZhciBzLG4sbz10aGlzLnVpRGlhbG9nO1wiZGlzYWJsZWRcIiE9PWUmJih0aGlzLl9zdXBlcihlLGkpLFwiYXBwZW5kVG9cIj09PWUmJnRoaXMudWlEaWFsb2cuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSksXCJidXR0b25zXCI9PT1lJiZ0aGlzLl9jcmVhdGVCdXR0b25zKCksXCJjbG9zZVRleHRcIj09PWUmJnRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLmJ1dHRvbih7bGFiZWw6dChcIjxhPlwiKS50ZXh0KFwiXCIrdGhpcy5vcHRpb25zLmNsb3NlVGV4dCkuaHRtbCgpfSksXCJkcmFnZ2FibGVcIj09PWUmJihzPW8uaXMoXCI6ZGF0YSh1aS1kcmFnZ2FibGUpXCIpLHMmJiFpJiZvLmRyYWdnYWJsZShcImRlc3Ryb3lcIiksIXMmJmkmJnRoaXMuX21ha2VEcmFnZ2FibGUoKSksXCJwb3NpdGlvblwiPT09ZSYmdGhpcy5fcG9zaXRpb24oKSxcInJlc2l6YWJsZVwiPT09ZSYmKG49by5pcyhcIjpkYXRhKHVpLXJlc2l6YWJsZSlcIiksbiYmIWkmJm8ucmVzaXphYmxlKFwiZGVzdHJveVwiKSxuJiZcInN0cmluZ1wiPT10eXBlb2YgaSYmby5yZXNpemFibGUoXCJvcHRpb25cIixcImhhbmRsZXNcIixpKSxufHxpPT09ITF8fHRoaXMuX21ha2VSZXNpemFibGUoKSksXCJ0aXRsZVwiPT09ZSYmdGhpcy5fdGl0bGUodGhpcy51aURpYWxvZ1RpdGxlYmFyLmZpbmQoXCIudWktZGlhbG9nLXRpdGxlXCIpKSl9LF9zaXplOmZ1bmN0aW9uKCl7dmFyIHQsZSxpLHM9dGhpcy5vcHRpb25zO3RoaXMuZWxlbWVudC5zaG93KCkuY3NzKHt3aWR0aDpcImF1dG9cIixtaW5IZWlnaHQ6MCxtYXhIZWlnaHQ6XCJub25lXCIsaGVpZ2h0OjB9KSxzLm1pbldpZHRoPnMud2lkdGgmJihzLndpZHRoPXMubWluV2lkdGgpLHQ9dGhpcy51aURpYWxvZy5jc3Moe2hlaWdodDpcImF1dG9cIix3aWR0aDpzLndpZHRofSkub3V0ZXJIZWlnaHQoKSxlPU1hdGgubWF4KDAscy5taW5IZWlnaHQtdCksaT1cIm51bWJlclwiPT10eXBlb2Ygcy5tYXhIZWlnaHQ/TWF0aC5tYXgoMCxzLm1heEhlaWdodC10KTpcIm5vbmVcIixcImF1dG9cIj09PXMuaGVpZ2h0P3RoaXMuZWxlbWVudC5jc3Moe21pbkhlaWdodDplLG1heEhlaWdodDppLGhlaWdodDpcImF1dG9cIn0pOnRoaXMuZWxlbWVudC5oZWlnaHQoTWF0aC5tYXgoMCxzLmhlaWdodC10KSksdGhpcy51aURpYWxvZy5pcyhcIjpkYXRhKHVpLXJlc2l6YWJsZSlcIikmJnRoaXMudWlEaWFsb2cucmVzaXphYmxlKFwib3B0aW9uXCIsXCJtaW5IZWlnaHRcIix0aGlzLl9taW5IZWlnaHQoKSl9LF9ibG9ja0ZyYW1lczpmdW5jdGlvbigpe3RoaXMuaWZyYW1lQmxvY2tzPXRoaXMuZG9jdW1lbnQuZmluZChcImlmcmFtZVwiKS5tYXAoZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpO3JldHVybiB0KFwiPGRpdj5cIikuY3NzKHtwb3NpdGlvbjpcImFic29sdXRlXCIsd2lkdGg6ZS5vdXRlcldpZHRoKCksaGVpZ2h0OmUub3V0ZXJIZWlnaHQoKX0pLmFwcGVuZFRvKGUucGFyZW50KCkpLm9mZnNldChlLm9mZnNldCgpKVswXX0pfSxfdW5ibG9ja0ZyYW1lczpmdW5jdGlvbigpe3RoaXMuaWZyYW1lQmxvY2tzJiYodGhpcy5pZnJhbWVCbG9ja3MucmVtb3ZlKCksZGVsZXRlIHRoaXMuaWZyYW1lQmxvY2tzKX0sX2FsbG93SW50ZXJhY3Rpb246ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktZGlhbG9nXCIpLmxlbmd0aD8hMDohIXQoZS50YXJnZXQpLmNsb3Nlc3QoXCIudWktZGF0ZXBpY2tlclwiKS5sZW5ndGh9LF9jcmVhdGVPdmVybGF5OmZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLm1vZGFsKXt2YXIgZT0hMDt0aGlzLl9kZWxheShmdW5jdGlvbigpe2U9ITF9KSx0aGlzLmRvY3VtZW50LmRhdGEoXCJ1aS1kaWFsb2ctb3ZlcmxheXNcIil8fHRoaXMuX29uKHRoaXMuZG9jdW1lbnQse2ZvY3VzaW46ZnVuY3Rpb24odCl7ZXx8dGhpcy5fYWxsb3dJbnRlcmFjdGlvbih0KXx8KHQucHJldmVudERlZmF1bHQoKSx0aGlzLl90cmFja2luZ0luc3RhbmNlcygpWzBdLl9mb2N1c1RhYmJhYmxlKCkpfX0pLHRoaXMub3ZlcmxheT10KFwiPGRpdj5cIikuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSksdGhpcy5fYWRkQ2xhc3ModGhpcy5vdmVybGF5LG51bGwsXCJ1aS13aWRnZXQtb3ZlcmxheSB1aS1mcm9udFwiKSx0aGlzLl9vbih0aGlzLm92ZXJsYXkse21vdXNlZG93bjpcIl9rZWVwRm9jdXNcIn0pLHRoaXMuZG9jdW1lbnQuZGF0YShcInVpLWRpYWxvZy1vdmVybGF5c1wiLCh0aGlzLmRvY3VtZW50LmRhdGEoXCJ1aS1kaWFsb2ctb3ZlcmxheXNcIil8fDApKzEpfX0sX2Rlc3Ryb3lPdmVybGF5OmZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLm1vZGFsJiZ0aGlzLm92ZXJsYXkpe3ZhciB0PXRoaXMuZG9jdW1lbnQuZGF0YShcInVpLWRpYWxvZy1vdmVybGF5c1wiKS0xO3Q/dGhpcy5kb2N1bWVudC5kYXRhKFwidWktZGlhbG9nLW92ZXJsYXlzXCIsdCk6KHRoaXMuX29mZih0aGlzLmRvY3VtZW50LFwiZm9jdXNpblwiKSx0aGlzLmRvY3VtZW50LnJlbW92ZURhdGEoXCJ1aS1kaWFsb2ctb3ZlcmxheXNcIikpLHRoaXMub3ZlcmxheS5yZW1vdmUoKSx0aGlzLm92ZXJsYXk9bnVsbH19fSksdC51aUJhY2tDb21wYXQhPT0hMSYmdC53aWRnZXQoXCJ1aS5kaWFsb2dcIix0LnVpLmRpYWxvZyx7b3B0aW9uczp7ZGlhbG9nQ2xhc3M6XCJcIn0sX2NyZWF0ZVdyYXBwZXI6ZnVuY3Rpb24oKXt0aGlzLl9zdXBlcigpLHRoaXMudWlEaWFsb2cuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmRpYWxvZ0NsYXNzKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe1wiZGlhbG9nQ2xhc3NcIj09PXQmJnRoaXMudWlEaWFsb2cucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmRpYWxvZ0NsYXNzKS5hZGRDbGFzcyhlKSx0aGlzLl9zdXBlckFwcGx5KGFyZ3VtZW50cyl9fSksdC51aS5kaWFsb2csdC53aWRnZXQoXCJ1aS5kcm9wcGFibGVcIix7dmVyc2lvbjpcIjEuMTIuMVwiLHdpZGdldEV2ZW50UHJlZml4OlwiZHJvcFwiLG9wdGlvbnM6e2FjY2VwdDpcIipcIixhZGRDbGFzc2VzOiEwLGdyZWVkeTohMSxzY29wZTpcImRlZmF1bHRcIix0b2xlcmFuY2U6XCJpbnRlcnNlY3RcIixhY3RpdmF0ZTpudWxsLGRlYWN0aXZhdGU6bnVsbCxkcm9wOm51bGwsb3V0Om51bGwsb3ZlcjpudWxsfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dmFyIGUsaT10aGlzLm9wdGlvbnMscz1pLmFjY2VwdDt0aGlzLmlzb3Zlcj0hMSx0aGlzLmlzb3V0PSEwLHRoaXMuYWNjZXB0PXQuaXNGdW5jdGlvbihzKT9zOmZ1bmN0aW9uKHQpe3JldHVybiB0LmlzKHMpfSx0aGlzLnByb3BvcnRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KGU9YXJndW1lbnRzWzBdLHZvaWQgMCk6ZT9lOmU9e3dpZHRoOnRoaXMuZWxlbWVudFswXS5vZmZzZXRXaWR0aCxoZWlnaHQ6dGhpcy5lbGVtZW50WzBdLm9mZnNldEhlaWdodH19LHRoaXMuX2FkZFRvTWFuYWdlcihpLnNjb3BlKSxpLmFkZENsYXNzZXMmJnRoaXMuX2FkZENsYXNzKFwidWktZHJvcHBhYmxlXCIpfSxfYWRkVG9NYW5hZ2VyOmZ1bmN0aW9uKGUpe3QudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbZV09dC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1tlXXx8W10sdC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1tlXS5wdXNoKHRoaXMpfSxfc3BsaWNlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO3QubGVuZ3RoPmU7ZSsrKXRbZV09PT10aGlzJiZ0LnNwbGljZShlLDEpfSxfZGVzdHJveTpmdW5jdGlvbigpe3ZhciBlPXQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbdGhpcy5vcHRpb25zLnNjb3BlXTt0aGlzLl9zcGxpY2UoZSl9LF9zZXRPcHRpb246ZnVuY3Rpb24oZSxpKXtpZihcImFjY2VwdFwiPT09ZSl0aGlzLmFjY2VwdD10LmlzRnVuY3Rpb24oaSk/aTpmdW5jdGlvbih0KXtyZXR1cm4gdC5pcyhpKX07ZWxzZSBpZihcInNjb3BlXCI9PT1lKXt2YXIgcz10LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW3RoaXMub3B0aW9ucy5zY29wZV07dGhpcy5fc3BsaWNlKHMpLHRoaXMuX2FkZFRvTWFuYWdlcihpKX10aGlzLl9zdXBlcihlLGkpfSxfYWN0aXZhdGU6ZnVuY3Rpb24oZSl7dmFyIGk9dC51aS5kZG1hbmFnZXIuY3VycmVudDt0aGlzLl9hZGRBY3RpdmVDbGFzcygpLGkmJnRoaXMuX3RyaWdnZXIoXCJhY3RpdmF0ZVwiLGUsdGhpcy51aShpKSl9LF9kZWFjdGl2YXRlOmZ1bmN0aW9uKGUpe3ZhciBpPXQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7dGhpcy5fcmVtb3ZlQWN0aXZlQ2xhc3MoKSxpJiZ0aGlzLl90cmlnZ2VyKFwiZGVhY3RpdmF0ZVwiLGUsdGhpcy51aShpKSl9LF9vdmVyOmZ1bmN0aW9uKGUpe3ZhciBpPXQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7aSYmKGkuY3VycmVudEl0ZW18fGkuZWxlbWVudClbMF0hPT10aGlzLmVsZW1lbnRbMF0mJnRoaXMuYWNjZXB0LmNhbGwodGhpcy5lbGVtZW50WzBdLGkuY3VycmVudEl0ZW18fGkuZWxlbWVudCkmJih0aGlzLl9hZGRIb3ZlckNsYXNzKCksdGhpcy5fdHJpZ2dlcihcIm92ZXJcIixlLHRoaXMudWkoaSkpKX0sX291dDpmdW5jdGlvbihlKXt2YXIgaT10LnVpLmRkbWFuYWdlci5jdXJyZW50O2kmJihpLmN1cnJlbnRJdGVtfHxpLmVsZW1lbnQpWzBdIT09dGhpcy5lbGVtZW50WzBdJiZ0aGlzLmFjY2VwdC5jYWxsKHRoaXMuZWxlbWVudFswXSxpLmN1cnJlbnRJdGVtfHxpLmVsZW1lbnQpJiYodGhpcy5fcmVtb3ZlSG92ZXJDbGFzcygpLHRoaXMuX3RyaWdnZXIoXCJvdXRcIixlLHRoaXMudWkoaSkpKX0sX2Ryb3A6ZnVuY3Rpb24oZSxpKXt2YXIgcz1pfHx0LnVpLmRkbWFuYWdlci5jdXJyZW50LG49ITE7cmV0dXJuIHMmJihzLmN1cnJlbnRJdGVtfHxzLmVsZW1lbnQpWzBdIT09dGhpcy5lbGVtZW50WzBdPyh0aGlzLmVsZW1lbnQuZmluZChcIjpkYXRhKHVpLWRyb3BwYWJsZSlcIikubm90KFwiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZ1wiKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9dCh0aGlzKS5kcm9wcGFibGUoXCJpbnN0YW5jZVwiKTtyZXR1cm4gaS5vcHRpb25zLmdyZWVkeSYmIWkub3B0aW9ucy5kaXNhYmxlZCYmaS5vcHRpb25zLnNjb3BlPT09cy5vcHRpb25zLnNjb3BlJiZpLmFjY2VwdC5jYWxsKGkuZWxlbWVudFswXSxzLmN1cnJlbnRJdGVtfHxzLmVsZW1lbnQpJiZ2KHMsdC5leHRlbmQoaSx7b2Zmc2V0OmkuZWxlbWVudC5vZmZzZXQoKX0pLGkub3B0aW9ucy50b2xlcmFuY2UsZSk/KG49ITAsITEpOnZvaWQgMH0pLG4/ITE6dGhpcy5hY2NlcHQuY2FsbCh0aGlzLmVsZW1lbnRbMF0scy5jdXJyZW50SXRlbXx8cy5lbGVtZW50KT8odGhpcy5fcmVtb3ZlQWN0aXZlQ2xhc3MoKSx0aGlzLl9yZW1vdmVIb3ZlckNsYXNzKCksdGhpcy5fdHJpZ2dlcihcImRyb3BcIixlLHRoaXMudWkocykpLHRoaXMuZWxlbWVudCk6ITEpOiExfSx1aTpmdW5jdGlvbih0KXtyZXR1cm57ZHJhZ2dhYmxlOnQuY3VycmVudEl0ZW18fHQuZWxlbWVudCxoZWxwZXI6dC5oZWxwZXIscG9zaXRpb246dC5wb3NpdGlvbixvZmZzZXQ6dC5wb3NpdGlvbkFic319LF9hZGRIb3ZlckNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fYWRkQ2xhc3MoXCJ1aS1kcm9wcGFibGUtaG92ZXJcIil9LF9yZW1vdmVIb3ZlckNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlQ2xhc3MoXCJ1aS1kcm9wcGFibGUtaG92ZXJcIil9LF9hZGRBY3RpdmVDbGFzczpmdW5jdGlvbigpe3RoaXMuX2FkZENsYXNzKFwidWktZHJvcHBhYmxlLWFjdGl2ZVwiKX0sX3JlbW92ZUFjdGl2ZUNsYXNzOmZ1bmN0aW9uKCl7dGhpcy5fcmVtb3ZlQ2xhc3MoXCJ1aS1kcm9wcGFibGUtYWN0aXZlXCIpfX0pO3ZhciB2PXQudWkuaW50ZXJzZWN0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0LGUsaSl7cmV0dXJuIHQ+PWUmJmUraT50fXJldHVybiBmdW5jdGlvbihlLGkscyxuKXtpZighaS5vZmZzZXQpcmV0dXJuITE7dmFyIG89KGUucG9zaXRpb25BYnN8fGUucG9zaXRpb24uYWJzb2x1dGUpLmxlZnQrZS5tYXJnaW5zLmxlZnQsYT0oZS5wb3NpdGlvbkFic3x8ZS5wb3NpdGlvbi5hYnNvbHV0ZSkudG9wK2UubWFyZ2lucy50b3Ascj1vK2UuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgsaD1hK2UuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LGw9aS5vZmZzZXQubGVmdCxjPWkub2Zmc2V0LnRvcCx1PWwraS5wcm9wb3J0aW9ucygpLndpZHRoLGQ9YytpLnByb3BvcnRpb25zKCkuaGVpZ2h0O3N3aXRjaChzKXtjYXNlXCJmaXRcIjpyZXR1cm4gbz49bCYmdT49ciYmYT49YyYmZD49aDtjYXNlXCJpbnRlcnNlY3RcIjpyZXR1cm4gbytlLmhlbHBlclByb3BvcnRpb25zLndpZHRoLzI+bCYmdT5yLWUuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgvMiYmYStlLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC8yPmMmJmQ+aC1lLmhlbHBlclByb3BvcnRpb25zLmhlaWdodC8yO2Nhc2VcInBvaW50ZXJcIjpyZXR1cm4gdChuLnBhZ2VZLGMsaS5wcm9wb3J0aW9ucygpLmhlaWdodCkmJnQobi5wYWdlWCxsLGkucHJvcG9ydGlvbnMoKS53aWR0aCk7Y2FzZVwidG91Y2hcIjpyZXR1cm4oYT49YyYmZD49YXx8aD49YyYmZD49aHx8Yz5hJiZoPmQpJiYobz49bCYmdT49b3x8cj49bCYmdT49cnx8bD5vJiZyPnUpO2RlZmF1bHQ6cmV0dXJuITF9fX0oKTt0LnVpLmRkbWFuYWdlcj17Y3VycmVudDpudWxsLGRyb3BwYWJsZXM6e1wiZGVmYXVsdFwiOltdfSxwcmVwYXJlT2Zmc2V0czpmdW5jdGlvbihlLGkpe3ZhciBzLG4sbz10LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW2Uub3B0aW9ucy5zY29wZV18fFtdLGE9aT9pLnR5cGU6bnVsbCxyPShlLmN1cnJlbnRJdGVtfHxlLmVsZW1lbnQpLmZpbmQoXCI6ZGF0YSh1aS1kcm9wcGFibGUpXCIpLmFkZEJhY2soKTt0OmZvcihzPTA7by5sZW5ndGg+cztzKyspaWYoIShvW3NdLm9wdGlvbnMuZGlzYWJsZWR8fGUmJiFvW3NdLmFjY2VwdC5jYWxsKG9bc10uZWxlbWVudFswXSxlLmN1cnJlbnRJdGVtfHxlLmVsZW1lbnQpKSl7Zm9yKG49MDtyLmxlbmd0aD5uO24rKylpZihyW25dPT09b1tzXS5lbGVtZW50WzBdKXtvW3NdLnByb3BvcnRpb25zKCkuaGVpZ2h0PTA7Y29udGludWUgdH1vW3NdLnZpc2libGU9XCJub25lXCIhPT1vW3NdLmVsZW1lbnQuY3NzKFwiZGlzcGxheVwiKSxvW3NdLnZpc2libGUmJihcIm1vdXNlZG93blwiPT09YSYmb1tzXS5fYWN0aXZhdGUuY2FsbChvW3NdLGkpLG9bc10ub2Zmc2V0PW9bc10uZWxlbWVudC5vZmZzZXQoKSxvW3NdLnByb3BvcnRpb25zKHt3aWR0aDpvW3NdLmVsZW1lbnRbMF0ub2Zmc2V0V2lkdGgsaGVpZ2h0Om9bc10uZWxlbWVudFswXS5vZmZzZXRIZWlnaHR9KSl9fSxkcm9wOmZ1bmN0aW9uKGUsaSl7dmFyIHM9ITE7cmV0dXJuIHQuZWFjaCgodC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1tlLm9wdGlvbnMuc2NvcGVdfHxbXSkuc2xpY2UoKSxmdW5jdGlvbigpe3RoaXMub3B0aW9ucyYmKCF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMudmlzaWJsZSYmdihlLHRoaXMsdGhpcy5vcHRpb25zLnRvbGVyYW5jZSxpKSYmKHM9dGhpcy5fZHJvcC5jYWxsKHRoaXMsaSl8fHMpLCF0aGlzLm9wdGlvbnMuZGlzYWJsZWQmJnRoaXMudmlzaWJsZSYmdGhpcy5hY2NlcHQuY2FsbCh0aGlzLmVsZW1lbnRbMF0sZS5jdXJyZW50SXRlbXx8ZS5lbGVtZW50KSYmKHRoaXMuaXNvdXQ9ITAsdGhpcy5pc292ZXI9ITEsdGhpcy5fZGVhY3RpdmF0ZS5jYWxsKHRoaXMsaSkpKX0pLHN9LGRyYWdTdGFydDpmdW5jdGlvbihlLGkpe2UuZWxlbWVudC5wYXJlbnRzVW50aWwoXCJib2R5XCIpLm9uKFwic2Nyb2xsLmRyb3BwYWJsZVwiLGZ1bmN0aW9uKCl7ZS5vcHRpb25zLnJlZnJlc2hQb3NpdGlvbnN8fHQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKGUsaSl9KX0sZHJhZzpmdW5jdGlvbihlLGkpe2Uub3B0aW9ucy5yZWZyZXNoUG9zaXRpb25zJiZ0LnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyhlLGkpLHQuZWFjaCh0LnVpLmRkbWFuYWdlci5kcm9wcGFibGVzW2Uub3B0aW9ucy5zY29wZV18fFtdLGZ1bmN0aW9uKCl7aWYoIXRoaXMub3B0aW9ucy5kaXNhYmxlZCYmIXRoaXMuZ3JlZWR5Q2hpbGQmJnRoaXMudmlzaWJsZSl7dmFyIHMsbixvLGE9dihlLHRoaXMsdGhpcy5vcHRpb25zLnRvbGVyYW5jZSxpKSxyPSFhJiZ0aGlzLmlzb3Zlcj9cImlzb3V0XCI6YSYmIXRoaXMuaXNvdmVyP1wiaXNvdmVyXCI6bnVsbDtyJiYodGhpcy5vcHRpb25zLmdyZWVkeSYmKG49dGhpcy5vcHRpb25zLnNjb3BlLG89dGhpcy5lbGVtZW50LnBhcmVudHMoXCI6ZGF0YSh1aS1kcm9wcGFibGUpXCIpLmZpbHRlcihmdW5jdGlvbigpe3JldHVybiB0KHRoaXMpLmRyb3BwYWJsZShcImluc3RhbmNlXCIpLm9wdGlvbnMuc2NvcGU9PT1ufSksby5sZW5ndGgmJihzPXQob1swXSkuZHJvcHBhYmxlKFwiaW5zdGFuY2VcIikscy5ncmVlZHlDaGlsZD1cImlzb3ZlclwiPT09cikpLHMmJlwiaXNvdmVyXCI9PT1yJiYocy5pc292ZXI9ITEscy5pc291dD0hMCxzLl9vdXQuY2FsbChzLGkpKSx0aGlzW3JdPSEwLHRoaXNbXCJpc291dFwiPT09cj9cImlzb3ZlclwiOlwiaXNvdXRcIl09ITEsdGhpc1tcImlzb3ZlclwiPT09cj9cIl9vdmVyXCI6XCJfb3V0XCJdLmNhbGwodGhpcyxpKSxzJiZcImlzb3V0XCI9PT1yJiYocy5pc291dD0hMSxzLmlzb3Zlcj0hMCxzLl9vdmVyLmNhbGwocyxpKSkpfX0pfSxkcmFnU3RvcDpmdW5jdGlvbihlLGkpe2UuZWxlbWVudC5wYXJlbnRzVW50aWwoXCJib2R5XCIpLm9mZihcInNjcm9sbC5kcm9wcGFibGVcIiksZS5vcHRpb25zLnJlZnJlc2hQb3NpdGlvbnN8fHQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKGUsaSl9fSx0LnVpQmFja0NvbXBhdCE9PSExJiZ0LndpZGdldChcInVpLmRyb3BwYWJsZVwiLHQudWkuZHJvcHBhYmxlLHtvcHRpb25zOntob3ZlckNsYXNzOiExLGFjdGl2ZUNsYXNzOiExfSxfYWRkQWN0aXZlQ2xhc3M6ZnVuY3Rpb24oKXt0aGlzLl9zdXBlcigpLHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyYmdGhpcy5lbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyl9LF9yZW1vdmVBY3RpdmVDbGFzczpmdW5jdGlvbigpe3RoaXMuX3N1cGVyKCksdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzJiZ0aGlzLmVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzKX0sX2FkZEhvdmVyQ2xhc3M6ZnVuY3Rpb24oKXt0aGlzLl9zdXBlcigpLHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzJiZ0aGlzLmVsZW1lbnQuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MpfSxfcmVtb3ZlSG92ZXJDbGFzczpmdW5jdGlvbigpe3RoaXMuX3N1cGVyKCksdGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MmJnRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyl9fSksdC51aS5kcm9wcGFibGUsdC53aWRnZXQoXCJ1aS5wcm9ncmVzc2JhclwiLHt2ZXJzaW9uOlwiMS4xMi4xXCIsb3B0aW9uczp7Y2xhc3Nlczp7XCJ1aS1wcm9ncmVzc2JhclwiOlwidWktY29ybmVyLWFsbFwiLFwidWktcHJvZ3Jlc3NiYXItdmFsdWVcIjpcInVpLWNvcm5lci1sZWZ0XCIsXCJ1aS1wcm9ncmVzc2Jhci1jb21wbGV0ZVwiOlwidWktY29ybmVyLXJpZ2h0XCJ9LG1heDoxMDAsdmFsdWU6MCxjaGFuZ2U6bnVsbCxjb21wbGV0ZTpudWxsfSxtaW46MCxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5vbGRWYWx1ZT10aGlzLm9wdGlvbnMudmFsdWU9dGhpcy5fY29uc3RyYWluZWRWYWx1ZSgpLHRoaXMuZWxlbWVudC5hdHRyKHtyb2xlOlwicHJvZ3Jlc3NiYXJcIixcImFyaWEtdmFsdWVtaW5cIjp0aGlzLm1pbn0pLHRoaXMuX2FkZENsYXNzKFwidWktcHJvZ3Jlc3NiYXJcIixcInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudFwiKSx0aGlzLnZhbHVlRGl2PXQoXCI8ZGl2PlwiKS5hcHBlbmRUbyh0aGlzLmVsZW1lbnQpLHRoaXMuX2FkZENsYXNzKHRoaXMudmFsdWVEaXYsXCJ1aS1wcm9ncmVzc2Jhci12YWx1ZVwiLFwidWktd2lkZ2V0LWhlYWRlclwiKSx0aGlzLl9yZWZyZXNoVmFsdWUoKX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcInJvbGUgYXJpYS12YWx1ZW1pbiBhcmlhLXZhbHVlbWF4IGFyaWEtdmFsdWVub3dcIiksdGhpcy52YWx1ZURpdi5yZW1vdmUoKX0sdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQ/dGhpcy5vcHRpb25zLnZhbHVlOih0aGlzLm9wdGlvbnMudmFsdWU9dGhpcy5fY29uc3RyYWluZWRWYWx1ZSh0KSx0aGlzLl9yZWZyZXNoVmFsdWUoKSx2b2lkIDApfSxfY29uc3RyYWluZWRWYWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9dGhpcy5vcHRpb25zLnZhbHVlKSx0aGlzLmluZGV0ZXJtaW5hdGU9dD09PSExLFwibnVtYmVyXCIhPXR5cGVvZiB0JiYodD0wKSx0aGlzLmluZGV0ZXJtaW5hdGU/ITE6TWF0aC5taW4odGhpcy5vcHRpb25zLm1heCxNYXRoLm1heCh0aGlzLm1pbix0KSl9LF9zZXRPcHRpb25zOmZ1bmN0aW9uKHQpe3ZhciBlPXQudmFsdWU7ZGVsZXRlIHQudmFsdWUsdGhpcy5fc3VwZXIodCksdGhpcy5vcHRpb25zLnZhbHVlPXRoaXMuX2NvbnN0cmFpbmVkVmFsdWUoZSksdGhpcy5fcmVmcmVzaFZhbHVlKCl9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtcIm1heFwiPT09dCYmKGU9TWF0aC5tYXgodGhpcy5taW4sZSkpLHRoaXMuX3N1cGVyKHQsZSl9LF9zZXRPcHRpb25EaXNhYmxlZDpmdW5jdGlvbih0KXt0aGlzLl9zdXBlcih0KSx0aGlzLmVsZW1lbnQuYXR0cihcImFyaWEtZGlzYWJsZWRcIix0KSx0aGlzLl90b2dnbGVDbGFzcyhudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIiwhIXQpfSxfcGVyY2VudGFnZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmluZGV0ZXJtaW5hdGU/MTAwOjEwMCoodGhpcy5vcHRpb25zLnZhbHVlLXRoaXMubWluKS8odGhpcy5vcHRpb25zLm1heC10aGlzLm1pbil9LF9yZWZyZXNoVmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnMudmFsdWUsaT10aGlzLl9wZXJjZW50YWdlKCk7dGhpcy52YWx1ZURpdi50b2dnbGUodGhpcy5pbmRldGVybWluYXRlfHxlPnRoaXMubWluKS53aWR0aChpLnRvRml4ZWQoMCkrXCIlXCIpLHRoaXMuX3RvZ2dsZUNsYXNzKHRoaXMudmFsdWVEaXYsXCJ1aS1wcm9ncmVzc2Jhci1jb21wbGV0ZVwiLG51bGwsZT09PXRoaXMub3B0aW9ucy5tYXgpLl90b2dnbGVDbGFzcyhcInVpLXByb2dyZXNzYmFyLWluZGV0ZXJtaW5hdGVcIixudWxsLHRoaXMuaW5kZXRlcm1pbmF0ZSksdGhpcy5pbmRldGVybWluYXRlPyh0aGlzLmVsZW1lbnQucmVtb3ZlQXR0cihcImFyaWEtdmFsdWVub3dcIiksdGhpcy5vdmVybGF5RGl2fHwodGhpcy5vdmVybGF5RGl2PXQoXCI8ZGl2PlwiKS5hcHBlbmRUbyh0aGlzLnZhbHVlRGl2KSx0aGlzLl9hZGRDbGFzcyh0aGlzLm92ZXJsYXlEaXYsXCJ1aS1wcm9ncmVzc2Jhci1vdmVybGF5XCIpKSk6KHRoaXMuZWxlbWVudC5hdHRyKHtcImFyaWEtdmFsdWVtYXhcIjp0aGlzLm9wdGlvbnMubWF4LFwiYXJpYS12YWx1ZW5vd1wiOmV9KSx0aGlzLm92ZXJsYXlEaXYmJih0aGlzLm92ZXJsYXlEaXYucmVtb3ZlKCksdGhpcy5vdmVybGF5RGl2PW51bGwpKSx0aGlzLm9sZFZhbHVlIT09ZSYmKHRoaXMub2xkVmFsdWU9ZSx0aGlzLl90cmlnZ2VyKFwiY2hhbmdlXCIpKSxlPT09dGhpcy5vcHRpb25zLm1heCYmdGhpcy5fdHJpZ2dlcihcImNvbXBsZXRlXCIpfX0pLHQud2lkZ2V0KFwidWkuc2VsZWN0YWJsZVwiLHQudWkubW91c2Use3ZlcnNpb246XCIxLjEyLjFcIixvcHRpb25zOnthcHBlbmRUbzpcImJvZHlcIixhdXRvUmVmcmVzaDohMCxkaXN0YW5jZTowLGZpbHRlcjpcIipcIix0b2xlcmFuY2U6XCJ0b3VjaFwiLHNlbGVjdGVkOm51bGwsc2VsZWN0aW5nOm51bGwsc3RhcnQ6bnVsbCxzdG9wOm51bGwsdW5zZWxlY3RlZDpudWxsLHVuc2VsZWN0aW5nOm51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX2FkZENsYXNzKFwidWktc2VsZWN0YWJsZVwiKSx0aGlzLmRyYWdnZWQ9ITEsdGhpcy5yZWZyZXNoPWZ1bmN0aW9uKCl7ZS5lbGVtZW50UG9zPXQoZS5lbGVtZW50WzBdKS5vZmZzZXQoKSxlLnNlbGVjdGVlcz10KGUub3B0aW9ucy5maWx0ZXIsZS5lbGVtZW50WzBdKSxlLl9hZGRDbGFzcyhlLnNlbGVjdGVlcyxcInVpLXNlbGVjdGVlXCIpLGUuc2VsZWN0ZWVzLmVhY2goZnVuY3Rpb24oKXt2YXIgaT10KHRoaXMpLHM9aS5vZmZzZXQoKSxuPXtsZWZ0OnMubGVmdC1lLmVsZW1lbnRQb3MubGVmdCx0b3A6cy50b3AtZS5lbGVtZW50UG9zLnRvcH07dC5kYXRhKHRoaXMsXCJzZWxlY3RhYmxlLWl0ZW1cIix7ZWxlbWVudDp0aGlzLCRlbGVtZW50OmksbGVmdDpuLmxlZnQsdG9wOm4udG9wLHJpZ2h0Om4ubGVmdCtpLm91dGVyV2lkdGgoKSxib3R0b206bi50b3AraS5vdXRlckhlaWdodCgpLHN0YXJ0c2VsZWN0ZWQ6ITEsc2VsZWN0ZWQ6aS5oYXNDbGFzcyhcInVpLXNlbGVjdGVkXCIpLHNlbGVjdGluZzppLmhhc0NsYXNzKFwidWktc2VsZWN0aW5nXCIpLHVuc2VsZWN0aW5nOmkuaGFzQ2xhc3MoXCJ1aS11bnNlbGVjdGluZ1wiKX0pfSl9LHRoaXMucmVmcmVzaCgpLHRoaXMuX21vdXNlSW5pdCgpLHRoaXMuaGVscGVyPXQoXCI8ZGl2PlwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmhlbHBlcixcInVpLXNlbGVjdGFibGUtaGVscGVyXCIpfSxfZGVzdHJveTpmdW5jdGlvbigpe3RoaXMuc2VsZWN0ZWVzLnJlbW92ZURhdGEoXCJzZWxlY3RhYmxlLWl0ZW1cIiksdGhpcy5fbW91c2VEZXN0cm95KCl9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMscz10aGlzLm9wdGlvbnM7dGhpcy5vcG9zPVtlLnBhZ2VYLGUucGFnZVldLHRoaXMuZWxlbWVudFBvcz10KHRoaXMuZWxlbWVudFswXSkub2Zmc2V0KCksdGhpcy5vcHRpb25zLmRpc2FibGVkfHwodGhpcy5zZWxlY3RlZXM9dChzLmZpbHRlcix0aGlzLmVsZW1lbnRbMF0pLHRoaXMuX3RyaWdnZXIoXCJzdGFydFwiLGUpLHQocy5hcHBlbmRUbykuYXBwZW5kKHRoaXMuaGVscGVyKSx0aGlzLmhlbHBlci5jc3Moe2xlZnQ6ZS5wYWdlWCx0b3A6ZS5wYWdlWSx3aWR0aDowLGhlaWdodDowfSkscy5hdXRvUmVmcmVzaCYmdGhpcy5yZWZyZXNoKCksdGhpcy5zZWxlY3RlZXMuZmlsdGVyKFwiLnVpLXNlbGVjdGVkXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgcz10LmRhdGEodGhpcyxcInNlbGVjdGFibGUtaXRlbVwiKTtzLnN0YXJ0c2VsZWN0ZWQ9ITAsZS5tZXRhS2V5fHxlLmN0cmxLZXl8fChpLl9yZW1vdmVDbGFzcyhzLiRlbGVtZW50LFwidWktc2VsZWN0ZWRcIikscy5zZWxlY3RlZD0hMSxpLl9hZGRDbGFzcyhzLiRlbGVtZW50LFwidWktdW5zZWxlY3RpbmdcIikscy51bnNlbGVjdGluZz0hMCxpLl90cmlnZ2VyKFwidW5zZWxlY3RpbmdcIixlLHt1bnNlbGVjdGluZzpzLmVsZW1lbnR9KSl9KSx0KGUudGFyZ2V0KS5wYXJlbnRzKCkuYWRkQmFjaygpLmVhY2goZnVuY3Rpb24oKXt2YXIgcyxuPXQuZGF0YSh0aGlzLFwic2VsZWN0YWJsZS1pdGVtXCIpO3JldHVybiBuPyhzPSFlLm1ldGFLZXkmJiFlLmN0cmxLZXl8fCFuLiRlbGVtZW50Lmhhc0NsYXNzKFwidWktc2VsZWN0ZWRcIiksaS5fcmVtb3ZlQ2xhc3Mobi4kZWxlbWVudCxzP1widWktdW5zZWxlY3RpbmdcIjpcInVpLXNlbGVjdGVkXCIpLl9hZGRDbGFzcyhuLiRlbGVtZW50LHM/XCJ1aS1zZWxlY3RpbmdcIjpcInVpLXVuc2VsZWN0aW5nXCIpLG4udW5zZWxlY3Rpbmc9IXMsbi5zZWxlY3Rpbmc9cyxuLnNlbGVjdGVkPXMscz9pLl90cmlnZ2VyKFwic2VsZWN0aW5nXCIsZSx7c2VsZWN0aW5nOm4uZWxlbWVudH0pOmkuX3RyaWdnZXIoXCJ1bnNlbGVjdGluZ1wiLGUse3Vuc2VsZWN0aW5nOm4uZWxlbWVudH0pLCExKTp2b2lkIDB9KSl9LF9tb3VzZURyYWc6ZnVuY3Rpb24oZSl7aWYodGhpcy5kcmFnZ2VkPSEwLCF0aGlzLm9wdGlvbnMuZGlzYWJsZWQpe3ZhciBpLHM9dGhpcyxuPXRoaXMub3B0aW9ucyxvPXRoaXMub3Bvc1swXSxhPXRoaXMub3Bvc1sxXSxyPWUucGFnZVgsaD1lLnBhZ2VZO3JldHVybiBvPnImJihpPXIscj1vLG89aSksYT5oJiYoaT1oLGg9YSxhPWkpLHRoaXMuaGVscGVyLmNzcyh7bGVmdDpvLHRvcDphLHdpZHRoOnItbyxoZWlnaHQ6aC1hfSksdGhpcy5zZWxlY3RlZXMuZWFjaChmdW5jdGlvbigpe3ZhciBpPXQuZGF0YSh0aGlzLFwic2VsZWN0YWJsZS1pdGVtXCIpLGw9ITEsYz17fTtpJiZpLmVsZW1lbnQhPT1zLmVsZW1lbnRbMF0mJihjLmxlZnQ9aS5sZWZ0K3MuZWxlbWVudFBvcy5sZWZ0LGMucmlnaHQ9aS5yaWdodCtzLmVsZW1lbnRQb3MubGVmdCxjLnRvcD1pLnRvcCtzLmVsZW1lbnRQb3MudG9wLGMuYm90dG9tPWkuYm90dG9tK3MuZWxlbWVudFBvcy50b3AsXCJ0b3VjaFwiPT09bi50b2xlcmFuY2U/bD0hKGMubGVmdD5yfHxvPmMucmlnaHR8fGMudG9wPmh8fGE+Yy5ib3R0b20pOlwiZml0XCI9PT1uLnRvbGVyYW5jZSYmKGw9Yy5sZWZ0Pm8mJnI+Yy5yaWdodCYmYy50b3A+YSYmaD5jLmJvdHRvbSksbD8oaS5zZWxlY3RlZCYmKHMuX3JlbW92ZUNsYXNzKGkuJGVsZW1lbnQsXCJ1aS1zZWxlY3RlZFwiKSxpLnNlbGVjdGVkPSExKSxpLnVuc2VsZWN0aW5nJiYocy5fcmVtb3ZlQ2xhc3MoaS4kZWxlbWVudCxcInVpLXVuc2VsZWN0aW5nXCIpLGkudW5zZWxlY3Rpbmc9ITEpLGkuc2VsZWN0aW5nfHwocy5fYWRkQ2xhc3MoaS4kZWxlbWVudCxcInVpLXNlbGVjdGluZ1wiKSxpLnNlbGVjdGluZz0hMCxzLl90cmlnZ2VyKFwic2VsZWN0aW5nXCIsZSx7c2VsZWN0aW5nOmkuZWxlbWVudH0pKSk6KGkuc2VsZWN0aW5nJiYoKGUubWV0YUtleXx8ZS5jdHJsS2V5KSYmaS5zdGFydHNlbGVjdGVkPyhzLl9yZW1vdmVDbGFzcyhpLiRlbGVtZW50LFwidWktc2VsZWN0aW5nXCIpLGkuc2VsZWN0aW5nPSExLHMuX2FkZENsYXNzKGkuJGVsZW1lbnQsXCJ1aS1zZWxlY3RlZFwiKSxpLnNlbGVjdGVkPSEwKToocy5fcmVtb3ZlQ2xhc3MoaS4kZWxlbWVudCxcInVpLXNlbGVjdGluZ1wiKSxpLnNlbGVjdGluZz0hMSxpLnN0YXJ0c2VsZWN0ZWQmJihzLl9hZGRDbGFzcyhpLiRlbGVtZW50LFwidWktdW5zZWxlY3RpbmdcIiksaS51bnNlbGVjdGluZz0hMCkscy5fdHJpZ2dlcihcInVuc2VsZWN0aW5nXCIsZSx7dW5zZWxlY3Rpbmc6aS5lbGVtZW50fSkpKSxpLnNlbGVjdGVkJiYoZS5tZXRhS2V5fHxlLmN0cmxLZXl8fGkuc3RhcnRzZWxlY3RlZHx8KHMuX3JlbW92ZUNsYXNzKGkuJGVsZW1lbnQsXCJ1aS1zZWxlY3RlZFwiKSxpLnNlbGVjdGVkPSExLHMuX2FkZENsYXNzKGkuJGVsZW1lbnQsXCJ1aS11bnNlbGVjdGluZ1wiKSxpLnVuc2VsZWN0aW5nPSEwLHMuX3RyaWdnZXIoXCJ1bnNlbGVjdGluZ1wiLGUse3Vuc2VsZWN0aW5nOmkuZWxlbWVudH0pKSkpKX0pLCExfX0sX21vdXNlU3RvcDpmdW5jdGlvbihlKXt2YXIgaT10aGlzO3JldHVybiB0aGlzLmRyYWdnZWQ9ITEsdChcIi51aS11bnNlbGVjdGluZ1wiLHRoaXMuZWxlbWVudFswXSkuZWFjaChmdW5jdGlvbigpe3ZhciBzPXQuZGF0YSh0aGlzLFwic2VsZWN0YWJsZS1pdGVtXCIpO2kuX3JlbW92ZUNsYXNzKHMuJGVsZW1lbnQsXCJ1aS11bnNlbGVjdGluZ1wiKSxzLnVuc2VsZWN0aW5nPSExLHMuc3RhcnRzZWxlY3RlZD0hMSxpLl90cmlnZ2VyKFwidW5zZWxlY3RlZFwiLGUse3Vuc2VsZWN0ZWQ6cy5lbGVtZW50fSl9KSx0KFwiLnVpLXNlbGVjdGluZ1wiLHRoaXMuZWxlbWVudFswXSkuZWFjaChmdW5jdGlvbigpe3ZhciBzPXQuZGF0YSh0aGlzLFwic2VsZWN0YWJsZS1pdGVtXCIpO2kuX3JlbW92ZUNsYXNzKHMuJGVsZW1lbnQsXCJ1aS1zZWxlY3RpbmdcIikuX2FkZENsYXNzKHMuJGVsZW1lbnQsXCJ1aS1zZWxlY3RlZFwiKSxzLnNlbGVjdGluZz0hMSxzLnNlbGVjdGVkPSEwLHMuc3RhcnRzZWxlY3RlZD0hMCxpLl90cmlnZ2VyKFwic2VsZWN0ZWRcIixlLHtzZWxlY3RlZDpzLmVsZW1lbnR9KX0pLHRoaXMuX3RyaWdnZXIoXCJzdG9wXCIsZSksdGhpcy5oZWxwZXIucmVtb3ZlKCksITF9fSksdC53aWRnZXQoXCJ1aS5zZWxlY3RtZW51XCIsW3QudWkuZm9ybVJlc2V0TWl4aW4se3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjxzZWxlY3Q+XCIsb3B0aW9uczp7YXBwZW5kVG86bnVsbCxjbGFzc2VzOntcInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW5cIjpcInVpLWNvcm5lci10b3BcIixcInVpLXNlbGVjdG1lbnUtYnV0dG9uLWNsb3NlZFwiOlwidWktY29ybmVyLWFsbFwifSxkaXNhYmxlZDpudWxsLGljb25zOntidXR0b246XCJ1aS1pY29uLXRyaWFuZ2xlLTEtc1wifSxwb3NpdGlvbjp7bXk6XCJsZWZ0IHRvcFwiLGF0OlwibGVmdCBib3R0b21cIixjb2xsaXNpb246XCJub25lXCJ9LHdpZHRoOiExLGNoYW5nZTpudWxsLGNsb3NlOm51bGwsZm9jdXM6bnVsbCxvcGVuOm51bGwsc2VsZWN0Om51bGx9LF9jcmVhdGU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmVsZW1lbnQudW5pcXVlSWQoKS5hdHRyKFwiaWRcIik7dGhpcy5pZHM9e2VsZW1lbnQ6ZSxidXR0b246ZStcIi1idXR0b25cIixtZW51OmUrXCItbWVudVwifSx0aGlzLl9kcmF3QnV0dG9uKCksdGhpcy5fZHJhd01lbnUoKSx0aGlzLl9iaW5kRm9ybVJlc2V0SGFuZGxlcigpLHRoaXMuX3JlbmRlcmVkPSExLHRoaXMubWVudUl0ZW1zPXQoKX0sX2RyYXdCdXR0b246ZnVuY3Rpb24oKXt2YXIgZSxpPXRoaXMscz10aGlzLl9wYXJzZU9wdGlvbih0aGlzLmVsZW1lbnQuZmluZChcIm9wdGlvbjpzZWxlY3RlZFwiKSx0aGlzLmVsZW1lbnRbMF0uc2VsZWN0ZWRJbmRleCk7dGhpcy5sYWJlbHM9dGhpcy5lbGVtZW50LmxhYmVscygpLmF0dHIoXCJmb3JcIix0aGlzLmlkcy5idXR0b24pLHRoaXMuX29uKHRoaXMubGFiZWxzLHtjbGljazpmdW5jdGlvbih0KXt0aGlzLmJ1dHRvbi5mb2N1cygpLHQucHJldmVudERlZmF1bHQoKX19KSx0aGlzLmVsZW1lbnQuaGlkZSgpLHRoaXMuYnV0dG9uPXQoXCI8c3Bhbj5cIix7dGFiaW5kZXg6dGhpcy5vcHRpb25zLmRpc2FibGVkPy0xOjAsaWQ6dGhpcy5pZHMuYnV0dG9uLHJvbGU6XCJjb21ib2JveFwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIixcImFyaWEtYXV0b2NvbXBsZXRlXCI6XCJsaXN0XCIsXCJhcmlhLW93bnNcIjp0aGlzLmlkcy5tZW51LFwiYXJpYS1oYXNwb3B1cFwiOlwidHJ1ZVwiLHRpdGxlOnRoaXMuZWxlbWVudC5hdHRyKFwidGl0bGVcIil9KS5pbnNlcnRBZnRlcih0aGlzLmVsZW1lbnQpLHRoaXMuX2FkZENsYXNzKHRoaXMuYnV0dG9uLFwidWktc2VsZWN0bWVudS1idXR0b24gdWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkXCIsXCJ1aS1idXR0b24gdWktd2lkZ2V0XCIpLGU9dChcIjxzcGFuPlwiKS5hcHBlbmRUbyh0aGlzLmJ1dHRvbiksdGhpcy5fYWRkQ2xhc3MoZSxcInVpLXNlbGVjdG1lbnUtaWNvblwiLFwidWktaWNvbiBcIit0aGlzLm9wdGlvbnMuaWNvbnMuYnV0dG9uKSx0aGlzLmJ1dHRvbkl0ZW09dGhpcy5fcmVuZGVyQnV0dG9uSXRlbShzKS5hcHBlbmRUbyh0aGlzLmJ1dHRvbiksdGhpcy5vcHRpb25zLndpZHRoIT09ITEmJnRoaXMuX3Jlc2l6ZUJ1dHRvbigpLHRoaXMuX29uKHRoaXMuYnV0dG9uLHRoaXMuX2J1dHRvbkV2ZW50cyksdGhpcy5idXR0b24ub25lKFwiZm9jdXNpblwiLGZ1bmN0aW9uKCl7aS5fcmVuZGVyZWR8fGkuX3JlZnJlc2hNZW51KCl9KX0sX2RyYXdNZW51OmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLm1lbnU9dChcIjx1bD5cIix7XCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwiLFwiYXJpYS1sYWJlbGxlZGJ5XCI6dGhpcy5pZHMuYnV0dG9uLGlkOnRoaXMuaWRzLm1lbnV9KSx0aGlzLm1lbnVXcmFwPXQoXCI8ZGl2PlwiKS5hcHBlbmQodGhpcy5tZW51KSx0aGlzLl9hZGRDbGFzcyh0aGlzLm1lbnVXcmFwLFwidWktc2VsZWN0bWVudS1tZW51XCIsXCJ1aS1mcm9udFwiKSx0aGlzLm1lbnVXcmFwLmFwcGVuZFRvKHRoaXMuX2FwcGVuZFRvKCkpLHRoaXMubWVudUluc3RhbmNlPXRoaXMubWVudS5tZW51KHtjbGFzc2VzOntcInVpLW1lbnVcIjpcInVpLWNvcm5lci1ib3R0b21cIn0scm9sZTpcImxpc3Rib3hcIixzZWxlY3Q6ZnVuY3Rpb24odCxpKXt0LnByZXZlbnREZWZhdWx0KCksZS5fc2V0U2VsZWN0aW9uKCksZS5fc2VsZWN0KGkuaXRlbS5kYXRhKFwidWktc2VsZWN0bWVudS1pdGVtXCIpLHQpfSxmb2N1czpmdW5jdGlvbih0LGkpe3ZhciBzPWkuaXRlbS5kYXRhKFwidWktc2VsZWN0bWVudS1pdGVtXCIpO251bGwhPWUuZm9jdXNJbmRleCYmcy5pbmRleCE9PWUuZm9jdXNJbmRleCYmKGUuX3RyaWdnZXIoXCJmb2N1c1wiLHQse2l0ZW06c30pLGUuaXNPcGVufHxlLl9zZWxlY3Qocyx0KSksZS5mb2N1c0luZGV4PXMuaW5kZXgsZS5idXR0b24uYXR0cihcImFyaWEtYWN0aXZlZGVzY2VuZGFudFwiLGUubWVudUl0ZW1zLmVxKHMuaW5kZXgpLmF0dHIoXCJpZFwiKSl9fSkubWVudShcImluc3RhbmNlXCIpLHRoaXMubWVudUluc3RhbmNlLl9vZmYodGhpcy5tZW51LFwibW91c2VsZWF2ZVwiKSx0aGlzLm1lbnVJbnN0YW5jZS5fY2xvc2VPbkRvY3VtZW50Q2xpY2s9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sdGhpcy5tZW51SW5zdGFuY2UuX2lzRGl2aWRlcj1mdW5jdGlvbigpe3JldHVybiExfX0scmVmcmVzaDpmdW5jdGlvbigpe3RoaXMuX3JlZnJlc2hNZW51KCksdGhpcy5idXR0b25JdGVtLnJlcGxhY2VXaXRoKHRoaXMuYnV0dG9uSXRlbT10aGlzLl9yZW5kZXJCdXR0b25JdGVtKHRoaXMuX2dldFNlbGVjdGVkSXRlbSgpLmRhdGEoXCJ1aS1zZWxlY3RtZW51LWl0ZW1cIil8fHt9KSksbnVsbD09PXRoaXMub3B0aW9ucy53aWR0aCYmdGhpcy5fcmVzaXplQnV0dG9uKCl9LF9yZWZyZXNoTWVudTpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5lbGVtZW50LmZpbmQoXCJvcHRpb25cIik7dGhpcy5tZW51LmVtcHR5KCksdGhpcy5fcGFyc2VPcHRpb25zKGUpLHRoaXMuX3JlbmRlck1lbnUodGhpcy5tZW51LHRoaXMuaXRlbXMpLHRoaXMubWVudUluc3RhbmNlLnJlZnJlc2goKSx0aGlzLm1lbnVJdGVtcz10aGlzLm1lbnUuZmluZChcImxpXCIpLm5vdChcIi51aS1zZWxlY3RtZW51LW9wdGdyb3VwXCIpLmZpbmQoXCIudWktbWVudS1pdGVtLXdyYXBwZXJcIiksdGhpcy5fcmVuZGVyZWQ9ITAsZS5sZW5ndGgmJih0PXRoaXMuX2dldFNlbGVjdGVkSXRlbSgpLHRoaXMubWVudUluc3RhbmNlLmZvY3VzKG51bGwsdCksdGhpcy5fc2V0QXJpYSh0LmRhdGEoXCJ1aS1zZWxlY3RtZW51LWl0ZW1cIikpLHRoaXMuX3NldE9wdGlvbihcImRpc2FibGVkXCIsdGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiKSkpfSxvcGVuOmZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucy5kaXNhYmxlZHx8KHRoaXMuX3JlbmRlcmVkPyh0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLm1lbnUuZmluZChcIi51aS1zdGF0ZS1hY3RpdmVcIiksbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSx0aGlzLm1lbnVJbnN0YW5jZS5mb2N1cyhudWxsLHRoaXMuX2dldFNlbGVjdGVkSXRlbSgpKSk6dGhpcy5fcmVmcmVzaE1lbnUoKSx0aGlzLm1lbnVJdGVtcy5sZW5ndGgmJih0aGlzLmlzT3Blbj0hMCx0aGlzLl90b2dnbGVBdHRyKCksdGhpcy5fcmVzaXplTWVudSgpLHRoaXMuX3Bvc2l0aW9uKCksdGhpcy5fb24odGhpcy5kb2N1bWVudCx0aGlzLl9kb2N1bWVudENsaWNrKSx0aGlzLl90cmlnZ2VyKFwib3BlblwiLHQpKSl9LF9wb3NpdGlvbjpmdW5jdGlvbigpe3RoaXMubWVudVdyYXAucG9zaXRpb24odC5leHRlbmQoe29mOnRoaXMuYnV0dG9ufSx0aGlzLm9wdGlvbnMucG9zaXRpb24pKX0sY2xvc2U6ZnVuY3Rpb24odCl7dGhpcy5pc09wZW4mJih0aGlzLmlzT3Blbj0hMSx0aGlzLl90b2dnbGVBdHRyKCksdGhpcy5yYW5nZT1udWxsLHRoaXMuX29mZih0aGlzLmRvY3VtZW50KSx0aGlzLl90cmlnZ2VyKFwiY2xvc2VcIix0KSl9LHdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmJ1dHRvbn0sbWVudVdpZGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1lbnV9LF9yZW5kZXJCdXR0b25JdGVtOmZ1bmN0aW9uKGUpe3ZhciBpPXQoXCI8c3Bhbj5cIik7cmV0dXJuIHRoaXMuX3NldFRleHQoaSxlLmxhYmVsKSx0aGlzLl9hZGRDbGFzcyhpLFwidWktc2VsZWN0bWVudS10ZXh0XCIpLGl9LF9yZW5kZXJNZW51OmZ1bmN0aW9uKGUsaSl7dmFyIHM9dGhpcyxuPVwiXCI7dC5lYWNoKGksZnVuY3Rpb24oaSxvKXt2YXIgYTtvLm9wdGdyb3VwIT09biYmKGE9dChcIjxsaT5cIix7dGV4dDpvLm9wdGdyb3VwfSkscy5fYWRkQ2xhc3MoYSxcInVpLXNlbGVjdG1lbnUtb3B0Z3JvdXBcIixcInVpLW1lbnUtZGl2aWRlclwiKyhvLmVsZW1lbnQucGFyZW50KFwib3B0Z3JvdXBcIikucHJvcChcImRpc2FibGVkXCIpP1wiIHVpLXN0YXRlLWRpc2FibGVkXCI6XCJcIikpLGEuYXBwZW5kVG8oZSksbj1vLm9wdGdyb3VwKSxzLl9yZW5kZXJJdGVtRGF0YShlLG8pfSl9LF9yZW5kZXJJdGVtRGF0YTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl9yZW5kZXJJdGVtKHQsZSkuZGF0YShcInVpLXNlbGVjdG1lbnUtaXRlbVwiLGUpfSxfcmVuZGVySXRlbTpmdW5jdGlvbihlLGkpe3ZhciBzPXQoXCI8bGk+XCIpLG49dChcIjxkaXY+XCIse3RpdGxlOmkuZWxlbWVudC5hdHRyKFwidGl0bGVcIil9KTtyZXR1cm4gaS5kaXNhYmxlZCYmdGhpcy5fYWRkQ2xhc3MocyxudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIiksdGhpcy5fc2V0VGV4dChuLGkubGFiZWwpLHMuYXBwZW5kKG4pLmFwcGVuZFRvKGUpfSxfc2V0VGV4dDpmdW5jdGlvbih0LGUpe2U/dC50ZXh0KGUpOnQuaHRtbChcIiYjMTYwO1wiKX0sX21vdmU6ZnVuY3Rpb24odCxlKXt2YXIgaSxzLG49XCIudWktbWVudS1pdGVtXCI7dGhpcy5pc09wZW4/aT10aGlzLm1lbnVJdGVtcy5lcSh0aGlzLmZvY3VzSW5kZXgpLnBhcmVudChcImxpXCIpOihpPXRoaXMubWVudUl0ZW1zLmVxKHRoaXMuZWxlbWVudFswXS5zZWxlY3RlZEluZGV4KS5wYXJlbnQoXCJsaVwiKSxuKz1cIjpub3QoLnVpLXN0YXRlLWRpc2FibGVkKVwiKSxzPVwiZmlyc3RcIj09PXR8fFwibGFzdFwiPT09dD9pW1wiZmlyc3RcIj09PXQ/XCJwcmV2QWxsXCI6XCJuZXh0QWxsXCJdKG4pLmVxKC0xKTppW3QrXCJBbGxcIl0obikuZXEoMCkscy5sZW5ndGgmJnRoaXMubWVudUluc3RhbmNlLmZvY3VzKGUscyl9LF9nZXRTZWxlY3RlZEl0ZW06ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tZW51SXRlbXMuZXEodGhpcy5lbGVtZW50WzBdLnNlbGVjdGVkSW5kZXgpLnBhcmVudChcImxpXCIpfSxfdG9nZ2xlOmZ1bmN0aW9uKHQpe3RoaXNbdGhpcy5pc09wZW4/XCJjbG9zZVwiOlwib3BlblwiXSh0KX0sX3NldFNlbGVjdGlvbjpmdW5jdGlvbigpe3ZhciB0O3RoaXMucmFuZ2UmJih3aW5kb3cuZ2V0U2VsZWN0aW9uPyh0PXdpbmRvdy5nZXRTZWxlY3Rpb24oKSx0LnJlbW92ZUFsbFJhbmdlcygpLHQuYWRkUmFuZ2UodGhpcy5yYW5nZSkpOnRoaXMucmFuZ2Uuc2VsZWN0KCksdGhpcy5idXR0b24uZm9jdXMoKSl9LF9kb2N1bWVudENsaWNrOnttb3VzZWRvd246ZnVuY3Rpb24oZSl7dGhpcy5pc09wZW4mJih0KGUudGFyZ2V0KS5jbG9zZXN0KFwiLnVpLXNlbGVjdG1lbnUtbWVudSwgI1wiK3QudWkuZXNjYXBlU2VsZWN0b3IodGhpcy5pZHMuYnV0dG9uKSkubGVuZ3RofHx0aGlzLmNsb3NlKGUpKX19LF9idXR0b25FdmVudHM6e21vdXNlZG93bjpmdW5jdGlvbigpe3ZhciB0O3dpbmRvdy5nZXRTZWxlY3Rpb24/KHQ9d2luZG93LmdldFNlbGVjdGlvbigpLHQucmFuZ2VDb3VudCYmKHRoaXMucmFuZ2U9dC5nZXRSYW5nZUF0KDApKSk6dGhpcy5yYW5nZT1kb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKX0sY2xpY2s6ZnVuY3Rpb24odCl7dGhpcy5fc2V0U2VsZWN0aW9uKCksdGhpcy5fdG9nZ2xlKHQpfSxrZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBpPSEwO3N3aXRjaChlLmtleUNvZGUpe2Nhc2UgdC51aS5rZXlDb2RlLlRBQjpjYXNlIHQudWkua2V5Q29kZS5FU0NBUEU6dGhpcy5jbG9zZShlKSxpPSExO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkVOVEVSOnRoaXMuaXNPcGVuJiZ0aGlzLl9zZWxlY3RGb2N1c2VkSXRlbShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5VUDplLmFsdEtleT90aGlzLl90b2dnbGUoZSk6dGhpcy5fbW92ZShcInByZXZcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5ET1dOOmUuYWx0S2V5P3RoaXMuX3RvZ2dsZShlKTp0aGlzLl9tb3ZlKFwibmV4dFwiLGUpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlNQQUNFOnRoaXMuaXNPcGVuP3RoaXMuX3NlbGVjdEZvY3VzZWRJdGVtKGUpOnRoaXMuX3RvZ2dsZShlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5MRUZUOnRoaXMuX21vdmUoXCJwcmV2XCIsZSk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuUklHSFQ6dGhpcy5fbW92ZShcIm5leHRcIixlKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5IT01FOmNhc2UgdC51aS5rZXlDb2RlLlBBR0VfVVA6dGhpcy5fbW92ZShcImZpcnN0XCIsZSk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRU5EOmNhc2UgdC51aS5rZXlDb2RlLlBBR0VfRE9XTjp0aGlzLl9tb3ZlKFwibGFzdFwiLGUpO2JyZWFrO2RlZmF1bHQ6dGhpcy5tZW51LnRyaWdnZXIoZSksaT0hMX1pJiZlLnByZXZlbnREZWZhdWx0KCl9fSxfc2VsZWN0Rm9jdXNlZEl0ZW06ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5tZW51SXRlbXMuZXEodGhpcy5mb2N1c0luZGV4KS5wYXJlbnQoXCJsaVwiKTtlLmhhc0NsYXNzKFwidWktc3RhdGUtZGlzYWJsZWRcIil8fHRoaXMuX3NlbGVjdChlLmRhdGEoXCJ1aS1zZWxlY3RtZW51LWl0ZW1cIiksdCl9LF9zZWxlY3Q6ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLmVsZW1lbnRbMF0uc2VsZWN0ZWRJbmRleDt0aGlzLmVsZW1lbnRbMF0uc2VsZWN0ZWRJbmRleD10LmluZGV4LHRoaXMuYnV0dG9uSXRlbS5yZXBsYWNlV2l0aCh0aGlzLmJ1dHRvbkl0ZW09dGhpcy5fcmVuZGVyQnV0dG9uSXRlbSh0KSksdGhpcy5fc2V0QXJpYSh0KSx0aGlzLl90cmlnZ2VyKFwic2VsZWN0XCIsZSx7aXRlbTp0fSksdC5pbmRleCE9PWkmJnRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIixlLHtpdGVtOnR9KSx0aGlzLmNsb3NlKGUpfSxfc2V0QXJpYTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm1lbnVJdGVtcy5lcSh0LmluZGV4KS5hdHRyKFwiaWRcIik7dGhpcy5idXR0b24uYXR0cih7XCJhcmlhLWxhYmVsbGVkYnlcIjplLFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCI6ZX0pLHRoaXMubWVudS5hdHRyKFwiYXJpYS1hY3RpdmVkZXNjZW5kYW50XCIsZSl9LF9zZXRPcHRpb246ZnVuY3Rpb24odCxlKXtpZihcImljb25zXCI9PT10KXt2YXIgaT10aGlzLmJ1dHRvbi5maW5kKFwic3Bhbi51aS1pY29uXCIpO3RoaXMuX3JlbW92ZUNsYXNzKGksbnVsbCx0aGlzLm9wdGlvbnMuaWNvbnMuYnV0dG9uKS5fYWRkQ2xhc3MoaSxudWxsLGUuYnV0dG9uKX10aGlzLl9zdXBlcih0LGUpLFwiYXBwZW5kVG9cIj09PXQmJnRoaXMubWVudVdyYXAuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oKSksXCJ3aWR0aFwiPT09dCYmdGhpcy5fcmVzaXplQnV0dG9uKCl9LF9zZXRPcHRpb25EaXNhYmxlZDpmdW5jdGlvbih0KXt0aGlzLl9zdXBlcih0KSx0aGlzLm1lbnVJbnN0YW5jZS5vcHRpb24oXCJkaXNhYmxlZFwiLHQpLHRoaXMuYnV0dG9uLmF0dHIoXCJhcmlhLWRpc2FibGVkXCIsdCksdGhpcy5fdG9nZ2xlQ2xhc3ModGhpcy5idXR0b24sbnVsbCxcInVpLXN0YXRlLWRpc2FibGVkXCIsdCksdGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLHQpLHQ/KHRoaXMuYnV0dG9uLmF0dHIoXCJ0YWJpbmRleFwiLC0xKSx0aGlzLmNsb3NlKCkpOnRoaXMuYnV0dG9uLmF0dHIoXCJ0YWJpbmRleFwiLDApfSxfYXBwZW5kVG86ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnMuYXBwZW5kVG87cmV0dXJuIGUmJihlPWUuanF1ZXJ5fHxlLm5vZGVUeXBlP3QoZSk6dGhpcy5kb2N1bWVudC5maW5kKGUpLmVxKDApKSxlJiZlWzBdfHwoZT10aGlzLmVsZW1lbnQuY2xvc2VzdChcIi51aS1mcm9udCwgZGlhbG9nXCIpKSxlLmxlbmd0aHx8KGU9dGhpcy5kb2N1bWVudFswXS5ib2R5KSxlfSxfdG9nZ2xlQXR0cjpmdW5jdGlvbigpe3RoaXMuYnV0dG9uLmF0dHIoXCJhcmlhLWV4cGFuZGVkXCIsdGhpcy5pc09wZW4pLHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuYnV0dG9uLFwidWktc2VsZWN0bWVudS1idXR0b24tXCIrKHRoaXMuaXNPcGVuP1wiY2xvc2VkXCI6XCJvcGVuXCIpKS5fYWRkQ2xhc3ModGhpcy5idXR0b24sXCJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1cIisodGhpcy5pc09wZW4/XCJvcGVuXCI6XCJjbG9zZWRcIikpLl90b2dnbGVDbGFzcyh0aGlzLm1lbnVXcmFwLFwidWktc2VsZWN0bWVudS1vcGVuXCIsbnVsbCx0aGlzLmlzT3BlbiksdGhpcy5tZW51LmF0dHIoXCJhcmlhLWhpZGRlblwiLCF0aGlzLmlzT3Blbil9LF9yZXNpemVCdXR0b246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMud2lkdGg7cmV0dXJuIHQ9PT0hMT8odGhpcy5idXR0b24uY3NzKFwid2lkdGhcIixcIlwiKSx2b2lkIDApOihudWxsPT09dCYmKHQ9dGhpcy5lbGVtZW50LnNob3coKS5vdXRlcldpZHRoKCksdGhpcy5lbGVtZW50LmhpZGUoKSksdGhpcy5idXR0b24ub3V0ZXJXaWR0aCh0KSx2b2lkIDApfSxfcmVzaXplTWVudTpmdW5jdGlvbigpe3RoaXMubWVudS5vdXRlcldpZHRoKE1hdGgubWF4KHRoaXMuYnV0dG9uLm91dGVyV2lkdGgoKSx0aGlzLm1lbnUud2lkdGgoXCJcIikub3V0ZXJXaWR0aCgpKzEpKX0sX2dldENyZWF0ZU9wdGlvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9zdXBlcigpO3JldHVybiB0LmRpc2FibGVkPXRoaXMuZWxlbWVudC5wcm9wKFwiZGlzYWJsZWRcIiksdH0sX3BhcnNlT3B0aW9uczpmdW5jdGlvbihlKXt2YXIgaT10aGlzLHM9W107ZS5lYWNoKGZ1bmN0aW9uKGUsbil7cy5wdXNoKGkuX3BhcnNlT3B0aW9uKHQobiksZSkpfSksdGhpcy5pdGVtcz1zfSxfcGFyc2VPcHRpb246ZnVuY3Rpb24odCxlKXt2YXIgaT10LnBhcmVudChcIm9wdGdyb3VwXCIpO3JldHVybntlbGVtZW50OnQsaW5kZXg6ZSx2YWx1ZTp0LnZhbCgpLGxhYmVsOnQudGV4dCgpLG9wdGdyb3VwOmkuYXR0cihcImxhYmVsXCIpfHxcIlwiLGRpc2FibGVkOmkucHJvcChcImRpc2FibGVkXCIpfHx0LnByb3AoXCJkaXNhYmxlZFwiKX19LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fdW5iaW5kRm9ybVJlc2V0SGFuZGxlcigpLHRoaXMubWVudVdyYXAucmVtb3ZlKCksdGhpcy5idXR0b24ucmVtb3ZlKCksdGhpcy5lbGVtZW50LnNob3coKSx0aGlzLmVsZW1lbnQucmVtb3ZlVW5pcXVlSWQoKSx0aGlzLmxhYmVscy5hdHRyKFwiZm9yXCIsdGhpcy5pZHMuZWxlbWVudCl9fV0pLHQud2lkZ2V0KFwidWkuc2xpZGVyXCIsdC51aS5tb3VzZSx7dmVyc2lvbjpcIjEuMTIuMVwiLHdpZGdldEV2ZW50UHJlZml4Olwic2xpZGVcIixvcHRpb25zOnthbmltYXRlOiExLGNsYXNzZXM6e1widWktc2xpZGVyXCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS1zbGlkZXItaGFuZGxlXCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS1zbGlkZXItcmFuZ2VcIjpcInVpLWNvcm5lci1hbGwgdWktd2lkZ2V0LWhlYWRlclwifSxkaXN0YW5jZTowLG1heDoxMDAsbWluOjAsb3JpZW50YXRpb246XCJob3Jpem9udGFsXCIscmFuZ2U6ITEsc3RlcDoxLHZhbHVlOjAsdmFsdWVzOm51bGwsY2hhbmdlOm51bGwsc2xpZGU6bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbH0sbnVtUGFnZXM6NSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5fa2V5U2xpZGluZz0hMSx0aGlzLl9tb3VzZVNsaWRpbmc9ITEsdGhpcy5fYW5pbWF0ZU9mZj0hMCx0aGlzLl9oYW5kbGVJbmRleD1udWxsLHRoaXMuX2RldGVjdE9yaWVudGF0aW9uKCksdGhpcy5fbW91c2VJbml0KCksdGhpcy5fY2FsY3VsYXRlTmV3TWF4KCksdGhpcy5fYWRkQ2xhc3MoXCJ1aS1zbGlkZXIgdWktc2xpZGVyLVwiK3RoaXMub3JpZW50YXRpb24sXCJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnRcIiksdGhpcy5fcmVmcmVzaCgpLHRoaXMuX2FuaW1hdGVPZmY9ITFcbn0sX3JlZnJlc2g6ZnVuY3Rpb24oKXt0aGlzLl9jcmVhdGVSYW5nZSgpLHRoaXMuX2NyZWF0ZUhhbmRsZXMoKSx0aGlzLl9zZXR1cEV2ZW50cygpLHRoaXMuX3JlZnJlc2hWYWx1ZSgpfSxfY3JlYXRlSGFuZGxlczpmdW5jdGlvbigpe3ZhciBlLGkscz10aGlzLm9wdGlvbnMsbj10aGlzLmVsZW1lbnQuZmluZChcIi51aS1zbGlkZXItaGFuZGxlXCIpLG89XCI8c3BhbiB0YWJpbmRleD0nMCc+PC9zcGFuPlwiLGE9W107Zm9yKGk9cy52YWx1ZXMmJnMudmFsdWVzLmxlbmd0aHx8MSxuLmxlbmd0aD5pJiYobi5zbGljZShpKS5yZW1vdmUoKSxuPW4uc2xpY2UoMCxpKSksZT1uLmxlbmd0aDtpPmU7ZSsrKWEucHVzaChvKTt0aGlzLmhhbmRsZXM9bi5hZGQodChhLmpvaW4oXCJcIikpLmFwcGVuZFRvKHRoaXMuZWxlbWVudCkpLHRoaXMuX2FkZENsYXNzKHRoaXMuaGFuZGxlcyxcInVpLXNsaWRlci1oYW5kbGVcIixcInVpLXN0YXRlLWRlZmF1bHRcIiksdGhpcy5oYW5kbGU9dGhpcy5oYW5kbGVzLmVxKDApLHRoaXMuaGFuZGxlcy5lYWNoKGZ1bmN0aW9uKGUpe3QodGhpcykuZGF0YShcInVpLXNsaWRlci1oYW5kbGUtaW5kZXhcIixlKS5hdHRyKFwidGFiSW5kZXhcIiwwKX0pfSxfY3JlYXRlUmFuZ2U6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLm9wdGlvbnM7ZS5yYW5nZT8oZS5yYW5nZT09PSEwJiYoZS52YWx1ZXM/ZS52YWx1ZXMubGVuZ3RoJiYyIT09ZS52YWx1ZXMubGVuZ3RoP2UudmFsdWVzPVtlLnZhbHVlc1swXSxlLnZhbHVlc1swXV06dC5pc0FycmF5KGUudmFsdWVzKSYmKGUudmFsdWVzPWUudmFsdWVzLnNsaWNlKDApKTplLnZhbHVlcz1bdGhpcy5fdmFsdWVNaW4oKSx0aGlzLl92YWx1ZU1pbigpXSksdGhpcy5yYW5nZSYmdGhpcy5yYW5nZS5sZW5ndGg/KHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMucmFuZ2UsXCJ1aS1zbGlkZXItcmFuZ2UtbWluIHVpLXNsaWRlci1yYW5nZS1tYXhcIiksdGhpcy5yYW5nZS5jc3Moe2xlZnQ6XCJcIixib3R0b206XCJcIn0pKToodGhpcy5yYW5nZT10KFwiPGRpdj5cIikuYXBwZW5kVG8odGhpcy5lbGVtZW50KSx0aGlzLl9hZGRDbGFzcyh0aGlzLnJhbmdlLFwidWktc2xpZGVyLXJhbmdlXCIpKSwoXCJtaW5cIj09PWUucmFuZ2V8fFwibWF4XCI9PT1lLnJhbmdlKSYmdGhpcy5fYWRkQ2xhc3ModGhpcy5yYW5nZSxcInVpLXNsaWRlci1yYW5nZS1cIitlLnJhbmdlKSk6KHRoaXMucmFuZ2UmJnRoaXMucmFuZ2UucmVtb3ZlKCksdGhpcy5yYW5nZT1udWxsKX0sX3NldHVwRXZlbnRzOmZ1bmN0aW9uKCl7dGhpcy5fb2ZmKHRoaXMuaGFuZGxlcyksdGhpcy5fb24odGhpcy5oYW5kbGVzLHRoaXMuX2hhbmRsZUV2ZW50cyksdGhpcy5faG92ZXJhYmxlKHRoaXMuaGFuZGxlcyksdGhpcy5fZm9jdXNhYmxlKHRoaXMuaGFuZGxlcyl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5oYW5kbGVzLnJlbW92ZSgpLHRoaXMucmFuZ2UmJnRoaXMucmFuZ2UucmVtb3ZlKCksdGhpcy5fbW91c2VEZXN0cm95KCl9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oZSl7dmFyIGkscyxuLG8sYSxyLGgsbCxjPXRoaXMsdT10aGlzLm9wdGlvbnM7cmV0dXJuIHUuZGlzYWJsZWQ/ITE6KHRoaXMuZWxlbWVudFNpemU9e3dpZHRoOnRoaXMuZWxlbWVudC5vdXRlcldpZHRoKCksaGVpZ2h0OnRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpfSx0aGlzLmVsZW1lbnRPZmZzZXQ9dGhpcy5lbGVtZW50Lm9mZnNldCgpLGk9e3g6ZS5wYWdlWCx5OmUucGFnZVl9LHM9dGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKGkpLG49dGhpcy5fdmFsdWVNYXgoKS10aGlzLl92YWx1ZU1pbigpKzEsdGhpcy5oYW5kbGVzLmVhY2goZnVuY3Rpb24oZSl7dmFyIGk9TWF0aC5hYnMocy1jLnZhbHVlcyhlKSk7KG4+aXx8bj09PWkmJihlPT09Yy5fbGFzdENoYW5nZWRWYWx1ZXx8Yy52YWx1ZXMoZSk9PT11Lm1pbikpJiYobj1pLG89dCh0aGlzKSxhPWUpfSkscj10aGlzLl9zdGFydChlLGEpLHI9PT0hMT8hMToodGhpcy5fbW91c2VTbGlkaW5nPSEwLHRoaXMuX2hhbmRsZUluZGV4PWEsdGhpcy5fYWRkQ2xhc3MobyxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLG8udHJpZ2dlcihcImZvY3VzXCIpLGg9by5vZmZzZXQoKSxsPSF0KGUudGFyZ2V0KS5wYXJlbnRzKCkuYWRkQmFjaygpLmlzKFwiLnVpLXNsaWRlci1oYW5kbGVcIiksdGhpcy5fY2xpY2tPZmZzZXQ9bD97bGVmdDowLHRvcDowfTp7bGVmdDplLnBhZ2VYLWgubGVmdC1vLndpZHRoKCkvMix0b3A6ZS5wYWdlWS1oLnRvcC1vLmhlaWdodCgpLzItKHBhcnNlSW50KG8uY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQoby5jc3MoXCJib3JkZXJCb3R0b21XaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludChvLmNzcyhcIm1hcmdpblRvcFwiKSwxMCl8fDApfSx0aGlzLmhhbmRsZXMuaGFzQ2xhc3MoXCJ1aS1zdGF0ZS1ob3ZlclwiKXx8dGhpcy5fc2xpZGUoZSxhLHMpLHRoaXMuX2FuaW1hdGVPZmY9ITAsITApKX0sX21vdXNlU3RhcnQ6ZnVuY3Rpb24oKXtyZXR1cm4hMH0sX21vdXNlRHJhZzpmdW5jdGlvbih0KXt2YXIgZT17eDp0LnBhZ2VYLHk6dC5wYWdlWX0saT10aGlzLl9ub3JtVmFsdWVGcm9tTW91c2UoZSk7cmV0dXJuIHRoaXMuX3NsaWRlKHQsdGhpcy5faGFuZGxlSW5kZXgsaSksITF9LF9tb3VzZVN0b3A6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuaGFuZGxlcyxudWxsLFwidWktc3RhdGUtYWN0aXZlXCIpLHRoaXMuX21vdXNlU2xpZGluZz0hMSx0aGlzLl9zdG9wKHQsdGhpcy5faGFuZGxlSW5kZXgpLHRoaXMuX2NoYW5nZSh0LHRoaXMuX2hhbmRsZUluZGV4KSx0aGlzLl9oYW5kbGVJbmRleD1udWxsLHRoaXMuX2NsaWNrT2Zmc2V0PW51bGwsdGhpcy5fYW5pbWF0ZU9mZj0hMSwhMX0sX2RldGVjdE9yaWVudGF0aW9uOmZ1bmN0aW9uKCl7dGhpcy5vcmllbnRhdGlvbj1cInZlcnRpY2FsXCI9PT10aGlzLm9wdGlvbnMub3JpZW50YXRpb24/XCJ2ZXJ0aWNhbFwiOlwiaG9yaXpvbnRhbFwifSxfbm9ybVZhbHVlRnJvbU1vdXNlOmZ1bmN0aW9uKHQpe3ZhciBlLGkscyxuLG87cmV0dXJuXCJob3Jpem9udGFsXCI9PT10aGlzLm9yaWVudGF0aW9uPyhlPXRoaXMuZWxlbWVudFNpemUud2lkdGgsaT10LngtdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQtKHRoaXMuX2NsaWNrT2Zmc2V0P3RoaXMuX2NsaWNrT2Zmc2V0LmxlZnQ6MCkpOihlPXRoaXMuZWxlbWVudFNpemUuaGVpZ2h0LGk9dC55LXRoaXMuZWxlbWVudE9mZnNldC50b3AtKHRoaXMuX2NsaWNrT2Zmc2V0P3RoaXMuX2NsaWNrT2Zmc2V0LnRvcDowKSkscz1pL2Uscz4xJiYocz0xKSwwPnMmJihzPTApLFwidmVydGljYWxcIj09PXRoaXMub3JpZW50YXRpb24mJihzPTEtcyksbj10aGlzLl92YWx1ZU1heCgpLXRoaXMuX3ZhbHVlTWluKCksbz10aGlzLl92YWx1ZU1pbigpK3Mqbix0aGlzLl90cmltQWxpZ25WYWx1ZShvKX0sX3VpSGFzaDpmdW5jdGlvbih0LGUsaSl7dmFyIHM9e2hhbmRsZTp0aGlzLmhhbmRsZXNbdF0saGFuZGxlSW5kZXg6dCx2YWx1ZTp2b2lkIDAhPT1lP2U6dGhpcy52YWx1ZSgpfTtyZXR1cm4gdGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSYmKHMudmFsdWU9dm9pZCAwIT09ZT9lOnRoaXMudmFsdWVzKHQpLHMudmFsdWVzPWl8fHRoaXMudmFsdWVzKCkpLHN9LF9oYXNNdWx0aXBsZVZhbHVlczpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMudmFsdWVzJiZ0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aH0sX3N0YXJ0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3RyaWdnZXIoXCJzdGFydFwiLHQsdGhpcy5fdWlIYXNoKGUpKX0sX3NsaWRlOmZ1bmN0aW9uKHQsZSxpKXt2YXIgcyxuLG89dGhpcy52YWx1ZSgpLGE9dGhpcy52YWx1ZXMoKTt0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpJiYobj10aGlzLnZhbHVlcyhlPzA6MSksbz10aGlzLnZhbHVlcyhlKSwyPT09dGhpcy5vcHRpb25zLnZhbHVlcy5sZW5ndGgmJnRoaXMub3B0aW9ucy5yYW5nZT09PSEwJiYoaT0wPT09ZT9NYXRoLm1pbihuLGkpOk1hdGgubWF4KG4saSkpLGFbZV09aSksaSE9PW8mJihzPXRoaXMuX3RyaWdnZXIoXCJzbGlkZVwiLHQsdGhpcy5fdWlIYXNoKGUsaSxhKSkscyE9PSExJiYodGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKT90aGlzLnZhbHVlcyhlLGkpOnRoaXMudmFsdWUoaSkpKX0sX3N0b3A6ZnVuY3Rpb24odCxlKXt0aGlzLl90cmlnZ2VyKFwic3RvcFwiLHQsdGhpcy5fdWlIYXNoKGUpKX0sX2NoYW5nZTpmdW5jdGlvbih0LGUpe3RoaXMuX2tleVNsaWRpbmd8fHRoaXMuX21vdXNlU2xpZGluZ3x8KHRoaXMuX2xhc3RDaGFuZ2VkVmFsdWU9ZSx0aGlzLl90cmlnZ2VyKFwiY2hhbmdlXCIsdCx0aGlzLl91aUhhc2goZSkpKX0sdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGg/KHRoaXMub3B0aW9ucy52YWx1ZT10aGlzLl90cmltQWxpZ25WYWx1ZSh0KSx0aGlzLl9yZWZyZXNoVmFsdWUoKSx0aGlzLl9jaGFuZ2UobnVsbCwwKSx2b2lkIDApOnRoaXMuX3ZhbHVlKCl9LHZhbHVlczpmdW5jdGlvbihlLGkpe3ZhciBzLG4sbztpZihhcmd1bWVudHMubGVuZ3RoPjEpcmV0dXJuIHRoaXMub3B0aW9ucy52YWx1ZXNbZV09dGhpcy5fdHJpbUFsaWduVmFsdWUoaSksdGhpcy5fcmVmcmVzaFZhbHVlKCksdGhpcy5fY2hhbmdlKG51bGwsZSksdm9pZCAwO2lmKCFhcmd1bWVudHMubGVuZ3RoKXJldHVybiB0aGlzLl92YWx1ZXMoKTtpZighdC5pc0FycmF5KGFyZ3VtZW50c1swXSkpcmV0dXJuIHRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCk/dGhpcy5fdmFsdWVzKGUpOnRoaXMudmFsdWUoKTtmb3Iocz10aGlzLm9wdGlvbnMudmFsdWVzLG49YXJndW1lbnRzWzBdLG89MDtzLmxlbmd0aD5vO28rPTEpc1tvXT10aGlzLl90cmltQWxpZ25WYWx1ZShuW29dKSx0aGlzLl9jaGFuZ2UobnVsbCxvKTt0aGlzLl9yZWZyZXNoVmFsdWUoKX0sX3NldE9wdGlvbjpmdW5jdGlvbihlLGkpe3ZhciBzLG49MDtzd2l0Y2goXCJyYW5nZVwiPT09ZSYmdGhpcy5vcHRpb25zLnJhbmdlPT09ITAmJihcIm1pblwiPT09aT8odGhpcy5vcHRpb25zLnZhbHVlPXRoaXMuX3ZhbHVlcygwKSx0aGlzLm9wdGlvbnMudmFsdWVzPW51bGwpOlwibWF4XCI9PT1pJiYodGhpcy5vcHRpb25zLnZhbHVlPXRoaXMuX3ZhbHVlcyh0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aC0xKSx0aGlzLm9wdGlvbnMudmFsdWVzPW51bGwpKSx0LmlzQXJyYXkodGhpcy5vcHRpb25zLnZhbHVlcykmJihuPXRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoKSx0aGlzLl9zdXBlcihlLGkpLGUpe2Nhc2VcIm9yaWVudGF0aW9uXCI6dGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKSx0aGlzLl9yZW1vdmVDbGFzcyhcInVpLXNsaWRlci1ob3Jpem9udGFsIHVpLXNsaWRlci12ZXJ0aWNhbFwiKS5fYWRkQ2xhc3MoXCJ1aS1zbGlkZXItXCIrdGhpcy5vcmllbnRhdGlvbiksdGhpcy5fcmVmcmVzaFZhbHVlKCksdGhpcy5vcHRpb25zLnJhbmdlJiZ0aGlzLl9yZWZyZXNoUmFuZ2UoaSksdGhpcy5oYW5kbGVzLmNzcyhcImhvcml6b250YWxcIj09PWk/XCJib3R0b21cIjpcImxlZnRcIixcIlwiKTticmVhaztjYXNlXCJ2YWx1ZVwiOnRoaXMuX2FuaW1hdGVPZmY9ITAsdGhpcy5fcmVmcmVzaFZhbHVlKCksdGhpcy5fY2hhbmdlKG51bGwsMCksdGhpcy5fYW5pbWF0ZU9mZj0hMTticmVhaztjYXNlXCJ2YWx1ZXNcIjpmb3IodGhpcy5fYW5pbWF0ZU9mZj0hMCx0aGlzLl9yZWZyZXNoVmFsdWUoKSxzPW4tMTtzPj0wO3MtLSl0aGlzLl9jaGFuZ2UobnVsbCxzKTt0aGlzLl9hbmltYXRlT2ZmPSExO2JyZWFrO2Nhc2VcInN0ZXBcIjpjYXNlXCJtaW5cIjpjYXNlXCJtYXhcIjp0aGlzLl9hbmltYXRlT2ZmPSEwLHRoaXMuX2NhbGN1bGF0ZU5ld01heCgpLHRoaXMuX3JlZnJlc2hWYWx1ZSgpLHRoaXMuX2FuaW1hdGVPZmY9ITE7YnJlYWs7Y2FzZVwicmFuZ2VcIjp0aGlzLl9hbmltYXRlT2ZmPSEwLHRoaXMuX3JlZnJlc2goKSx0aGlzLl9hbmltYXRlT2ZmPSExfX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMuX3RvZ2dsZUNsYXNzKG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCl9LF92YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy52YWx1ZTtyZXR1cm4gdD10aGlzLl90cmltQWxpZ25WYWx1ZSh0KX0sX3ZhbHVlczpmdW5jdGlvbih0KXt2YXIgZSxpLHM7aWYoYXJndW1lbnRzLmxlbmd0aClyZXR1cm4gZT10aGlzLm9wdGlvbnMudmFsdWVzW3RdLGU9dGhpcy5fdHJpbUFsaWduVmFsdWUoZSk7aWYodGhpcy5faGFzTXVsdGlwbGVWYWx1ZXMoKSl7Zm9yKGk9dGhpcy5vcHRpb25zLnZhbHVlcy5zbGljZSgpLHM9MDtpLmxlbmd0aD5zO3MrPTEpaVtzXT10aGlzLl90cmltQWxpZ25WYWx1ZShpW3NdKTtyZXR1cm4gaX1yZXR1cm5bXX0sX3RyaW1BbGlnblZhbHVlOmZ1bmN0aW9uKHQpe2lmKHRoaXMuX3ZhbHVlTWluKCk+PXQpcmV0dXJuIHRoaXMuX3ZhbHVlTWluKCk7aWYodD49dGhpcy5fdmFsdWVNYXgoKSlyZXR1cm4gdGhpcy5fdmFsdWVNYXgoKTt2YXIgZT10aGlzLm9wdGlvbnMuc3RlcD4wP3RoaXMub3B0aW9ucy5zdGVwOjEsaT0odC10aGlzLl92YWx1ZU1pbigpKSVlLHM9dC1pO3JldHVybiAyKk1hdGguYWJzKGkpPj1lJiYocys9aT4wP2U6LWUpLHBhcnNlRmxvYXQocy50b0ZpeGVkKDUpKX0sX2NhbGN1bGF0ZU5ld01heDpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy5tYXgsZT10aGlzLl92YWx1ZU1pbigpLGk9dGhpcy5vcHRpb25zLnN0ZXAscz1NYXRoLnJvdW5kKCh0LWUpL2kpKmk7dD1zK2UsdD50aGlzLm9wdGlvbnMubWF4JiYodC09aSksdGhpcy5tYXg9cGFyc2VGbG9hdCh0LnRvRml4ZWQodGhpcy5fcHJlY2lzaW9uKCkpKX0sX3ByZWNpc2lvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3ByZWNpc2lvbk9mKHRoaXMub3B0aW9ucy5zdGVwKTtyZXR1cm4gbnVsbCE9PXRoaXMub3B0aW9ucy5taW4mJih0PU1hdGgubWF4KHQsdGhpcy5fcHJlY2lzaW9uT2YodGhpcy5vcHRpb25zLm1pbikpKSx0fSxfcHJlY2lzaW9uT2Y6ZnVuY3Rpb24odCl7dmFyIGU9XCJcIit0LGk9ZS5pbmRleE9mKFwiLlwiKTtyZXR1cm4tMT09PWk/MDplLmxlbmd0aC1pLTF9LF92YWx1ZU1pbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMubWlufSxfdmFsdWVNYXg6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5tYXh9LF9yZWZyZXNoUmFuZ2U6ZnVuY3Rpb24odCl7XCJ2ZXJ0aWNhbFwiPT09dCYmdGhpcy5yYW5nZS5jc3Moe3dpZHRoOlwiXCIsbGVmdDpcIlwifSksXCJob3Jpem9udGFsXCI9PT10JiZ0aGlzLnJhbmdlLmNzcyh7aGVpZ2h0OlwiXCIsYm90dG9tOlwiXCJ9KX0sX3JlZnJlc2hWYWx1ZTpmdW5jdGlvbigpe3ZhciBlLGkscyxuLG8sYT10aGlzLm9wdGlvbnMucmFuZ2Uscj10aGlzLm9wdGlvbnMsaD10aGlzLGw9dGhpcy5fYW5pbWF0ZU9mZj8hMTpyLmFuaW1hdGUsYz17fTt0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpP3RoaXMuaGFuZGxlcy5lYWNoKGZ1bmN0aW9uKHMpe2k9MTAwKigoaC52YWx1ZXMocyktaC5fdmFsdWVNaW4oKSkvKGguX3ZhbHVlTWF4KCktaC5fdmFsdWVNaW4oKSkpLGNbXCJob3Jpem9udGFsXCI9PT1oLm9yaWVudGF0aW9uP1wibGVmdFwiOlwiYm90dG9tXCJdPWkrXCIlXCIsdCh0aGlzKS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXShjLHIuYW5pbWF0ZSksaC5vcHRpb25zLnJhbmdlPT09ITAmJihcImhvcml6b250YWxcIj09PWgub3JpZW50YXRpb24/KDA9PT1zJiZoLnJhbmdlLnN0b3AoMSwxKVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHtsZWZ0OmkrXCIlXCJ9LHIuYW5pbWF0ZSksMT09PXMmJmgucmFuZ2VbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7d2lkdGg6aS1lK1wiJVwifSx7cXVldWU6ITEsZHVyYXRpb246ci5hbmltYXRlfSkpOigwPT09cyYmaC5yYW5nZS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7Ym90dG9tOmkrXCIlXCJ9LHIuYW5pbWF0ZSksMT09PXMmJmgucmFuZ2VbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7aGVpZ2h0OmktZStcIiVcIn0se3F1ZXVlOiExLGR1cmF0aW9uOnIuYW5pbWF0ZX0pKSksZT1pfSk6KHM9dGhpcy52YWx1ZSgpLG49dGhpcy5fdmFsdWVNaW4oKSxvPXRoaXMuX3ZhbHVlTWF4KCksaT1vIT09bj8xMDAqKChzLW4pLyhvLW4pKTowLGNbXCJob3Jpem9udGFsXCI9PT10aGlzLm9yaWVudGF0aW9uP1wibGVmdFwiOlwiYm90dG9tXCJdPWkrXCIlXCIsdGhpcy5oYW5kbGUuc3RvcCgxLDEpW2w/XCJhbmltYXRlXCI6XCJjc3NcIl0oYyxyLmFuaW1hdGUpLFwibWluXCI9PT1hJiZcImhvcml6b250YWxcIj09PXRoaXMub3JpZW50YXRpb24mJnRoaXMucmFuZ2Uuc3RvcCgxLDEpW2w/XCJhbmltYXRlXCI6XCJjc3NcIl0oe3dpZHRoOmkrXCIlXCJ9LHIuYW5pbWF0ZSksXCJtYXhcIj09PWEmJlwiaG9yaXpvbnRhbFwiPT09dGhpcy5vcmllbnRhdGlvbiYmdGhpcy5yYW5nZS5zdG9wKDEsMSlbbD9cImFuaW1hdGVcIjpcImNzc1wiXSh7d2lkdGg6MTAwLWkrXCIlXCJ9LHIuYW5pbWF0ZSksXCJtaW5cIj09PWEmJlwidmVydGljYWxcIj09PXRoaXMub3JpZW50YXRpb24mJnRoaXMucmFuZ2Uuc3RvcCgxLDEpW2w/XCJhbmltYXRlXCI6XCJjc3NcIl0oe2hlaWdodDppK1wiJVwifSxyLmFuaW1hdGUpLFwibWF4XCI9PT1hJiZcInZlcnRpY2FsXCI9PT10aGlzLm9yaWVudGF0aW9uJiZ0aGlzLnJhbmdlLnN0b3AoMSwxKVtsP1wiYW5pbWF0ZVwiOlwiY3NzXCJdKHtoZWlnaHQ6MTAwLWkrXCIlXCJ9LHIuYW5pbWF0ZSkpfSxfaGFuZGxlRXZlbnRzOntrZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbixvLGE9dChlLnRhcmdldCkuZGF0YShcInVpLXNsaWRlci1oYW5kbGUtaW5kZXhcIik7c3dpdGNoKGUua2V5Q29kZSl7Y2FzZSB0LnVpLmtleUNvZGUuSE9NRTpjYXNlIHQudWkua2V5Q29kZS5FTkQ6Y2FzZSB0LnVpLmtleUNvZGUuUEFHRV9VUDpjYXNlIHQudWkua2V5Q29kZS5QQUdFX0RPV046Y2FzZSB0LnVpLmtleUNvZGUuVVA6Y2FzZSB0LnVpLmtleUNvZGUuUklHSFQ6Y2FzZSB0LnVpLmtleUNvZGUuRE9XTjpjYXNlIHQudWkua2V5Q29kZS5MRUZUOmlmKGUucHJldmVudERlZmF1bHQoKSwhdGhpcy5fa2V5U2xpZGluZyYmKHRoaXMuX2tleVNsaWRpbmc9ITAsdGhpcy5fYWRkQ2xhc3ModChlLnRhcmdldCksbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSxpPXRoaXMuX3N0YXJ0KGUsYSksaT09PSExKSlyZXR1cm59c3dpdGNoKG89dGhpcy5vcHRpb25zLnN0ZXAscz1uPXRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCk/dGhpcy52YWx1ZXMoYSk6dGhpcy52YWx1ZSgpLGUua2V5Q29kZSl7Y2FzZSB0LnVpLmtleUNvZGUuSE9NRTpuPXRoaXMuX3ZhbHVlTWluKCk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRU5EOm49dGhpcy5fdmFsdWVNYXgoKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5QQUdFX1VQOm49dGhpcy5fdHJpbUFsaWduVmFsdWUocysodGhpcy5fdmFsdWVNYXgoKS10aGlzLl92YWx1ZU1pbigpKS90aGlzLm51bVBhZ2VzKTticmVhaztjYXNlIHQudWkua2V5Q29kZS5QQUdFX0RPV046bj10aGlzLl90cmltQWxpZ25WYWx1ZShzLSh0aGlzLl92YWx1ZU1heCgpLXRoaXMuX3ZhbHVlTWluKCkpL3RoaXMubnVtUGFnZXMpO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlVQOmNhc2UgdC51aS5rZXlDb2RlLlJJR0hUOmlmKHM9PT10aGlzLl92YWx1ZU1heCgpKXJldHVybjtuPXRoaXMuX3RyaW1BbGlnblZhbHVlKHMrbyk7YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRE9XTjpjYXNlIHQudWkua2V5Q29kZS5MRUZUOmlmKHM9PT10aGlzLl92YWx1ZU1pbigpKXJldHVybjtuPXRoaXMuX3RyaW1BbGlnblZhbHVlKHMtbyl9dGhpcy5fc2xpZGUoZSxhLG4pfSxrZXl1cDpmdW5jdGlvbihlKXt2YXIgaT10KGUudGFyZ2V0KS5kYXRhKFwidWktc2xpZGVyLWhhbmRsZS1pbmRleFwiKTt0aGlzLl9rZXlTbGlkaW5nJiYodGhpcy5fa2V5U2xpZGluZz0hMSx0aGlzLl9zdG9wKGUsaSksdGhpcy5fY2hhbmdlKGUsaSksdGhpcy5fcmVtb3ZlQ2xhc3ModChlLnRhcmdldCksbnVsbCxcInVpLXN0YXRlLWFjdGl2ZVwiKSl9fX0pLHQud2lkZ2V0KFwidWkuc29ydGFibGVcIix0LnVpLm1vdXNlLHt2ZXJzaW9uOlwiMS4xMi4xXCIsd2lkZ2V0RXZlbnRQcmVmaXg6XCJzb3J0XCIscmVhZHk6ITEsb3B0aW9uczp7YXBwZW5kVG86XCJwYXJlbnRcIixheGlzOiExLGNvbm5lY3RXaXRoOiExLGNvbnRhaW5tZW50OiExLGN1cnNvcjpcImF1dG9cIixjdXJzb3JBdDohMSxkcm9wT25FbXB0eTohMCxmb3JjZVBsYWNlaG9sZGVyU2l6ZTohMSxmb3JjZUhlbHBlclNpemU6ITEsZ3JpZDohMSxoYW5kbGU6ITEsaGVscGVyOlwib3JpZ2luYWxcIixpdGVtczpcIj4gKlwiLG9wYWNpdHk6ITEscGxhY2Vob2xkZXI6ITEscmV2ZXJ0OiExLHNjcm9sbDohMCxzY3JvbGxTZW5zaXRpdml0eToyMCxzY3JvbGxTcGVlZDoyMCxzY29wZTpcImRlZmF1bHRcIix0b2xlcmFuY2U6XCJpbnRlcnNlY3RcIix6SW5kZXg6MWUzLGFjdGl2YXRlOm51bGwsYmVmb3JlU3RvcDpudWxsLGNoYW5nZTpudWxsLGRlYWN0aXZhdGU6bnVsbCxvdXQ6bnVsbCxvdmVyOm51bGwscmVjZWl2ZTpudWxsLHJlbW92ZTpudWxsLHNvcnQ6bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbCx1cGRhdGU6bnVsbH0sX2lzT3ZlckF4aXM6ZnVuY3Rpb24odCxlLGkpe3JldHVybiB0Pj1lJiZlK2k+dH0sX2lzRmxvYXRpbmc6ZnVuY3Rpb24odCl7cmV0dXJuL2xlZnR8cmlnaHQvLnRlc3QodC5jc3MoXCJmbG9hdFwiKSl8fC9pbmxpbmV8dGFibGUtY2VsbC8udGVzdCh0LmNzcyhcImRpc3BsYXlcIikpfSxfY3JlYXRlOmZ1bmN0aW9uKCl7dGhpcy5jb250YWluZXJDYWNoZT17fSx0aGlzLl9hZGRDbGFzcyhcInVpLXNvcnRhYmxlXCIpLHRoaXMucmVmcmVzaCgpLHRoaXMub2Zmc2V0PXRoaXMuZWxlbWVudC5vZmZzZXQoKSx0aGlzLl9tb3VzZUluaXQoKSx0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKSx0aGlzLnJlYWR5PSEwfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKHQsZSl7dGhpcy5fc3VwZXIodCxlKSxcImhhbmRsZVwiPT09dCYmdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCl9LF9zZXRIYW5kbGVDbGFzc05hbWU6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuX3JlbW92ZUNsYXNzKHRoaXMuZWxlbWVudC5maW5kKFwiLnVpLXNvcnRhYmxlLWhhbmRsZVwiKSxcInVpLXNvcnRhYmxlLWhhbmRsZVwiKSx0LmVhY2godGhpcy5pdGVtcyxmdW5jdGlvbigpe2UuX2FkZENsYXNzKHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5oYW5kbGU/dGhpcy5pdGVtLmZpbmQodGhpcy5pbnN0YW5jZS5vcHRpb25zLmhhbmRsZSk6dGhpcy5pdGVtLFwidWktc29ydGFibGUtaGFuZGxlXCIpfSl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fbW91c2VEZXN0cm95KCk7Zm9yKHZhciB0PXRoaXMuaXRlbXMubGVuZ3RoLTE7dD49MDt0LS0pdGhpcy5pdGVtc1t0XS5pdGVtLnJlbW92ZURhdGEodGhpcy53aWRnZXROYW1lK1wiLWl0ZW1cIik7cmV0dXJuIHRoaXN9LF9tb3VzZUNhcHR1cmU6ZnVuY3Rpb24oZSxpKXt2YXIgcz1udWxsLG49ITEsbz10aGlzO3JldHVybiB0aGlzLnJldmVydGluZz8hMTp0aGlzLm9wdGlvbnMuZGlzYWJsZWR8fFwic3RhdGljXCI9PT10aGlzLm9wdGlvbnMudHlwZT8hMToodGhpcy5fcmVmcmVzaEl0ZW1zKGUpLHQoZS50YXJnZXQpLnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKCl7cmV0dXJuIHQuZGF0YSh0aGlzLG8ud2lkZ2V0TmFtZStcIi1pdGVtXCIpPT09bz8ocz10KHRoaXMpLCExKTp2b2lkIDB9KSx0LmRhdGEoZS50YXJnZXQsby53aWRnZXROYW1lK1wiLWl0ZW1cIik9PT1vJiYocz10KGUudGFyZ2V0KSkscz8hdGhpcy5vcHRpb25zLmhhbmRsZXx8aXx8KHQodGhpcy5vcHRpb25zLmhhbmRsZSxzKS5maW5kKFwiKlwiKS5hZGRCYWNrKCkuZWFjaChmdW5jdGlvbigpe3RoaXM9PT1lLnRhcmdldCYmKG49ITApfSksbik/KHRoaXMuY3VycmVudEl0ZW09cyx0aGlzLl9yZW1vdmVDdXJyZW50c0Zyb21JdGVtcygpLCEwKTohMTohMSl9LF9tb3VzZVN0YXJ0OmZ1bmN0aW9uKGUsaSxzKXt2YXIgbixvLGE9dGhpcy5vcHRpb25zO2lmKHRoaXMuY3VycmVudENvbnRhaW5lcj10aGlzLHRoaXMucmVmcmVzaFBvc2l0aW9ucygpLHRoaXMuaGVscGVyPXRoaXMuX2NyZWF0ZUhlbHBlcihlKSx0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCksdGhpcy5fY2FjaGVNYXJnaW5zKCksdGhpcy5zY3JvbGxQYXJlbnQ9dGhpcy5oZWxwZXIuc2Nyb2xsUGFyZW50KCksdGhpcy5vZmZzZXQ9dGhpcy5jdXJyZW50SXRlbS5vZmZzZXQoKSx0aGlzLm9mZnNldD17dG9wOnRoaXMub2Zmc2V0LnRvcC10aGlzLm1hcmdpbnMudG9wLGxlZnQ6dGhpcy5vZmZzZXQubGVmdC10aGlzLm1hcmdpbnMubGVmdH0sdC5leHRlbmQodGhpcy5vZmZzZXQse2NsaWNrOntsZWZ0OmUucGFnZVgtdGhpcy5vZmZzZXQubGVmdCx0b3A6ZS5wYWdlWS10aGlzLm9mZnNldC50b3B9LHBhcmVudDp0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSxyZWxhdGl2ZTp0aGlzLl9nZXRSZWxhdGl2ZU9mZnNldCgpfSksdGhpcy5oZWxwZXIuY3NzKFwicG9zaXRpb25cIixcImFic29sdXRlXCIpLHRoaXMuY3NzUG9zaXRpb249dGhpcy5oZWxwZXIuY3NzKFwicG9zaXRpb25cIiksdGhpcy5vcmlnaW5hbFBvc2l0aW9uPXRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZSksdGhpcy5vcmlnaW5hbFBhZ2VYPWUucGFnZVgsdGhpcy5vcmlnaW5hbFBhZ2VZPWUucGFnZVksYS5jdXJzb3JBdCYmdGhpcy5fYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcihhLmN1cnNvckF0KSx0aGlzLmRvbVBvc2l0aW9uPXtwcmV2OnRoaXMuY3VycmVudEl0ZW0ucHJldigpWzBdLHBhcmVudDp0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpWzBdfSx0aGlzLmhlbHBlclswXSE9PXRoaXMuY3VycmVudEl0ZW1bMF0mJnRoaXMuY3VycmVudEl0ZW0uaGlkZSgpLHRoaXMuX2NyZWF0ZVBsYWNlaG9sZGVyKCksYS5jb250YWlubWVudCYmdGhpcy5fc2V0Q29udGFpbm1lbnQoKSxhLmN1cnNvciYmXCJhdXRvXCIhPT1hLmN1cnNvciYmKG89dGhpcy5kb2N1bWVudC5maW5kKFwiYm9keVwiKSx0aGlzLnN0b3JlZEN1cnNvcj1vLmNzcyhcImN1cnNvclwiKSxvLmNzcyhcImN1cnNvclwiLGEuY3Vyc29yKSx0aGlzLnN0b3JlZFN0eWxlc2hlZXQ9dChcIjxzdHlsZT4qeyBjdXJzb3I6IFwiK2EuY3Vyc29yK1wiICFpbXBvcnRhbnQ7IH08L3N0eWxlPlwiKS5hcHBlbmRUbyhvKSksYS5vcGFjaXR5JiYodGhpcy5oZWxwZXIuY3NzKFwib3BhY2l0eVwiKSYmKHRoaXMuX3N0b3JlZE9wYWNpdHk9dGhpcy5oZWxwZXIuY3NzKFwib3BhY2l0eVwiKSksdGhpcy5oZWxwZXIuY3NzKFwib3BhY2l0eVwiLGEub3BhY2l0eSkpLGEuekluZGV4JiYodGhpcy5oZWxwZXIuY3NzKFwiekluZGV4XCIpJiYodGhpcy5fc3RvcmVkWkluZGV4PXRoaXMuaGVscGVyLmNzcyhcInpJbmRleFwiKSksdGhpcy5oZWxwZXIuY3NzKFwiekluZGV4XCIsYS56SW5kZXgpKSx0aGlzLnNjcm9sbFBhcmVudFswXSE9PXRoaXMuZG9jdW1lbnRbMF0mJlwiSFRNTFwiIT09dGhpcy5zY3JvbGxQYXJlbnRbMF0udGFnTmFtZSYmKHRoaXMub3ZlcmZsb3dPZmZzZXQ9dGhpcy5zY3JvbGxQYXJlbnQub2Zmc2V0KCkpLHRoaXMuX3RyaWdnZXIoXCJzdGFydFwiLGUsdGhpcy5fdWlIYXNoKCkpLHRoaXMuX3ByZXNlcnZlSGVscGVyUHJvcG9ydGlvbnN8fHRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKSwhcylmb3Iobj10aGlzLmNvbnRhaW5lcnMubGVuZ3RoLTE7bj49MDtuLS0pdGhpcy5jb250YWluZXJzW25dLl90cmlnZ2VyKFwiYWN0aXZhdGVcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSk7cmV0dXJuIHQudWkuZGRtYW5hZ2VyJiYodC51aS5kZG1hbmFnZXIuY3VycmVudD10aGlzKSx0LnVpLmRkbWFuYWdlciYmIWEuZHJvcEJlaGF2aW91ciYmdC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHModGhpcyxlKSx0aGlzLmRyYWdnaW5nPSEwLHRoaXMuX2FkZENsYXNzKHRoaXMuaGVscGVyLFwidWktc29ydGFibGUtaGVscGVyXCIpLHRoaXMuX21vdXNlRHJhZyhlKSwhMH0sX21vdXNlRHJhZzpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbyxhPXRoaXMub3B0aW9ucyxyPSExO2Zvcih0aGlzLnBvc2l0aW9uPXRoaXMuX2dlbmVyYXRlUG9zaXRpb24oZSksdGhpcy5wb3NpdGlvbkFicz10aGlzLl9jb252ZXJ0UG9zaXRpb25UbyhcImFic29sdXRlXCIpLHRoaXMubGFzdFBvc2l0aW9uQWJzfHwodGhpcy5sYXN0UG9zaXRpb25BYnM9dGhpcy5wb3NpdGlvbkFicyksdGhpcy5vcHRpb25zLnNjcm9sbCYmKHRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5kb2N1bWVudFswXSYmXCJIVE1MXCIhPT10aGlzLnNjcm9sbFBhcmVudFswXS50YWdOYW1lPyh0aGlzLm92ZXJmbG93T2Zmc2V0LnRvcCt0aGlzLnNjcm9sbFBhcmVudFswXS5vZmZzZXRIZWlnaHQtZS5wYWdlWTxhLnNjcm9sbFNlbnNpdGl2aXR5P3RoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcD1yPXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcCthLnNjcm9sbFNwZWVkOmUucGFnZVktdGhpcy5vdmVyZmxvd09mZnNldC50b3A8YS5zY3JvbGxTZW5zaXRpdml0eSYmKHRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcD1yPXRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbFRvcC1hLnNjcm9sbFNwZWVkKSx0aGlzLm92ZXJmbG93T2Zmc2V0LmxlZnQrdGhpcy5zY3JvbGxQYXJlbnRbMF0ub2Zmc2V0V2lkdGgtZS5wYWdlWDxhLnNjcm9sbFNlbnNpdGl2aXR5P3RoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQ9cj10aGlzLnNjcm9sbFBhcmVudFswXS5zY3JvbGxMZWZ0K2Euc2Nyb2xsU3BlZWQ6ZS5wYWdlWC10aGlzLm92ZXJmbG93T2Zmc2V0LmxlZnQ8YS5zY3JvbGxTZW5zaXRpdml0eSYmKHRoaXMuc2Nyb2xsUGFyZW50WzBdLnNjcm9sbExlZnQ9cj10aGlzLnNjcm9sbFBhcmVudFswXS5zY3JvbGxMZWZ0LWEuc2Nyb2xsU3BlZWQpKTooZS5wYWdlWS10aGlzLmRvY3VtZW50LnNjcm9sbFRvcCgpPGEuc2Nyb2xsU2Vuc2l0aXZpdHk/cj10aGlzLmRvY3VtZW50LnNjcm9sbFRvcCh0aGlzLmRvY3VtZW50LnNjcm9sbFRvcCgpLWEuc2Nyb2xsU3BlZWQpOnRoaXMud2luZG93LmhlaWdodCgpLShlLnBhZ2VZLXRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCkpPGEuc2Nyb2xsU2Vuc2l0aXZpdHkmJihyPXRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKHRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCkrYS5zY3JvbGxTcGVlZCkpLGUucGFnZVgtdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KCk8YS5zY3JvbGxTZW5zaXRpdml0eT9yPXRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCh0aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoKS1hLnNjcm9sbFNwZWVkKTp0aGlzLndpbmRvdy53aWR0aCgpLShlLnBhZ2VYLXRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpKTxhLnNjcm9sbFNlbnNpdGl2aXR5JiYocj10aGlzLmRvY3VtZW50LnNjcm9sbExlZnQodGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KCkrYS5zY3JvbGxTcGVlZCkpKSxyIT09ITEmJnQudWkuZGRtYW5hZ2VyJiYhYS5kcm9wQmVoYXZpb3VyJiZ0LnVpLmRkbWFuYWdlci5wcmVwYXJlT2Zmc2V0cyh0aGlzLGUpKSx0aGlzLnBvc2l0aW9uQWJzPXRoaXMuX2NvbnZlcnRQb3NpdGlvblRvKFwiYWJzb2x1dGVcIiksdGhpcy5vcHRpb25zLmF4aXMmJlwieVwiPT09dGhpcy5vcHRpb25zLmF4aXN8fCh0aGlzLmhlbHBlclswXS5zdHlsZS5sZWZ0PXRoaXMucG9zaXRpb24ubGVmdCtcInB4XCIpLHRoaXMub3B0aW9ucy5heGlzJiZcInhcIj09PXRoaXMub3B0aW9ucy5heGlzfHwodGhpcy5oZWxwZXJbMF0uc3R5bGUudG9wPXRoaXMucG9zaXRpb24udG9wK1wicHhcIiksaT10aGlzLml0ZW1zLmxlbmd0aC0xO2k+PTA7aS0tKWlmKHM9dGhpcy5pdGVtc1tpXSxuPXMuaXRlbVswXSxvPXRoaXMuX2ludGVyc2VjdHNXaXRoUG9pbnRlcihzKSxvJiZzLmluc3RhbmNlPT09dGhpcy5jdXJyZW50Q29udGFpbmVyJiZuIT09dGhpcy5jdXJyZW50SXRlbVswXSYmdGhpcy5wbGFjZWhvbGRlclsxPT09bz9cIm5leHRcIjpcInByZXZcIl0oKVswXSE9PW4mJiF0LmNvbnRhaW5zKHRoaXMucGxhY2Vob2xkZXJbMF0sbikmJihcInNlbWktZHluYW1pY1wiPT09dGhpcy5vcHRpb25zLnR5cGU/IXQuY29udGFpbnModGhpcy5lbGVtZW50WzBdLG4pOiEwKSl7aWYodGhpcy5kaXJlY3Rpb249MT09PW8/XCJkb3duXCI6XCJ1cFwiLFwicG9pbnRlclwiIT09dGhpcy5vcHRpb25zLnRvbGVyYW5jZSYmIXRoaXMuX2ludGVyc2VjdHNXaXRoU2lkZXMocykpYnJlYWs7dGhpcy5fcmVhcnJhbmdlKGUscyksdGhpcy5fdHJpZ2dlcihcImNoYW5nZVwiLGUsdGhpcy5fdWlIYXNoKCkpO2JyZWFrfXJldHVybiB0aGlzLl9jb250YWN0Q29udGFpbmVycyhlKSx0LnVpLmRkbWFuYWdlciYmdC51aS5kZG1hbmFnZXIuZHJhZyh0aGlzLGUpLHRoaXMuX3RyaWdnZXIoXCJzb3J0XCIsZSx0aGlzLl91aUhhc2goKSksdGhpcy5sYXN0UG9zaXRpb25BYnM9dGhpcy5wb3NpdGlvbkFicywhMX0sX21vdXNlU3RvcDpmdW5jdGlvbihlLGkpe2lmKGUpe2lmKHQudWkuZGRtYW5hZ2VyJiYhdGhpcy5vcHRpb25zLmRyb3BCZWhhdmlvdXImJnQudWkuZGRtYW5hZ2VyLmRyb3AodGhpcyxlKSx0aGlzLm9wdGlvbnMucmV2ZXJ0KXt2YXIgcz10aGlzLG49dGhpcy5wbGFjZWhvbGRlci5vZmZzZXQoKSxvPXRoaXMub3B0aW9ucy5heGlzLGE9e307byYmXCJ4XCIhPT1vfHwoYS5sZWZ0PW4ubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdC10aGlzLm1hcmdpbnMubGVmdCsodGhpcy5vZmZzZXRQYXJlbnRbMF09PT10aGlzLmRvY3VtZW50WzBdLmJvZHk/MDp0aGlzLm9mZnNldFBhcmVudFswXS5zY3JvbGxMZWZ0KSksbyYmXCJ5XCIhPT1vfHwoYS50b3A9bi50b3AtdGhpcy5vZmZzZXQucGFyZW50LnRvcC10aGlzLm1hcmdpbnMudG9wKyh0aGlzLm9mZnNldFBhcmVudFswXT09PXRoaXMuZG9jdW1lbnRbMF0uYm9keT8wOnRoaXMub2Zmc2V0UGFyZW50WzBdLnNjcm9sbFRvcCkpLHRoaXMucmV2ZXJ0aW5nPSEwLHQodGhpcy5oZWxwZXIpLmFuaW1hdGUoYSxwYXJzZUludCh0aGlzLm9wdGlvbnMucmV2ZXJ0LDEwKXx8NTAwLGZ1bmN0aW9uKCl7cy5fY2xlYXIoZSl9KX1lbHNlIHRoaXMuX2NsZWFyKGUsaSk7cmV0dXJuITF9fSxjYW5jZWw6ZnVuY3Rpb24oKXtpZih0aGlzLmRyYWdnaW5nKXt0aGlzLl9tb3VzZVVwKG5ldyB0LkV2ZW50KFwibW91c2V1cFwiLHt0YXJnZXQ6bnVsbH0pKSxcIm9yaWdpbmFsXCI9PT10aGlzLm9wdGlvbnMuaGVscGVyPyh0aGlzLmN1cnJlbnRJdGVtLmNzcyh0aGlzLl9zdG9yZWRDU1MpLHRoaXMuX3JlbW92ZUNsYXNzKHRoaXMuY3VycmVudEl0ZW0sXCJ1aS1zb3J0YWJsZS1oZWxwZXJcIikpOnRoaXMuY3VycmVudEl0ZW0uc2hvdygpO2Zvcih2YXIgZT10aGlzLmNvbnRhaW5lcnMubGVuZ3RoLTE7ZT49MDtlLS0pdGhpcy5jb250YWluZXJzW2VdLl90cmlnZ2VyKFwiZGVhY3RpdmF0ZVwiLG51bGwsdGhpcy5fdWlIYXNoKHRoaXMpKSx0aGlzLmNvbnRhaW5lcnNbZV0uY29udGFpbmVyQ2FjaGUub3ZlciYmKHRoaXMuY29udGFpbmVyc1tlXS5fdHJpZ2dlcihcIm91dFwiLG51bGwsdGhpcy5fdWlIYXNoKHRoaXMpKSx0aGlzLmNvbnRhaW5lcnNbZV0uY29udGFpbmVyQ2FjaGUub3Zlcj0wKX1yZXR1cm4gdGhpcy5wbGFjZWhvbGRlciYmKHRoaXMucGxhY2Vob2xkZXJbMF0ucGFyZW50Tm9kZSYmdGhpcy5wbGFjZWhvbGRlclswXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHRoaXMucGxhY2Vob2xkZXJbMF0pLFwib3JpZ2luYWxcIiE9PXRoaXMub3B0aW9ucy5oZWxwZXImJnRoaXMuaGVscGVyJiZ0aGlzLmhlbHBlclswXS5wYXJlbnROb2RlJiZ0aGlzLmhlbHBlci5yZW1vdmUoKSx0LmV4dGVuZCh0aGlzLHtoZWxwZXI6bnVsbCxkcmFnZ2luZzohMSxyZXZlcnRpbmc6ITEsX25vRmluYWxTb3J0Om51bGx9KSx0aGlzLmRvbVBvc2l0aW9uLnByZXY/dCh0aGlzLmRvbVBvc2l0aW9uLnByZXYpLmFmdGVyKHRoaXMuY3VycmVudEl0ZW0pOnQodGhpcy5kb21Qb3NpdGlvbi5wYXJlbnQpLnByZXBlbmQodGhpcy5jdXJyZW50SXRlbSkpLHRoaXN9LHNlcmlhbGl6ZTpmdW5jdGlvbihlKXt2YXIgaT10aGlzLl9nZXRJdGVtc0FzalF1ZXJ5KGUmJmUuY29ubmVjdGVkKSxzPVtdO3JldHVybiBlPWV8fHt9LHQoaSkuZWFjaChmdW5jdGlvbigpe3ZhciBpPSh0KGUuaXRlbXx8dGhpcykuYXR0cihlLmF0dHJpYnV0ZXx8XCJpZFwiKXx8XCJcIikubWF0Y2goZS5leHByZXNzaW9ufHwvKC4rKVtcXC09X10oLispLyk7aSYmcy5wdXNoKChlLmtleXx8aVsxXStcIltdXCIpK1wiPVwiKyhlLmtleSYmZS5leHByZXNzaW9uP2lbMV06aVsyXSkpfSksIXMubGVuZ3RoJiZlLmtleSYmcy5wdXNoKGUua2V5K1wiPVwiKSxzLmpvaW4oXCImXCIpfSx0b0FycmF5OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMuX2dldEl0ZW1zQXNqUXVlcnkoZSYmZS5jb25uZWN0ZWQpLHM9W107cmV0dXJuIGU9ZXx8e30saS5lYWNoKGZ1bmN0aW9uKCl7cy5wdXNoKHQoZS5pdGVtfHx0aGlzKS5hdHRyKGUuYXR0cmlidXRlfHxcImlkXCIpfHxcIlwiKX0pLHN9LF9pbnRlcnNlY3RzV2l0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnBvc2l0aW9uQWJzLmxlZnQsaT1lK3RoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgscz10aGlzLnBvc2l0aW9uQWJzLnRvcCxuPXMrdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQsbz10LmxlZnQsYT1vK3Qud2lkdGgscj10LnRvcCxoPXIrdC5oZWlnaHQsbD10aGlzLm9mZnNldC5jbGljay50b3AsYz10aGlzLm9mZnNldC5jbGljay5sZWZ0LHU9XCJ4XCI9PT10aGlzLm9wdGlvbnMuYXhpc3x8cytsPnImJmg+cytsLGQ9XCJ5XCI9PT10aGlzLm9wdGlvbnMuYXhpc3x8ZStjPm8mJmE+ZStjLHA9dSYmZDtyZXR1cm5cInBvaW50ZXJcIj09PXRoaXMub3B0aW9ucy50b2xlcmFuY2V8fHRoaXMub3B0aW9ucy5mb3JjZVBvaW50ZXJGb3JDb250YWluZXJzfHxcInBvaW50ZXJcIiE9PXRoaXMub3B0aW9ucy50b2xlcmFuY2UmJnRoaXMuaGVscGVyUHJvcG9ydGlvbnNbdGhpcy5mbG9hdGluZz9cIndpZHRoXCI6XCJoZWlnaHRcIl0+dFt0aGlzLmZsb2F0aW5nP1wid2lkdGhcIjpcImhlaWdodFwiXT9wOmUrdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC8yPm8mJmE+aS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLzImJnMrdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQvMj5yJiZoPm4tdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQvMn0sX2ludGVyc2VjdHNXaXRoUG9pbnRlcjpmdW5jdGlvbih0KXt2YXIgZSxpLHM9XCJ4XCI9PT10aGlzLm9wdGlvbnMuYXhpc3x8dGhpcy5faXNPdmVyQXhpcyh0aGlzLnBvc2l0aW9uQWJzLnRvcCt0aGlzLm9mZnNldC5jbGljay50b3AsdC50b3AsdC5oZWlnaHQpLG49XCJ5XCI9PT10aGlzLm9wdGlvbnMuYXhpc3x8dGhpcy5faXNPdmVyQXhpcyh0aGlzLnBvc2l0aW9uQWJzLmxlZnQrdGhpcy5vZmZzZXQuY2xpY2subGVmdCx0LmxlZnQsdC53aWR0aCksbz1zJiZuO3JldHVybiBvPyhlPXRoaXMuX2dldERyYWdWZXJ0aWNhbERpcmVjdGlvbigpLGk9dGhpcy5fZ2V0RHJhZ0hvcml6b250YWxEaXJlY3Rpb24oKSx0aGlzLmZsb2F0aW5nP1wicmlnaHRcIj09PWl8fFwiZG93blwiPT09ZT8yOjE6ZSYmKFwiZG93blwiPT09ZT8yOjEpKTohMX0sX2ludGVyc2VjdHNXaXRoU2lkZXM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5faXNPdmVyQXhpcyh0aGlzLnBvc2l0aW9uQWJzLnRvcCt0aGlzLm9mZnNldC5jbGljay50b3AsdC50b3ArdC5oZWlnaHQvMix0LmhlaWdodCksaT10aGlzLl9pc092ZXJBeGlzKHRoaXMucG9zaXRpb25BYnMubGVmdCt0aGlzLm9mZnNldC5jbGljay5sZWZ0LHQubGVmdCt0LndpZHRoLzIsdC53aWR0aCkscz10aGlzLl9nZXREcmFnVmVydGljYWxEaXJlY3Rpb24oKSxuPXRoaXMuX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uKCk7cmV0dXJuIHRoaXMuZmxvYXRpbmcmJm4/XCJyaWdodFwiPT09biYmaXx8XCJsZWZ0XCI9PT1uJiYhaTpzJiYoXCJkb3duXCI9PT1zJiZlfHxcInVwXCI9PT1zJiYhZSl9LF9nZXREcmFnVmVydGljYWxEaXJlY3Rpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnBvc2l0aW9uQWJzLnRvcC10aGlzLmxhc3RQb3NpdGlvbkFicy50b3A7cmV0dXJuIDAhPT10JiYodD4wP1wiZG93blwiOlwidXBcIil9LF9nZXREcmFnSG9yaXpvbnRhbERpcmVjdGlvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMucG9zaXRpb25BYnMubGVmdC10aGlzLmxhc3RQb3NpdGlvbkFicy5sZWZ0O3JldHVybiAwIT09dCYmKHQ+MD9cInJpZ2h0XCI6XCJsZWZ0XCIpfSxyZWZyZXNoOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9yZWZyZXNoSXRlbXModCksdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCksdGhpcy5yZWZyZXNoUG9zaXRpb25zKCksdGhpc30sX2Nvbm5lY3RXaXRoOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zO3JldHVybiB0LmNvbm5lY3RXaXRoLmNvbnN0cnVjdG9yPT09U3RyaW5nP1t0LmNvbm5lY3RXaXRoXTp0LmNvbm5lY3RXaXRofSxfZ2V0SXRlbXNBc2pRdWVyeTpmdW5jdGlvbihlKXtmdW5jdGlvbiBpKCl7ci5wdXNoKHRoaXMpfXZhciBzLG4sbyxhLHI9W10saD1bXSxsPXRoaXMuX2Nvbm5lY3RXaXRoKCk7aWYobCYmZSlmb3Iocz1sLmxlbmd0aC0xO3M+PTA7cy0tKWZvcihvPXQobFtzXSx0aGlzLmRvY3VtZW50WzBdKSxuPW8ubGVuZ3RoLTE7bj49MDtuLS0pYT10LmRhdGEob1tuXSx0aGlzLndpZGdldEZ1bGxOYW1lKSxhJiZhIT09dGhpcyYmIWEub3B0aW9ucy5kaXNhYmxlZCYmaC5wdXNoKFt0LmlzRnVuY3Rpb24oYS5vcHRpb25zLml0ZW1zKT9hLm9wdGlvbnMuaXRlbXMuY2FsbChhLmVsZW1lbnQpOnQoYS5vcHRpb25zLml0ZW1zLGEuZWxlbWVudCkubm90KFwiLnVpLXNvcnRhYmxlLWhlbHBlclwiKS5ub3QoXCIudWktc29ydGFibGUtcGxhY2Vob2xkZXJcIiksYV0pO2ZvcihoLnB1c2goW3QuaXNGdW5jdGlvbih0aGlzLm9wdGlvbnMuaXRlbXMpP3RoaXMub3B0aW9ucy5pdGVtcy5jYWxsKHRoaXMuZWxlbWVudCxudWxsLHtvcHRpb25zOnRoaXMub3B0aW9ucyxpdGVtOnRoaXMuY3VycmVudEl0ZW19KTp0KHRoaXMub3B0aW9ucy5pdGVtcyx0aGlzLmVsZW1lbnQpLm5vdChcIi51aS1zb3J0YWJsZS1oZWxwZXJcIikubm90KFwiLnVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyXCIpLHRoaXNdKSxzPWgubGVuZ3RoLTE7cz49MDtzLS0paFtzXVswXS5lYWNoKGkpO3JldHVybiB0KHIpfSxfcmVtb3ZlQ3VycmVudHNGcm9tSXRlbXM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLmN1cnJlbnRJdGVtLmZpbmQoXCI6ZGF0YShcIit0aGlzLndpZGdldE5hbWUrXCItaXRlbSlcIik7dGhpcy5pdGVtcz10LmdyZXAodGhpcy5pdGVtcyxmdW5jdGlvbih0KXtmb3IodmFyIGk9MDtlLmxlbmd0aD5pO2krKylpZihlW2ldPT09dC5pdGVtWzBdKXJldHVybiExO3JldHVybiEwfSl9LF9yZWZyZXNoSXRlbXM6ZnVuY3Rpb24oZSl7dGhpcy5pdGVtcz1bXSx0aGlzLmNvbnRhaW5lcnM9W3RoaXNdO3ZhciBpLHMsbixvLGEscixoLGwsYz10aGlzLml0ZW1zLHU9W1t0LmlzRnVuY3Rpb24odGhpcy5vcHRpb25zLml0ZW1zKT90aGlzLm9wdGlvbnMuaXRlbXMuY2FsbCh0aGlzLmVsZW1lbnRbMF0sZSx7aXRlbTp0aGlzLmN1cnJlbnRJdGVtfSk6dCh0aGlzLm9wdGlvbnMuaXRlbXMsdGhpcy5lbGVtZW50KSx0aGlzXV0sZD10aGlzLl9jb25uZWN0V2l0aCgpO2lmKGQmJnRoaXMucmVhZHkpZm9yKGk9ZC5sZW5ndGgtMTtpPj0wO2ktLSlmb3Iobj10KGRbaV0sdGhpcy5kb2N1bWVudFswXSkscz1uLmxlbmd0aC0xO3M+PTA7cy0tKW89dC5kYXRhKG5bc10sdGhpcy53aWRnZXRGdWxsTmFtZSksbyYmbyE9PXRoaXMmJiFvLm9wdGlvbnMuZGlzYWJsZWQmJih1LnB1c2goW3QuaXNGdW5jdGlvbihvLm9wdGlvbnMuaXRlbXMpP28ub3B0aW9ucy5pdGVtcy5jYWxsKG8uZWxlbWVudFswXSxlLHtpdGVtOnRoaXMuY3VycmVudEl0ZW19KTp0KG8ub3B0aW9ucy5pdGVtcyxvLmVsZW1lbnQpLG9dKSx0aGlzLmNvbnRhaW5lcnMucHVzaChvKSk7Zm9yKGk9dS5sZW5ndGgtMTtpPj0wO2ktLSlmb3IoYT11W2ldWzFdLHI9dVtpXVswXSxzPTAsbD1yLmxlbmd0aDtsPnM7cysrKWg9dChyW3NdKSxoLmRhdGEodGhpcy53aWRnZXROYW1lK1wiLWl0ZW1cIixhKSxjLnB1c2goe2l0ZW06aCxpbnN0YW5jZTphLHdpZHRoOjAsaGVpZ2h0OjAsbGVmdDowLHRvcDowfSl9LHJlZnJlc2hQb3NpdGlvbnM6ZnVuY3Rpb24oZSl7dGhpcy5mbG9hdGluZz10aGlzLml0ZW1zLmxlbmd0aD9cInhcIj09PXRoaXMub3B0aW9ucy5heGlzfHx0aGlzLl9pc0Zsb2F0aW5nKHRoaXMuaXRlbXNbMF0uaXRlbSk6ITEsdGhpcy5vZmZzZXRQYXJlbnQmJnRoaXMuaGVscGVyJiYodGhpcy5vZmZzZXQucGFyZW50PXRoaXMuX2dldFBhcmVudE9mZnNldCgpKTt2YXIgaSxzLG4sbztmb3IoaT10aGlzLml0ZW1zLmxlbmd0aC0xO2k+PTA7aS0tKXM9dGhpcy5pdGVtc1tpXSxzLmluc3RhbmNlIT09dGhpcy5jdXJyZW50Q29udGFpbmVyJiZ0aGlzLmN1cnJlbnRDb250YWluZXImJnMuaXRlbVswXSE9PXRoaXMuY3VycmVudEl0ZW1bMF18fChuPXRoaXMub3B0aW9ucy50b2xlcmFuY2VFbGVtZW50P3QodGhpcy5vcHRpb25zLnRvbGVyYW5jZUVsZW1lbnQscy5pdGVtKTpzLml0ZW0sZXx8KHMud2lkdGg9bi5vdXRlcldpZHRoKCkscy5oZWlnaHQ9bi5vdXRlckhlaWdodCgpKSxvPW4ub2Zmc2V0KCkscy5sZWZ0PW8ubGVmdCxzLnRvcD1vLnRvcCk7aWYodGhpcy5vcHRpb25zLmN1c3RvbSYmdGhpcy5vcHRpb25zLmN1c3RvbS5yZWZyZXNoQ29udGFpbmVycyl0aGlzLm9wdGlvbnMuY3VzdG9tLnJlZnJlc2hDb250YWluZXJzLmNhbGwodGhpcyk7ZWxzZSBmb3IoaT10aGlzLmNvbnRhaW5lcnMubGVuZ3RoLTE7aT49MDtpLS0pbz10aGlzLmNvbnRhaW5lcnNbaV0uZWxlbWVudC5vZmZzZXQoKSx0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUubGVmdD1vLmxlZnQsdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLnRvcD1vLnRvcCx0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUud2lkdGg9dGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnQub3V0ZXJXaWR0aCgpLHRoaXMuY29udGFpbmVyc1tpXS5jb250YWluZXJDYWNoZS5oZWlnaHQ9dGhpcy5jb250YWluZXJzW2ldLmVsZW1lbnQub3V0ZXJIZWlnaHQoKTtyZXR1cm4gdGhpc30sX2NyZWF0ZVBsYWNlaG9sZGVyOmZ1bmN0aW9uKGUpe2U9ZXx8dGhpczt2YXIgaSxzPWUub3B0aW9ucztzLnBsYWNlaG9sZGVyJiZzLnBsYWNlaG9sZGVyLmNvbnN0cnVjdG9yIT09U3RyaW5nfHwoaT1zLnBsYWNlaG9sZGVyLHMucGxhY2Vob2xkZXI9e2VsZW1lbnQ6ZnVuY3Rpb24oKXt2YXIgcz1lLmN1cnJlbnRJdGVtWzBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksbj10KFwiPFwiK3MrXCI+XCIsZS5kb2N1bWVudFswXSk7cmV0dXJuIGUuX2FkZENsYXNzKG4sXCJ1aS1zb3J0YWJsZS1wbGFjZWhvbGRlclwiLGl8fGUuY3VycmVudEl0ZW1bMF0uY2xhc3NOYW1lKS5fcmVtb3ZlQ2xhc3MobixcInVpLXNvcnRhYmxlLWhlbHBlclwiKSxcInRib2R5XCI9PT1zP2UuX2NyZWF0ZVRyUGxhY2Vob2xkZXIoZS5jdXJyZW50SXRlbS5maW5kKFwidHJcIikuZXEoMCksdChcIjx0cj5cIixlLmRvY3VtZW50WzBdKS5hcHBlbmRUbyhuKSk6XCJ0clwiPT09cz9lLl9jcmVhdGVUclBsYWNlaG9sZGVyKGUuY3VycmVudEl0ZW0sbik6XCJpbWdcIj09PXMmJm4uYXR0cihcInNyY1wiLGUuY3VycmVudEl0ZW0uYXR0cihcInNyY1wiKSksaXx8bi5jc3MoXCJ2aXNpYmlsaXR5XCIsXCJoaWRkZW5cIiksbn0sdXBkYXRlOmZ1bmN0aW9uKHQsbil7KCFpfHxzLmZvcmNlUGxhY2Vob2xkZXJTaXplKSYmKG4uaGVpZ2h0KCl8fG4uaGVpZ2h0KGUuY3VycmVudEl0ZW0uaW5uZXJIZWlnaHQoKS1wYXJzZUludChlLmN1cnJlbnRJdGVtLmNzcyhcInBhZGRpbmdUb3BcIil8fDAsMTApLXBhcnNlSW50KGUuY3VycmVudEl0ZW0uY3NzKFwicGFkZGluZ0JvdHRvbVwiKXx8MCwxMCkpLG4ud2lkdGgoKXx8bi53aWR0aChlLmN1cnJlbnRJdGVtLmlubmVyV2lkdGgoKS1wYXJzZUludChlLmN1cnJlbnRJdGVtLmNzcyhcInBhZGRpbmdMZWZ0XCIpfHwwLDEwKS1wYXJzZUludChlLmN1cnJlbnRJdGVtLmNzcyhcInBhZGRpbmdSaWdodFwiKXx8MCwxMCkpKX19KSxlLnBsYWNlaG9sZGVyPXQocy5wbGFjZWhvbGRlci5lbGVtZW50LmNhbGwoZS5lbGVtZW50LGUuY3VycmVudEl0ZW0pKSxlLmN1cnJlbnRJdGVtLmFmdGVyKGUucGxhY2Vob2xkZXIpLHMucGxhY2Vob2xkZXIudXBkYXRlKGUsZS5wbGFjZWhvbGRlcil9LF9jcmVhdGVUclBsYWNlaG9sZGVyOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dGhpcztlLmNoaWxkcmVuKCkuZWFjaChmdW5jdGlvbigpe3QoXCI8dGQ+JiMxNjA7PC90ZD5cIixzLmRvY3VtZW50WzBdKS5hdHRyKFwiY29sc3BhblwiLHQodGhpcykuYXR0cihcImNvbHNwYW5cIil8fDEpLmFwcGVuZFRvKGkpfSl9LF9jb250YWN0Q29udGFpbmVyczpmdW5jdGlvbihlKXt2YXIgaSxzLG4sbyxhLHIsaCxsLGMsdSxkPW51bGwscD1udWxsO2ZvcihpPXRoaXMuY29udGFpbmVycy5sZW5ndGgtMTtpPj0wO2ktLSlpZighdC5jb250YWlucyh0aGlzLmN1cnJlbnRJdGVtWzBdLHRoaXMuY29udGFpbmVyc1tpXS5lbGVtZW50WzBdKSlpZih0aGlzLl9pbnRlcnNlY3RzV2l0aCh0aGlzLmNvbnRhaW5lcnNbaV0uY29udGFpbmVyQ2FjaGUpKXtpZihkJiZ0LmNvbnRhaW5zKHRoaXMuY29udGFpbmVyc1tpXS5lbGVtZW50WzBdLGQuZWxlbWVudFswXSkpY29udGludWU7ZD10aGlzLmNvbnRhaW5lcnNbaV0scD1pfWVsc2UgdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLm92ZXImJih0aGlzLmNvbnRhaW5lcnNbaV0uX3RyaWdnZXIoXCJvdXRcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSksdGhpcy5jb250YWluZXJzW2ldLmNvbnRhaW5lckNhY2hlLm92ZXI9MCk7aWYoZClpZigxPT09dGhpcy5jb250YWluZXJzLmxlbmd0aCl0aGlzLmNvbnRhaW5lcnNbcF0uY29udGFpbmVyQ2FjaGUub3Zlcnx8KHRoaXMuY29udGFpbmVyc1twXS5fdHJpZ2dlcihcIm92ZXJcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSksdGhpcy5jb250YWluZXJzW3BdLmNvbnRhaW5lckNhY2hlLm92ZXI9MSk7ZWxzZXtmb3Iobj0xZTQsbz1udWxsLGM9ZC5mbG9hdGluZ3x8dGhpcy5faXNGbG9hdGluZyh0aGlzLmN1cnJlbnRJdGVtKSxhPWM/XCJsZWZ0XCI6XCJ0b3BcIixyPWM/XCJ3aWR0aFwiOlwiaGVpZ2h0XCIsdT1jP1wicGFnZVhcIjpcInBhZ2VZXCIscz10aGlzLml0ZW1zLmxlbmd0aC0xO3M+PTA7cy0tKXQuY29udGFpbnModGhpcy5jb250YWluZXJzW3BdLmVsZW1lbnRbMF0sdGhpcy5pdGVtc1tzXS5pdGVtWzBdKSYmdGhpcy5pdGVtc1tzXS5pdGVtWzBdIT09dGhpcy5jdXJyZW50SXRlbVswXSYmKGg9dGhpcy5pdGVtc1tzXS5pdGVtLm9mZnNldCgpW2FdLGw9ITEsZVt1XS1oPnRoaXMuaXRlbXNbc11bcl0vMiYmKGw9ITApLG4+TWF0aC5hYnMoZVt1XS1oKSYmKG49TWF0aC5hYnMoZVt1XS1oKSxvPXRoaXMuaXRlbXNbc10sdGhpcy5kaXJlY3Rpb249bD9cInVwXCI6XCJkb3duXCIpKTtpZighbyYmIXRoaXMub3B0aW9ucy5kcm9wT25FbXB0eSlyZXR1cm47aWYodGhpcy5jdXJyZW50Q29udGFpbmVyPT09dGhpcy5jb250YWluZXJzW3BdKXJldHVybiB0aGlzLmN1cnJlbnRDb250YWluZXIuY29udGFpbmVyQ2FjaGUub3Zlcnx8KHRoaXMuY29udGFpbmVyc1twXS5fdHJpZ2dlcihcIm92ZXJcIixlLHRoaXMuX3VpSGFzaCgpKSx0aGlzLmN1cnJlbnRDb250YWluZXIuY29udGFpbmVyQ2FjaGUub3Zlcj0xKSx2b2lkIDA7bz90aGlzLl9yZWFycmFuZ2UoZSxvLG51bGwsITApOnRoaXMuX3JlYXJyYW5nZShlLG51bGwsdGhpcy5jb250YWluZXJzW3BdLmVsZW1lbnQsITApLHRoaXMuX3RyaWdnZXIoXCJjaGFuZ2VcIixlLHRoaXMuX3VpSGFzaCgpKSx0aGlzLmNvbnRhaW5lcnNbcF0uX3RyaWdnZXIoXCJjaGFuZ2VcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSksdGhpcy5jdXJyZW50Q29udGFpbmVyPXRoaXMuY29udGFpbmVyc1twXSx0aGlzLm9wdGlvbnMucGxhY2Vob2xkZXIudXBkYXRlKHRoaXMuY3VycmVudENvbnRhaW5lcix0aGlzLnBsYWNlaG9sZGVyKSx0aGlzLmNvbnRhaW5lcnNbcF0uX3RyaWdnZXIoXCJvdmVyXCIsZSx0aGlzLl91aUhhc2godGhpcykpLHRoaXMuY29udGFpbmVyc1twXS5jb250YWluZXJDYWNoZS5vdmVyPTF9fSxfY3JlYXRlSGVscGVyOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucyxzPXQuaXNGdW5jdGlvbihpLmhlbHBlcik/dChpLmhlbHBlci5hcHBseSh0aGlzLmVsZW1lbnRbMF0sW2UsdGhpcy5jdXJyZW50SXRlbV0pKTpcImNsb25lXCI9PT1pLmhlbHBlcj90aGlzLmN1cnJlbnRJdGVtLmNsb25lKCk6dGhpcy5jdXJyZW50SXRlbTtyZXR1cm4gcy5wYXJlbnRzKFwiYm9keVwiKS5sZW5ndGh8fHQoXCJwYXJlbnRcIiE9PWkuYXBwZW5kVG8/aS5hcHBlbmRUbzp0aGlzLmN1cnJlbnRJdGVtWzBdLnBhcmVudE5vZGUpWzBdLmFwcGVuZENoaWxkKHNbMF0pLHNbMF09PT10aGlzLmN1cnJlbnRJdGVtWzBdJiYodGhpcy5fc3RvcmVkQ1NTPXt3aWR0aDp0aGlzLmN1cnJlbnRJdGVtWzBdLnN0eWxlLndpZHRoLGhlaWdodDp0aGlzLmN1cnJlbnRJdGVtWzBdLnN0eWxlLmhlaWdodCxwb3NpdGlvbjp0aGlzLmN1cnJlbnRJdGVtLmNzcyhcInBvc2l0aW9uXCIpLHRvcDp0aGlzLmN1cnJlbnRJdGVtLmNzcyhcInRvcFwiKSxsZWZ0OnRoaXMuY3VycmVudEl0ZW0uY3NzKFwibGVmdFwiKX0pLCghc1swXS5zdHlsZS53aWR0aHx8aS5mb3JjZUhlbHBlclNpemUpJiZzLndpZHRoKHRoaXMuY3VycmVudEl0ZW0ud2lkdGgoKSksKCFzWzBdLnN0eWxlLmhlaWdodHx8aS5mb3JjZUhlbHBlclNpemUpJiZzLmhlaWdodCh0aGlzLmN1cnJlbnRJdGVtLmhlaWdodCgpKSxzfSxfYWRqdXN0T2Zmc2V0RnJvbUhlbHBlcjpmdW5jdGlvbihlKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9ZS5zcGxpdChcIiBcIikpLHQuaXNBcnJheShlKSYmKGU9e2xlZnQ6K2VbMF0sdG9wOitlWzFdfHwwfSksXCJsZWZ0XCJpbiBlJiYodGhpcy5vZmZzZXQuY2xpY2subGVmdD1lLmxlZnQrdGhpcy5tYXJnaW5zLmxlZnQpLFwicmlnaHRcImluIGUmJih0aGlzLm9mZnNldC5jbGljay5sZWZ0PXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgtZS5yaWdodCt0aGlzLm1hcmdpbnMubGVmdCksXCJ0b3BcImluIGUmJih0aGlzLm9mZnNldC5jbGljay50b3A9ZS50b3ArdGhpcy5tYXJnaW5zLnRvcCksXCJib3R0b21cImluIGUmJih0aGlzLm9mZnNldC5jbGljay50b3A9dGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQtZS5ib3R0b20rdGhpcy5tYXJnaW5zLnRvcCl9LF9nZXRQYXJlbnRPZmZzZXQ6ZnVuY3Rpb24oKXt0aGlzLm9mZnNldFBhcmVudD10aGlzLmhlbHBlci5vZmZzZXRQYXJlbnQoKTt2YXIgZT10aGlzLm9mZnNldFBhcmVudC5vZmZzZXQoKTtyZXR1cm5cImFic29sdXRlXCI9PT10aGlzLmNzc1Bvc2l0aW9uJiZ0aGlzLnNjcm9sbFBhcmVudFswXSE9PXRoaXMuZG9jdW1lbnRbMF0mJnQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sdGhpcy5vZmZzZXRQYXJlbnRbMF0pJiYoZS5sZWZ0Kz10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCksZS50b3ArPXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpKSwodGhpcy5vZmZzZXRQYXJlbnRbMF09PT10aGlzLmRvY3VtZW50WzBdLmJvZHl8fHRoaXMub2Zmc2V0UGFyZW50WzBdLnRhZ05hbWUmJlwiaHRtbFwiPT09dGhpcy5vZmZzZXRQYXJlbnRbMF0udGFnTmFtZS50b0xvd2VyQ2FzZSgpJiZ0LnVpLmllKSYmKGU9e3RvcDowLGxlZnQ6MH0pLHt0b3A6ZS50b3ArKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlclRvcFdpZHRoXCIpLDEwKXx8MCksbGVmdDplLmxlZnQrKHBhcnNlSW50KHRoaXMub2Zmc2V0UGFyZW50LmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApfX0sX2dldFJlbGF0aXZlT2Zmc2V0OmZ1bmN0aW9uKCl7aWYoXCJyZWxhdGl2ZVwiPT09dGhpcy5jc3NQb3NpdGlvbil7dmFyIHQ9dGhpcy5jdXJyZW50SXRlbS5wb3NpdGlvbigpO3JldHVybnt0b3A6dC50b3AtKHBhcnNlSW50KHRoaXMuaGVscGVyLmNzcyhcInRvcFwiKSwxMCl8fDApK3RoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpLGxlZnQ6dC5sZWZ0LShwYXJzZUludCh0aGlzLmhlbHBlci5jc3MoXCJsZWZ0XCIpLDEwKXx8MCkrdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpfX1yZXR1cm57dG9wOjAsbGVmdDowfX0sX2NhY2hlTWFyZ2luczpmdW5jdGlvbigpe3RoaXMubWFyZ2lucz17bGVmdDpwYXJzZUludCh0aGlzLmN1cnJlbnRJdGVtLmNzcyhcIm1hcmdpbkxlZnRcIiksMTApfHwwLHRvcDpwYXJzZUludCh0aGlzLmN1cnJlbnRJdGVtLmNzcyhcIm1hcmdpblRvcFwiKSwxMCl8fDB9fSxfY2FjaGVIZWxwZXJQcm9wb3J0aW9uczpmdW5jdGlvbigpe3RoaXMuaGVscGVyUHJvcG9ydGlvbnM9e3dpZHRoOnRoaXMuaGVscGVyLm91dGVyV2lkdGgoKSxoZWlnaHQ6dGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKX19LF9zZXRDb250YWlubWVudDpmdW5jdGlvbigpe3ZhciBlLGkscyxuPXRoaXMub3B0aW9ucztcInBhcmVudFwiPT09bi5jb250YWlubWVudCYmKG4uY29udGFpbm1lbnQ9dGhpcy5oZWxwZXJbMF0ucGFyZW50Tm9kZSksKFwiZG9jdW1lbnRcIj09PW4uY29udGFpbm1lbnR8fFwid2luZG93XCI9PT1uLmNvbnRhaW5tZW50KSYmKHRoaXMuY29udGFpbm1lbnQ9WzAtdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdCwwLXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wLFwiZG9jdW1lbnRcIj09PW4uY29udGFpbm1lbnQ/dGhpcy5kb2N1bWVudC53aWR0aCgpOnRoaXMud2luZG93LndpZHRoKCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aC10aGlzLm1hcmdpbnMubGVmdCwoXCJkb2N1bWVudFwiPT09bi5jb250YWlubWVudD90aGlzLmRvY3VtZW50LmhlaWdodCgpfHxkb2N1bWVudC5ib2R5LnBhcmVudE5vZGUuc2Nyb2xsSGVpZ2h0OnRoaXMud2luZG93LmhlaWdodCgpfHx0aGlzLmRvY3VtZW50WzBdLmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQpLXRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0LXRoaXMubWFyZ2lucy50b3BdKSwvXihkb2N1bWVudHx3aW5kb3d8cGFyZW50KSQvLnRlc3Qobi5jb250YWlubWVudCl8fChlPXQobi5jb250YWlubWVudClbMF0saT10KG4uY29udGFpbm1lbnQpLm9mZnNldCgpLHM9XCJoaWRkZW5cIiE9PXQoZSkuY3NzKFwib3ZlcmZsb3dcIiksdGhpcy5jb250YWlubWVudD1baS5sZWZ0KyhwYXJzZUludCh0KGUpLmNzcyhcImJvcmRlckxlZnRXaWR0aFwiKSwxMCl8fDApKyhwYXJzZUludCh0KGUpLmNzcyhcInBhZGRpbmdMZWZ0XCIpLDEwKXx8MCktdGhpcy5tYXJnaW5zLmxlZnQsaS50b3ArKHBhcnNlSW50KHQoZSkuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKSsocGFyc2VJbnQodChlKS5jc3MoXCJwYWRkaW5nVG9wXCIpLDEwKXx8MCktdGhpcy5tYXJnaW5zLnRvcCxpLmxlZnQrKHM/TWF0aC5tYXgoZS5zY3JvbGxXaWR0aCxlLm9mZnNldFdpZHRoKTplLm9mZnNldFdpZHRoKS0ocGFyc2VJbnQodChlKS5jc3MoXCJib3JkZXJMZWZ0V2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQodChlKS5jc3MoXCJwYWRkaW5nUmlnaHRcIiksMTApfHwwKS10aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoLXRoaXMubWFyZ2lucy5sZWZ0LGkudG9wKyhzP01hdGgubWF4KGUuc2Nyb2xsSGVpZ2h0LGUub2Zmc2V0SGVpZ2h0KTplLm9mZnNldEhlaWdodCktKHBhcnNlSW50KHQoZSkuY3NzKFwiYm9yZGVyVG9wV2lkdGhcIiksMTApfHwwKS0ocGFyc2VJbnQodChlKS5jc3MoXCJwYWRkaW5nQm90dG9tXCIpLDEwKXx8MCktdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQtdGhpcy5tYXJnaW5zLnRvcF0pfSxfY29udmVydFBvc2l0aW9uVG86ZnVuY3Rpb24oZSxpKXtpfHwoaT10aGlzLnBvc2l0aW9uKTt2YXIgcz1cImFic29sdXRlXCI9PT1lPzE6LTEsbj1cImFic29sdXRlXCIhPT10aGlzLmNzc1Bvc2l0aW9ufHx0aGlzLnNjcm9sbFBhcmVudFswXSE9PXRoaXMuZG9jdW1lbnRbMF0mJnQuY29udGFpbnModGhpcy5zY3JvbGxQYXJlbnRbMF0sdGhpcy5vZmZzZXRQYXJlbnRbMF0pP3RoaXMuc2Nyb2xsUGFyZW50OnRoaXMub2Zmc2V0UGFyZW50LG89LyhodG1sfGJvZHkpL2kudGVzdChuWzBdLnRhZ05hbWUpO3JldHVybnt0b3A6aS50b3ArdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wKnMrdGhpcy5vZmZzZXQucGFyZW50LnRvcCpzLShcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTpvPzA6bi5zY3JvbGxUb3AoKSkqcyxsZWZ0OmkubGVmdCt0aGlzLm9mZnNldC5yZWxhdGl2ZS5sZWZ0KnMrdGhpcy5vZmZzZXQucGFyZW50LmxlZnQqcy0oXCJmaXhlZFwiPT09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpOm8/MDpuLnNjcm9sbExlZnQoKSkqc319LF9nZW5lcmF0ZVBvc2l0aW9uOmZ1bmN0aW9uKGUpe3ZhciBpLHMsbj10aGlzLm9wdGlvbnMsbz1lLnBhZ2VYLGE9ZS5wYWdlWSxyPVwiYWJzb2x1dGVcIiE9PXRoaXMuY3NzUG9zaXRpb258fHRoaXMuc2Nyb2xsUGFyZW50WzBdIT09dGhpcy5kb2N1bWVudFswXSYmdC5jb250YWlucyh0aGlzLnNjcm9sbFBhcmVudFswXSx0aGlzLm9mZnNldFBhcmVudFswXSk/dGhpcy5zY3JvbGxQYXJlbnQ6dGhpcy5vZmZzZXRQYXJlbnQsaD0vKGh0bWx8Ym9keSkvaS50ZXN0KHJbMF0udGFnTmFtZSk7cmV0dXJuXCJyZWxhdGl2ZVwiIT09dGhpcy5jc3NQb3NpdGlvbnx8dGhpcy5zY3JvbGxQYXJlbnRbMF0hPT10aGlzLmRvY3VtZW50WzBdJiZ0aGlzLnNjcm9sbFBhcmVudFswXSE9PXRoaXMub2Zmc2V0UGFyZW50WzBdfHwodGhpcy5vZmZzZXQucmVsYXRpdmU9dGhpcy5fZ2V0UmVsYXRpdmVPZmZzZXQoKSksdGhpcy5vcmlnaW5hbFBvc2l0aW9uJiYodGhpcy5jb250YWlubWVudCYmKGUucGFnZVgtdGhpcy5vZmZzZXQuY2xpY2subGVmdDx0aGlzLmNvbnRhaW5tZW50WzBdJiYobz10aGlzLmNvbnRhaW5tZW50WzBdK3RoaXMub2Zmc2V0LmNsaWNrLmxlZnQpLGUucGFnZVktdGhpcy5vZmZzZXQuY2xpY2sudG9wPHRoaXMuY29udGFpbm1lbnRbMV0mJihhPXRoaXMuY29udGFpbm1lbnRbMV0rdGhpcy5vZmZzZXQuY2xpY2sudG9wKSxlLnBhZ2VYLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQ+dGhpcy5jb250YWlubWVudFsyXSYmKG89dGhpcy5jb250YWlubWVudFsyXSt0aGlzLm9mZnNldC5jbGljay5sZWZ0KSxlLnBhZ2VZLXRoaXMub2Zmc2V0LmNsaWNrLnRvcD50aGlzLmNvbnRhaW5tZW50WzNdJiYoYT10aGlzLmNvbnRhaW5tZW50WzNdK3RoaXMub2Zmc2V0LmNsaWNrLnRvcCkpLG4uZ3JpZCYmKGk9dGhpcy5vcmlnaW5hbFBhZ2VZK01hdGgucm91bmQoKGEtdGhpcy5vcmlnaW5hbFBhZ2VZKS9uLmdyaWRbMV0pKm4uZ3JpZFsxXSxhPXRoaXMuY29udGFpbm1lbnQ/aS10aGlzLm9mZnNldC5jbGljay50b3A+PXRoaXMuY29udGFpbm1lbnRbMV0mJmktdGhpcy5vZmZzZXQuY2xpY2sudG9wPD10aGlzLmNvbnRhaW5tZW50WzNdP2k6aS10aGlzLm9mZnNldC5jbGljay50b3A+PXRoaXMuY29udGFpbm1lbnRbMV0/aS1uLmdyaWRbMV06aStuLmdyaWRbMV06aSxzPXRoaXMub3JpZ2luYWxQYWdlWCtNYXRoLnJvdW5kKChvLXRoaXMub3JpZ2luYWxQYWdlWCkvbi5ncmlkWzBdKSpuLmdyaWRbMF0sbz10aGlzLmNvbnRhaW5tZW50P3MtdGhpcy5vZmZzZXQuY2xpY2subGVmdD49dGhpcy5jb250YWlubWVudFswXSYmcy10aGlzLm9mZnNldC5jbGljay5sZWZ0PD10aGlzLmNvbnRhaW5tZW50WzJdP3M6cy10aGlzLm9mZnNldC5jbGljay5sZWZ0Pj10aGlzLmNvbnRhaW5tZW50WzBdP3Mtbi5ncmlkWzBdOnMrbi5ncmlkWzBdOnMpKSx7dG9wOmEtdGhpcy5vZmZzZXQuY2xpY2sudG9wLXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcC10aGlzLm9mZnNldC5wYXJlbnQudG9wKyhcImZpeGVkXCI9PT10aGlzLmNzc1Bvc2l0aW9uPy10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKTpoPzA6ci5zY3JvbGxUb3AoKSksbGVmdDpvLXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQtdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdC10aGlzLm9mZnNldC5wYXJlbnQubGVmdCsoXCJmaXhlZFwiPT09dGhpcy5jc3NQb3NpdGlvbj8tdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpOmg/MDpyLnNjcm9sbExlZnQoKSl9fSxfcmVhcnJhbmdlOmZ1bmN0aW9uKHQsZSxpLHMpe2k/aVswXS5hcHBlbmRDaGlsZCh0aGlzLnBsYWNlaG9sZGVyWzBdKTplLml0ZW1bMF0ucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5wbGFjZWhvbGRlclswXSxcImRvd25cIj09PXRoaXMuZGlyZWN0aW9uP2UuaXRlbVswXTplLml0ZW1bMF0ubmV4dFNpYmxpbmcpLHRoaXMuY291bnRlcj10aGlzLmNvdW50ZXI/Kyt0aGlzLmNvdW50ZXI6MTt2YXIgbj10aGlzLmNvdW50ZXI7XG50aGlzLl9kZWxheShmdW5jdGlvbigpe249PT10aGlzLmNvdW50ZXImJnRoaXMucmVmcmVzaFBvc2l0aW9ucyghcyl9KX0sX2NsZWFyOmZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gaSh0LGUsaSl7cmV0dXJuIGZ1bmN0aW9uKHMpe2kuX3RyaWdnZXIodCxzLGUuX3VpSGFzaChlKSl9fXRoaXMucmV2ZXJ0aW5nPSExO3ZhciBzLG49W107aWYoIXRoaXMuX25vRmluYWxTb3J0JiZ0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpLmxlbmd0aCYmdGhpcy5wbGFjZWhvbGRlci5iZWZvcmUodGhpcy5jdXJyZW50SXRlbSksdGhpcy5fbm9GaW5hbFNvcnQ9bnVsbCx0aGlzLmhlbHBlclswXT09PXRoaXMuY3VycmVudEl0ZW1bMF0pe2ZvcihzIGluIHRoaXMuX3N0b3JlZENTUykoXCJhdXRvXCI9PT10aGlzLl9zdG9yZWRDU1Nbc118fFwic3RhdGljXCI9PT10aGlzLl9zdG9yZWRDU1Nbc10pJiYodGhpcy5fc3RvcmVkQ1NTW3NdPVwiXCIpO3RoaXMuY3VycmVudEl0ZW0uY3NzKHRoaXMuX3N0b3JlZENTUyksdGhpcy5fcmVtb3ZlQ2xhc3ModGhpcy5jdXJyZW50SXRlbSxcInVpLXNvcnRhYmxlLWhlbHBlclwiKX1lbHNlIHRoaXMuY3VycmVudEl0ZW0uc2hvdygpO2Zvcih0aGlzLmZyb21PdXRzaWRlJiYhZSYmbi5wdXNoKGZ1bmN0aW9uKHQpe3RoaXMuX3RyaWdnZXIoXCJyZWNlaXZlXCIsdCx0aGlzLl91aUhhc2godGhpcy5mcm9tT3V0c2lkZSkpfSksIXRoaXMuZnJvbU91dHNpZGUmJnRoaXMuZG9tUG9zaXRpb24ucHJldj09PXRoaXMuY3VycmVudEl0ZW0ucHJldigpLm5vdChcIi51aS1zb3J0YWJsZS1oZWxwZXJcIilbMF0mJnRoaXMuZG9tUG9zaXRpb24ucGFyZW50PT09dGhpcy5jdXJyZW50SXRlbS5wYXJlbnQoKVswXXx8ZXx8bi5wdXNoKGZ1bmN0aW9uKHQpe3RoaXMuX3RyaWdnZXIoXCJ1cGRhdGVcIix0LHRoaXMuX3VpSGFzaCgpKX0pLHRoaXMhPT10aGlzLmN1cnJlbnRDb250YWluZXImJihlfHwobi5wdXNoKGZ1bmN0aW9uKHQpe3RoaXMuX3RyaWdnZXIoXCJyZW1vdmVcIix0LHRoaXMuX3VpSGFzaCgpKX0pLG4ucHVzaChmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSl7dC5fdHJpZ2dlcihcInJlY2VpdmVcIixlLHRoaXMuX3VpSGFzaCh0aGlzKSl9fS5jYWxsKHRoaXMsdGhpcy5jdXJyZW50Q29udGFpbmVyKSksbi5wdXNoKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXt0Ll90cmlnZ2VyKFwidXBkYXRlXCIsZSx0aGlzLl91aUhhc2godGhpcykpfX0uY2FsbCh0aGlzLHRoaXMuY3VycmVudENvbnRhaW5lcikpKSkscz10aGlzLmNvbnRhaW5lcnMubGVuZ3RoLTE7cz49MDtzLS0pZXx8bi5wdXNoKGkoXCJkZWFjdGl2YXRlXCIsdGhpcyx0aGlzLmNvbnRhaW5lcnNbc10pKSx0aGlzLmNvbnRhaW5lcnNbc10uY29udGFpbmVyQ2FjaGUub3ZlciYmKG4ucHVzaChpKFwib3V0XCIsdGhpcyx0aGlzLmNvbnRhaW5lcnNbc10pKSx0aGlzLmNvbnRhaW5lcnNbc10uY29udGFpbmVyQ2FjaGUub3Zlcj0wKTtpZih0aGlzLnN0b3JlZEN1cnNvciYmKHRoaXMuZG9jdW1lbnQuZmluZChcImJvZHlcIikuY3NzKFwiY3Vyc29yXCIsdGhpcy5zdG9yZWRDdXJzb3IpLHRoaXMuc3RvcmVkU3R5bGVzaGVldC5yZW1vdmUoKSksdGhpcy5fc3RvcmVkT3BhY2l0eSYmdGhpcy5oZWxwZXIuY3NzKFwib3BhY2l0eVwiLHRoaXMuX3N0b3JlZE9wYWNpdHkpLHRoaXMuX3N0b3JlZFpJbmRleCYmdGhpcy5oZWxwZXIuY3NzKFwiekluZGV4XCIsXCJhdXRvXCI9PT10aGlzLl9zdG9yZWRaSW5kZXg/XCJcIjp0aGlzLl9zdG9yZWRaSW5kZXgpLHRoaXMuZHJhZ2dpbmc9ITEsZXx8dGhpcy5fdHJpZ2dlcihcImJlZm9yZVN0b3BcIix0LHRoaXMuX3VpSGFzaCgpKSx0aGlzLnBsYWNlaG9sZGVyWzBdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQodGhpcy5wbGFjZWhvbGRlclswXSksdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsfHwodGhpcy5oZWxwZXJbMF0hPT10aGlzLmN1cnJlbnRJdGVtWzBdJiZ0aGlzLmhlbHBlci5yZW1vdmUoKSx0aGlzLmhlbHBlcj1udWxsKSwhZSl7Zm9yKHM9MDtuLmxlbmd0aD5zO3MrKyluW3NdLmNhbGwodGhpcyx0KTt0aGlzLl90cmlnZ2VyKFwic3RvcFwiLHQsdGhpcy5fdWlIYXNoKCkpfXJldHVybiB0aGlzLmZyb21PdXRzaWRlPSExLCF0aGlzLmNhbmNlbEhlbHBlclJlbW92YWx9LF90cmlnZ2VyOmZ1bmN0aW9uKCl7dC5XaWRnZXQucHJvdG90eXBlLl90cmlnZ2VyLmFwcGx5KHRoaXMsYXJndW1lbnRzKT09PSExJiZ0aGlzLmNhbmNlbCgpfSxfdWlIYXNoOmZ1bmN0aW9uKGUpe3ZhciBpPWV8fHRoaXM7cmV0dXJue2hlbHBlcjppLmhlbHBlcixwbGFjZWhvbGRlcjppLnBsYWNlaG9sZGVyfHx0KFtdKSxwb3NpdGlvbjppLnBvc2l0aW9uLG9yaWdpbmFsUG9zaXRpb246aS5vcmlnaW5hbFBvc2l0aW9uLG9mZnNldDppLnBvc2l0aW9uQWJzLGl0ZW06aS5jdXJyZW50SXRlbSxzZW5kZXI6ZT9lLmVsZW1lbnQ6bnVsbH19fSksdC53aWRnZXQoXCJ1aS5zcGlubmVyXCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWZhdWx0RWxlbWVudDpcIjxpbnB1dD5cIix3aWRnZXRFdmVudFByZWZpeDpcInNwaW5cIixvcHRpb25zOntjbGFzc2VzOntcInVpLXNwaW5uZXJcIjpcInVpLWNvcm5lci1hbGxcIixcInVpLXNwaW5uZXItZG93blwiOlwidWktY29ybmVyLWJyXCIsXCJ1aS1zcGlubmVyLXVwXCI6XCJ1aS1jb3JuZXItdHJcIn0sY3VsdHVyZTpudWxsLGljb25zOntkb3duOlwidWktaWNvbi10cmlhbmdsZS0xLXNcIix1cDpcInVpLWljb24tdHJpYW5nbGUtMS1uXCJ9LGluY3JlbWVudGFsOiEwLG1heDpudWxsLG1pbjpudWxsLG51bWJlckZvcm1hdDpudWxsLHBhZ2U6MTAsc3RlcDoxLGNoYW5nZTpudWxsLHNwaW46bnVsbCxzdGFydDpudWxsLHN0b3A6bnVsbH0sX2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMuX3NldE9wdGlvbihcIm1heFwiLHRoaXMub3B0aW9ucy5tYXgpLHRoaXMuX3NldE9wdGlvbihcIm1pblwiLHRoaXMub3B0aW9ucy5taW4pLHRoaXMuX3NldE9wdGlvbihcInN0ZXBcIix0aGlzLm9wdGlvbnMuc3RlcCksXCJcIiE9PXRoaXMudmFsdWUoKSYmdGhpcy5fdmFsdWUodGhpcy5lbGVtZW50LnZhbCgpLCEwKSx0aGlzLl9kcmF3KCksdGhpcy5fb24odGhpcy5fZXZlbnRzKSx0aGlzLl9yZWZyZXNoKCksdGhpcy5fb24odGhpcy53aW5kb3cse2JlZm9yZXVubG9hZDpmdW5jdGlvbigpe3RoaXMuZWxlbWVudC5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlXCIpfX0pfSxfZ2V0Q3JlYXRlT3B0aW9uczpmdW5jdGlvbigpe3ZhciBlPXRoaXMuX3N1cGVyKCksaT10aGlzLmVsZW1lbnQ7cmV0dXJuIHQuZWFjaChbXCJtaW5cIixcIm1heFwiLFwic3RlcFwiXSxmdW5jdGlvbih0LHMpe3ZhciBuPWkuYXR0cihzKTtudWxsIT1uJiZuLmxlbmd0aCYmKGVbc109bil9KSxlfSxfZXZlbnRzOntrZXlkb3duOmZ1bmN0aW9uKHQpe3RoaXMuX3N0YXJ0KHQpJiZ0aGlzLl9rZXlkb3duKHQpJiZ0LnByZXZlbnREZWZhdWx0KCl9LGtleXVwOlwiX3N0b3BcIixmb2N1czpmdW5jdGlvbigpe3RoaXMucHJldmlvdXM9dGhpcy5lbGVtZW50LnZhbCgpfSxibHVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNhbmNlbEJsdXI/KGRlbGV0ZSB0aGlzLmNhbmNlbEJsdXIsdm9pZCAwKToodGhpcy5fc3RvcCgpLHRoaXMuX3JlZnJlc2goKSx0aGlzLnByZXZpb3VzIT09dGhpcy5lbGVtZW50LnZhbCgpJiZ0aGlzLl90cmlnZ2VyKFwiY2hhbmdlXCIsdCksdm9pZCAwKX0sbW91c2V3aGVlbDpmdW5jdGlvbih0LGUpe2lmKGUpe2lmKCF0aGlzLnNwaW5uaW5nJiYhdGhpcy5fc3RhcnQodCkpcmV0dXJuITE7dGhpcy5fc3BpbigoZT4wPzE6LTEpKnRoaXMub3B0aW9ucy5zdGVwLHQpLGNsZWFyVGltZW91dCh0aGlzLm1vdXNld2hlZWxUaW1lciksdGhpcy5tb3VzZXdoZWVsVGltZXI9dGhpcy5fZGVsYXkoZnVuY3Rpb24oKXt0aGlzLnNwaW5uaW5nJiZ0aGlzLl9zdG9wKHQpfSwxMDApLHQucHJldmVudERlZmF1bHQoKX19LFwibW91c2Vkb3duIC51aS1zcGlubmVyLWJ1dHRvblwiOmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGkoKXt2YXIgZT10aGlzLmVsZW1lbnRbMF09PT10LnVpLnNhZmVBY3RpdmVFbGVtZW50KHRoaXMuZG9jdW1lbnRbMF0pO2V8fCh0aGlzLmVsZW1lbnQudHJpZ2dlcihcImZvY3VzXCIpLHRoaXMucHJldmlvdXM9cyx0aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMucHJldmlvdXM9c30pKX12YXIgcztzPXRoaXMuZWxlbWVudFswXT09PXQudWkuc2FmZUFjdGl2ZUVsZW1lbnQodGhpcy5kb2N1bWVudFswXSk/dGhpcy5wcmV2aW91czp0aGlzLmVsZW1lbnQudmFsKCksZS5wcmV2ZW50RGVmYXVsdCgpLGkuY2FsbCh0aGlzKSx0aGlzLmNhbmNlbEJsdXI9ITAsdGhpcy5fZGVsYXkoZnVuY3Rpb24oKXtkZWxldGUgdGhpcy5jYW5jZWxCbHVyLGkuY2FsbCh0aGlzKX0pLHRoaXMuX3N0YXJ0KGUpIT09ITEmJnRoaXMuX3JlcGVhdChudWxsLHQoZS5jdXJyZW50VGFyZ2V0KS5oYXNDbGFzcyhcInVpLXNwaW5uZXItdXBcIik/MTotMSxlKX0sXCJtb3VzZXVwIC51aS1zcGlubmVyLWJ1dHRvblwiOlwiX3N0b3BcIixcIm1vdXNlZW50ZXIgLnVpLXNwaW5uZXItYnV0dG9uXCI6ZnVuY3Rpb24oZSl7cmV0dXJuIHQoZS5jdXJyZW50VGFyZ2V0KS5oYXNDbGFzcyhcInVpLXN0YXRlLWFjdGl2ZVwiKT90aGlzLl9zdGFydChlKT09PSExPyExOih0aGlzLl9yZXBlYXQobnVsbCx0KGUuY3VycmVudFRhcmdldCkuaGFzQ2xhc3MoXCJ1aS1zcGlubmVyLXVwXCIpPzE6LTEsZSksdm9pZCAwKTp2b2lkIDB9LFwibW91c2VsZWF2ZSAudWktc3Bpbm5lci1idXR0b25cIjpcIl9zdG9wXCJ9LF9lbmhhbmNlOmZ1bmN0aW9uKCl7dGhpcy51aVNwaW5uZXI9dGhpcy5lbGVtZW50LmF0dHIoXCJhdXRvY29tcGxldGVcIixcIm9mZlwiKS53cmFwKFwiPHNwYW4+XCIpLnBhcmVudCgpLmFwcGVuZChcIjxhPjwvYT48YT48L2E+XCIpfSxfZHJhdzpmdW5jdGlvbigpe3RoaXMuX2VuaGFuY2UoKSx0aGlzLl9hZGRDbGFzcyh0aGlzLnVpU3Bpbm5lcixcInVpLXNwaW5uZXJcIixcInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudFwiKSx0aGlzLl9hZGRDbGFzcyhcInVpLXNwaW5uZXItaW5wdXRcIiksdGhpcy5lbGVtZW50LmF0dHIoXCJyb2xlXCIsXCJzcGluYnV0dG9uXCIpLHRoaXMuYnV0dG9ucz10aGlzLnVpU3Bpbm5lci5jaGlsZHJlbihcImFcIikuYXR0cihcInRhYkluZGV4XCIsLTEpLmF0dHIoXCJhcmlhLWhpZGRlblwiLCEwKS5idXR0b24oe2NsYXNzZXM6e1widWktYnV0dG9uXCI6XCJcIn19KSx0aGlzLl9yZW1vdmVDbGFzcyh0aGlzLmJ1dHRvbnMsXCJ1aS1jb3JuZXItYWxsXCIpLHRoaXMuX2FkZENsYXNzKHRoaXMuYnV0dG9ucy5maXJzdCgpLFwidWktc3Bpbm5lci1idXR0b24gdWktc3Bpbm5lci11cFwiKSx0aGlzLl9hZGRDbGFzcyh0aGlzLmJ1dHRvbnMubGFzdCgpLFwidWktc3Bpbm5lci1idXR0b24gdWktc3Bpbm5lci1kb3duXCIpLHRoaXMuYnV0dG9ucy5maXJzdCgpLmJ1dHRvbih7aWNvbjp0aGlzLm9wdGlvbnMuaWNvbnMudXAsc2hvd0xhYmVsOiExfSksdGhpcy5idXR0b25zLmxhc3QoKS5idXR0b24oe2ljb246dGhpcy5vcHRpb25zLmljb25zLmRvd24sc2hvd0xhYmVsOiExfSksdGhpcy5idXR0b25zLmhlaWdodCgpPk1hdGguY2VpbCguNSp0aGlzLnVpU3Bpbm5lci5oZWlnaHQoKSkmJnRoaXMudWlTcGlubmVyLmhlaWdodCgpPjAmJnRoaXMudWlTcGlubmVyLmhlaWdodCh0aGlzLnVpU3Bpbm5lci5oZWlnaHQoKSl9LF9rZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucyxzPXQudWkua2V5Q29kZTtzd2l0Y2goZS5rZXlDb2RlKXtjYXNlIHMuVVA6cmV0dXJuIHRoaXMuX3JlcGVhdChudWxsLDEsZSksITA7Y2FzZSBzLkRPV046cmV0dXJuIHRoaXMuX3JlcGVhdChudWxsLC0xLGUpLCEwO2Nhc2Ugcy5QQUdFX1VQOnJldHVybiB0aGlzLl9yZXBlYXQobnVsbCxpLnBhZ2UsZSksITA7Y2FzZSBzLlBBR0VfRE9XTjpyZXR1cm4gdGhpcy5fcmVwZWF0KG51bGwsLWkucGFnZSxlKSwhMH1yZXR1cm4hMX0sX3N0YXJ0OmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNwaW5uaW5nfHx0aGlzLl90cmlnZ2VyKFwic3RhcnRcIix0KSE9PSExPyh0aGlzLmNvdW50ZXJ8fCh0aGlzLmNvdW50ZXI9MSksdGhpcy5zcGlubmluZz0hMCwhMCk6ITF9LF9yZXBlYXQ6ZnVuY3Rpb24odCxlLGkpe3Q9dHx8NTAwLGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKSx0aGlzLnRpbWVyPXRoaXMuX2RlbGF5KGZ1bmN0aW9uKCl7dGhpcy5fcmVwZWF0KDQwLGUsaSl9LHQpLHRoaXMuX3NwaW4oZSp0aGlzLm9wdGlvbnMuc3RlcCxpKX0sX3NwaW46ZnVuY3Rpb24odCxlKXt2YXIgaT10aGlzLnZhbHVlKCl8fDA7dGhpcy5jb3VudGVyfHwodGhpcy5jb3VudGVyPTEpLGk9dGhpcy5fYWRqdXN0VmFsdWUoaSt0KnRoaXMuX2luY3JlbWVudCh0aGlzLmNvdW50ZXIpKSx0aGlzLnNwaW5uaW5nJiZ0aGlzLl90cmlnZ2VyKFwic3BpblwiLGUse3ZhbHVlOml9KT09PSExfHwodGhpcy5fdmFsdWUoaSksdGhpcy5jb3VudGVyKyspfSxfaW5jcmVtZW50OmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucy5pbmNyZW1lbnRhbDtyZXR1cm4gaT90LmlzRnVuY3Rpb24oaSk/aShlKTpNYXRoLmZsb29yKGUqZSplLzVlNC1lKmUvNTAwKzE3KmUvMjAwKzEpOjF9LF9wcmVjaXNpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9wcmVjaXNpb25PZih0aGlzLm9wdGlvbnMuc3RlcCk7cmV0dXJuIG51bGwhPT10aGlzLm9wdGlvbnMubWluJiYodD1NYXRoLm1heCh0LHRoaXMuX3ByZWNpc2lvbk9mKHRoaXMub3B0aW9ucy5taW4pKSksdH0sX3ByZWNpc2lvbk9mOmZ1bmN0aW9uKHQpe3ZhciBlPVwiXCIrdCxpPWUuaW5kZXhPZihcIi5cIik7cmV0dXJuLTE9PT1pPzA6ZS5sZW5ndGgtaS0xfSxfYWRqdXN0VmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUsaSxzPXRoaXMub3B0aW9ucztyZXR1cm4gZT1udWxsIT09cy5taW4/cy5taW46MCxpPXQtZSxpPU1hdGgucm91bmQoaS9zLnN0ZXApKnMuc3RlcCx0PWUraSx0PXBhcnNlRmxvYXQodC50b0ZpeGVkKHRoaXMuX3ByZWNpc2lvbigpKSksbnVsbCE9PXMubWF4JiZ0PnMubWF4P3MubWF4Om51bGwhPT1zLm1pbiYmcy5taW4+dD9zLm1pbjp0fSxfc3RvcDpmdW5jdGlvbih0KXt0aGlzLnNwaW5uaW5nJiYoY2xlYXJUaW1lb3V0KHRoaXMudGltZXIpLGNsZWFyVGltZW91dCh0aGlzLm1vdXNld2hlZWxUaW1lciksdGhpcy5jb3VudGVyPTAsdGhpcy5zcGlubmluZz0hMSx0aGlzLl90cmlnZ2VyKFwic3RvcFwiLHQpKX0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBpLHMsbjtyZXR1cm5cImN1bHR1cmVcIj09PXR8fFwibnVtYmVyRm9ybWF0XCI9PT10PyhpPXRoaXMuX3BhcnNlKHRoaXMuZWxlbWVudC52YWwoKSksdGhpcy5vcHRpb25zW3RdPWUsdGhpcy5lbGVtZW50LnZhbCh0aGlzLl9mb3JtYXQoaSkpLHZvaWQgMCk6KChcIm1heFwiPT09dHx8XCJtaW5cIj09PXR8fFwic3RlcFwiPT09dCkmJlwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT10aGlzLl9wYXJzZShlKSksXCJpY29uc1wiPT09dCYmKHM9dGhpcy5idXR0b25zLmZpcnN0KCkuZmluZChcIi51aS1pY29uXCIpLHRoaXMuX3JlbW92ZUNsYXNzKHMsbnVsbCx0aGlzLm9wdGlvbnMuaWNvbnMudXApLHRoaXMuX2FkZENsYXNzKHMsbnVsbCxlLnVwKSxuPXRoaXMuYnV0dG9ucy5sYXN0KCkuZmluZChcIi51aS1pY29uXCIpLHRoaXMuX3JlbW92ZUNsYXNzKG4sbnVsbCx0aGlzLm9wdGlvbnMuaWNvbnMuZG93biksdGhpcy5fYWRkQ2xhc3MobixudWxsLGUuZG93bikpLHRoaXMuX3N1cGVyKHQsZSksdm9pZCAwKX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpLHRoaXMuX3RvZ2dsZUNsYXNzKHRoaXMudWlTcGlubmVyLG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiLCEhdCksdGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLCEhdCksdGhpcy5idXR0b25zLmJ1dHRvbih0P1wiZGlzYWJsZVwiOlwiZW5hYmxlXCIpfSxfc2V0T3B0aW9uczpyKGZ1bmN0aW9uKHQpe3RoaXMuX3N1cGVyKHQpfSksX3BhcnNlOmZ1bmN0aW9uKHQpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0JiZcIlwiIT09dCYmKHQ9d2luZG93Lkdsb2JhbGl6ZSYmdGhpcy5vcHRpb25zLm51bWJlckZvcm1hdD9HbG9iYWxpemUucGFyc2VGbG9hdCh0LDEwLHRoaXMub3B0aW9ucy5jdWx0dXJlKTordCksXCJcIj09PXR8fGlzTmFOKHQpP251bGw6dH0sX2Zvcm1hdDpmdW5jdGlvbih0KXtyZXR1cm5cIlwiPT09dD9cIlwiOndpbmRvdy5HbG9iYWxpemUmJnRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQ/R2xvYmFsaXplLmZvcm1hdCh0LHRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQsdGhpcy5vcHRpb25zLmN1bHR1cmUpOnR9LF9yZWZyZXNoOmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LmF0dHIoe1wiYXJpYS12YWx1ZW1pblwiOnRoaXMub3B0aW9ucy5taW4sXCJhcmlhLXZhbHVlbWF4XCI6dGhpcy5vcHRpb25zLm1heCxcImFyaWEtdmFsdWVub3dcIjp0aGlzLl9wYXJzZSh0aGlzLmVsZW1lbnQudmFsKCkpfSl9LGlzVmFsaWQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnZhbHVlKCk7cmV0dXJuIG51bGw9PT10PyExOnQ9PT10aGlzLl9hZGp1c3RWYWx1ZSh0KX0sX3ZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIGk7XCJcIiE9PXQmJihpPXRoaXMuX3BhcnNlKHQpLG51bGwhPT1pJiYoZXx8KGk9dGhpcy5fYWRqdXN0VmFsdWUoaSkpLHQ9dGhpcy5fZm9ybWF0KGkpKSksdGhpcy5lbGVtZW50LnZhbCh0KSx0aGlzLl9yZWZyZXNoKCl9LF9kZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5lbGVtZW50LnByb3AoXCJkaXNhYmxlZFwiLCExKS5yZW1vdmVBdHRyKFwiYXV0b2NvbXBsZXRlIHJvbGUgYXJpYS12YWx1ZW1pbiBhcmlhLXZhbHVlbWF4IGFyaWEtdmFsdWVub3dcIiksdGhpcy51aVNwaW5uZXIucmVwbGFjZVdpdGgodGhpcy5lbGVtZW50KX0sc3RlcFVwOnIoZnVuY3Rpb24odCl7dGhpcy5fc3RlcFVwKHQpfSksX3N0ZXBVcDpmdW5jdGlvbih0KXt0aGlzLl9zdGFydCgpJiYodGhpcy5fc3BpbigodHx8MSkqdGhpcy5vcHRpb25zLnN0ZXApLHRoaXMuX3N0b3AoKSl9LHN0ZXBEb3duOnIoZnVuY3Rpb24odCl7dGhpcy5fc3RlcERvd24odCl9KSxfc3RlcERvd246ZnVuY3Rpb24odCl7dGhpcy5fc3RhcnQoKSYmKHRoaXMuX3NwaW4oKHR8fDEpKi10aGlzLm9wdGlvbnMuc3RlcCksdGhpcy5fc3RvcCgpKX0scGFnZVVwOnIoZnVuY3Rpb24odCl7dGhpcy5fc3RlcFVwKCh0fHwxKSp0aGlzLm9wdGlvbnMucGFnZSl9KSxwYWdlRG93bjpyKGZ1bmN0aW9uKHQpe3RoaXMuX3N0ZXBEb3duKCh0fHwxKSp0aGlzLm9wdGlvbnMucGFnZSl9KSx2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD8ocih0aGlzLl92YWx1ZSkuY2FsbCh0aGlzLHQpLHZvaWQgMCk6dGhpcy5fcGFyc2UodGhpcy5lbGVtZW50LnZhbCgpKX0sd2lkZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudWlTcGlubmVyfX0pLHQudWlCYWNrQ29tcGF0IT09ITEmJnQud2lkZ2V0KFwidWkuc3Bpbm5lclwiLHQudWkuc3Bpbm5lcix7X2VuaGFuY2U6ZnVuY3Rpb24oKXt0aGlzLnVpU3Bpbm5lcj10aGlzLmVsZW1lbnQuYXR0cihcImF1dG9jb21wbGV0ZVwiLFwib2ZmXCIpLndyYXAodGhpcy5fdWlTcGlubmVySHRtbCgpKS5wYXJlbnQoKS5hcHBlbmQodGhpcy5fYnV0dG9uSHRtbCgpKX0sX3VpU3Bpbm5lckh0bWw6ZnVuY3Rpb24oKXtyZXR1cm5cIjxzcGFuPlwifSxfYnV0dG9uSHRtbDpmdW5jdGlvbigpe3JldHVyblwiPGE+PC9hPjxhPjwvYT5cIn19KSx0LnVpLnNwaW5uZXIsdC53aWRnZXQoXCJ1aS50YWJzXCIse3ZlcnNpb246XCIxLjEyLjFcIixkZWxheTozMDAsb3B0aW9uczp7YWN0aXZlOm51bGwsY2xhc3Nlczp7XCJ1aS10YWJzXCI6XCJ1aS1jb3JuZXItYWxsXCIsXCJ1aS10YWJzLW5hdlwiOlwidWktY29ybmVyLWFsbFwiLFwidWktdGFicy1wYW5lbFwiOlwidWktY29ybmVyLWJvdHRvbVwiLFwidWktdGFicy10YWJcIjpcInVpLWNvcm5lci10b3BcIn0sY29sbGFwc2libGU6ITEsZXZlbnQ6XCJjbGlja1wiLGhlaWdodFN0eWxlOlwiY29udGVudFwiLGhpZGU6bnVsbCxzaG93Om51bGwsYWN0aXZhdGU6bnVsbCxiZWZvcmVBY3RpdmF0ZTpudWxsLGJlZm9yZUxvYWQ6bnVsbCxsb2FkOm51bGx9LF9pc0xvY2FsOmZ1bmN0aW9uKCl7dmFyIHQ9LyMuKiQvO3JldHVybiBmdW5jdGlvbihlKXt2YXIgaSxzO2k9ZS5ocmVmLnJlcGxhY2UodCxcIlwiKSxzPWxvY2F0aW9uLmhyZWYucmVwbGFjZSh0LFwiXCIpO3RyeXtpPWRlY29kZVVSSUNvbXBvbmVudChpKX1jYXRjaChuKXt9dHJ5e3M9ZGVjb2RlVVJJQ29tcG9uZW50KHMpfWNhdGNoKG4pe31yZXR1cm4gZS5oYXNoLmxlbmd0aD4xJiZpPT09c319KCksX2NyZWF0ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMsaT10aGlzLm9wdGlvbnM7dGhpcy5ydW5uaW5nPSExLHRoaXMuX2FkZENsYXNzKFwidWktdGFic1wiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50XCIpLHRoaXMuX3RvZ2dsZUNsYXNzKFwidWktdGFicy1jb2xsYXBzaWJsZVwiLG51bGwsaS5jb2xsYXBzaWJsZSksdGhpcy5fcHJvY2Vzc1RhYnMoKSxpLmFjdGl2ZT10aGlzLl9pbml0aWFsQWN0aXZlKCksdC5pc0FycmF5KGkuZGlzYWJsZWQpJiYoaS5kaXNhYmxlZD10LnVuaXF1ZShpLmRpc2FibGVkLmNvbmNhdCh0Lm1hcCh0aGlzLnRhYnMuZmlsdGVyKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpLGZ1bmN0aW9uKHQpe3JldHVybiBlLnRhYnMuaW5kZXgodCl9KSkpLnNvcnQoKSksdGhpcy5hY3RpdmU9dGhpcy5vcHRpb25zLmFjdGl2ZSE9PSExJiZ0aGlzLmFuY2hvcnMubGVuZ3RoP3RoaXMuX2ZpbmRBY3RpdmUoaS5hY3RpdmUpOnQoKSx0aGlzLl9yZWZyZXNoKCksdGhpcy5hY3RpdmUubGVuZ3RoJiZ0aGlzLmxvYWQoaS5hY3RpdmUpfSxfaW5pdGlhbEFjdGl2ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMub3B0aW9ucy5hY3RpdmUsaT10aGlzLm9wdGlvbnMuY29sbGFwc2libGUscz1sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKTtyZXR1cm4gbnVsbD09PWUmJihzJiZ0aGlzLnRhYnMuZWFjaChmdW5jdGlvbihpLG4pe3JldHVybiB0KG4pLmF0dHIoXCJhcmlhLWNvbnRyb2xzXCIpPT09cz8oZT1pLCExKTp2b2lkIDB9KSxudWxsPT09ZSYmKGU9dGhpcy50YWJzLmluZGV4KHRoaXMudGFicy5maWx0ZXIoXCIudWktdGFicy1hY3RpdmVcIikpKSwobnVsbD09PWV8fC0xPT09ZSkmJihlPXRoaXMudGFicy5sZW5ndGg/MDohMSkpLGUhPT0hMSYmKGU9dGhpcy50YWJzLmluZGV4KHRoaXMudGFicy5lcShlKSksLTE9PT1lJiYoZT1pPyExOjApKSwhaSYmZT09PSExJiZ0aGlzLmFuY2hvcnMubGVuZ3RoJiYoZT0wKSxlfSxfZ2V0Q3JlYXRlRXZlbnREYXRhOmZ1bmN0aW9uKCl7cmV0dXJue3RhYjp0aGlzLmFjdGl2ZSxwYW5lbDp0aGlzLmFjdGl2ZS5sZW5ndGg/dGhpcy5fZ2V0UGFuZWxGb3JUYWIodGhpcy5hY3RpdmUpOnQoKX19LF90YWJLZXlkb3duOmZ1bmN0aW9uKGUpe3ZhciBpPXQodC51aS5zYWZlQWN0aXZlRWxlbWVudCh0aGlzLmRvY3VtZW50WzBdKSkuY2xvc2VzdChcImxpXCIpLHM9dGhpcy50YWJzLmluZGV4KGkpLG49ITA7aWYoIXRoaXMuX2hhbmRsZVBhZ2VOYXYoZSkpe3N3aXRjaChlLmtleUNvZGUpe2Nhc2UgdC51aS5rZXlDb2RlLlJJR0hUOmNhc2UgdC51aS5rZXlDb2RlLkRPV046cysrO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlVQOmNhc2UgdC51aS5rZXlDb2RlLkxFRlQ6bj0hMSxzLS07YnJlYWs7Y2FzZSB0LnVpLmtleUNvZGUuRU5EOnM9dGhpcy5hbmNob3JzLmxlbmd0aC0xO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLkhPTUU6cz0wO2JyZWFrO2Nhc2UgdC51aS5rZXlDb2RlLlNQQUNFOnJldHVybiBlLnByZXZlbnREZWZhdWx0KCksY2xlYXJUaW1lb3V0KHRoaXMuYWN0aXZhdGluZyksdGhpcy5fYWN0aXZhdGUocyksdm9pZCAwO2Nhc2UgdC51aS5rZXlDb2RlLkVOVEVSOnJldHVybiBlLnByZXZlbnREZWZhdWx0KCksY2xlYXJUaW1lb3V0KHRoaXMuYWN0aXZhdGluZyksdGhpcy5fYWN0aXZhdGUocz09PXRoaXMub3B0aW9ucy5hY3RpdmU/ITE6cyksdm9pZCAwO2RlZmF1bHQ6cmV0dXJufWUucHJldmVudERlZmF1bHQoKSxjbGVhclRpbWVvdXQodGhpcy5hY3RpdmF0aW5nKSxzPXRoaXMuX2ZvY3VzTmV4dFRhYihzLG4pLGUuY3RybEtleXx8ZS5tZXRhS2V5fHwoaS5hdHRyKFwiYXJpYS1zZWxlY3RlZFwiLFwiZmFsc2VcIiksdGhpcy50YWJzLmVxKHMpLmF0dHIoXCJhcmlhLXNlbGVjdGVkXCIsXCJ0cnVlXCIpLHRoaXMuYWN0aXZhdGluZz10aGlzLl9kZWxheShmdW5jdGlvbigpe3RoaXMub3B0aW9uKFwiYWN0aXZlXCIscyl9LHRoaXMuZGVsYXkpKX19LF9wYW5lbEtleWRvd246ZnVuY3Rpb24oZSl7dGhpcy5faGFuZGxlUGFnZU5hdihlKXx8ZS5jdHJsS2V5JiZlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuVVAmJihlLnByZXZlbnREZWZhdWx0KCksdGhpcy5hY3RpdmUudHJpZ2dlcihcImZvY3VzXCIpKX0sX2hhbmRsZVBhZ2VOYXY6ZnVuY3Rpb24oZSl7cmV0dXJuIGUuYWx0S2V5JiZlLmtleUNvZGU9PT10LnVpLmtleUNvZGUuUEFHRV9VUD8odGhpcy5fYWN0aXZhdGUodGhpcy5fZm9jdXNOZXh0VGFiKHRoaXMub3B0aW9ucy5hY3RpdmUtMSwhMSkpLCEwKTplLmFsdEtleSYmZS5rZXlDb2RlPT09dC51aS5rZXlDb2RlLlBBR0VfRE9XTj8odGhpcy5fYWN0aXZhdGUodGhpcy5fZm9jdXNOZXh0VGFiKHRoaXMub3B0aW9ucy5hY3RpdmUrMSwhMCkpLCEwKTp2b2lkIDB9LF9maW5kTmV4dFRhYjpmdW5jdGlvbihlLGkpe2Z1bmN0aW9uIHMoKXtyZXR1cm4gZT5uJiYoZT0wKSwwPmUmJihlPW4pLGV9Zm9yKHZhciBuPXRoaXMudGFicy5sZW5ndGgtMTstMSE9PXQuaW5BcnJheShzKCksdGhpcy5vcHRpb25zLmRpc2FibGVkKTspZT1pP2UrMTplLTE7cmV0dXJuIGV9LF9mb2N1c05leHRUYWI6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD10aGlzLl9maW5kTmV4dFRhYih0LGUpLHRoaXMudGFicy5lcSh0KS50cmlnZ2VyKFwiZm9jdXNcIiksdH0sX3NldE9wdGlvbjpmdW5jdGlvbih0LGUpe3JldHVyblwiYWN0aXZlXCI9PT10Pyh0aGlzLl9hY3RpdmF0ZShlKSx2b2lkIDApOih0aGlzLl9zdXBlcih0LGUpLFwiY29sbGFwc2libGVcIj09PXQmJih0aGlzLl90b2dnbGVDbGFzcyhcInVpLXRhYnMtY29sbGFwc2libGVcIixudWxsLGUpLGV8fHRoaXMub3B0aW9ucy5hY3RpdmUhPT0hMXx8dGhpcy5fYWN0aXZhdGUoMCkpLFwiZXZlbnRcIj09PXQmJnRoaXMuX3NldHVwRXZlbnRzKGUpLFwiaGVpZ2h0U3R5bGVcIj09PXQmJnRoaXMuX3NldHVwSGVpZ2h0U3R5bGUoZSksdm9pZCAwKX0sX3Nhbml0aXplU2VsZWN0b3I6ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dC5yZXBsYWNlKC9bIVwiJCUmJygpKissLlxcLzo7PD0+P0BcXFtcXF1cXF5ge3x9fl0vZyxcIlxcXFwkJlwiKTpcIlwifSxyZWZyZXNoOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5vcHRpb25zLGk9dGhpcy50YWJsaXN0LmNoaWxkcmVuKFwiOmhhcyhhW2hyZWZdKVwiKTtlLmRpc2FibGVkPXQubWFwKGkuZmlsdGVyKFwiLnVpLXN0YXRlLWRpc2FibGVkXCIpLGZ1bmN0aW9uKHQpe3JldHVybiBpLmluZGV4KHQpfSksdGhpcy5fcHJvY2Vzc1RhYnMoKSxlLmFjdGl2ZSE9PSExJiZ0aGlzLmFuY2hvcnMubGVuZ3RoP3RoaXMuYWN0aXZlLmxlbmd0aCYmIXQuY29udGFpbnModGhpcy50YWJsaXN0WzBdLHRoaXMuYWN0aXZlWzBdKT90aGlzLnRhYnMubGVuZ3RoPT09ZS5kaXNhYmxlZC5sZW5ndGg/KGUuYWN0aXZlPSExLHRoaXMuYWN0aXZlPXQoKSk6dGhpcy5fYWN0aXZhdGUodGhpcy5fZmluZE5leHRUYWIoTWF0aC5tYXgoMCxlLmFjdGl2ZS0xKSwhMSkpOmUuYWN0aXZlPXRoaXMudGFicy5pbmRleCh0aGlzLmFjdGl2ZSk6KGUuYWN0aXZlPSExLHRoaXMuYWN0aXZlPXQoKSksdGhpcy5fcmVmcmVzaCgpfSxfcmVmcmVzaDpmdW5jdGlvbigpe3RoaXMuX3NldE9wdGlvbkRpc2FibGVkKHRoaXMub3B0aW9ucy5kaXNhYmxlZCksdGhpcy5fc2V0dXBFdmVudHModGhpcy5vcHRpb25zLmV2ZW50KSx0aGlzLl9zZXR1cEhlaWdodFN0eWxlKHRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSksdGhpcy50YWJzLm5vdCh0aGlzLmFjdGl2ZSkuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIix0YWJJbmRleDotMX0pLHRoaXMucGFuZWxzLm5vdCh0aGlzLl9nZXRQYW5lbEZvclRhYih0aGlzLmFjdGl2ZSkpLmhpZGUoKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJ0cnVlXCJ9KSx0aGlzLmFjdGl2ZS5sZW5ndGg/KHRoaXMuYWN0aXZlLmF0dHIoe1wiYXJpYS1zZWxlY3RlZFwiOlwidHJ1ZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwidHJ1ZVwiLHRhYkluZGV4OjB9KSx0aGlzLl9hZGRDbGFzcyh0aGlzLmFjdGl2ZSxcInVpLXRhYnMtYWN0aXZlXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksdGhpcy5fZ2V0UGFuZWxGb3JUYWIodGhpcy5hY3RpdmUpLnNob3coKS5hdHRyKHtcImFyaWEtaGlkZGVuXCI6XCJmYWxzZVwifSkpOnRoaXMudGFicy5lcSgwKS5hdHRyKFwidGFiSW5kZXhcIiwwKX0sX3Byb2Nlc3NUYWJzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxpPXRoaXMudGFicyxzPXRoaXMuYW5jaG9ycyxuPXRoaXMucGFuZWxzO3RoaXMudGFibGlzdD10aGlzLl9nZXRMaXN0KCkuYXR0cihcInJvbGVcIixcInRhYmxpc3RcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy50YWJsaXN0LFwidWktdGFicy1uYXZcIixcInVpLWhlbHBlci1yZXNldCB1aS1oZWxwZXItY2xlYXJmaXggdWktd2lkZ2V0LWhlYWRlclwiKSx0aGlzLnRhYmxpc3Qub24oXCJtb3VzZWRvd25cIit0aGlzLmV2ZW50TmFtZXNwYWNlLFwiPiBsaVwiLGZ1bmN0aW9uKGUpe3QodGhpcykuaXMoXCIudWktc3RhdGUtZGlzYWJsZWRcIikmJmUucHJldmVudERlZmF1bHQoKX0pLm9uKFwiZm9jdXNcIit0aGlzLmV2ZW50TmFtZXNwYWNlLFwiLnVpLXRhYnMtYW5jaG9yXCIsZnVuY3Rpb24oKXt0KHRoaXMpLmNsb3Nlc3QoXCJsaVwiKS5pcyhcIi51aS1zdGF0ZS1kaXNhYmxlZFwiKSYmdGhpcy5ibHVyKCl9KSx0aGlzLnRhYnM9dGhpcy50YWJsaXN0LmZpbmQoXCI+IGxpOmhhcyhhW2hyZWZdKVwiKS5hdHRyKHtyb2xlOlwidGFiXCIsdGFiSW5kZXg6LTF9KSx0aGlzLl9hZGRDbGFzcyh0aGlzLnRhYnMsXCJ1aS10YWJzLXRhYlwiLFwidWktc3RhdGUtZGVmYXVsdFwiKSx0aGlzLmFuY2hvcnM9dGhpcy50YWJzLm1hcChmdW5jdGlvbigpe3JldHVybiB0KFwiYVwiLHRoaXMpWzBdfSkuYXR0cih7cm9sZTpcInByZXNlbnRhdGlvblwiLHRhYkluZGV4Oi0xfSksdGhpcy5fYWRkQ2xhc3ModGhpcy5hbmNob3JzLFwidWktdGFicy1hbmNob3JcIiksdGhpcy5wYW5lbHM9dCgpLHRoaXMuYW5jaG9ycy5lYWNoKGZ1bmN0aW9uKGkscyl7dmFyIG4sbyxhLHI9dChzKS51bmlxdWVJZCgpLmF0dHIoXCJpZFwiKSxoPXQocykuY2xvc2VzdChcImxpXCIpLGw9aC5hdHRyKFwiYXJpYS1jb250cm9sc1wiKTtlLl9pc0xvY2FsKHMpPyhuPXMuaGFzaCxhPW4uc3Vic3RyaW5nKDEpLG89ZS5lbGVtZW50LmZpbmQoZS5fc2FuaXRpemVTZWxlY3RvcihuKSkpOihhPWguYXR0cihcImFyaWEtY29udHJvbHNcIil8fHQoe30pLnVuaXF1ZUlkKClbMF0uaWQsbj1cIiNcIithLG89ZS5lbGVtZW50LmZpbmQobiksby5sZW5ndGh8fChvPWUuX2NyZWF0ZVBhbmVsKGEpLG8uaW5zZXJ0QWZ0ZXIoZS5wYW5lbHNbaS0xXXx8ZS50YWJsaXN0KSksby5hdHRyKFwiYXJpYS1saXZlXCIsXCJwb2xpdGVcIikpLG8ubGVuZ3RoJiYoZS5wYW5lbHM9ZS5wYW5lbHMuYWRkKG8pKSxsJiZoLmRhdGEoXCJ1aS10YWJzLWFyaWEtY29udHJvbHNcIixsKSxoLmF0dHIoe1wiYXJpYS1jb250cm9sc1wiOmEsXCJhcmlhLWxhYmVsbGVkYnlcIjpyfSksby5hdHRyKFwiYXJpYS1sYWJlbGxlZGJ5XCIscil9KSx0aGlzLnBhbmVscy5hdHRyKFwicm9sZVwiLFwidGFicGFuZWxcIiksdGhpcy5fYWRkQ2xhc3ModGhpcy5wYW5lbHMsXCJ1aS10YWJzLXBhbmVsXCIsXCJ1aS13aWRnZXQtY29udGVudFwiKSxpJiYodGhpcy5fb2ZmKGkubm90KHRoaXMudGFicykpLHRoaXMuX29mZihzLm5vdCh0aGlzLmFuY2hvcnMpKSx0aGlzLl9vZmYobi5ub3QodGhpcy5wYW5lbHMpKSl9LF9nZXRMaXN0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudGFibGlzdHx8dGhpcy5lbGVtZW50LmZpbmQoXCJvbCwgdWxcIikuZXEoMCl9LF9jcmVhdGVQYW5lbDpmdW5jdGlvbihlKXtyZXR1cm4gdChcIjxkaXY+XCIpLmF0dHIoXCJpZFwiLGUpLmRhdGEoXCJ1aS10YWJzLWRlc3Ryb3lcIiwhMCl9LF9zZXRPcHRpb25EaXNhYmxlZDpmdW5jdGlvbihlKXt2YXIgaSxzLG47Zm9yKHQuaXNBcnJheShlKSYmKGUubGVuZ3RoP2UubGVuZ3RoPT09dGhpcy5hbmNob3JzLmxlbmd0aCYmKGU9ITApOmU9ITEpLG49MDtzPXRoaXMudGFic1tuXTtuKyspaT10KHMpLGU9PT0hMHx8LTEhPT10LmluQXJyYXkobixlKT8oaS5hdHRyKFwiYXJpYS1kaXNhYmxlZFwiLFwidHJ1ZVwiKSx0aGlzLl9hZGRDbGFzcyhpLG51bGwsXCJ1aS1zdGF0ZS1kaXNhYmxlZFwiKSk6KGkucmVtb3ZlQXR0cihcImFyaWEtZGlzYWJsZWRcIiksdGhpcy5fcmVtb3ZlQ2xhc3MoaSxudWxsLFwidWktc3RhdGUtZGlzYWJsZWRcIikpO3RoaXMub3B0aW9ucy5kaXNhYmxlZD1lLHRoaXMuX3RvZ2dsZUNsYXNzKHRoaXMud2lkZ2V0KCksdGhpcy53aWRnZXRGdWxsTmFtZStcIi1kaXNhYmxlZFwiLG51bGwsZT09PSEwKX0sX3NldHVwRXZlbnRzOmZ1bmN0aW9uKGUpe3ZhciBpPXt9O2UmJnQuZWFjaChlLnNwbGl0KFwiIFwiKSxmdW5jdGlvbih0LGUpe2lbZV09XCJfZXZlbnRIYW5kbGVyXCJ9KSx0aGlzLl9vZmYodGhpcy5hbmNob3JzLmFkZCh0aGlzLnRhYnMpLmFkZCh0aGlzLnBhbmVscykpLHRoaXMuX29uKCEwLHRoaXMuYW5jaG9ycyx7Y2xpY2s6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpfX0pLHRoaXMuX29uKHRoaXMuYW5jaG9ycyxpKSx0aGlzLl9vbih0aGlzLnRhYnMse2tleWRvd246XCJfdGFiS2V5ZG93blwifSksdGhpcy5fb24odGhpcy5wYW5lbHMse2tleWRvd246XCJfcGFuZWxLZXlkb3duXCJ9KSx0aGlzLl9mb2N1c2FibGUodGhpcy50YWJzKSx0aGlzLl9ob3ZlcmFibGUodGhpcy50YWJzKX0sX3NldHVwSGVpZ2h0U3R5bGU6ZnVuY3Rpb24oZSl7dmFyIGkscz10aGlzLmVsZW1lbnQucGFyZW50KCk7XCJmaWxsXCI9PT1lPyhpPXMuaGVpZ2h0KCksaS09dGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCktdGhpcy5lbGVtZW50LmhlaWdodCgpLHRoaXMuZWxlbWVudC5zaWJsaW5ncyhcIjp2aXNpYmxlXCIpLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLHM9ZS5jc3MoXCJwb3NpdGlvblwiKTtcImFic29sdXRlXCIhPT1zJiZcImZpeGVkXCIhPT1zJiYoaS09ZS5vdXRlckhlaWdodCghMCkpfSksdGhpcy5lbGVtZW50LmNoaWxkcmVuKCkubm90KHRoaXMucGFuZWxzKS5lYWNoKGZ1bmN0aW9uKCl7aS09dCh0aGlzKS5vdXRlckhlaWdodCghMCl9KSx0aGlzLnBhbmVscy5lYWNoKGZ1bmN0aW9uKCl7dCh0aGlzKS5oZWlnaHQoTWF0aC5tYXgoMCxpLXQodGhpcykuaW5uZXJIZWlnaHQoKSt0KHRoaXMpLmhlaWdodCgpKSl9KS5jc3MoXCJvdmVyZmxvd1wiLFwiYXV0b1wiKSk6XCJhdXRvXCI9PT1lJiYoaT0wLHRoaXMucGFuZWxzLmVhY2goZnVuY3Rpb24oKXtpPU1hdGgubWF4KGksdCh0aGlzKS5oZWlnaHQoXCJcIikuaGVpZ2h0KCkpfSkuaGVpZ2h0KGkpKX0sX2V2ZW50SGFuZGxlcjpmdW5jdGlvbihlKXt2YXIgaT10aGlzLm9wdGlvbnMscz10aGlzLmFjdGl2ZSxuPXQoZS5jdXJyZW50VGFyZ2V0KSxvPW4uY2xvc2VzdChcImxpXCIpLGE9b1swXT09PXNbMF0scj1hJiZpLmNvbGxhcHNpYmxlLGg9cj90KCk6dGhpcy5fZ2V0UGFuZWxGb3JUYWIobyksbD1zLmxlbmd0aD90aGlzLl9nZXRQYW5lbEZvclRhYihzKTp0KCksYz17b2xkVGFiOnMsb2xkUGFuZWw6bCxuZXdUYWI6cj90KCk6byxuZXdQYW5lbDpofTtlLnByZXZlbnREZWZhdWx0KCksby5oYXNDbGFzcyhcInVpLXN0YXRlLWRpc2FibGVkXCIpfHxvLmhhc0NsYXNzKFwidWktdGFicy1sb2FkaW5nXCIpfHx0aGlzLnJ1bm5pbmd8fGEmJiFpLmNvbGxhcHNpYmxlfHx0aGlzLl90cmlnZ2VyKFwiYmVmb3JlQWN0aXZhdGVcIixlLGMpPT09ITF8fChpLmFjdGl2ZT1yPyExOnRoaXMudGFicy5pbmRleChvKSx0aGlzLmFjdGl2ZT1hP3QoKTpvLHRoaXMueGhyJiZ0aGlzLnhoci5hYm9ydCgpLGwubGVuZ3RofHxoLmxlbmd0aHx8dC5lcnJvcihcImpRdWVyeSBVSSBUYWJzOiBNaXNtYXRjaGluZyBmcmFnbWVudCBpZGVudGlmaWVyLlwiKSxoLmxlbmd0aCYmdGhpcy5sb2FkKHRoaXMudGFicy5pbmRleChvKSxlKSx0aGlzLl90b2dnbGUoZSxjKSl9LF90b2dnbGU6ZnVuY3Rpb24oZSxpKXtmdW5jdGlvbiBzKCl7by5ydW5uaW5nPSExLG8uX3RyaWdnZXIoXCJhY3RpdmF0ZVwiLGUsaSl9ZnVuY3Rpb24gbigpe28uX2FkZENsYXNzKGkubmV3VGFiLmNsb3Nlc3QoXCJsaVwiKSxcInVpLXRhYnMtYWN0aXZlXCIsXCJ1aS1zdGF0ZS1hY3RpdmVcIiksYS5sZW5ndGgmJm8ub3B0aW9ucy5zaG93P28uX3Nob3coYSxvLm9wdGlvbnMuc2hvdyxzKTooYS5zaG93KCkscygpKX12YXIgbz10aGlzLGE9aS5uZXdQYW5lbCxyPWkub2xkUGFuZWw7dGhpcy5ydW5uaW5nPSEwLHIubGVuZ3RoJiZ0aGlzLm9wdGlvbnMuaGlkZT90aGlzLl9oaWRlKHIsdGhpcy5vcHRpb25zLmhpZGUsZnVuY3Rpb24oKXtvLl9yZW1vdmVDbGFzcyhpLm9sZFRhYi5jbG9zZXN0KFwibGlcIiksXCJ1aS10YWJzLWFjdGl2ZVwiLFwidWktc3RhdGUtYWN0aXZlXCIpLG4oKX0pOih0aGlzLl9yZW1vdmVDbGFzcyhpLm9sZFRhYi5jbG9zZXN0KFwibGlcIiksXCJ1aS10YWJzLWFjdGl2ZVwiLFwidWktc3RhdGUtYWN0aXZlXCIpLHIuaGlkZSgpLG4oKSksci5hdHRyKFwiYXJpYS1oaWRkZW5cIixcInRydWVcIiksaS5vbGRUYWIuYXR0cih7XCJhcmlhLXNlbGVjdGVkXCI6XCJmYWxzZVwiLFwiYXJpYS1leHBhbmRlZFwiOlwiZmFsc2VcIn0pLGEubGVuZ3RoJiZyLmxlbmd0aD9pLm9sZFRhYi5hdHRyKFwidGFiSW5kZXhcIiwtMSk6YS5sZW5ndGgmJnRoaXMudGFicy5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gMD09PXQodGhpcykuYXR0cihcInRhYkluZGV4XCIpfSkuYXR0cihcInRhYkluZGV4XCIsLTEpLGEuYXR0cihcImFyaWEtaGlkZGVuXCIsXCJmYWxzZVwiKSxpLm5ld1RhYi5hdHRyKHtcImFyaWEtc2VsZWN0ZWRcIjpcInRydWVcIixcImFyaWEtZXhwYW5kZWRcIjpcInRydWVcIix0YWJJbmRleDowfSl9LF9hY3RpdmF0ZTpmdW5jdGlvbihlKXt2YXIgaSxzPXRoaXMuX2ZpbmRBY3RpdmUoZSk7c1swXSE9PXRoaXMuYWN0aXZlWzBdJiYocy5sZW5ndGh8fChzPXRoaXMuYWN0aXZlKSxpPXMuZmluZChcIi51aS10YWJzLWFuY2hvclwiKVswXSx0aGlzLl9ldmVudEhhbmRsZXIoe3RhcmdldDppLGN1cnJlbnRUYXJnZXQ6aSxwcmV2ZW50RGVmYXVsdDp0Lm5vb3B9KSl9LF9maW5kQWN0aXZlOmZ1bmN0aW9uKGUpe3JldHVybiBlPT09ITE/dCgpOnRoaXMudGFicy5lcShlKX0sX2dldEluZGV4OmZ1bmN0aW9uKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT10aGlzLmFuY2hvcnMuaW5kZXgodGhpcy5hbmNob3JzLmZpbHRlcihcIltocmVmJD0nXCIrdC51aS5lc2NhcGVTZWxlY3RvcihlKStcIiddXCIpKSksZX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt0aGlzLnhociYmdGhpcy54aHIuYWJvcnQoKSx0aGlzLnRhYmxpc3QucmVtb3ZlQXR0cihcInJvbGVcIikub2ZmKHRoaXMuZXZlbnROYW1lc3BhY2UpLHRoaXMuYW5jaG9ycy5yZW1vdmVBdHRyKFwicm9sZSB0YWJJbmRleFwiKS5yZW1vdmVVbmlxdWVJZCgpLHRoaXMudGFicy5hZGQodGhpcy5wYW5lbHMpLmVhY2goZnVuY3Rpb24oKXt0LmRhdGEodGhpcyxcInVpLXRhYnMtZGVzdHJveVwiKT90KHRoaXMpLnJlbW92ZSgpOnQodGhpcykucmVtb3ZlQXR0cihcInJvbGUgdGFiSW5kZXggYXJpYS1saXZlIGFyaWEtYnVzeSBhcmlhLXNlbGVjdGVkIGFyaWEtbGFiZWxsZWRieSBhcmlhLWhpZGRlbiBhcmlhLWV4cGFuZGVkXCIpfSksdGhpcy50YWJzLmVhY2goZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLGk9ZS5kYXRhKFwidWktdGFicy1hcmlhLWNvbnRyb2xzXCIpO2k/ZS5hdHRyKFwiYXJpYS1jb250cm9sc1wiLGkpLnJlbW92ZURhdGEoXCJ1aS10YWJzLWFyaWEtY29udHJvbHNcIik6ZS5yZW1vdmVBdHRyKFwiYXJpYS1jb250cm9sc1wiKX0pLHRoaXMucGFuZWxzLnNob3coKSxcImNvbnRlbnRcIiE9PXRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSYmdGhpcy5wYW5lbHMuY3NzKFwiaGVpZ2h0XCIsXCJcIil9LGVuYWJsZTpmdW5jdGlvbihlKXt2YXIgaT10aGlzLm9wdGlvbnMuZGlzYWJsZWQ7aSE9PSExJiYodm9pZCAwPT09ZT9pPSExOihlPXRoaXMuX2dldEluZGV4KGUpLGk9dC5pc0FycmF5KGkpP3QubWFwKGksZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1lP3Q6bnVsbH0pOnQubWFwKHRoaXMudGFicyxmdW5jdGlvbih0LGkpe3JldHVybiBpIT09ZT9pOm51bGx9KSksdGhpcy5fc2V0T3B0aW9uRGlzYWJsZWQoaSkpfSxkaXNhYmxlOmZ1bmN0aW9uKGUpe3ZhciBpPXRoaXMub3B0aW9ucy5kaXNhYmxlZDtpZihpIT09ITApe2lmKHZvaWQgMD09PWUpaT0hMDtlbHNle2lmKGU9dGhpcy5fZ2V0SW5kZXgoZSksLTEhPT10LmluQXJyYXkoZSxpKSlyZXR1cm47aT10LmlzQXJyYXkoaSk/dC5tZXJnZShbZV0saSkuc29ydCgpOltlXX10aGlzLl9zZXRPcHRpb25EaXNhYmxlZChpKX19LGxvYWQ6ZnVuY3Rpb24oZSxpKXtlPXRoaXMuX2dldEluZGV4KGUpO3ZhciBzPXRoaXMsbj10aGlzLnRhYnMuZXEoZSksbz1uLmZpbmQoXCIudWktdGFicy1hbmNob3JcIiksYT10aGlzLl9nZXRQYW5lbEZvclRhYihuKSxyPXt0YWI6bixwYW5lbDphfSxoPWZ1bmN0aW9uKHQsZSl7XCJhYm9ydFwiPT09ZSYmcy5wYW5lbHMuc3RvcCghMSwhMCkscy5fcmVtb3ZlQ2xhc3MobixcInVpLXRhYnMtbG9hZGluZ1wiKSxhLnJlbW92ZUF0dHIoXCJhcmlhLWJ1c3lcIiksdD09PXMueGhyJiZkZWxldGUgcy54aHJ9O3RoaXMuX2lzTG9jYWwob1swXSl8fCh0aGlzLnhocj10LmFqYXgodGhpcy5fYWpheFNldHRpbmdzKG8saSxyKSksdGhpcy54aHImJlwiY2FuY2VsZWRcIiE9PXRoaXMueGhyLnN0YXR1c1RleHQmJih0aGlzLl9hZGRDbGFzcyhuLFwidWktdGFicy1sb2FkaW5nXCIpLGEuYXR0cihcImFyaWEtYnVzeVwiLFwidHJ1ZVwiKSx0aGlzLnhoci5kb25lKGZ1bmN0aW9uKHQsZSxuKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7YS5odG1sKHQpLHMuX3RyaWdnZXIoXCJsb2FkXCIsaSxyKSxoKG4sZSl9LDEpfSkuZmFpbChmdW5jdGlvbih0LGUpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXtoKHQsZSl9LDEpfSkpKX0sX2FqYXhTZXR0aW5nczpmdW5jdGlvbihlLGkscyl7dmFyIG49dGhpcztyZXR1cm57dXJsOmUuYXR0cihcImhyZWZcIikucmVwbGFjZSgvIy4qJC8sXCJcIiksYmVmb3JlU2VuZDpmdW5jdGlvbihlLG8pe3JldHVybiBuLl90cmlnZ2VyKFwiYmVmb3JlTG9hZFwiLGksdC5leHRlbmQoe2pxWEhSOmUsYWpheFNldHRpbmdzOm99LHMpKX19fSxfZ2V0UGFuZWxGb3JUYWI6ZnVuY3Rpb24oZSl7dmFyIGk9dChlKS5hdHRyKFwiYXJpYS1jb250cm9sc1wiKTtyZXR1cm4gdGhpcy5lbGVtZW50LmZpbmQodGhpcy5fc2FuaXRpemVTZWxlY3RvcihcIiNcIitpKSl9fSksdC51aUJhY2tDb21wYXQhPT0hMSYmdC53aWRnZXQoXCJ1aS50YWJzXCIsdC51aS50YWJzLHtfcHJvY2Vzc1RhYnM6ZnVuY3Rpb24oKXt0aGlzLl9zdXBlckFwcGx5KGFyZ3VtZW50cyksdGhpcy5fYWRkQ2xhc3ModGhpcy50YWJzLFwidWktdGFiXCIpfX0pLHQudWkudGFicyx0LndpZGdldChcInVpLnRvb2x0aXBcIix7dmVyc2lvbjpcIjEuMTIuMVwiLG9wdGlvbnM6e2NsYXNzZXM6e1widWktdG9vbHRpcFwiOlwidWktY29ybmVyLWFsbCB1aS13aWRnZXQtc2hhZG93XCJ9LGNvbnRlbnQ6ZnVuY3Rpb24oKXt2YXIgZT10KHRoaXMpLmF0dHIoXCJ0aXRsZVwiKXx8XCJcIjtyZXR1cm4gdChcIjxhPlwiKS50ZXh0KGUpLmh0bWwoKX0saGlkZTohMCxpdGVtczpcIlt0aXRsZV06bm90KFtkaXNhYmxlZF0pXCIscG9zaXRpb246e215OlwibGVmdCB0b3ArMTVcIixhdDpcImxlZnQgYm90dG9tXCIsY29sbGlzaW9uOlwiZmxpcGZpdCBmbGlwXCJ9LHNob3c6ITAsdHJhY2s6ITEsY2xvc2U6bnVsbCxvcGVuOm51bGx9LF9hZGREZXNjcmliZWRCeTpmdW5jdGlvbihlLGkpe3ZhciBzPShlLmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIpfHxcIlwiKS5zcGxpdCgvXFxzKy8pO3MucHVzaChpKSxlLmRhdGEoXCJ1aS10b29sdGlwLWlkXCIsaSkuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIix0LnRyaW0ocy5qb2luKFwiIFwiKSkpfSxfcmVtb3ZlRGVzY3JpYmVkQnk6ZnVuY3Rpb24oZSl7dmFyIGk9ZS5kYXRhKFwidWktdG9vbHRpcC1pZFwiKSxzPShlLmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIpfHxcIlwiKS5zcGxpdCgvXFxzKy8pLG49dC5pbkFycmF5KGkscyk7LTEhPT1uJiZzLnNwbGljZShuLDEpLGUucmVtb3ZlRGF0YShcInVpLXRvb2x0aXAtaWRcIikscz10LnRyaW0ocy5qb2luKFwiIFwiKSkscz9lLmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIscyk6ZS5yZW1vdmVBdHRyKFwiYXJpYS1kZXNjcmliZWRieVwiKX0sX2NyZWF0ZTpmdW5jdGlvbigpe3RoaXMuX29uKHttb3VzZW92ZXI6XCJvcGVuXCIsZm9jdXNpbjpcIm9wZW5cIn0pLHRoaXMudG9vbHRpcHM9e30sdGhpcy5wYXJlbnRzPXt9LHRoaXMubGl2ZVJlZ2lvbj10KFwiPGRpdj5cIikuYXR0cih7cm9sZTpcImxvZ1wiLFwiYXJpYS1saXZlXCI6XCJhc3NlcnRpdmVcIixcImFyaWEtcmVsZXZhbnRcIjpcImFkZGl0aW9uc1wifSkuYXBwZW5kVG8odGhpcy5kb2N1bWVudFswXS5ib2R5KSx0aGlzLl9hZGRDbGFzcyh0aGlzLmxpdmVSZWdpb24sbnVsbCxcInVpLWhlbHBlci1oaWRkZW4tYWNjZXNzaWJsZVwiKSx0aGlzLmRpc2FibGVkVGl0bGVzPXQoW10pfSxfc2V0T3B0aW9uOmZ1bmN0aW9uKGUsaSl7dmFyIHM9dGhpczt0aGlzLl9zdXBlcihlLGkpLFwiY29udGVudFwiPT09ZSYmdC5lYWNoKHRoaXMudG9vbHRpcHMsZnVuY3Rpb24odCxlKXtzLl91cGRhdGVDb250ZW50KGUuZWxlbWVudCl9KX0sX3NldE9wdGlvbkRpc2FibGVkOmZ1bmN0aW9uKHQpe3RoaXNbdD9cIl9kaXNhYmxlXCI6XCJfZW5hYmxlXCJdKCl9LF9kaXNhYmxlOmZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0LmVhY2godGhpcy50b29sdGlwcyxmdW5jdGlvbihpLHMpe3ZhciBuPXQuRXZlbnQoXCJibHVyXCIpO24udGFyZ2V0PW4uY3VycmVudFRhcmdldD1zLmVsZW1lbnRbMF0sZS5jbG9zZShuLCEwKX0pLHRoaXMuZGlzYWJsZWRUaXRsZXM9dGhpcy5kaXNhYmxlZFRpdGxlcy5hZGQodGhpcy5lbGVtZW50LmZpbmQodGhpcy5vcHRpb25zLml0ZW1zKS5hZGRCYWNrKCkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtyZXR1cm4gZS5pcyhcIlt0aXRsZV1cIik/ZS5kYXRhKFwidWktdG9vbHRpcC10aXRsZVwiLGUuYXR0cihcInRpdGxlXCIpKS5yZW1vdmVBdHRyKFwidGl0bGVcIik6dm9pZCAwfSkpfSxfZW5hYmxlOmZ1bmN0aW9uKCl7dGhpcy5kaXNhYmxlZFRpdGxlcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGU9dCh0aGlzKTtlLmRhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIpJiZlLmF0dHIoXCJ0aXRsZVwiLGUuZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikpfSksdGhpcy5kaXNhYmxlZFRpdGxlcz10KFtdKX0sb3BlbjpmdW5jdGlvbihlKXt2YXIgaT10aGlzLHM9dChlP2UudGFyZ2V0OnRoaXMuZWxlbWVudCkuY2xvc2VzdCh0aGlzLm9wdGlvbnMuaXRlbXMpO3MubGVuZ3RoJiYhcy5kYXRhKFwidWktdG9vbHRpcC1pZFwiKSYmKHMuYXR0cihcInRpdGxlXCIpJiZzLmRhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIscy5hdHRyKFwidGl0bGVcIikpLHMuZGF0YShcInVpLXRvb2x0aXAtb3BlblwiLCEwKSxlJiZcIm1vdXNlb3ZlclwiPT09ZS50eXBlJiZzLnBhcmVudHMoKS5lYWNoKGZ1bmN0aW9uKCl7dmFyIGUscz10KHRoaXMpO3MuZGF0YShcInVpLXRvb2x0aXAtb3BlblwiKSYmKGU9dC5FdmVudChcImJsdXJcIiksZS50YXJnZXQ9ZS5jdXJyZW50VGFyZ2V0PXRoaXMsaS5jbG9zZShlLCEwKSkscy5hdHRyKFwidGl0bGVcIikmJihzLnVuaXF1ZUlkKCksaS5wYXJlbnRzW3RoaXMuaWRdPXtlbGVtZW50OnRoaXMsdGl0bGU6cy5hdHRyKFwidGl0bGVcIil9LHMuYXR0cihcInRpdGxlXCIsXCJcIikpfSksdGhpcy5fcmVnaXN0ZXJDbG9zZUhhbmRsZXJzKGUscyksdGhpcy5fdXBkYXRlQ29udGVudChzLGUpKX0sX3VwZGF0ZUNvbnRlbnQ6ZnVuY3Rpb24odCxlKXt2YXIgaSxzPXRoaXMub3B0aW9ucy5jb250ZW50LG49dGhpcyxvPWU/ZS50eXBlOm51bGw7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHN8fHMubm9kZVR5cGV8fHMuanF1ZXJ5P3RoaXMuX29wZW4oZSx0LHMpOihpPXMuY2FsbCh0WzBdLGZ1bmN0aW9uKGkpe24uX2RlbGF5KGZ1bmN0aW9uKCl7dC5kYXRhKFwidWktdG9vbHRpcC1vcGVuXCIpJiYoZSYmKGUudHlwZT1vKSx0aGlzLl9vcGVuKGUsdCxpKSl9KX0pLGkmJnRoaXMuX29wZW4oZSx0LGkpLHZvaWQgMCl9LF9vcGVuOmZ1bmN0aW9uKGUsaSxzKXtmdW5jdGlvbiBuKHQpe2wub2Y9dCxhLmlzKFwiOmhpZGRlblwiKXx8YS5wb3NpdGlvbihsKX12YXIgbyxhLHIsaCxsPXQuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucy5wb3NpdGlvbik7aWYocyl7aWYobz10aGlzLl9maW5kKGkpKXJldHVybiBvLnRvb2x0aXAuZmluZChcIi51aS10b29sdGlwLWNvbnRlbnRcIikuaHRtbChzKSx2b2lkIDA7aS5pcyhcIlt0aXRsZV1cIikmJihlJiZcIm1vdXNlb3ZlclwiPT09ZS50eXBlP2kuYXR0cihcInRpdGxlXCIsXCJcIik6aS5yZW1vdmVBdHRyKFwidGl0bGVcIikpLG89dGhpcy5fdG9vbHRpcChpKSxhPW8udG9vbHRpcCx0aGlzLl9hZGREZXNjcmliZWRCeShpLGEuYXR0cihcImlkXCIpKSxhLmZpbmQoXCIudWktdG9vbHRpcC1jb250ZW50XCIpLmh0bWwocyksdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpLGg9dChcIjxkaXY+XCIpLmh0bWwoYS5maW5kKFwiLnVpLXRvb2x0aXAtY29udGVudFwiKS5odG1sKCkpLGgucmVtb3ZlQXR0cihcIm5hbWVcIikuZmluZChcIltuYW1lXVwiKS5yZW1vdmVBdHRyKFwibmFtZVwiKSxoLnJlbW92ZUF0dHIoXCJpZFwiKS5maW5kKFwiW2lkXVwiKS5yZW1vdmVBdHRyKFwiaWRcIiksaC5hcHBlbmRUbyh0aGlzLmxpdmVSZWdpb24pLHRoaXMub3B0aW9ucy50cmFjayYmZSYmL15tb3VzZS8udGVzdChlLnR5cGUpPyh0aGlzLl9vbih0aGlzLmRvY3VtZW50LHttb3VzZW1vdmU6bn0pLG4oZSkpOmEucG9zaXRpb24odC5leHRlbmQoe29mOml9LHRoaXMub3B0aW9ucy5wb3NpdGlvbikpLGEuaGlkZSgpLHRoaXMuX3Nob3coYSx0aGlzLm9wdGlvbnMuc2hvdyksdGhpcy5vcHRpb25zLnRyYWNrJiZ0aGlzLm9wdGlvbnMuc2hvdyYmdGhpcy5vcHRpb25zLnNob3cuZGVsYXkmJihyPXRoaXMuZGVsYXllZFNob3c9c2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXthLmlzKFwiOnZpc2libGVcIikmJihuKGwub2YpLGNsZWFySW50ZXJ2YWwocikpfSx0LmZ4LmludGVydmFsKSksdGhpcy5fdHJpZ2dlcihcIm9wZW5cIixlLHt0b29sdGlwOmF9KX19LF9yZWdpc3RlckNsb3NlSGFuZGxlcnM6ZnVuY3Rpb24oZSxpKXt2YXIgcz17a2V5dXA6ZnVuY3Rpb24oZSl7aWYoZS5rZXlDb2RlPT09dC51aS5rZXlDb2RlLkVTQ0FQRSl7dmFyIHM9dC5FdmVudChlKTtzLmN1cnJlbnRUYXJnZXQ9aVswXSx0aGlzLmNsb3NlKHMsITApfX19O2lbMF0hPT10aGlzLmVsZW1lbnRbMF0mJihzLnJlbW92ZT1mdW5jdGlvbigpe3RoaXMuX3JlbW92ZVRvb2x0aXAodGhpcy5fZmluZChpKS50b29sdGlwKX0pLGUmJlwibW91c2VvdmVyXCIhPT1lLnR5cGV8fChzLm1vdXNlbGVhdmU9XCJjbG9zZVwiKSxlJiZcImZvY3VzaW5cIiE9PWUudHlwZXx8KHMuZm9jdXNvdXQ9XCJjbG9zZVwiKSx0aGlzLl9vbighMCxpLHMpfSxjbG9zZTpmdW5jdGlvbihlKXt2YXIgaSxzPXRoaXMsbj10KGU/ZS5jdXJyZW50VGFyZ2V0OnRoaXMuZWxlbWVudCksbz10aGlzLl9maW5kKG4pO3JldHVybiBvPyhpPW8udG9vbHRpcCxvLmNsb3Npbmd8fChjbGVhckludGVydmFsKHRoaXMuZGVsYXllZFNob3cpLG4uZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikmJiFuLmF0dHIoXCJ0aXRsZVwiKSYmbi5hdHRyKFwidGl0bGVcIixuLmRhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIpKSx0aGlzLl9yZW1vdmVEZXNjcmliZWRCeShuKSxvLmhpZGluZz0hMCxpLnN0b3AoITApLHRoaXMuX2hpZGUoaSx0aGlzLm9wdGlvbnMuaGlkZSxmdW5jdGlvbigpe3MuX3JlbW92ZVRvb2x0aXAodCh0aGlzKSl9KSxuLnJlbW92ZURhdGEoXCJ1aS10b29sdGlwLW9wZW5cIiksdGhpcy5fb2ZmKG4sXCJtb3VzZWxlYXZlIGZvY3Vzb3V0IGtleXVwXCIpLG5bMF0hPT10aGlzLmVsZW1lbnRbMF0mJnRoaXMuX29mZihuLFwicmVtb3ZlXCIpLHRoaXMuX29mZih0aGlzLmRvY3VtZW50LFwibW91c2Vtb3ZlXCIpLGUmJlwibW91c2VsZWF2ZVwiPT09ZS50eXBlJiZ0LmVhY2godGhpcy5wYXJlbnRzLGZ1bmN0aW9uKGUsaSl7dChpLmVsZW1lbnQpLmF0dHIoXCJ0aXRsZVwiLGkudGl0bGUpLGRlbGV0ZSBzLnBhcmVudHNbZV19KSxvLmNsb3Npbmc9ITAsdGhpcy5fdHJpZ2dlcihcImNsb3NlXCIsZSx7dG9vbHRpcDppfSksby5oaWRpbmd8fChvLmNsb3Npbmc9ITEpKSx2b2lkIDApOihuLnJlbW92ZURhdGEoXCJ1aS10b29sdGlwLW9wZW5cIiksdm9pZCAwKX0sX3Rvb2x0aXA6ZnVuY3Rpb24oZSl7dmFyIGk9dChcIjxkaXY+XCIpLmF0dHIoXCJyb2xlXCIsXCJ0b29sdGlwXCIpLHM9dChcIjxkaXY+XCIpLmFwcGVuZFRvKGkpLG49aS51bmlxdWVJZCgpLmF0dHIoXCJpZFwiKTtyZXR1cm4gdGhpcy5fYWRkQ2xhc3MocyxcInVpLXRvb2x0aXAtY29udGVudFwiKSx0aGlzLl9hZGRDbGFzcyhpLFwidWktdG9vbHRpcFwiLFwidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50XCIpLGkuYXBwZW5kVG8odGhpcy5fYXBwZW5kVG8oZSkpLHRoaXMudG9vbHRpcHNbbl09e2VsZW1lbnQ6ZSx0b29sdGlwOml9fSxfZmluZDpmdW5jdGlvbih0KXt2YXIgZT10LmRhdGEoXCJ1aS10b29sdGlwLWlkXCIpO3JldHVybiBlP3RoaXMudG9vbHRpcHNbZV06bnVsbH0sX3JlbW92ZVRvb2x0aXA6ZnVuY3Rpb24odCl7dC5yZW1vdmUoKSxkZWxldGUgdGhpcy50b29sdGlwc1t0LmF0dHIoXCJpZFwiKV19LF9hcHBlbmRUbzpmdW5jdGlvbih0KXt2YXIgZT10LmNsb3Nlc3QoXCIudWktZnJvbnQsIGRpYWxvZ1wiKTtyZXR1cm4gZS5sZW5ndGh8fChlPXRoaXMuZG9jdW1lbnRbMF0uYm9keSksZX0sX2Rlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3QuZWFjaCh0aGlzLnRvb2x0aXBzLGZ1bmN0aW9uKGkscyl7dmFyIG49dC5FdmVudChcImJsdXJcIiksbz1zLmVsZW1lbnQ7bi50YXJnZXQ9bi5jdXJyZW50VGFyZ2V0PW9bMF0sZS5jbG9zZShuLCEwKSx0KFwiI1wiK2kpLnJlbW92ZSgpLG8uZGF0YShcInVpLXRvb2x0aXAtdGl0bGVcIikmJihvLmF0dHIoXCJ0aXRsZVwiKXx8by5hdHRyKFwidGl0bGVcIixvLmRhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIpKSxvLnJlbW92ZURhdGEoXCJ1aS10b29sdGlwLXRpdGxlXCIpKX0pLHRoaXMubGl2ZVJlZ2lvbi5yZW1vdmUoKX19KSx0LnVpQmFja0NvbXBhdCE9PSExJiZ0LndpZGdldChcInVpLnRvb2x0aXBcIix0LnVpLnRvb2x0aXAse29wdGlvbnM6e3Rvb2x0aXBDbGFzczpudWxsfSxfdG9vbHRpcDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3N1cGVyQXBwbHkoYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5vcHRpb25zLnRvb2x0aXBDbGFzcyYmdC50b29sdGlwLmFkZENsYXNzKHRoaXMub3B0aW9ucy50b29sdGlwQ2xhc3MpLHR9fSksdC51aS50b29sdGlwfSk7IiwiLyohIGpRdWVyeSBWYWxpZGF0aW9uIFBsdWdpbiAtIHYxLjE5LjEgLSA2LzE1LzIwMTlcbiAqIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgSsO2cm4gWmFlZmZlcmVyOyBMaWNlbnNlZCBNSVQgKi9cbiFmdW5jdGlvbihhKXtcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImpxdWVyeVwiXSxhKTpcIm9iamVjdFwiPT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1hKHJlcXVpcmUoXCJqcXVlcnlcIikpOmEoalF1ZXJ5KX0oZnVuY3Rpb24oYSl7YS5leHRlbmQoYS5mbix7dmFsaWRhdGU6ZnVuY3Rpb24oYil7aWYoIXRoaXMubGVuZ3RoKXJldHVybiB2b2lkKGImJmIuZGVidWcmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLndhcm4oXCJOb3RoaW5nIHNlbGVjdGVkLCBjYW4ndCB2YWxpZGF0ZSwgcmV0dXJuaW5nIG5vdGhpbmcuXCIpKTt2YXIgYz1hLmRhdGEodGhpc1swXSxcInZhbGlkYXRvclwiKTtyZXR1cm4gYz9jOih0aGlzLmF0dHIoXCJub3ZhbGlkYXRlXCIsXCJub3ZhbGlkYXRlXCIpLGM9bmV3IGEudmFsaWRhdG9yKGIsdGhpc1swXSksYS5kYXRhKHRoaXNbMF0sXCJ2YWxpZGF0b3JcIixjKSxjLnNldHRpbmdzLm9uc3VibWl0JiYodGhpcy5vbihcImNsaWNrLnZhbGlkYXRlXCIsXCI6c3VibWl0XCIsZnVuY3Rpb24oYil7Yy5zdWJtaXRCdXR0b249Yi5jdXJyZW50VGFyZ2V0LGEodGhpcykuaGFzQ2xhc3MoXCJjYW5jZWxcIikmJihjLmNhbmNlbFN1Ym1pdD0hMCksdm9pZCAwIT09YSh0aGlzKS5hdHRyKFwiZm9ybW5vdmFsaWRhdGVcIikmJihjLmNhbmNlbFN1Ym1pdD0hMCl9KSx0aGlzLm9uKFwic3VibWl0LnZhbGlkYXRlXCIsZnVuY3Rpb24oYil7ZnVuY3Rpb24gZCgpe3ZhciBkLGU7cmV0dXJuIGMuc3VibWl0QnV0dG9uJiYoYy5zZXR0aW5ncy5zdWJtaXRIYW5kbGVyfHxjLmZvcm1TdWJtaXR0ZWQpJiYoZD1hKFwiPGlucHV0IHR5cGU9J2hpZGRlbicvPlwiKS5hdHRyKFwibmFtZVwiLGMuc3VibWl0QnV0dG9uLm5hbWUpLnZhbChhKGMuc3VibWl0QnV0dG9uKS52YWwoKSkuYXBwZW5kVG8oYy5jdXJyZW50Rm9ybSkpLCEoYy5zZXR0aW5ncy5zdWJtaXRIYW5kbGVyJiYhYy5zZXR0aW5ncy5kZWJ1Zyl8fChlPWMuc2V0dGluZ3Muc3VibWl0SGFuZGxlci5jYWxsKGMsYy5jdXJyZW50Rm9ybSxiKSxkJiZkLnJlbW92ZSgpLHZvaWQgMCE9PWUmJmUpfXJldHVybiBjLnNldHRpbmdzLmRlYnVnJiZiLnByZXZlbnREZWZhdWx0KCksYy5jYW5jZWxTdWJtaXQ/KGMuY2FuY2VsU3VibWl0PSExLGQoKSk6Yy5mb3JtKCk/Yy5wZW5kaW5nUmVxdWVzdD8oYy5mb3JtU3VibWl0dGVkPSEwLCExKTpkKCk6KGMuZm9jdXNJbnZhbGlkKCksITEpfSkpLGMpfSx2YWxpZDpmdW5jdGlvbigpe3ZhciBiLGMsZDtyZXR1cm4gYSh0aGlzWzBdKS5pcyhcImZvcm1cIik/Yj10aGlzLnZhbGlkYXRlKCkuZm9ybSgpOihkPVtdLGI9ITAsYz1hKHRoaXNbMF0uZm9ybSkudmFsaWRhdGUoKSx0aGlzLmVhY2goZnVuY3Rpb24oKXtiPWMuZWxlbWVudCh0aGlzKSYmYixifHwoZD1kLmNvbmNhdChjLmVycm9yTGlzdCkpfSksYy5lcnJvckxpc3Q9ZCksYn0scnVsZXM6ZnVuY3Rpb24oYixjKXt2YXIgZCxlLGYsZyxoLGksaj10aGlzWzBdLGs9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHRoaXMuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiKSYmXCJmYWxzZVwiIT09dGhpcy5hdHRyKFwiY29udGVudGVkaXRhYmxlXCIpO2lmKG51bGwhPWomJighai5mb3JtJiZrJiYoai5mb3JtPXRoaXMuY2xvc2VzdChcImZvcm1cIilbMF0sai5uYW1lPXRoaXMuYXR0cihcIm5hbWVcIikpLG51bGwhPWouZm9ybSkpe2lmKGIpc3dpdGNoKGQ9YS5kYXRhKGouZm9ybSxcInZhbGlkYXRvclwiKS5zZXR0aW5ncyxlPWQucnVsZXMsZj1hLnZhbGlkYXRvci5zdGF0aWNSdWxlcyhqKSxiKXtjYXNlXCJhZGRcIjphLmV4dGVuZChmLGEudmFsaWRhdG9yLm5vcm1hbGl6ZVJ1bGUoYykpLGRlbGV0ZSBmLm1lc3NhZ2VzLGVbai5uYW1lXT1mLGMubWVzc2FnZXMmJihkLm1lc3NhZ2VzW2oubmFtZV09YS5leHRlbmQoZC5tZXNzYWdlc1tqLm5hbWVdLGMubWVzc2FnZXMpKTticmVhaztjYXNlXCJyZW1vdmVcIjpyZXR1cm4gYz8oaT17fSxhLmVhY2goYy5zcGxpdCgvXFxzLyksZnVuY3Rpb24oYSxiKXtpW2JdPWZbYl0sZGVsZXRlIGZbYl19KSxpKTooZGVsZXRlIGVbai5uYW1lXSxmKX1yZXR1cm4gZz1hLnZhbGlkYXRvci5ub3JtYWxpemVSdWxlcyhhLmV4dGVuZCh7fSxhLnZhbGlkYXRvci5jbGFzc1J1bGVzKGopLGEudmFsaWRhdG9yLmF0dHJpYnV0ZVJ1bGVzKGopLGEudmFsaWRhdG9yLmRhdGFSdWxlcyhqKSxhLnZhbGlkYXRvci5zdGF0aWNSdWxlcyhqKSksaiksZy5yZXF1aXJlZCYmKGg9Zy5yZXF1aXJlZCxkZWxldGUgZy5yZXF1aXJlZCxnPWEuZXh0ZW5kKHtyZXF1aXJlZDpofSxnKSksZy5yZW1vdGUmJihoPWcucmVtb3RlLGRlbGV0ZSBnLnJlbW90ZSxnPWEuZXh0ZW5kKGcse3JlbW90ZTpofSkpLGd9fX0pLGEuZXh0ZW5kKGEuZXhwci5wc2V1ZG9zfHxhLmV4cHJbXCI6XCJdLHtibGFuazpmdW5jdGlvbihiKXtyZXR1cm4hYS50cmltKFwiXCIrYShiKS52YWwoKSl9LGZpbGxlZDpmdW5jdGlvbihiKXt2YXIgYz1hKGIpLnZhbCgpO3JldHVybiBudWxsIT09YyYmISFhLnRyaW0oXCJcIitjKX0sdW5jaGVja2VkOmZ1bmN0aW9uKGIpe3JldHVybiFhKGIpLnByb3AoXCJjaGVja2VkXCIpfX0pLGEudmFsaWRhdG9yPWZ1bmN0aW9uKGIsYyl7dGhpcy5zZXR0aW5ncz1hLmV4dGVuZCghMCx7fSxhLnZhbGlkYXRvci5kZWZhdWx0cyxiKSx0aGlzLmN1cnJlbnRGb3JtPWMsdGhpcy5pbml0KCl9LGEudmFsaWRhdG9yLmZvcm1hdD1mdW5jdGlvbihiLGMpe3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9mdW5jdGlvbigpe3ZhciBjPWEubWFrZUFycmF5KGFyZ3VtZW50cyk7cmV0dXJuIGMudW5zaGlmdChiKSxhLnZhbGlkYXRvci5mb3JtYXQuYXBwbHkodGhpcyxjKX06dm9pZCAwPT09Yz9iOihhcmd1bWVudHMubGVuZ3RoPjImJmMuY29uc3RydWN0b3IhPT1BcnJheSYmKGM9YS5tYWtlQXJyYXkoYXJndW1lbnRzKS5zbGljZSgxKSksYy5jb25zdHJ1Y3RvciE9PUFycmF5JiYoYz1bY10pLGEuZWFjaChjLGZ1bmN0aW9uKGEsYyl7Yj1iLnJlcGxhY2UobmV3IFJlZ0V4cChcIlxcXFx7XCIrYStcIlxcXFx9XCIsXCJnXCIpLGZ1bmN0aW9uKCl7cmV0dXJuIGN9KX0pLGIpfSxhLmV4dGVuZChhLnZhbGlkYXRvcix7ZGVmYXVsdHM6e21lc3NhZ2VzOnt9LGdyb3Vwczp7fSxydWxlczp7fSxlcnJvckNsYXNzOlwiZXJyb3JcIixwZW5kaW5nQ2xhc3M6XCJwZW5kaW5nXCIsdmFsaWRDbGFzczpcInZhbGlkXCIsZXJyb3JFbGVtZW50OlwibGFiZWxcIixmb2N1c0NsZWFudXA6ITEsZm9jdXNJbnZhbGlkOiEwLGVycm9yQ29udGFpbmVyOmEoW10pLGVycm9yTGFiZWxDb250YWluZXI6YShbXSksb25zdWJtaXQ6ITAsaWdub3JlOlwiOmhpZGRlblwiLGlnbm9yZVRpdGxlOiExLG9uZm9jdXNpbjpmdW5jdGlvbihhKXt0aGlzLmxhc3RBY3RpdmU9YSx0aGlzLnNldHRpbmdzLmZvY3VzQ2xlYW51cCYmKHRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQmJnRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQuY2FsbCh0aGlzLGEsdGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLHRoaXMuc2V0dGluZ3MudmFsaWRDbGFzcyksdGhpcy5oaWRlVGhlc2UodGhpcy5lcnJvcnNGb3IoYSkpKX0sb25mb2N1c291dDpmdW5jdGlvbihhKXt0aGlzLmNoZWNrYWJsZShhKXx8IShhLm5hbWUgaW4gdGhpcy5zdWJtaXR0ZWQpJiZ0aGlzLm9wdGlvbmFsKGEpfHx0aGlzLmVsZW1lbnQoYSl9LG9ua2V5dXA6ZnVuY3Rpb24oYixjKXt2YXIgZD1bMTYsMTcsMTgsMjAsMzUsMzYsMzcsMzgsMzksNDAsNDUsMTQ0LDIyNV07OT09PWMud2hpY2gmJlwiXCI9PT10aGlzLmVsZW1lbnRWYWx1ZShiKXx8YS5pbkFycmF5KGMua2V5Q29kZSxkKSE9PS0xfHwoYi5uYW1lIGluIHRoaXMuc3VibWl0dGVkfHxiLm5hbWUgaW4gdGhpcy5pbnZhbGlkKSYmdGhpcy5lbGVtZW50KGIpfSxvbmNsaWNrOmZ1bmN0aW9uKGEpe2EubmFtZSBpbiB0aGlzLnN1Ym1pdHRlZD90aGlzLmVsZW1lbnQoYSk6YS5wYXJlbnROb2RlLm5hbWUgaW4gdGhpcy5zdWJtaXR0ZWQmJnRoaXMuZWxlbWVudChhLnBhcmVudE5vZGUpfSxoaWdobGlnaHQ6ZnVuY3Rpb24oYixjLGQpe1wicmFkaW9cIj09PWIudHlwZT90aGlzLmZpbmRCeU5hbWUoYi5uYW1lKS5hZGRDbGFzcyhjKS5yZW1vdmVDbGFzcyhkKTphKGIpLmFkZENsYXNzKGMpLnJlbW92ZUNsYXNzKGQpfSx1bmhpZ2hsaWdodDpmdW5jdGlvbihiLGMsZCl7XCJyYWRpb1wiPT09Yi50eXBlP3RoaXMuZmluZEJ5TmFtZShiLm5hbWUpLnJlbW92ZUNsYXNzKGMpLmFkZENsYXNzKGQpOmEoYikucmVtb3ZlQ2xhc3MoYykuYWRkQ2xhc3MoZCl9fSxzZXREZWZhdWx0czpmdW5jdGlvbihiKXthLmV4dGVuZChhLnZhbGlkYXRvci5kZWZhdWx0cyxiKX0sbWVzc2FnZXM6e3JlcXVpcmVkOlwiVGhpcyBmaWVsZCBpcyByZXF1aXJlZC5cIixyZW1vdGU6XCJQbGVhc2UgZml4IHRoaXMgZmllbGQuXCIsZW1haWw6XCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbCBhZGRyZXNzLlwiLHVybDpcIlBsZWFzZSBlbnRlciBhIHZhbGlkIFVSTC5cIixkYXRlOlwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZGF0ZS5cIixkYXRlSVNPOlwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZGF0ZSAoSVNPKS5cIixudW1iZXI6XCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXIuXCIsZGlnaXRzOlwiUGxlYXNlIGVudGVyIG9ubHkgZGlnaXRzLlwiLGVxdWFsVG86XCJQbGVhc2UgZW50ZXIgdGhlIHNhbWUgdmFsdWUgYWdhaW4uXCIsbWF4bGVuZ3RoOmEudmFsaWRhdG9yLmZvcm1hdChcIlBsZWFzZSBlbnRlciBubyBtb3JlIHRoYW4gezB9IGNoYXJhY3RlcnMuXCIpLG1pbmxlbmd0aDphLnZhbGlkYXRvci5mb3JtYXQoXCJQbGVhc2UgZW50ZXIgYXQgbGVhc3QgezB9IGNoYXJhY3RlcnMuXCIpLHJhbmdlbGVuZ3RoOmEudmFsaWRhdG9yLmZvcm1hdChcIlBsZWFzZSBlbnRlciBhIHZhbHVlIGJldHdlZW4gezB9IGFuZCB7MX0gY2hhcmFjdGVycyBsb25nLlwiKSxyYW5nZTphLnZhbGlkYXRvci5mb3JtYXQoXCJQbGVhc2UgZW50ZXIgYSB2YWx1ZSBiZXR3ZWVuIHswfSBhbmQgezF9LlwiKSxtYXg6YS52YWxpZGF0b3IuZm9ybWF0KFwiUGxlYXNlIGVudGVyIGEgdmFsdWUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHswfS5cIiksbWluOmEudmFsaWRhdG9yLmZvcm1hdChcIlBsZWFzZSBlbnRlciBhIHZhbHVlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byB7MH0uXCIpLHN0ZXA6YS52YWxpZGF0b3IuZm9ybWF0KFwiUGxlYXNlIGVudGVyIGEgbXVsdGlwbGUgb2YgezB9LlwiKX0sYXV0b0NyZWF0ZVJhbmdlczohMSxwcm90b3R5cGU6e2luaXQ6ZnVuY3Rpb24oKXtmdW5jdGlvbiBiKGIpe3ZhciBjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBhKHRoaXMpLmF0dHIoXCJjb250ZW50ZWRpdGFibGVcIikmJlwiZmFsc2VcIiE9PWEodGhpcykuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiKTtpZighdGhpcy5mb3JtJiZjJiYodGhpcy5mb3JtPWEodGhpcykuY2xvc2VzdChcImZvcm1cIilbMF0sdGhpcy5uYW1lPWEodGhpcykuYXR0cihcIm5hbWVcIikpLGQ9PT10aGlzLmZvcm0pe3ZhciBlPWEuZGF0YSh0aGlzLmZvcm0sXCJ2YWxpZGF0b3JcIiksZj1cIm9uXCIrYi50eXBlLnJlcGxhY2UoL152YWxpZGF0ZS8sXCJcIiksZz1lLnNldHRpbmdzO2dbZl0mJiFhKHRoaXMpLmlzKGcuaWdub3JlKSYmZ1tmXS5jYWxsKGUsdGhpcyxiKX19dGhpcy5sYWJlbENvbnRhaW5lcj1hKHRoaXMuc2V0dGluZ3MuZXJyb3JMYWJlbENvbnRhaW5lciksdGhpcy5lcnJvckNvbnRleHQ9dGhpcy5sYWJlbENvbnRhaW5lci5sZW5ndGgmJnRoaXMubGFiZWxDb250YWluZXJ8fGEodGhpcy5jdXJyZW50Rm9ybSksdGhpcy5jb250YWluZXJzPWEodGhpcy5zZXR0aW5ncy5lcnJvckNvbnRhaW5lcikuYWRkKHRoaXMuc2V0dGluZ3MuZXJyb3JMYWJlbENvbnRhaW5lciksdGhpcy5zdWJtaXR0ZWQ9e30sdGhpcy52YWx1ZUNhY2hlPXt9LHRoaXMucGVuZGluZ1JlcXVlc3Q9MCx0aGlzLnBlbmRpbmc9e30sdGhpcy5pbnZhbGlkPXt9LHRoaXMucmVzZXQoKTt2YXIgYyxkPXRoaXMuY3VycmVudEZvcm0sZT10aGlzLmdyb3Vwcz17fTthLmVhY2godGhpcy5zZXR0aW5ncy5ncm91cHMsZnVuY3Rpb24oYixjKXtcInN0cmluZ1wiPT10eXBlb2YgYyYmKGM9Yy5zcGxpdCgvXFxzLykpLGEuZWFjaChjLGZ1bmN0aW9uKGEsYyl7ZVtjXT1ifSl9KSxjPXRoaXMuc2V0dGluZ3MucnVsZXMsYS5lYWNoKGMsZnVuY3Rpb24oYixkKXtjW2JdPWEudmFsaWRhdG9yLm5vcm1hbGl6ZVJ1bGUoZCl9KSxhKHRoaXMuY3VycmVudEZvcm0pLm9uKFwiZm9jdXNpbi52YWxpZGF0ZSBmb2N1c291dC52YWxpZGF0ZSBrZXl1cC52YWxpZGF0ZVwiLFwiOnRleHQsIFt0eXBlPSdwYXNzd29yZCddLCBbdHlwZT0nZmlsZSddLCBzZWxlY3QsIHRleHRhcmVhLCBbdHlwZT0nbnVtYmVyJ10sIFt0eXBlPSdzZWFyY2gnXSwgW3R5cGU9J3RlbCddLCBbdHlwZT0ndXJsJ10sIFt0eXBlPSdlbWFpbCddLCBbdHlwZT0nZGF0ZXRpbWUnXSwgW3R5cGU9J2RhdGUnXSwgW3R5cGU9J21vbnRoJ10sIFt0eXBlPSd3ZWVrJ10sIFt0eXBlPSd0aW1lJ10sIFt0eXBlPSdkYXRldGltZS1sb2NhbCddLCBbdHlwZT0ncmFuZ2UnXSwgW3R5cGU9J2NvbG9yJ10sIFt0eXBlPSdyYWRpbyddLCBbdHlwZT0nY2hlY2tib3gnXSwgW2NvbnRlbnRlZGl0YWJsZV0sIFt0eXBlPSdidXR0b24nXVwiLGIpLm9uKFwiY2xpY2sudmFsaWRhdGVcIixcInNlbGVjdCwgb3B0aW9uLCBbdHlwZT0ncmFkaW8nXSwgW3R5cGU9J2NoZWNrYm94J11cIixiKSx0aGlzLnNldHRpbmdzLmludmFsaWRIYW5kbGVyJiZhKHRoaXMuY3VycmVudEZvcm0pLm9uKFwiaW52YWxpZC1mb3JtLnZhbGlkYXRlXCIsdGhpcy5zZXR0aW5ncy5pbnZhbGlkSGFuZGxlcil9LGZvcm06ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGVja0Zvcm0oKSxhLmV4dGVuZCh0aGlzLnN1Ym1pdHRlZCx0aGlzLmVycm9yTWFwKSx0aGlzLmludmFsaWQ9YS5leHRlbmQoe30sdGhpcy5lcnJvck1hcCksdGhpcy52YWxpZCgpfHxhKHRoaXMuY3VycmVudEZvcm0pLnRyaWdnZXJIYW5kbGVyKFwiaW52YWxpZC1mb3JtXCIsW3RoaXNdKSx0aGlzLnNob3dFcnJvcnMoKSx0aGlzLnZhbGlkKCl9LGNoZWNrRm9ybTpmdW5jdGlvbigpe3RoaXMucHJlcGFyZUZvcm0oKTtmb3IodmFyIGE9MCxiPXRoaXMuY3VycmVudEVsZW1lbnRzPXRoaXMuZWxlbWVudHMoKTtiW2FdO2ErKyl0aGlzLmNoZWNrKGJbYV0pO3JldHVybiB0aGlzLnZhbGlkKCl9LGVsZW1lbnQ6ZnVuY3Rpb24oYil7dmFyIGMsZCxlPXRoaXMuY2xlYW4oYiksZj10aGlzLnZhbGlkYXRpb25UYXJnZXRGb3IoZSksZz10aGlzLGg9ITA7cmV0dXJuIHZvaWQgMD09PWY/ZGVsZXRlIHRoaXMuaW52YWxpZFtlLm5hbWVdOih0aGlzLnByZXBhcmVFbGVtZW50KGYpLHRoaXMuY3VycmVudEVsZW1lbnRzPWEoZiksZD10aGlzLmdyb3Vwc1tmLm5hbWVdLGQmJmEuZWFjaCh0aGlzLmdyb3VwcyxmdW5jdGlvbihhLGIpe2I9PT1kJiZhIT09Zi5uYW1lJiYoZT1nLnZhbGlkYXRpb25UYXJnZXRGb3IoZy5jbGVhbihnLmZpbmRCeU5hbWUoYSkpKSxlJiZlLm5hbWUgaW4gZy5pbnZhbGlkJiYoZy5jdXJyZW50RWxlbWVudHMucHVzaChlKSxoPWcuY2hlY2soZSkmJmgpKX0pLGM9dGhpcy5jaGVjayhmKSE9PSExLGg9aCYmYyxjP3RoaXMuaW52YWxpZFtmLm5hbWVdPSExOnRoaXMuaW52YWxpZFtmLm5hbWVdPSEwLHRoaXMubnVtYmVyT2ZJbnZhbGlkcygpfHwodGhpcy50b0hpZGU9dGhpcy50b0hpZGUuYWRkKHRoaXMuY29udGFpbmVycykpLHRoaXMuc2hvd0Vycm9ycygpLGEoYikuYXR0cihcImFyaWEtaW52YWxpZFwiLCFjKSksaH0sc2hvd0Vycm9yczpmdW5jdGlvbihiKXtpZihiKXt2YXIgYz10aGlzO2EuZXh0ZW5kKHRoaXMuZXJyb3JNYXAsYiksdGhpcy5lcnJvckxpc3Q9YS5tYXAodGhpcy5lcnJvck1hcCxmdW5jdGlvbihhLGIpe3JldHVybnttZXNzYWdlOmEsZWxlbWVudDpjLmZpbmRCeU5hbWUoYilbMF19fSksdGhpcy5zdWNjZXNzTGlzdD1hLmdyZXAodGhpcy5zdWNjZXNzTGlzdCxmdW5jdGlvbihhKXtyZXR1cm4hKGEubmFtZSBpbiBiKX0pfXRoaXMuc2V0dGluZ3Muc2hvd0Vycm9ycz90aGlzLnNldHRpbmdzLnNob3dFcnJvcnMuY2FsbCh0aGlzLHRoaXMuZXJyb3JNYXAsdGhpcy5lcnJvckxpc3QpOnRoaXMuZGVmYXVsdFNob3dFcnJvcnMoKX0scmVzZXRGb3JtOmZ1bmN0aW9uKCl7YS5mbi5yZXNldEZvcm0mJmEodGhpcy5jdXJyZW50Rm9ybSkucmVzZXRGb3JtKCksdGhpcy5pbnZhbGlkPXt9LHRoaXMuc3VibWl0dGVkPXt9LHRoaXMucHJlcGFyZUZvcm0oKSx0aGlzLmhpZGVFcnJvcnMoKTt2YXIgYj10aGlzLmVsZW1lbnRzKCkucmVtb3ZlRGF0YShcInByZXZpb3VzVmFsdWVcIikucmVtb3ZlQXR0cihcImFyaWEtaW52YWxpZFwiKTt0aGlzLnJlc2V0RWxlbWVudHMoYil9LHJlc2V0RWxlbWVudHM6ZnVuY3Rpb24oYSl7dmFyIGI7aWYodGhpcy5zZXR0aW5ncy51bmhpZ2hsaWdodClmb3IoYj0wO2FbYl07YisrKXRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQuY2FsbCh0aGlzLGFbYl0sdGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLFwiXCIpLHRoaXMuZmluZEJ5TmFtZShhW2JdLm5hbWUpLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MudmFsaWRDbGFzcyk7ZWxzZSBhLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MuZXJyb3JDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy52YWxpZENsYXNzKX0sbnVtYmVyT2ZJbnZhbGlkczpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9iamVjdExlbmd0aCh0aGlzLmludmFsaWQpfSxvYmplY3RMZW5ndGg6ZnVuY3Rpb24oYSl7dmFyIGIsYz0wO2ZvcihiIGluIGEpdm9pZCAwIT09YVtiXSYmbnVsbCE9PWFbYl0mJmFbYl0hPT0hMSYmYysrO3JldHVybiBjfSxoaWRlRXJyb3JzOmZ1bmN0aW9uKCl7dGhpcy5oaWRlVGhlc2UodGhpcy50b0hpZGUpfSxoaWRlVGhlc2U6ZnVuY3Rpb24oYSl7YS5ub3QodGhpcy5jb250YWluZXJzKS50ZXh0KFwiXCIpLHRoaXMuYWRkV3JhcHBlcihhKS5oaWRlKCl9LHZhbGlkOmZ1bmN0aW9uKCl7cmV0dXJuIDA9PT10aGlzLnNpemUoKX0sc2l6ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmVycm9yTGlzdC5sZW5ndGh9LGZvY3VzSW52YWxpZDpmdW5jdGlvbigpe2lmKHRoaXMuc2V0dGluZ3MuZm9jdXNJbnZhbGlkKXRyeXthKHRoaXMuZmluZExhc3RBY3RpdmUoKXx8dGhpcy5lcnJvckxpc3QubGVuZ3RoJiZ0aGlzLmVycm9yTGlzdFswXS5lbGVtZW50fHxbXSkuZmlsdGVyKFwiOnZpc2libGVcIikudHJpZ2dlcihcImZvY3VzXCIpLnRyaWdnZXIoXCJmb2N1c2luXCIpfWNhdGNoKGIpe319LGZpbmRMYXN0QWN0aXZlOmZ1bmN0aW9uKCl7dmFyIGI9dGhpcy5sYXN0QWN0aXZlO3JldHVybiBiJiYxPT09YS5ncmVwKHRoaXMuZXJyb3JMaXN0LGZ1bmN0aW9uKGEpe3JldHVybiBhLmVsZW1lbnQubmFtZT09PWIubmFtZX0pLmxlbmd0aCYmYn0sZWxlbWVudHM6ZnVuY3Rpb24oKXt2YXIgYj10aGlzLGM9e307cmV0dXJuIGEodGhpcy5jdXJyZW50Rm9ybSkuZmluZChcImlucHV0LCBzZWxlY3QsIHRleHRhcmVhLCBbY29udGVudGVkaXRhYmxlXVwiKS5ub3QoXCI6c3VibWl0LCA6cmVzZXQsIDppbWFnZSwgOmRpc2FibGVkXCIpLm5vdCh0aGlzLnNldHRpbmdzLmlnbm9yZSkuZmlsdGVyKGZ1bmN0aW9uKCl7dmFyIGQ9dGhpcy5uYW1lfHxhKHRoaXMpLmF0dHIoXCJuYW1lXCIpLGU9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGEodGhpcykuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiKSYmXCJmYWxzZVwiIT09YSh0aGlzKS5hdHRyKFwiY29udGVudGVkaXRhYmxlXCIpO3JldHVybiFkJiZiLnNldHRpbmdzLmRlYnVnJiZ3aW5kb3cuY29uc29sZSYmY29uc29sZS5lcnJvcihcIiVvIGhhcyBubyBuYW1lIGFzc2lnbmVkXCIsdGhpcyksZSYmKHRoaXMuZm9ybT1hKHRoaXMpLmNsb3Nlc3QoXCJmb3JtXCIpWzBdLHRoaXMubmFtZT1kKSx0aGlzLmZvcm09PT1iLmN1cnJlbnRGb3JtJiYoIShkIGluIGN8fCFiLm9iamVjdExlbmd0aChhKHRoaXMpLnJ1bGVzKCkpKSYmKGNbZF09ITAsITApKX0pfSxjbGVhbjpmdW5jdGlvbihiKXtyZXR1cm4gYShiKVswXX0sZXJyb3JzOmZ1bmN0aW9uKCl7dmFyIGI9dGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLnNwbGl0KFwiIFwiKS5qb2luKFwiLlwiKTtyZXR1cm4gYSh0aGlzLnNldHRpbmdzLmVycm9yRWxlbWVudCtcIi5cIitiLHRoaXMuZXJyb3JDb250ZXh0KX0scmVzZXRJbnRlcm5hbHM6ZnVuY3Rpb24oKXt0aGlzLnN1Y2Nlc3NMaXN0PVtdLHRoaXMuZXJyb3JMaXN0PVtdLHRoaXMuZXJyb3JNYXA9e30sdGhpcy50b1Nob3c9YShbXSksdGhpcy50b0hpZGU9YShbXSl9LHJlc2V0OmZ1bmN0aW9uKCl7dGhpcy5yZXNldEludGVybmFscygpLHRoaXMuY3VycmVudEVsZW1lbnRzPWEoW10pfSxwcmVwYXJlRm9ybTpmdW5jdGlvbigpe3RoaXMucmVzZXQoKSx0aGlzLnRvSGlkZT10aGlzLmVycm9ycygpLmFkZCh0aGlzLmNvbnRhaW5lcnMpfSxwcmVwYXJlRWxlbWVudDpmdW5jdGlvbihhKXt0aGlzLnJlc2V0KCksdGhpcy50b0hpZGU9dGhpcy5lcnJvcnNGb3IoYSl9LGVsZW1lbnRWYWx1ZTpmdW5jdGlvbihiKXt2YXIgYyxkLGU9YShiKSxmPWIudHlwZSxnPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBlLmF0dHIoXCJjb250ZW50ZWRpdGFibGVcIikmJlwiZmFsc2VcIiE9PWUuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiKTtyZXR1cm5cInJhZGlvXCI9PT1mfHxcImNoZWNrYm94XCI9PT1mP3RoaXMuZmluZEJ5TmFtZShiLm5hbWUpLmZpbHRlcihcIjpjaGVja2VkXCIpLnZhbCgpOlwibnVtYmVyXCI9PT1mJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgYi52YWxpZGl0eT9iLnZhbGlkaXR5LmJhZElucHV0P1wiTmFOXCI6ZS52YWwoKTooYz1nP2UudGV4dCgpOmUudmFsKCksXCJmaWxlXCI9PT1mP1wiQzpcXFxcZmFrZXBhdGhcXFxcXCI9PT1jLnN1YnN0cigwLDEyKT9jLnN1YnN0cigxMik6KGQ9Yy5sYXN0SW5kZXhPZihcIi9cIiksZD49MD9jLnN1YnN0cihkKzEpOihkPWMubGFzdEluZGV4T2YoXCJcXFxcXCIpLGQ+PTA/Yy5zdWJzdHIoZCsxKTpjKSk6XCJzdHJpbmdcIj09dHlwZW9mIGM/Yy5yZXBsYWNlKC9cXHIvZyxcIlwiKTpjKX0sY2hlY2s6ZnVuY3Rpb24oYil7Yj10aGlzLnZhbGlkYXRpb25UYXJnZXRGb3IodGhpcy5jbGVhbihiKSk7dmFyIGMsZCxlLGYsZz1hKGIpLnJ1bGVzKCksaD1hLm1hcChnLGZ1bmN0aW9uKGEsYil7cmV0dXJuIGJ9KS5sZW5ndGgsaT0hMSxqPXRoaXMuZWxlbWVudFZhbHVlKGIpO1wiZnVuY3Rpb25cIj09dHlwZW9mIGcubm9ybWFsaXplcj9mPWcubm9ybWFsaXplcjpcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLnNldHRpbmdzLm5vcm1hbGl6ZXImJihmPXRoaXMuc2V0dGluZ3Mubm9ybWFsaXplciksZiYmKGo9Zi5jYWxsKGIsaiksZGVsZXRlIGcubm9ybWFsaXplcik7Zm9yKGQgaW4gZyl7ZT17bWV0aG9kOmQscGFyYW1ldGVyczpnW2RdfTt0cnl7aWYoYz1hLnZhbGlkYXRvci5tZXRob2RzW2RdLmNhbGwodGhpcyxqLGIsZS5wYXJhbWV0ZXJzKSxcImRlcGVuZGVuY3ktbWlzbWF0Y2hcIj09PWMmJjE9PT1oKXtpPSEwO2NvbnRpbnVlfWlmKGk9ITEsXCJwZW5kaW5nXCI9PT1jKXJldHVybiB2b2lkKHRoaXMudG9IaWRlPXRoaXMudG9IaWRlLm5vdCh0aGlzLmVycm9yc0ZvcihiKSkpO2lmKCFjKXJldHVybiB0aGlzLmZvcm1hdEFuZEFkZChiLGUpLCExfWNhdGNoKGspe3Rocm93IHRoaXMuc2V0dGluZ3MuZGVidWcmJndpbmRvdy5jb25zb2xlJiZjb25zb2xlLmxvZyhcIkV4Y2VwdGlvbiBvY2N1cnJlZCB3aGVuIGNoZWNraW5nIGVsZW1lbnQgXCIrYi5pZCtcIiwgY2hlY2sgdGhlICdcIitlLm1ldGhvZCtcIicgbWV0aG9kLlwiLGspLGsgaW5zdGFuY2VvZiBUeXBlRXJyb3ImJihrLm1lc3NhZ2UrPVwiLiAgRXhjZXB0aW9uIG9jY3VycmVkIHdoZW4gY2hlY2tpbmcgZWxlbWVudCBcIitiLmlkK1wiLCBjaGVjayB0aGUgJ1wiK2UubWV0aG9kK1wiJyBtZXRob2QuXCIpLGt9fWlmKCFpKXJldHVybiB0aGlzLm9iamVjdExlbmd0aChnKSYmdGhpcy5zdWNjZXNzTGlzdC5wdXNoKGIpLCEwfSxjdXN0b21EYXRhTWVzc2FnZTpmdW5jdGlvbihiLGMpe3JldHVybiBhKGIpLmRhdGEoXCJtc2dcIitjLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Muc3Vic3RyaW5nKDEpLnRvTG93ZXJDYXNlKCkpfHxhKGIpLmRhdGEoXCJtc2dcIil9LGN1c3RvbU1lc3NhZ2U6ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLnNldHRpbmdzLm1lc3NhZ2VzW2FdO3JldHVybiBjJiYoYy5jb25zdHJ1Y3Rvcj09PVN0cmluZz9jOmNbYl0pfSxmaW5kRGVmaW5lZDpmdW5jdGlvbigpe2Zvcih2YXIgYT0wO2E8YXJndW1lbnRzLmxlbmd0aDthKyspaWYodm9pZCAwIT09YXJndW1lbnRzW2FdKXJldHVybiBhcmd1bWVudHNbYV19LGRlZmF1bHRNZXNzYWdlOmZ1bmN0aW9uKGIsYyl7XCJzdHJpbmdcIj09dHlwZW9mIGMmJihjPXttZXRob2Q6Y30pO3ZhciBkPXRoaXMuZmluZERlZmluZWQodGhpcy5jdXN0b21NZXNzYWdlKGIubmFtZSxjLm1ldGhvZCksdGhpcy5jdXN0b21EYXRhTWVzc2FnZShiLGMubWV0aG9kKSwhdGhpcy5zZXR0aW5ncy5pZ25vcmVUaXRsZSYmYi50aXRsZXx8dm9pZCAwLGEudmFsaWRhdG9yLm1lc3NhZ2VzW2MubWV0aG9kXSxcIjxzdHJvbmc+V2FybmluZzogTm8gbWVzc2FnZSBkZWZpbmVkIGZvciBcIitiLm5hbWUrXCI8L3N0cm9uZz5cIiksZT0vXFwkP1xceyhcXGQrKVxcfS9nO3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGQ/ZD1kLmNhbGwodGhpcyxjLnBhcmFtZXRlcnMsYik6ZS50ZXN0KGQpJiYoZD1hLnZhbGlkYXRvci5mb3JtYXQoZC5yZXBsYWNlKGUsXCJ7JDF9XCIpLGMucGFyYW1ldGVycykpLGR9LGZvcm1hdEFuZEFkZDpmdW5jdGlvbihhLGIpe3ZhciBjPXRoaXMuZGVmYXVsdE1lc3NhZ2UoYSxiKTt0aGlzLmVycm9yTGlzdC5wdXNoKHttZXNzYWdlOmMsZWxlbWVudDphLG1ldGhvZDpiLm1ldGhvZH0pLHRoaXMuZXJyb3JNYXBbYS5uYW1lXT1jLHRoaXMuc3VibWl0dGVkW2EubmFtZV09Y30sYWRkV3JhcHBlcjpmdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5zZXR0aW5ncy53cmFwcGVyJiYoYT1hLmFkZChhLnBhcmVudCh0aGlzLnNldHRpbmdzLndyYXBwZXIpKSksYX0sZGVmYXVsdFNob3dFcnJvcnM6ZnVuY3Rpb24oKXt2YXIgYSxiLGM7Zm9yKGE9MDt0aGlzLmVycm9yTGlzdFthXTthKyspYz10aGlzLmVycm9yTGlzdFthXSx0aGlzLnNldHRpbmdzLmhpZ2hsaWdodCYmdGhpcy5zZXR0aW5ncy5oaWdobGlnaHQuY2FsbCh0aGlzLGMuZWxlbWVudCx0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MsdGhpcy5zZXR0aW5ncy52YWxpZENsYXNzKSx0aGlzLnNob3dMYWJlbChjLmVsZW1lbnQsYy5tZXNzYWdlKTtpZih0aGlzLmVycm9yTGlzdC5sZW5ndGgmJih0aGlzLnRvU2hvdz10aGlzLnRvU2hvdy5hZGQodGhpcy5jb250YWluZXJzKSksdGhpcy5zZXR0aW5ncy5zdWNjZXNzKWZvcihhPTA7dGhpcy5zdWNjZXNzTGlzdFthXTthKyspdGhpcy5zaG93TGFiZWwodGhpcy5zdWNjZXNzTGlzdFthXSk7aWYodGhpcy5zZXR0aW5ncy51bmhpZ2hsaWdodClmb3IoYT0wLGI9dGhpcy52YWxpZEVsZW1lbnRzKCk7YlthXTthKyspdGhpcy5zZXR0aW5ncy51bmhpZ2hsaWdodC5jYWxsKHRoaXMsYlthXSx0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MsdGhpcy5zZXR0aW5ncy52YWxpZENsYXNzKTt0aGlzLnRvSGlkZT10aGlzLnRvSGlkZS5ub3QodGhpcy50b1Nob3cpLHRoaXMuaGlkZUVycm9ycygpLHRoaXMuYWRkV3JhcHBlcih0aGlzLnRvU2hvdykuc2hvdygpfSx2YWxpZEVsZW1lbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY3VycmVudEVsZW1lbnRzLm5vdCh0aGlzLmludmFsaWRFbGVtZW50cygpKX0saW52YWxpZEVsZW1lbnRzOmZ1bmN0aW9uKCl7cmV0dXJuIGEodGhpcy5lcnJvckxpc3QpLm1hcChmdW5jdGlvbigpe3JldHVybiB0aGlzLmVsZW1lbnR9KX0sc2hvd0xhYmVsOmZ1bmN0aW9uKGIsYyl7dmFyIGQsZSxmLGcsaD10aGlzLmVycm9yc0ZvcihiKSxpPXRoaXMuaWRPck5hbWUoYiksaj1hKGIpLmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIpO2gubGVuZ3RoPyhoLnJlbW92ZUNsYXNzKHRoaXMuc2V0dGluZ3MudmFsaWRDbGFzcykuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzKSxoLmh0bWwoYykpOihoPWEoXCI8XCIrdGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnQrXCI+XCIpLmF0dHIoXCJpZFwiLGkrXCItZXJyb3JcIikuYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzKS5odG1sKGN8fFwiXCIpLGQ9aCx0aGlzLnNldHRpbmdzLndyYXBwZXImJihkPWguaGlkZSgpLnNob3coKS53cmFwKFwiPFwiK3RoaXMuc2V0dGluZ3Mud3JhcHBlcitcIi8+XCIpLnBhcmVudCgpKSx0aGlzLmxhYmVsQ29udGFpbmVyLmxlbmd0aD90aGlzLmxhYmVsQ29udGFpbmVyLmFwcGVuZChkKTp0aGlzLnNldHRpbmdzLmVycm9yUGxhY2VtZW50P3RoaXMuc2V0dGluZ3MuZXJyb3JQbGFjZW1lbnQuY2FsbCh0aGlzLGQsYShiKSk6ZC5pbnNlcnRBZnRlcihiKSxoLmlzKFwibGFiZWxcIik/aC5hdHRyKFwiZm9yXCIsaSk6MD09PWgucGFyZW50cyhcImxhYmVsW2Zvcj0nXCIrdGhpcy5lc2NhcGVDc3NNZXRhKGkpK1wiJ11cIikubGVuZ3RoJiYoZj1oLmF0dHIoXCJpZFwiKSxqP2oubWF0Y2gobmV3IFJlZ0V4cChcIlxcXFxiXCIrdGhpcy5lc2NhcGVDc3NNZXRhKGYpK1wiXFxcXGJcIikpfHwoais9XCIgXCIrZik6aj1mLGEoYikuYXR0cihcImFyaWEtZGVzY3JpYmVkYnlcIixqKSxlPXRoaXMuZ3JvdXBzW2IubmFtZV0sZSYmKGc9dGhpcyxhLmVhY2goZy5ncm91cHMsZnVuY3Rpb24oYixjKXtjPT09ZSYmYShcIltuYW1lPSdcIitnLmVzY2FwZUNzc01ldGEoYikrXCInXVwiLGcuY3VycmVudEZvcm0pLmF0dHIoXCJhcmlhLWRlc2NyaWJlZGJ5XCIsaC5hdHRyKFwiaWRcIikpfSkpKSksIWMmJnRoaXMuc2V0dGluZ3Muc3VjY2VzcyYmKGgudGV4dChcIlwiKSxcInN0cmluZ1wiPT10eXBlb2YgdGhpcy5zZXR0aW5ncy5zdWNjZXNzP2guYWRkQ2xhc3ModGhpcy5zZXR0aW5ncy5zdWNjZXNzKTp0aGlzLnNldHRpbmdzLnN1Y2Nlc3MoaCxiKSksdGhpcy50b1Nob3c9dGhpcy50b1Nob3cuYWRkKGgpfSxlcnJvcnNGb3I6ZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5lc2NhcGVDc3NNZXRhKHRoaXMuaWRPck5hbWUoYikpLGQ9YShiKS5hdHRyKFwiYXJpYS1kZXNjcmliZWRieVwiKSxlPVwibGFiZWxbZm9yPSdcIitjK1wiJ10sIGxhYmVsW2Zvcj0nXCIrYytcIiddICpcIjtyZXR1cm4gZCYmKGU9ZStcIiwgI1wiK3RoaXMuZXNjYXBlQ3NzTWV0YShkKS5yZXBsYWNlKC9cXHMrL2csXCIsICNcIikpLHRoaXMuZXJyb3JzKCkuZmlsdGVyKGUpfSxlc2NhcGVDc3NNZXRhOmZ1bmN0aW9uKGEpe3JldHVybiBhLnJlcGxhY2UoLyhbXFxcXCFcIiMkJSYnKCkqKywuXFwvOjs8PT4/QFxcW1xcXV5ge3x9fl0pL2csXCJcXFxcJDFcIil9LGlkT3JOYW1lOmZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLmdyb3Vwc1thLm5hbWVdfHwodGhpcy5jaGVja2FibGUoYSk/YS5uYW1lOmEuaWR8fGEubmFtZSl9LHZhbGlkYXRpb25UYXJnZXRGb3I6ZnVuY3Rpb24oYil7cmV0dXJuIHRoaXMuY2hlY2thYmxlKGIpJiYoYj10aGlzLmZpbmRCeU5hbWUoYi5uYW1lKSksYShiKS5ub3QodGhpcy5zZXR0aW5ncy5pZ25vcmUpWzBdfSxjaGVja2FibGU6ZnVuY3Rpb24oYSl7cmV0dXJuL3JhZGlvfGNoZWNrYm94L2kudGVzdChhLnR5cGUpfSxmaW5kQnlOYW1lOmZ1bmN0aW9uKGIpe3JldHVybiBhKHRoaXMuY3VycmVudEZvcm0pLmZpbmQoXCJbbmFtZT0nXCIrdGhpcy5lc2NhcGVDc3NNZXRhKGIpK1wiJ11cIil9LGdldExlbmd0aDpmdW5jdGlvbihiLGMpe3N3aXRjaChjLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpe2Nhc2VcInNlbGVjdFwiOnJldHVybiBhKFwib3B0aW9uOnNlbGVjdGVkXCIsYykubGVuZ3RoO2Nhc2VcImlucHV0XCI6aWYodGhpcy5jaGVja2FibGUoYykpcmV0dXJuIHRoaXMuZmluZEJ5TmFtZShjLm5hbWUpLmZpbHRlcihcIjpjaGVja2VkXCIpLmxlbmd0aH1yZXR1cm4gYi5sZW5ndGh9LGRlcGVuZDpmdW5jdGlvbihhLGIpe3JldHVybiF0aGlzLmRlcGVuZFR5cGVzW3R5cGVvZiBhXXx8dGhpcy5kZXBlbmRUeXBlc1t0eXBlb2YgYV0oYSxiKX0sZGVwZW5kVHlwZXM6e1wiYm9vbGVhblwiOmZ1bmN0aW9uKGEpe3JldHVybiBhfSxzdHJpbmc6ZnVuY3Rpb24oYixjKXtyZXR1cm4hIWEoYixjLmZvcm0pLmxlbmd0aH0sXCJmdW5jdGlvblwiOmZ1bmN0aW9uKGEsYil7cmV0dXJuIGEoYil9fSxvcHRpb25hbDpmdW5jdGlvbihiKXt2YXIgYz10aGlzLmVsZW1lbnRWYWx1ZShiKTtyZXR1cm4hYS52YWxpZGF0b3IubWV0aG9kcy5yZXF1aXJlZC5jYWxsKHRoaXMsYyxiKSYmXCJkZXBlbmRlbmN5LW1pc21hdGNoXCJ9LHN0YXJ0UmVxdWVzdDpmdW5jdGlvbihiKXt0aGlzLnBlbmRpbmdbYi5uYW1lXXx8KHRoaXMucGVuZGluZ1JlcXVlc3QrKyxhKGIpLmFkZENsYXNzKHRoaXMuc2V0dGluZ3MucGVuZGluZ0NsYXNzKSx0aGlzLnBlbmRpbmdbYi5uYW1lXT0hMCl9LHN0b3BSZXF1ZXN0OmZ1bmN0aW9uKGIsYyl7dGhpcy5wZW5kaW5nUmVxdWVzdC0tLHRoaXMucGVuZGluZ1JlcXVlc3Q8MCYmKHRoaXMucGVuZGluZ1JlcXVlc3Q9MCksZGVsZXRlIHRoaXMucGVuZGluZ1tiLm5hbWVdLGEoYikucmVtb3ZlQ2xhc3ModGhpcy5zZXR0aW5ncy5wZW5kaW5nQ2xhc3MpLGMmJjA9PT10aGlzLnBlbmRpbmdSZXF1ZXN0JiZ0aGlzLmZvcm1TdWJtaXR0ZWQmJnRoaXMuZm9ybSgpPyhhKHRoaXMuY3VycmVudEZvcm0pLnN1Ym1pdCgpLHRoaXMuc3VibWl0QnV0dG9uJiZhKFwiaW5wdXQ6aGlkZGVuW25hbWU9J1wiK3RoaXMuc3VibWl0QnV0dG9uLm5hbWUrXCInXVwiLHRoaXMuY3VycmVudEZvcm0pLnJlbW92ZSgpLHRoaXMuZm9ybVN1Ym1pdHRlZD0hMSk6IWMmJjA9PT10aGlzLnBlbmRpbmdSZXF1ZXN0JiZ0aGlzLmZvcm1TdWJtaXR0ZWQmJihhKHRoaXMuY3VycmVudEZvcm0pLnRyaWdnZXJIYW5kbGVyKFwiaW52YWxpZC1mb3JtXCIsW3RoaXNdKSx0aGlzLmZvcm1TdWJtaXR0ZWQ9ITEpfSxwcmV2aW91c1ZhbHVlOmZ1bmN0aW9uKGIsYyl7cmV0dXJuIGM9XCJzdHJpbmdcIj09dHlwZW9mIGMmJmN8fFwicmVtb3RlXCIsYS5kYXRhKGIsXCJwcmV2aW91c1ZhbHVlXCIpfHxhLmRhdGEoYixcInByZXZpb3VzVmFsdWVcIix7b2xkOm51bGwsdmFsaWQ6ITAsbWVzc2FnZTp0aGlzLmRlZmF1bHRNZXNzYWdlKGIse21ldGhvZDpjfSl9KX0sZGVzdHJveTpmdW5jdGlvbigpe3RoaXMucmVzZXRGb3JtKCksYSh0aGlzLmN1cnJlbnRGb3JtKS5vZmYoXCIudmFsaWRhdGVcIikucmVtb3ZlRGF0YShcInZhbGlkYXRvclwiKS5maW5kKFwiLnZhbGlkYXRlLWVxdWFsVG8tYmx1clwiKS5vZmYoXCIudmFsaWRhdGUtZXF1YWxUb1wiKS5yZW1vdmVDbGFzcyhcInZhbGlkYXRlLWVxdWFsVG8tYmx1clwiKS5maW5kKFwiLnZhbGlkYXRlLWxlc3NUaGFuLWJsdXJcIikub2ZmKFwiLnZhbGlkYXRlLWxlc3NUaGFuXCIpLnJlbW92ZUNsYXNzKFwidmFsaWRhdGUtbGVzc1RoYW4tYmx1clwiKS5maW5kKFwiLnZhbGlkYXRlLWxlc3NUaGFuRXF1YWwtYmx1clwiKS5vZmYoXCIudmFsaWRhdGUtbGVzc1RoYW5FcXVhbFwiKS5yZW1vdmVDbGFzcyhcInZhbGlkYXRlLWxlc3NUaGFuRXF1YWwtYmx1clwiKS5maW5kKFwiLnZhbGlkYXRlLWdyZWF0ZXJUaGFuRXF1YWwtYmx1clwiKS5vZmYoXCIudmFsaWRhdGUtZ3JlYXRlclRoYW5FcXVhbFwiKS5yZW1vdmVDbGFzcyhcInZhbGlkYXRlLWdyZWF0ZXJUaGFuRXF1YWwtYmx1clwiKS5maW5kKFwiLnZhbGlkYXRlLWdyZWF0ZXJUaGFuLWJsdXJcIikub2ZmKFwiLnZhbGlkYXRlLWdyZWF0ZXJUaGFuXCIpLnJlbW92ZUNsYXNzKFwidmFsaWRhdGUtZ3JlYXRlclRoYW4tYmx1clwiKX19LGNsYXNzUnVsZVNldHRpbmdzOntyZXF1aXJlZDp7cmVxdWlyZWQ6ITB9LGVtYWlsOntlbWFpbDohMH0sdXJsOnt1cmw6ITB9LGRhdGU6e2RhdGU6ITB9LGRhdGVJU086e2RhdGVJU086ITB9LG51bWJlcjp7bnVtYmVyOiEwfSxkaWdpdHM6e2RpZ2l0czohMH0sY3JlZGl0Y2FyZDp7Y3JlZGl0Y2FyZDohMH19LGFkZENsYXNzUnVsZXM6ZnVuY3Rpb24oYixjKXtiLmNvbnN0cnVjdG9yPT09U3RyaW5nP3RoaXMuY2xhc3NSdWxlU2V0dGluZ3NbYl09YzphLmV4dGVuZCh0aGlzLmNsYXNzUnVsZVNldHRpbmdzLGIpfSxjbGFzc1J1bGVzOmZ1bmN0aW9uKGIpe3ZhciBjPXt9LGQ9YShiKS5hdHRyKFwiY2xhc3NcIik7cmV0dXJuIGQmJmEuZWFjaChkLnNwbGl0KFwiIFwiKSxmdW5jdGlvbigpe3RoaXMgaW4gYS52YWxpZGF0b3IuY2xhc3NSdWxlU2V0dGluZ3MmJmEuZXh0ZW5kKGMsYS52YWxpZGF0b3IuY2xhc3NSdWxlU2V0dGluZ3NbdGhpc10pfSksY30sbm9ybWFsaXplQXR0cmlidXRlUnVsZTpmdW5jdGlvbihhLGIsYyxkKXsvbWlufG1heHxzdGVwLy50ZXN0KGMpJiYobnVsbD09PWJ8fC9udW1iZXJ8cmFuZ2V8dGV4dC8udGVzdChiKSkmJihkPU51bWJlcihkKSxpc05hTihkKSYmKGQ9dm9pZCAwKSksZHx8MD09PWQ/YVtjXT1kOmI9PT1jJiZcInJhbmdlXCIhPT1iJiYoYVtjXT0hMCl9LGF0dHJpYnV0ZVJ1bGVzOmZ1bmN0aW9uKGIpe3ZhciBjLGQsZT17fSxmPWEoYiksZz1iLmdldEF0dHJpYnV0ZShcInR5cGVcIik7Zm9yKGMgaW4gYS52YWxpZGF0b3IubWV0aG9kcylcInJlcXVpcmVkXCI9PT1jPyhkPWIuZ2V0QXR0cmlidXRlKGMpLFwiXCI9PT1kJiYoZD0hMCksZD0hIWQpOmQ9Zi5hdHRyKGMpLHRoaXMubm9ybWFsaXplQXR0cmlidXRlUnVsZShlLGcsYyxkKTtyZXR1cm4gZS5tYXhsZW5ndGgmJi8tMXwyMTQ3NDgzNjQ3fDUyNDI4OC8udGVzdChlLm1heGxlbmd0aCkmJmRlbGV0ZSBlLm1heGxlbmd0aCxlfSxkYXRhUnVsZXM6ZnVuY3Rpb24oYil7dmFyIGMsZCxlPXt9LGY9YShiKSxnPWIuZ2V0QXR0cmlidXRlKFwidHlwZVwiKTtmb3IoYyBpbiBhLnZhbGlkYXRvci5tZXRob2RzKWQ9Zi5kYXRhKFwicnVsZVwiK2MuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYy5zdWJzdHJpbmcoMSkudG9Mb3dlckNhc2UoKSksXCJcIj09PWQmJihkPSEwKSx0aGlzLm5vcm1hbGl6ZUF0dHJpYnV0ZVJ1bGUoZSxnLGMsZCk7cmV0dXJuIGV9LHN0YXRpY1J1bGVzOmZ1bmN0aW9uKGIpe3ZhciBjPXt9LGQ9YS5kYXRhKGIuZm9ybSxcInZhbGlkYXRvclwiKTtyZXR1cm4gZC5zZXR0aW5ncy5ydWxlcyYmKGM9YS52YWxpZGF0b3Iubm9ybWFsaXplUnVsZShkLnNldHRpbmdzLnJ1bGVzW2IubmFtZV0pfHx7fSksY30sbm9ybWFsaXplUnVsZXM6ZnVuY3Rpb24oYixjKXtyZXR1cm4gYS5lYWNoKGIsZnVuY3Rpb24oZCxlKXtpZihlPT09ITEpcmV0dXJuIHZvaWQgZGVsZXRlIGJbZF07aWYoZS5wYXJhbXx8ZS5kZXBlbmRzKXt2YXIgZj0hMDtzd2l0Y2godHlwZW9mIGUuZGVwZW5kcyl7Y2FzZVwic3RyaW5nXCI6Zj0hIWEoZS5kZXBlbmRzLGMuZm9ybSkubGVuZ3RoO2JyZWFrO2Nhc2VcImZ1bmN0aW9uXCI6Zj1lLmRlcGVuZHMuY2FsbChjLGMpfWY/YltkXT12b2lkIDA9PT1lLnBhcmFtfHxlLnBhcmFtOihhLmRhdGEoYy5mb3JtLFwidmFsaWRhdG9yXCIpLnJlc2V0RWxlbWVudHMoYShjKSksZGVsZXRlIGJbZF0pfX0pLGEuZWFjaChiLGZ1bmN0aW9uKGQsZSl7YltkXT1hLmlzRnVuY3Rpb24oZSkmJlwibm9ybWFsaXplclwiIT09ZD9lKGMpOmV9KSxhLmVhY2goW1wibWlubGVuZ3RoXCIsXCJtYXhsZW5ndGhcIl0sZnVuY3Rpb24oKXtiW3RoaXNdJiYoYlt0aGlzXT1OdW1iZXIoYlt0aGlzXSkpfSksYS5lYWNoKFtcInJhbmdlbGVuZ3RoXCIsXCJyYW5nZVwiXSxmdW5jdGlvbigpe3ZhciBjO2JbdGhpc10mJihhLmlzQXJyYXkoYlt0aGlzXSk/Ylt0aGlzXT1bTnVtYmVyKGJbdGhpc11bMF0pLE51bWJlcihiW3RoaXNdWzFdKV06XCJzdHJpbmdcIj09dHlwZW9mIGJbdGhpc10mJihjPWJbdGhpc10ucmVwbGFjZSgvW1xcW1xcXV0vZyxcIlwiKS5zcGxpdCgvW1xccyxdKy8pLGJbdGhpc109W051bWJlcihjWzBdKSxOdW1iZXIoY1sxXSldKSl9KSxhLnZhbGlkYXRvci5hdXRvQ3JlYXRlUmFuZ2VzJiYobnVsbCE9Yi5taW4mJm51bGwhPWIubWF4JiYoYi5yYW5nZT1bYi5taW4sYi5tYXhdLGRlbGV0ZSBiLm1pbixkZWxldGUgYi5tYXgpLG51bGwhPWIubWlubGVuZ3RoJiZudWxsIT1iLm1heGxlbmd0aCYmKGIucmFuZ2VsZW5ndGg9W2IubWlubGVuZ3RoLGIubWF4bGVuZ3RoXSxkZWxldGUgYi5taW5sZW5ndGgsZGVsZXRlIGIubWF4bGVuZ3RoKSksYn0sbm9ybWFsaXplUnVsZTpmdW5jdGlvbihiKXtpZihcInN0cmluZ1wiPT10eXBlb2YgYil7dmFyIGM9e307YS5lYWNoKGIuc3BsaXQoL1xccy8pLGZ1bmN0aW9uKCl7Y1t0aGlzXT0hMH0pLGI9Y31yZXR1cm4gYn0sYWRkTWV0aG9kOmZ1bmN0aW9uKGIsYyxkKXthLnZhbGlkYXRvci5tZXRob2RzW2JdPWMsYS52YWxpZGF0b3IubWVzc2FnZXNbYl09dm9pZCAwIT09ZD9kOmEudmFsaWRhdG9yLm1lc3NhZ2VzW2JdLGMubGVuZ3RoPDMmJmEudmFsaWRhdG9yLmFkZENsYXNzUnVsZXMoYixhLnZhbGlkYXRvci5ub3JtYWxpemVSdWxlKGIpKX0sbWV0aG9kczp7cmVxdWlyZWQ6ZnVuY3Rpb24oYixjLGQpe2lmKCF0aGlzLmRlcGVuZChkLGMpKXJldHVyblwiZGVwZW5kZW5jeS1taXNtYXRjaFwiO2lmKFwic2VsZWN0XCI9PT1jLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkpe3ZhciBlPWEoYykudmFsKCk7cmV0dXJuIGUmJmUubGVuZ3RoPjB9cmV0dXJuIHRoaXMuY2hlY2thYmxlKGMpP3RoaXMuZ2V0TGVuZ3RoKGIsYyk+MDp2b2lkIDAhPT1iJiZudWxsIT09YiYmYi5sZW5ndGg+MH0sZW1haWw6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vcHRpb25hbChiKXx8L15bYS16QS1aMC05LiEjJCUmJyorXFwvPT9eX2B7fH1+LV0rQFthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPyg/OlxcLlthLXpBLVowLTldKD86W2EtekEtWjAtOS1dezAsNjF9W2EtekEtWjAtOV0pPykqJC8udGVzdChhKX0sdXJsOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMub3B0aW9uYWwoYil8fC9eKD86KD86KD86aHR0cHM/fGZ0cCk6KT9cXC9cXC8pKD86XFxTKyg/OjpcXFMqKT9AKT8oPzooPyEoPzoxMHwxMjcpKD86XFwuXFxkezEsM30pezN9KSg/ISg/OjE2OVxcLjI1NHwxOTJcXC4xNjgpKD86XFwuXFxkezEsM30pezJ9KSg/ITE3MlxcLig/OjFbNi05XXwyXFxkfDNbMC0xXSkoPzpcXC5cXGR7MSwzfSl7Mn0pKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswMV1cXGR8MjJbMC0zXSkoPzpcXC4oPzoxP1xcZHsxLDJ9fDJbMC00XVxcZHwyNVswLTVdKSl7Mn0oPzpcXC4oPzpbMS05XVxcZD98MVxcZFxcZHwyWzAtNF1cXGR8MjVbMC00XSkpfCg/Oig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykoPzpcXC4oPzpbYS16XFx1MDBhMS1cXHVmZmZmMC05XS0qKSpbYS16XFx1MDBhMS1cXHVmZmZmMC05XSspKig/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmZdezIsfSkpLj8pKD86OlxcZHsyLDV9KT8oPzpbXFwvPyNdXFxTKik/JC9pLnRlc3QoYSl9LGRhdGU6ZnVuY3Rpb24oKXt2YXIgYT0hMTtyZXR1cm4gZnVuY3Rpb24oYixjKXtyZXR1cm4gYXx8KGE9ITAsdGhpcy5zZXR0aW5ncy5kZWJ1ZyYmd2luZG93LmNvbnNvbGUmJmNvbnNvbGUud2FybihcIlRoZSBgZGF0ZWAgbWV0aG9kIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB2ZXJzaW9uICcyLjAuMCcuXFxuUGxlYXNlIGRvbid0IHVzZSBpdCwgc2luY2UgaXQgcmVsaWVzIG9uIHRoZSBEYXRlIGNvbnN0cnVjdG9yLCB3aGljaFxcbmJlaGF2ZXMgdmVyeSBkaWZmZXJlbnRseSBhY3Jvc3MgYnJvd3NlcnMgYW5kIGxvY2FsZXMuIFVzZSBgZGF0ZUlTT2BcXG5pbnN0ZWFkIG9yIG9uZSBvZiB0aGUgbG9jYWxlIHNwZWNpZmljIG1ldGhvZHMgaW4gYGxvY2FsaXphdGlvbnMvYFxcbmFuZCBgYWRkaXRpb25hbC1tZXRob2RzLmpzYC5cIikpLHRoaXMub3B0aW9uYWwoYyl8fCEvSW52YWxpZHxOYU4vLnRlc3QobmV3IERhdGUoYikudG9TdHJpbmcoKSl9fSgpLGRhdGVJU086ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vcHRpb25hbChiKXx8L15cXGR7NH1bXFwvXFwtXSgwP1sxLTldfDFbMDEyXSlbXFwvXFwtXSgwP1sxLTldfFsxMl1bMC05XXwzWzAxXSkkLy50ZXN0KGEpfSxudW1iZXI6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5vcHRpb25hbChiKXx8L14oPzotP1xcZCt8LT9cXGR7MSwzfSg/OixcXGR7M30pKyk/KD86XFwuXFxkKyk/JC8udGVzdChhKX0sZGlnaXRzOmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMub3B0aW9uYWwoYil8fC9eXFxkKyQvLnRlc3QoYSl9LG1pbmxlbmd0aDpmdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5pc0FycmF5KGIpP2IubGVuZ3RoOnRoaXMuZ2V0TGVuZ3RoKGIsYyk7cmV0dXJuIHRoaXMub3B0aW9uYWwoYyl8fGU+PWR9LG1heGxlbmd0aDpmdW5jdGlvbihiLGMsZCl7dmFyIGU9YS5pc0FycmF5KGIpP2IubGVuZ3RoOnRoaXMuZ2V0TGVuZ3RoKGIsYyk7cmV0dXJuIHRoaXMub3B0aW9uYWwoYyl8fGU8PWR9LHJhbmdlbGVuZ3RoOmZ1bmN0aW9uKGIsYyxkKXt2YXIgZT1hLmlzQXJyYXkoYik/Yi5sZW5ndGg6dGhpcy5nZXRMZW5ndGgoYixjKTtyZXR1cm4gdGhpcy5vcHRpb25hbChjKXx8ZT49ZFswXSYmZTw9ZFsxXX0sbWluOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5vcHRpb25hbChiKXx8YT49Y30sbWF4OmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gdGhpcy5vcHRpb25hbChiKXx8YTw9Y30scmFuZ2U6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiB0aGlzLm9wdGlvbmFsKGIpfHxhPj1jWzBdJiZhPD1jWzFdfSxzdGVwOmZ1bmN0aW9uKGIsYyxkKXt2YXIgZSxmPWEoYykuYXR0cihcInR5cGVcIiksZz1cIlN0ZXAgYXR0cmlidXRlIG9uIGlucHV0IHR5cGUgXCIrZitcIiBpcyBub3Qgc3VwcG9ydGVkLlwiLGg9W1widGV4dFwiLFwibnVtYmVyXCIsXCJyYW5nZVwiXSxpPW5ldyBSZWdFeHAoXCJcXFxcYlwiK2YrXCJcXFxcYlwiKSxqPWYmJiFpLnRlc3QoaC5qb2luKCkpLGs9ZnVuY3Rpb24oYSl7dmFyIGI9KFwiXCIrYSkubWF0Y2goLyg/OlxcLihcXGQrKSk/JC8pO3JldHVybiBiJiZiWzFdP2JbMV0ubGVuZ3RoOjB9LGw9ZnVuY3Rpb24oYSl7cmV0dXJuIE1hdGgucm91bmQoYSpNYXRoLnBvdygxMCxlKSl9LG09ITA7aWYoail0aHJvdyBuZXcgRXJyb3IoZyk7cmV0dXJuIGU9ayhkKSwoayhiKT5lfHxsKGIpJWwoZCkhPT0wKSYmKG09ITEpLHRoaXMub3B0aW9uYWwoYyl8fG19LGVxdWFsVG86ZnVuY3Rpb24oYixjLGQpe3ZhciBlPWEoZCk7cmV0dXJuIHRoaXMuc2V0dGluZ3Mub25mb2N1c291dCYmZS5ub3QoXCIudmFsaWRhdGUtZXF1YWxUby1ibHVyXCIpLmxlbmd0aCYmZS5hZGRDbGFzcyhcInZhbGlkYXRlLWVxdWFsVG8tYmx1clwiKS5vbihcImJsdXIudmFsaWRhdGUtZXF1YWxUb1wiLGZ1bmN0aW9uKCl7YShjKS52YWxpZCgpfSksYj09PWUudmFsKCl9LHJlbW90ZTpmdW5jdGlvbihiLGMsZCxlKXtpZih0aGlzLm9wdGlvbmFsKGMpKXJldHVyblwiZGVwZW5kZW5jeS1taXNtYXRjaFwiO2U9XCJzdHJpbmdcIj09dHlwZW9mIGUmJmV8fFwicmVtb3RlXCI7dmFyIGYsZyxoLGk9dGhpcy5wcmV2aW91c1ZhbHVlKGMsZSk7cmV0dXJuIHRoaXMuc2V0dGluZ3MubWVzc2FnZXNbYy5uYW1lXXx8KHRoaXMuc2V0dGluZ3MubWVzc2FnZXNbYy5uYW1lXT17fSksaS5vcmlnaW5hbE1lc3NhZ2U9aS5vcmlnaW5hbE1lc3NhZ2V8fHRoaXMuc2V0dGluZ3MubWVzc2FnZXNbYy5uYW1lXVtlXSx0aGlzLnNldHRpbmdzLm1lc3NhZ2VzW2MubmFtZV1bZV09aS5tZXNzYWdlLGQ9XCJzdHJpbmdcIj09dHlwZW9mIGQmJnt1cmw6ZH18fGQsaD1hLnBhcmFtKGEuZXh0ZW5kKHtkYXRhOmJ9LGQuZGF0YSkpLGkub2xkPT09aD9pLnZhbGlkOihpLm9sZD1oLGY9dGhpcyx0aGlzLnN0YXJ0UmVxdWVzdChjKSxnPXt9LGdbYy5uYW1lXT1iLGEuYWpheChhLmV4dGVuZCghMCx7bW9kZTpcImFib3J0XCIscG9ydDpcInZhbGlkYXRlXCIrYy5uYW1lLGRhdGFUeXBlOlwianNvblwiLGRhdGE6Zyxjb250ZXh0OmYuY3VycmVudEZvcm0sc3VjY2VzczpmdW5jdGlvbihhKXt2YXIgZCxnLGgsaj1hPT09ITB8fFwidHJ1ZVwiPT09YTtmLnNldHRpbmdzLm1lc3NhZ2VzW2MubmFtZV1bZV09aS5vcmlnaW5hbE1lc3NhZ2Usaj8oaD1mLmZvcm1TdWJtaXR0ZWQsZi5yZXNldEludGVybmFscygpLGYudG9IaWRlPWYuZXJyb3JzRm9yKGMpLGYuZm9ybVN1Ym1pdHRlZD1oLGYuc3VjY2Vzc0xpc3QucHVzaChjKSxmLmludmFsaWRbYy5uYW1lXT0hMSxmLnNob3dFcnJvcnMoKSk6KGQ9e30sZz1hfHxmLmRlZmF1bHRNZXNzYWdlKGMse21ldGhvZDplLHBhcmFtZXRlcnM6Yn0pLGRbYy5uYW1lXT1pLm1lc3NhZ2U9ZyxmLmludmFsaWRbYy5uYW1lXT0hMCxmLnNob3dFcnJvcnMoZCkpLGkudmFsaWQ9aixmLnN0b3BSZXF1ZXN0KGMsail9fSxkKSksXCJwZW5kaW5nXCIpfX19KTt2YXIgYixjPXt9O3JldHVybiBhLmFqYXhQcmVmaWx0ZXI/YS5hamF4UHJlZmlsdGVyKGZ1bmN0aW9uKGEsYixkKXt2YXIgZT1hLnBvcnQ7XCJhYm9ydFwiPT09YS5tb2RlJiYoY1tlXSYmY1tlXS5hYm9ydCgpLGNbZV09ZCl9KTooYj1hLmFqYXgsYS5hamF4PWZ1bmN0aW9uKGQpe3ZhciBlPShcIm1vZGVcImluIGQ/ZDphLmFqYXhTZXR0aW5ncykubW9kZSxmPShcInBvcnRcImluIGQ/ZDphLmFqYXhTZXR0aW5ncykucG9ydDtyZXR1cm5cImFib3J0XCI9PT1lPyhjW2ZdJiZjW2ZdLmFib3J0KCksY1tmXT1iLmFwcGx5KHRoaXMsYXJndW1lbnRzKSxjW2ZdKTpiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pLGF9KTsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiL2Fzc2V0cy9pbWFnZXMvY3JlYXRlLWFjY291bnQtaWNvbi5qcGdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IFwiL2Fzc2V0cy9pbWFnZXMvc2lnbi1pbnRvLWFjY291bnQtaWNvbi5qcGdcIjsiLCJjb25zdCAkID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuY29uc3QgYXBwbGljYXRpb25TdGF0ZSA9IHtcblxuICBkZWZhdWx0QWNjb3VudFBhZ2VTdGF0ZSgpIHtcbiAgICAvLyBIaWRlIHRoZSBTaWduIGluIFBhbmVsXG4gICAgJCggJyNzaWduLXVwLWNyZWF0ZS1hY2MtcGFuZWwnICkuY3NzKCAnZGlzcGxheScsICdub25lJyApO1xuICAgIC8vIEhpZGUgdGhlIEFkZGl0aW9uYWwgSW5mb3JtYXRpb24gUGFuZWxcbiAgICAkKCAnI3NpZ24tdXAtYWRkaXRpb25hbC1pbmZvcm1hdGlvbi1wYW5lbCcgKS5jc3MoICdkaXNwbGF5JywgJ25vbmUnICk7XG4gICAgLy8gSGlkZSB0aGUgcmVnaXN0ZXJlZCB1c2VyIG5hdmlnYXRpb25cbiAgICAkKCAnI3JlZ2lzdGVyZWQtdG9wLWJhci1jb2x1bW4tMicgKS5jc3MoICdkaXNwbGF5JywgJ25vbmUnICk7XG4gIH0sXG5cbiAgcmVnaXN0ZXJBY2NvdW50UGFnZVN0YXRlKCkge1xuICAgIC8vIEhpZGUgbG9naW4gcGFuZWxcbiAgICAkKCAnI3NpZ24taW4tcGFuZWwnICkuY3NzKCAnZGlzcGxheScsICdub25lJyApO1xuICAgIC8vIFNob3cgUmVnaXN0ZXIgUGFuZWxcbiAgICAkKCAnI3NpZ24tdXAtY3JlYXRlLWFjYy1wYW5lbCcgKS5jc3MoICdkaXNwbGF5JywgJ2ZsZXgnICk7XG4gICAgLy8gU2V0IEFjY291bnQgUGFuZWwgSGVhZGVyXG4gICAgJCggJyNhY2NvdW50LWxvZ2luLXNpZ251cC1oZWFkZXInICkuaHRtbCggJ1JlZ2lzdGVyIEFjY291bnQnICk7XG5cbiAgICBhcHBsaWNhdGlvblN0YXRlLnRvZ2dsZUFjY291bnRMaW5rU3RhdGUoKTtcbiAgfSxcblxuICBsb2dpbkFjY291bnRQYWdlU3RhdGUoKSB7XG4gICAgLy8gUmVkaXNwbGF5IHRoZSBsb2dpbiBwYW5lbFxuICAgICQoICcjc2lnbi1pbi1wYW5lbCcgKS5jc3MoICdkaXNwbGF5JywgJ2ZsZXgnICk7XG4gICAgLy8gSGlkZSB0aGUgUmVnaXN0ZXIgQWNjb3VudCBQYW5lbCBBZ2FpblxuICAgICQoICcjc2lnbi11cC1jcmVhdGUtYWNjLXBhbmVsJyApLmNzcyggJ2Rpc3BsYXknLCAnbm9uZScgKTtcbiAgICAvLyBTZXQgQWNjb3VudCBQYW5lbCBIZWFkZXJcbiAgICAkKCAnI2FjY291bnQtbG9naW4tc2lnbnVwLWhlYWRlcicgKS5odG1sKCAnUmV0dXJuaW5nIFVzZXInICk7XG5cbiAgICBhcHBsaWNhdGlvblN0YXRlLnRvZ2dsZUFjY291bnRMaW5rU3RhdGUoKTtcbiAgfSxcblxuICB0b2dnbGVBY2NvdW50TGlua1N0YXRlKCkge1xuICAgIGlmICggJCggJyNzaWduLWluLXBhbmVsJyApLmNzcyggJ2Rpc3BsYXknICkgPT09ICdmbGV4JyApIHtcbiAgICAgICQoICcjTG9naW4tbGluaycgKS5hZGRDbGFzcyggJ2FjdGl2ZScgKTtcbiAgICB9IGVsc2UgaWYgKCAkKCAnI0xvZ2luLWxpbmsnICkuaGFzQ2xhc3MoICdhY3RpdmUnICkgKSB7XG4gICAgICAkKCAnI0xvZ2luLWxpbmsnICkucmVtb3ZlQ2xhc3MoICdhY3RpdmUnICk7XG4gICAgfVxuXG4gICAgaWYgKCAkKCAnI3NpZ24tdXAtY3JlYXRlLWFjYy1wYW5lbCcgKS5jc3MoICdkaXNwbGF5JyApID09PSAnZmxleCcgKSB7XG4gICAgICAkKCAnI1JlZ2lzdGVyLWxpbmsnICkuYWRkQ2xhc3MoICdhY3RpdmUnICk7XG4gICAgfSBlbHNlIGlmICggJCggJyNSZWdpc3Rlci1saW5rJyApLmhhc0NsYXNzKCAnYWN0aXZlJyApICkge1xuICAgICAgJCggJyNSZWdpc3Rlci1saW5rJyApLnJlbW92ZUNsYXNzKCAnYWN0aXZlJyApO1xuICAgIH1cbiAgfVxufTtcblxuJCggKCkgPT4ge1xuXG4gIGFwcGxpY2F0aW9uU3RhdGUuZGVmYXVsdEFjY291bnRQYWdlU3RhdGUoKTtcblxuICAkKCAnI2dvLXRvLXNpZ24tdXAtYnRuJyApLm9uKCAnY2xpY2snLCAoKSA9PiB7XG4gICAgYXBwbGljYXRpb25TdGF0ZS5yZWdpc3RlckFjY291bnRQYWdlU3RhdGUoKTtcbiAgfSk7XG5cbiAgJCggJyNnby1iYWNrLXRvLXNpZ24taW4tbGluaycgKS5vbiggJ2NsaWNrJywgKCkgPT4ge1xuICAgIGFwcGxpY2F0aW9uU3RhdGUubG9naW5BY2NvdW50UGFnZVN0YXRlKCk7XG4gIH0pO1xuXG4gICQoICcjcmVnaXN0ZXItdGFiLWJ1dHRvbicgKS5vbiggJ2NsaWNrJywgKCkgPT4ge1xuICAgIGFwcGxpY2F0aW9uU3RhdGUucmVnaXN0ZXJBY2NvdW50UGFnZVN0YXRlKCk7XG4gIH0pO1xuXG4gICQoICcjbG9naW4tdGFiLWJ1dHRvbicgKS5vbiggJ2NsaWNrJywgKCkgPT4ge1xuICAgIGFwcGxpY2F0aW9uU3RhdGUubG9naW5BY2NvdW50UGFnZVN0YXRlKCk7XG4gIH0pO1xufSk7XG4iLCJjb25zdCB7IHZhbGlkYXRlIH0gPSByZXF1aXJlKCAnanF1ZXJ5LXZhbGlkYXRpb24nICk7XG5jb25zdCAkID0gcmVxdWlyZSggJ2pxdWVyeScgKTtcblxuJCggKCkgPT4ge1xuXG4gICQoICdmb3JtW25hbWU9XFwnc2lnbi1pbi1mb3JtXFwnXScgKVxuICAgIC52YWxpZGF0ZSh7XG4gICAgICBydWxlczoge1xuICAgICAgICAncmV0dXJuaW5nLXVzZXJuYW1lJzoge1xuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICBtaW5sZW5ndGg6IDVcbiAgICAgICAgfSxcbiAgICAgICAgJ3JldHVybmluZy1wYXNzd29yZCc6IHtcbiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgICBtaW5sZW5ndGg6IDhcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICBtZXNzYWdlczoge1xuICAgICAgICAncmV0dXJuaW5nLXVzZXJuYW1lJzoge1xuICAgICAgICAgIHJlcXVpcmVkOiAnRW50ZXIgeW91ciB1c2VybmFtZScsXG4gICAgICAgICAgbWlubGVuZ3RoOiAnVXNlcm5hbWUgZG9lc25cXCd0IG1lZXQgdGhlIHJlcXVpcmVkIGxlbmd0aCdcbiAgICAgIH0sXG4gICAgICAgICdyZXR1cm5pbmctcGFzc3dvcmQnOiB7XG4gICAgICAgICAgcmVxdWlyZWQ6ICdQbGVhc2UgZW50ZXIgYSBwYXNzd29yZCcsXG4gICAgICAgICAgbWlubGVuZ3RoOiAnUGFzc3dvcmQgZG9lc25cXCd0IG1lZXQgdGhlIHJlcXVpcmVkIGxlbmd0aCdcbiAgICAgIH1cbiAgICB9LFxuICAgICAgc3VibWl0SGFuZGxlciggZm9ybSwgZXZlbnQgKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0O1xuICAgICAgfVxuICB9KTtcblxuICAkKCAnZm9ybVtuYW1lPVxcJ2NyZWF0ZS1hY2NvdW50LWZvcm1cXCddJyApXG4gICAgLnZhbGlkYXRlKHtcbiAgICAgIHJ1bGVzOiB7XG4gICAgICAgICduZXctdXNlcm5hbWUnOiB7XG4gICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgbWlubGVuZ3RoOiA1XG4gICAgICAgIH0sXG4gICAgICAgICduZXctcGFzc3dvcmQnOiB7XG4gICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgbWlubGVuZ3RoOiA4XG4gICAgICAgIH0sXG4gICAgICAgICduZXctcGFzc3dvcmQtY29uZmlybSc6IHtcbiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgICBtaW5sZW5ndGg6IDgsXG4gICAgICAgICAgZXF1YWxUbzogJyNuZXctcGFzc3dvcmQnXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBtZXNzYWdlczoge1xuICAgICAgICAnbmV3LXVzZXJuYW1lJzoge1xuICAgICAgICAgIHJlcXVpcmVkOiAnQ2hvb3NlIGEgdXNlcm5hbWUnLFxuICAgICAgICAgIG1pbmxlbmd0aDogJ1VzZXJuYW1lIG11c3QgYmUgYXQgbGVhc3QgNSBjaGFyYWN0ZXJzIGxvbmcnXG4gICAgICAgIH0sXG4gICAgICAgICduZXctcGFzc3dvcmQnOiB7XG4gICAgICAgICAgcmVxdWlyZWQ6ICdDaG9vc2UgYSBwYXNzd29yZCcsXG4gICAgICAgICAgbWlubGVuZ3RoOiAnUGFzc3dvcmQgbXVzdCBiZSA4IGNoYXJhY3RlcnMgbG9uZydcbiAgICAgICAgfSxcbiAgICAgICAgJ25ldy1wYXNzd29yZC1jb25maXJtJzoge1xuICAgICAgICAgIHJlcXVpcmVkOiAnUmUtZW50ZXIgeW91ciBwYXNzd29yZCcsXG4gICAgICAgICAgbWlubGVuZ3RoOiAnUGFzc3dvcmQgbXVzdCBiZSA4IGNoYXJhY3RlcnMgbG9uZycsXG4gICAgICAgICAgZXF1YWxUbzogJ1Bhc3N3b3JkcyBkb25cXCd0IG1hdGNoJ1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3VibWl0SGFuZGxlciggZm9ybSwgZXZlbnQgKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0O1xuICAgICAgfVxuICAgIH0pO1xufSk7XG4iLCIvKiFcclxuICogalF1ZXJ5IFZhbGlkYXRpb24gUGx1Z2luIHYxLjE5LjFcclxuICpcclxuICogaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9cclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDE5IErDtnJuIFphZWZmZXJlclxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICovXHJcbihmdW5jdGlvbiggZmFjdG9yeSApIHtcclxuXHRpZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xyXG5cdFx0ZGVmaW5lKCBbXCJqcXVlcnlcIl0sIGZhY3RvcnkgKTtcclxuXHR9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgbW9kdWxlLmV4cG9ydHMpIHtcclxuXHRcdG1vZHVsZS5leHBvcnRzID0gZmFjdG9yeSggcmVxdWlyZSggXCJqcXVlcnlcIiApICk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGZhY3RvcnkoIGpRdWVyeSApO1xyXG5cdH1cclxufShmdW5jdGlvbiggJCApIHtcclxuXHJcbiQuZXh0ZW5kKCAkLmZuLCB7XG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy92YWxpZGF0ZS9cblx0dmFsaWRhdGU6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXG5cdFx0Ly8gSWYgbm90aGluZyBpcyBzZWxlY3RlZCwgcmV0dXJuIG5vdGhpbmc7IGNhbid0IGNoYWluIGFueXdheVxuXHRcdGlmICggIXRoaXMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBvcHRpb25zICYmIG9wdGlvbnMuZGVidWcgJiYgd2luZG93LmNvbnNvbGUgKSB7XG5cdFx0XHRcdGNvbnNvbGUud2FybiggXCJOb3RoaW5nIHNlbGVjdGVkLCBjYW4ndCB2YWxpZGF0ZSwgcmV0dXJuaW5nIG5vdGhpbmcuXCIgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDaGVjayBpZiBhIHZhbGlkYXRvciBmb3IgdGhpcyBmb3JtIHdhcyBhbHJlYWR5IGNyZWF0ZWRcblx0XHR2YXIgdmFsaWRhdG9yID0gJC5kYXRhKCB0aGlzWyAwIF0sIFwidmFsaWRhdG9yXCIgKTtcblx0XHRpZiAoIHZhbGlkYXRvciApIHtcblx0XHRcdHJldHVybiB2YWxpZGF0b3I7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIG5vdmFsaWRhdGUgdGFnIGlmIEhUTUw1LlxuXHRcdHRoaXMuYXR0ciggXCJub3ZhbGlkYXRlXCIsIFwibm92YWxpZGF0ZVwiICk7XG5cblx0XHR2YWxpZGF0b3IgPSBuZXcgJC52YWxpZGF0b3IoIG9wdGlvbnMsIHRoaXNbIDAgXSApO1xuXHRcdCQuZGF0YSggdGhpc1sgMCBdLCBcInZhbGlkYXRvclwiLCB2YWxpZGF0b3IgKTtcblxuXHRcdGlmICggdmFsaWRhdG9yLnNldHRpbmdzLm9uc3VibWl0ICkge1xuXG5cdFx0XHR0aGlzLm9uKCBcImNsaWNrLnZhbGlkYXRlXCIsIFwiOnN1Ym1pdFwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdFx0Ly8gVHJhY2sgdGhlIHVzZWQgc3VibWl0IGJ1dHRvbiB0byBwcm9wZXJseSBoYW5kbGUgc2NyaXB0ZWRcblx0XHRcdFx0Ly8gc3VibWl0cyBsYXRlci5cblx0XHRcdFx0dmFsaWRhdG9yLnN1Ym1pdEJ1dHRvbiA9IGV2ZW50LmN1cnJlbnRUYXJnZXQ7XG5cblx0XHRcdFx0Ly8gQWxsb3cgc3VwcHJlc3NpbmcgdmFsaWRhdGlvbiBieSBhZGRpbmcgYSBjYW5jZWwgY2xhc3MgdG8gdGhlIHN1Ym1pdCBidXR0b25cblx0XHRcdFx0aWYgKCAkKCB0aGlzICkuaGFzQ2xhc3MoIFwiY2FuY2VsXCIgKSApIHtcblx0XHRcdFx0XHR2YWxpZGF0b3IuY2FuY2VsU3VibWl0ID0gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFsbG93IHN1cHByZXNzaW5nIHZhbGlkYXRpb24gYnkgYWRkaW5nIHRoZSBodG1sNSBmb3Jtbm92YWxpZGF0ZSBhdHRyaWJ1dGUgdG8gdGhlIHN1Ym1pdCBidXR0b25cblx0XHRcdFx0aWYgKCAkKCB0aGlzICkuYXR0ciggXCJmb3Jtbm92YWxpZGF0ZVwiICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR2YWxpZGF0b3IuY2FuY2VsU3VibWl0ID0gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXG5cdFx0XHQvLyBWYWxpZGF0ZSB0aGUgZm9ybSBvbiBzdWJtaXRcblx0XHRcdHRoaXMub24oIFwic3VibWl0LnZhbGlkYXRlXCIsIGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0aWYgKCB2YWxpZGF0b3Iuc2V0dGluZ3MuZGVidWcgKSB7XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IGZvcm0gc3VibWl0IHRvIGJlIGFibGUgdG8gc2VlIGNvbnNvbGUgb3V0cHV0XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZ1bmN0aW9uIGhhbmRsZSgpIHtcblx0XHRcdFx0XHR2YXIgaGlkZGVuLCByZXN1bHQ7XG5cblx0XHRcdFx0XHQvLyBJbnNlcnQgYSBoaWRkZW4gaW5wdXQgYXMgYSByZXBsYWNlbWVudCBmb3IgdGhlIG1pc3Npbmcgc3VibWl0IGJ1dHRvblxuXHRcdFx0XHRcdC8vIFRoZSBoaWRkZW4gaW5wdXQgaXMgaW5zZXJ0ZWQgaW4gdHdvIGNhc2VzOlxuXHRcdFx0XHRcdC8vICAgLSBBIHVzZXIgZGVmaW5lZCBhIGBzdWJtaXRIYW5kbGVyYFxuXHRcdFx0XHRcdC8vICAgLSBUaGVyZSB3YXMgYSBwZW5kaW5nIHJlcXVlc3QgZHVlIHRvIGByZW1vdGVgIG1ldGhvZCBhbmQgYHN0b3BSZXF1ZXN0KClgXG5cdFx0XHRcdFx0Ly8gICAgIHdhcyBjYWxsZWQgdG8gc3VibWl0IHRoZSBmb3JtIGluIGNhc2UgaXQncyB2YWxpZFxuXHRcdFx0XHRcdGlmICggdmFsaWRhdG9yLnN1Ym1pdEJ1dHRvbiAmJiAoIHZhbGlkYXRvci5zZXR0aW5ncy5zdWJtaXRIYW5kbGVyIHx8IHZhbGlkYXRvci5mb3JtU3VibWl0dGVkICkgKSB7XG5cdFx0XHRcdFx0XHRoaWRkZW4gPSAkKCBcIjxpbnB1dCB0eXBlPSdoaWRkZW4nLz5cIiApXG5cdFx0XHRcdFx0XHRcdC5hdHRyKCBcIm5hbWVcIiwgdmFsaWRhdG9yLnN1Ym1pdEJ1dHRvbi5uYW1lIClcblx0XHRcdFx0XHRcdFx0LnZhbCggJCggdmFsaWRhdG9yLnN1Ym1pdEJ1dHRvbiApLnZhbCgpIClcblx0XHRcdFx0XHRcdFx0LmFwcGVuZFRvKCB2YWxpZGF0b3IuY3VycmVudEZvcm0gKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRpZiAoIHZhbGlkYXRvci5zZXR0aW5ncy5zdWJtaXRIYW5kbGVyICYmICF2YWxpZGF0b3Iuc2V0dGluZ3MuZGVidWcgKSB7XG5cdFx0XHRcdFx0XHRyZXN1bHQgPSB2YWxpZGF0b3Iuc2V0dGluZ3Muc3VibWl0SGFuZGxlci5jYWxsKCB2YWxpZGF0b3IsIHZhbGlkYXRvci5jdXJyZW50Rm9ybSwgZXZlbnQgKTtcblx0XHRcdFx0XHRcdGlmICggaGlkZGVuICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEFuZCBjbGVhbiB1cCBhZnRlcndhcmRzOyB0aGFua3MgdG8gbm8tYmxvY2stc2NvcGUsIGhpZGRlbiBjYW4gYmUgcmVmZXJlbmNlZFxuXHRcdFx0XHRcdFx0XHRoaWRkZW4ucmVtb3ZlKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRpZiAoIHJlc3VsdCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByZXZlbnQgc3VibWl0IGZvciBpbnZhbGlkIGZvcm1zIG9yIGN1c3RvbSBzdWJtaXQgaGFuZGxlcnNcblx0XHRcdFx0aWYgKCB2YWxpZGF0b3IuY2FuY2VsU3VibWl0ICkge1xuXHRcdFx0XHRcdHZhbGlkYXRvci5jYW5jZWxTdWJtaXQgPSBmYWxzZTtcblx0XHRcdFx0XHRyZXR1cm4gaGFuZGxlKCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCB2YWxpZGF0b3IuZm9ybSgpICkge1xuXHRcdFx0XHRcdGlmICggdmFsaWRhdG9yLnBlbmRpbmdSZXF1ZXN0ICkge1xuXHRcdFx0XHRcdFx0dmFsaWRhdG9yLmZvcm1TdWJtaXR0ZWQgPSB0cnVlO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gaGFuZGxlKCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dmFsaWRhdG9yLmZvY3VzSW52YWxpZCgpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB2YWxpZGF0b3I7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy92YWxpZC9cblx0dmFsaWQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciB2YWxpZCwgdmFsaWRhdG9yLCBlcnJvckxpc3Q7XG5cblx0XHRpZiAoICQoIHRoaXNbIDAgXSApLmlzKCBcImZvcm1cIiApICkge1xuXHRcdFx0dmFsaWQgPSB0aGlzLnZhbGlkYXRlKCkuZm9ybSgpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlcnJvckxpc3QgPSBbXTtcblx0XHRcdHZhbGlkID0gdHJ1ZTtcblx0XHRcdHZhbGlkYXRvciA9ICQoIHRoaXNbIDAgXS5mb3JtICkudmFsaWRhdGUoKTtcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhbGlkID0gdmFsaWRhdG9yLmVsZW1lbnQoIHRoaXMgKSAmJiB2YWxpZDtcblx0XHRcdFx0aWYgKCAhdmFsaWQgKSB7XG5cdFx0XHRcdFx0ZXJyb3JMaXN0ID0gZXJyb3JMaXN0LmNvbmNhdCggdmFsaWRhdG9yLmVycm9yTGlzdCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0XHR2YWxpZGF0b3IuZXJyb3JMaXN0ID0gZXJyb3JMaXN0O1xuXHRcdH1cblx0XHRyZXR1cm4gdmFsaWQ7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9ydWxlcy9cblx0cnVsZXM6IGZ1bmN0aW9uKCBjb21tYW5kLCBhcmd1bWVudCApIHtcblx0XHR2YXIgZWxlbWVudCA9IHRoaXNbIDAgXSxcblx0XHRcdGlzQ29udGVudEVkaXRhYmxlID0gdHlwZW9mIHRoaXMuYXR0ciggXCJjb250ZW50ZWRpdGFibGVcIiApICE9PSBcInVuZGVmaW5lZFwiICYmIHRoaXMuYXR0ciggXCJjb250ZW50ZWRpdGFibGVcIiApICE9PSBcImZhbHNlXCIsXG5cdFx0XHRzZXR0aW5ncywgc3RhdGljUnVsZXMsIGV4aXN0aW5nUnVsZXMsIGRhdGEsIHBhcmFtLCBmaWx0ZXJlZDtcblxuXHRcdC8vIElmIG5vdGhpbmcgaXMgc2VsZWN0ZWQsIHJldHVybiBlbXB0eSBvYmplY3Q7IGNhbid0IGNoYWluIGFueXdheVxuXHRcdGlmICggZWxlbWVudCA9PSBudWxsICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggIWVsZW1lbnQuZm9ybSAmJiBpc0NvbnRlbnRFZGl0YWJsZSApIHtcblx0XHRcdGVsZW1lbnQuZm9ybSA9IHRoaXMuY2xvc2VzdCggXCJmb3JtXCIgKVsgMCBdO1xuXHRcdFx0ZWxlbWVudC5uYW1lID0gdGhpcy5hdHRyKCBcIm5hbWVcIiApO1xuXHRcdH1cblxuXHRcdGlmICggZWxlbWVudC5mb3JtID09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBjb21tYW5kICkge1xuXHRcdFx0c2V0dGluZ3MgPSAkLmRhdGEoIGVsZW1lbnQuZm9ybSwgXCJ2YWxpZGF0b3JcIiApLnNldHRpbmdzO1xuXHRcdFx0c3RhdGljUnVsZXMgPSBzZXR0aW5ncy5ydWxlcztcblx0XHRcdGV4aXN0aW5nUnVsZXMgPSAkLnZhbGlkYXRvci5zdGF0aWNSdWxlcyggZWxlbWVudCApO1xuXHRcdFx0c3dpdGNoICggY29tbWFuZCApIHtcblx0XHRcdGNhc2UgXCJhZGRcIjpcblx0XHRcdFx0JC5leHRlbmQoIGV4aXN0aW5nUnVsZXMsICQudmFsaWRhdG9yLm5vcm1hbGl6ZVJ1bGUoIGFyZ3VtZW50ICkgKTtcblxuXHRcdFx0XHQvLyBSZW1vdmUgbWVzc2FnZXMgZnJvbSBydWxlcywgYnV0IGFsbG93IHRoZW0gdG8gYmUgc2V0IHNlcGFyYXRlbHlcblx0XHRcdFx0ZGVsZXRlIGV4aXN0aW5nUnVsZXMubWVzc2FnZXM7XG5cdFx0XHRcdHN0YXRpY1J1bGVzWyBlbGVtZW50Lm5hbWUgXSA9IGV4aXN0aW5nUnVsZXM7XG5cdFx0XHRcdGlmICggYXJndW1lbnQubWVzc2FnZXMgKSB7XG5cdFx0XHRcdFx0c2V0dGluZ3MubWVzc2FnZXNbIGVsZW1lbnQubmFtZSBdID0gJC5leHRlbmQoIHNldHRpbmdzLm1lc3NhZ2VzWyBlbGVtZW50Lm5hbWUgXSwgYXJndW1lbnQubWVzc2FnZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdGNhc2UgXCJyZW1vdmVcIjpcblx0XHRcdFx0aWYgKCAhYXJndW1lbnQgKSB7XG5cdFx0XHRcdFx0ZGVsZXRlIHN0YXRpY1J1bGVzWyBlbGVtZW50Lm5hbWUgXTtcblx0XHRcdFx0XHRyZXR1cm4gZXhpc3RpbmdSdWxlcztcblx0XHRcdFx0fVxuXHRcdFx0XHRmaWx0ZXJlZCA9IHt9O1xuXHRcdFx0XHQkLmVhY2goIGFyZ3VtZW50LnNwbGl0KCAvXFxzLyApLCBmdW5jdGlvbiggaW5kZXgsIG1ldGhvZCApIHtcblx0XHRcdFx0XHRmaWx0ZXJlZFsgbWV0aG9kIF0gPSBleGlzdGluZ1J1bGVzWyBtZXRob2QgXTtcblx0XHRcdFx0XHRkZWxldGUgZXhpc3RpbmdSdWxlc1sgbWV0aG9kIF07XG5cdFx0XHRcdH0gKTtcblx0XHRcdFx0cmV0dXJuIGZpbHRlcmVkO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGRhdGEgPSAkLnZhbGlkYXRvci5ub3JtYWxpemVSdWxlcyhcblx0XHQkLmV4dGVuZChcblx0XHRcdHt9LFxuXHRcdFx0JC52YWxpZGF0b3IuY2xhc3NSdWxlcyggZWxlbWVudCApLFxuXHRcdFx0JC52YWxpZGF0b3IuYXR0cmlidXRlUnVsZXMoIGVsZW1lbnQgKSxcblx0XHRcdCQudmFsaWRhdG9yLmRhdGFSdWxlcyggZWxlbWVudCApLFxuXHRcdFx0JC52YWxpZGF0b3Iuc3RhdGljUnVsZXMoIGVsZW1lbnQgKVxuXHRcdCksIGVsZW1lbnQgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSByZXF1aXJlZCBpcyBhdCBmcm9udFxuXHRcdGlmICggZGF0YS5yZXF1aXJlZCApIHtcblx0XHRcdHBhcmFtID0gZGF0YS5yZXF1aXJlZDtcblx0XHRcdGRlbGV0ZSBkYXRhLnJlcXVpcmVkO1xuXHRcdFx0ZGF0YSA9ICQuZXh0ZW5kKCB7IHJlcXVpcmVkOiBwYXJhbSB9LCBkYXRhICk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHJlbW90ZSBpcyBhdCBiYWNrXG5cdFx0aWYgKCBkYXRhLnJlbW90ZSApIHtcblx0XHRcdHBhcmFtID0gZGF0YS5yZW1vdGU7XG5cdFx0XHRkZWxldGUgZGF0YS5yZW1vdGU7XG5cdFx0XHRkYXRhID0gJC5leHRlbmQoIGRhdGEsIHsgcmVtb3RlOiBwYXJhbSB9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGE7XG5cdH1cbn0gKTtcblxuLy8gQ3VzdG9tIHNlbGVjdG9yc1xuJC5leHRlbmQoICQuZXhwci5wc2V1ZG9zIHx8ICQuZXhwclsgXCI6XCIgXSwge1x0XHQvLyAnfHwgJC5leHByWyBcIjpcIiBdJyBoZXJlIGVuYWJsZXMgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgdG8galF1ZXJ5IDEuNy4gQ2FuIGJlIHJlbW92ZWQgd2hlbiBkcm9wcGluZyBqUSAxLjcueCBzdXBwb3J0XG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9ibGFuay1zZWxlY3Rvci9cblx0Ymxhbms6IGZ1bmN0aW9uKCBhICkge1xuXHRcdHJldHVybiAhJC50cmltKCBcIlwiICsgJCggYSApLnZhbCgpICk7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9maWxsZWQtc2VsZWN0b3IvXG5cdGZpbGxlZDogZnVuY3Rpb24oIGEgKSB7XG5cdFx0dmFyIHZhbCA9ICQoIGEgKS52YWwoKTtcblx0XHRyZXR1cm4gdmFsICE9PSBudWxsICYmICEhJC50cmltKCBcIlwiICsgdmFsICk7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy91bmNoZWNrZWQtc2VsZWN0b3IvXG5cdHVuY2hlY2tlZDogZnVuY3Rpb24oIGEgKSB7XG5cdFx0cmV0dXJuICEkKCBhICkucHJvcCggXCJjaGVja2VkXCIgKTtcblx0fVxufSApO1xuXG4vLyBDb25zdHJ1Y3RvciBmb3IgdmFsaWRhdG9yXG4kLnZhbGlkYXRvciA9IGZ1bmN0aW9uKCBvcHRpb25zLCBmb3JtICkge1xuXHR0aGlzLnNldHRpbmdzID0gJC5leHRlbmQoIHRydWUsIHt9LCAkLnZhbGlkYXRvci5kZWZhdWx0cywgb3B0aW9ucyApO1xuXHR0aGlzLmN1cnJlbnRGb3JtID0gZm9ybTtcblx0dGhpcy5pbml0KCk7XG59O1xuXG4vLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL2pRdWVyeS52YWxpZGF0b3IuZm9ybWF0L1xuJC52YWxpZGF0b3IuZm9ybWF0ID0gZnVuY3Rpb24oIHNvdXJjZSwgcGFyYW1zICkge1xuXHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgKSB7XG5cdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGFyZ3MgPSAkLm1ha2VBcnJheSggYXJndW1lbnRzICk7XG5cdFx0XHRhcmdzLnVuc2hpZnQoIHNvdXJjZSApO1xuXHRcdFx0cmV0dXJuICQudmFsaWRhdG9yLmZvcm1hdC5hcHBseSggdGhpcywgYXJncyApO1xuXHRcdH07XG5cdH1cblx0aWYgKCBwYXJhbXMgPT09IHVuZGVmaW5lZCApIHtcblx0XHRyZXR1cm4gc291cmNlO1xuXHR9XG5cdGlmICggYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgcGFyYW1zLmNvbnN0cnVjdG9yICE9PSBBcnJheSAgKSB7XG5cdFx0cGFyYW1zID0gJC5tYWtlQXJyYXkoIGFyZ3VtZW50cyApLnNsaWNlKCAxICk7XG5cdH1cblx0aWYgKCBwYXJhbXMuY29uc3RydWN0b3IgIT09IEFycmF5ICkge1xuXHRcdHBhcmFtcyA9IFsgcGFyYW1zIF07XG5cdH1cblx0JC5lYWNoKCBwYXJhbXMsIGZ1bmN0aW9uKCBpLCBuICkge1xuXHRcdHNvdXJjZSA9IHNvdXJjZS5yZXBsYWNlKCBuZXcgUmVnRXhwKCBcIlxcXFx7XCIgKyBpICsgXCJcXFxcfVwiLCBcImdcIiApLCBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBuO1xuXHRcdH0gKTtcblx0fSApO1xuXHRyZXR1cm4gc291cmNlO1xufTtcblxuJC5leHRlbmQoICQudmFsaWRhdG9yLCB7XG5cblx0ZGVmYXVsdHM6IHtcblx0XHRtZXNzYWdlczoge30sXG5cdFx0Z3JvdXBzOiB7fSxcblx0XHRydWxlczoge30sXG5cdFx0ZXJyb3JDbGFzczogXCJlcnJvclwiLFxuXHRcdHBlbmRpbmdDbGFzczogXCJwZW5kaW5nXCIsXG5cdFx0dmFsaWRDbGFzczogXCJ2YWxpZFwiLFxuXHRcdGVycm9yRWxlbWVudDogXCJsYWJlbFwiLFxuXHRcdGZvY3VzQ2xlYW51cDogZmFsc2UsXG5cdFx0Zm9jdXNJbnZhbGlkOiB0cnVlLFxuXHRcdGVycm9yQ29udGFpbmVyOiAkKCBbXSApLFxuXHRcdGVycm9yTGFiZWxDb250YWluZXI6ICQoIFtdICksXG5cdFx0b25zdWJtaXQ6IHRydWUsXG5cdFx0aWdub3JlOiBcIjpoaWRkZW5cIixcblx0XHRpZ25vcmVUaXRsZTogZmFsc2UsXG5cdFx0b25mb2N1c2luOiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHRcdHRoaXMubGFzdEFjdGl2ZSA9IGVsZW1lbnQ7XG5cblx0XHRcdC8vIEhpZGUgZXJyb3IgbGFiZWwgYW5kIHJlbW92ZSBlcnJvciBjbGFzcyBvbiBmb2N1cyBpZiBlbmFibGVkXG5cdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3MuZm9jdXNDbGVhbnVwICkge1xuXHRcdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXR0aW5ncy51bmhpZ2hsaWdodC5jYWxsKCB0aGlzLCBlbGVtZW50LCB0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MsIHRoaXMuc2V0dGluZ3MudmFsaWRDbGFzcyApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuaGlkZVRoZXNlKCB0aGlzLmVycm9yc0ZvciggZWxlbWVudCApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRvbmZvY3Vzb3V0OiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHRcdGlmICggIXRoaXMuY2hlY2thYmxlKCBlbGVtZW50ICkgJiYgKCBlbGVtZW50Lm5hbWUgaW4gdGhpcy5zdWJtaXR0ZWQgfHwgIXRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSApICkge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnQoIGVsZW1lbnQgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdG9ua2V5dXA6IGZ1bmN0aW9uKCBlbGVtZW50LCBldmVudCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgcmV2YWxpZGF0ZSB0aGUgZmllbGQgd2hlbiBwcmVzc2luZyBvbmUgb2YgdGhlIGZvbGxvd2luZyBrZXlzXG5cdFx0XHQvLyBTaGlmdCAgICAgICA9PiAxNlxuXHRcdFx0Ly8gQ3RybCAgICAgICAgPT4gMTdcblx0XHRcdC8vIEFsdCAgICAgICAgID0+IDE4XG5cdFx0XHQvLyBDYXBzIGxvY2sgICA9PiAyMFxuXHRcdFx0Ly8gRW5kICAgICAgICAgPT4gMzVcblx0XHRcdC8vIEhvbWUgICAgICAgID0+IDM2XG5cdFx0XHQvLyBMZWZ0IGFycm93ICA9PiAzN1xuXHRcdFx0Ly8gVXAgYXJyb3cgICAgPT4gMzhcblx0XHRcdC8vIFJpZ2h0IGFycm93ID0+IDM5XG5cdFx0XHQvLyBEb3duIGFycm93ICA9PiA0MFxuXHRcdFx0Ly8gSW5zZXJ0ICAgICAgPT4gNDVcblx0XHRcdC8vIE51bSBsb2NrICAgID0+IDE0NFxuXHRcdFx0Ly8gQWx0R3Iga2V5ICAgPT4gMjI1XG5cdFx0XHR2YXIgZXhjbHVkZWRLZXlzID0gW1xuXHRcdFx0XHQxNiwgMTcsIDE4LCAyMCwgMzUsIDM2LCAzNyxcblx0XHRcdFx0MzgsIDM5LCA0MCwgNDUsIDE0NCwgMjI1XG5cdFx0XHRdO1xuXG5cdFx0XHRpZiAoIGV2ZW50LndoaWNoID09PSA5ICYmIHRoaXMuZWxlbWVudFZhbHVlKCBlbGVtZW50ICkgPT09IFwiXCIgfHwgJC5pbkFycmF5KCBldmVudC5rZXlDb2RlLCBleGNsdWRlZEtleXMgKSAhPT0gLTEgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW1lbnQubmFtZSBpbiB0aGlzLnN1Ym1pdHRlZCB8fCBlbGVtZW50Lm5hbWUgaW4gdGhpcy5pbnZhbGlkICkge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnQoIGVsZW1lbnQgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdG9uY2xpY2s6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXG5cdFx0XHQvLyBDbGljayBvbiBzZWxlY3RzLCByYWRpb2J1dHRvbnMgYW5kIGNoZWNrYm94ZXNcblx0XHRcdGlmICggZWxlbWVudC5uYW1lIGluIHRoaXMuc3VibWl0dGVkICkge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnQoIGVsZW1lbnQgKTtcblxuXHRcdFx0Ly8gT3Igb3B0aW9uIGVsZW1lbnRzLCBjaGVjayBwYXJlbnQgc2VsZWN0IGluIHRoYXQgY2FzZVxuXHRcdFx0fSBlbHNlIGlmICggZWxlbWVudC5wYXJlbnROb2RlLm5hbWUgaW4gdGhpcy5zdWJtaXR0ZWQgKSB7XG5cdFx0XHRcdHRoaXMuZWxlbWVudCggZWxlbWVudC5wYXJlbnROb2RlICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRoaWdobGlnaHQ6IGZ1bmN0aW9uKCBlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzICkge1xuXHRcdFx0aWYgKCBlbGVtZW50LnR5cGUgPT09IFwicmFkaW9cIiApIHtcblx0XHRcdFx0dGhpcy5maW5kQnlOYW1lKCBlbGVtZW50Lm5hbWUgKS5hZGRDbGFzcyggZXJyb3JDbGFzcyApLnJlbW92ZUNsYXNzKCB2YWxpZENsYXNzICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQkKCBlbGVtZW50ICkuYWRkQ2xhc3MoIGVycm9yQ2xhc3MgKS5yZW1vdmVDbGFzcyggdmFsaWRDbGFzcyApO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0dW5oaWdobGlnaHQ6IGZ1bmN0aW9uKCBlbGVtZW50LCBlcnJvckNsYXNzLCB2YWxpZENsYXNzICkge1xuXHRcdFx0aWYgKCBlbGVtZW50LnR5cGUgPT09IFwicmFkaW9cIiApIHtcblx0XHRcdFx0dGhpcy5maW5kQnlOYW1lKCBlbGVtZW50Lm5hbWUgKS5yZW1vdmVDbGFzcyggZXJyb3JDbGFzcyApLmFkZENsYXNzKCB2YWxpZENsYXNzICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHQkKCBlbGVtZW50ICkucmVtb3ZlQ2xhc3MoIGVycm9yQ2xhc3MgKS5hZGRDbGFzcyggdmFsaWRDbGFzcyApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL2pRdWVyeS52YWxpZGF0b3Iuc2V0RGVmYXVsdHMvXG5cdHNldERlZmF1bHRzOiBmdW5jdGlvbiggc2V0dGluZ3MgKSB7XG5cdFx0JC5leHRlbmQoICQudmFsaWRhdG9yLmRlZmF1bHRzLCBzZXR0aW5ncyApO1xuXHR9LFxuXG5cdG1lc3NhZ2VzOiB7XG5cdFx0cmVxdWlyZWQ6IFwiVGhpcyBmaWVsZCBpcyByZXF1aXJlZC5cIixcblx0XHRyZW1vdGU6IFwiUGxlYXNlIGZpeCB0aGlzIGZpZWxkLlwiLFxuXHRcdGVtYWlsOiBcIlBsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3MuXCIsXG5cdFx0dXJsOiBcIlBsZWFzZSBlbnRlciBhIHZhbGlkIFVSTC5cIixcblx0XHRkYXRlOiBcIlBsZWFzZSBlbnRlciBhIHZhbGlkIGRhdGUuXCIsXG5cdFx0ZGF0ZUlTTzogXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBkYXRlIChJU08pLlwiLFxuXHRcdG51bWJlcjogXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXIuXCIsXG5cdFx0ZGlnaXRzOiBcIlBsZWFzZSBlbnRlciBvbmx5IGRpZ2l0cy5cIixcblx0XHRlcXVhbFRvOiBcIlBsZWFzZSBlbnRlciB0aGUgc2FtZSB2YWx1ZSBhZ2Fpbi5cIixcblx0XHRtYXhsZW5ndGg6ICQudmFsaWRhdG9yLmZvcm1hdCggXCJQbGVhc2UgZW50ZXIgbm8gbW9yZSB0aGFuIHswfSBjaGFyYWN0ZXJzLlwiICksXG5cdFx0bWlubGVuZ3RoOiAkLnZhbGlkYXRvci5mb3JtYXQoIFwiUGxlYXNlIGVudGVyIGF0IGxlYXN0IHswfSBjaGFyYWN0ZXJzLlwiICksXG5cdFx0cmFuZ2VsZW5ndGg6ICQudmFsaWRhdG9yLmZvcm1hdCggXCJQbGVhc2UgZW50ZXIgYSB2YWx1ZSBiZXR3ZWVuIHswfSBhbmQgezF9IGNoYXJhY3RlcnMgbG9uZy5cIiApLFxuXHRcdHJhbmdlOiAkLnZhbGlkYXRvci5mb3JtYXQoIFwiUGxlYXNlIGVudGVyIGEgdmFsdWUgYmV0d2VlbiB7MH0gYW5kIHsxfS5cIiApLFxuXHRcdG1heDogJC52YWxpZGF0b3IuZm9ybWF0KCBcIlBsZWFzZSBlbnRlciBhIHZhbHVlIGxlc3MgdGhhbiBvciBlcXVhbCB0byB7MH0uXCIgKSxcblx0XHRtaW46ICQudmFsaWRhdG9yLmZvcm1hdCggXCJQbGVhc2UgZW50ZXIgYSB2YWx1ZSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gezB9LlwiICksXG5cdFx0c3RlcDogJC52YWxpZGF0b3IuZm9ybWF0KCBcIlBsZWFzZSBlbnRlciBhIG11bHRpcGxlIG9mIHswfS5cIiApXG5cdH0sXG5cblx0YXV0b0NyZWF0ZVJhbmdlczogZmFsc2UsXG5cblx0cHJvdG90eXBlOiB7XG5cblx0XHRpbml0OiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMubGFiZWxDb250YWluZXIgPSAkKCB0aGlzLnNldHRpbmdzLmVycm9yTGFiZWxDb250YWluZXIgKTtcblx0XHRcdHRoaXMuZXJyb3JDb250ZXh0ID0gdGhpcy5sYWJlbENvbnRhaW5lci5sZW5ndGggJiYgdGhpcy5sYWJlbENvbnRhaW5lciB8fCAkKCB0aGlzLmN1cnJlbnRGb3JtICk7XG5cdFx0XHR0aGlzLmNvbnRhaW5lcnMgPSAkKCB0aGlzLnNldHRpbmdzLmVycm9yQ29udGFpbmVyICkuYWRkKCB0aGlzLnNldHRpbmdzLmVycm9yTGFiZWxDb250YWluZXIgKTtcblx0XHRcdHRoaXMuc3VibWl0dGVkID0ge307XG5cdFx0XHR0aGlzLnZhbHVlQ2FjaGUgPSB7fTtcblx0XHRcdHRoaXMucGVuZGluZ1JlcXVlc3QgPSAwO1xuXHRcdFx0dGhpcy5wZW5kaW5nID0ge307XG5cdFx0XHR0aGlzLmludmFsaWQgPSB7fTtcblx0XHRcdHRoaXMucmVzZXQoKTtcblxuXHRcdFx0dmFyIGN1cnJlbnRGb3JtID0gdGhpcy5jdXJyZW50Rm9ybSxcblx0XHRcdFx0Z3JvdXBzID0gKCB0aGlzLmdyb3VwcyA9IHt9ICksXG5cdFx0XHRcdHJ1bGVzO1xuXHRcdFx0JC5lYWNoKCB0aGlzLnNldHRpbmdzLmdyb3VwcywgZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHRcdHZhbHVlID0gdmFsdWUuc3BsaXQoIC9cXHMvICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0JC5lYWNoKCB2YWx1ZSwgZnVuY3Rpb24oIGluZGV4LCBuYW1lICkge1xuXHRcdFx0XHRcdGdyb3Vwc1sgbmFtZSBdID0ga2V5O1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9ICk7XG5cdFx0XHRydWxlcyA9IHRoaXMuc2V0dGluZ3MucnVsZXM7XG5cdFx0XHQkLmVhY2goIHJ1bGVzLCBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0cnVsZXNbIGtleSBdID0gJC52YWxpZGF0b3Iubm9ybWFsaXplUnVsZSggdmFsdWUgKTtcblx0XHRcdH0gKTtcblxuXHRcdFx0ZnVuY3Rpb24gZGVsZWdhdGUoIGV2ZW50ICkge1xuXHRcdFx0XHR2YXIgaXNDb250ZW50RWRpdGFibGUgPSB0eXBlb2YgJCggdGhpcyApLmF0dHIoIFwiY29udGVudGVkaXRhYmxlXCIgKSAhPT0gXCJ1bmRlZmluZWRcIiAmJiAkKCB0aGlzICkuYXR0ciggXCJjb250ZW50ZWRpdGFibGVcIiApICE9PSBcImZhbHNlXCI7XG5cblx0XHRcdFx0Ly8gU2V0IGZvcm0gZXhwYW5kbyBvbiBjb250ZW50ZWRpdGFibGVcblx0XHRcdFx0aWYgKCAhdGhpcy5mb3JtICYmIGlzQ29udGVudEVkaXRhYmxlICkge1xuXHRcdFx0XHRcdHRoaXMuZm9ybSA9ICQoIHRoaXMgKS5jbG9zZXN0KCBcImZvcm1cIiApWyAwIF07XG5cdFx0XHRcdFx0dGhpcy5uYW1lID0gJCggdGhpcyApLmF0dHIoIFwibmFtZVwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZ25vcmUgdGhlIGVsZW1lbnQgaWYgaXQgYmVsb25ncyB0byBhbm90aGVyIGZvcm0uIFRoaXMgd2lsbCBoYXBwZW4gbWFpbmx5XG5cdFx0XHRcdC8vIHdoZW4gc2V0dGluZyB0aGUgYGZvcm1gIGF0dHJpYnV0ZSBvZiBhbiBpbnB1dCB0byB0aGUgaWQgb2YgYW5vdGhlciBmb3JtLlxuXHRcdFx0XHRpZiAoIGN1cnJlbnRGb3JtICE9PSB0aGlzLmZvcm0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dmFyIHZhbGlkYXRvciA9ICQuZGF0YSggdGhpcy5mb3JtLCBcInZhbGlkYXRvclwiICksXG5cdFx0XHRcdFx0ZXZlbnRUeXBlID0gXCJvblwiICsgZXZlbnQudHlwZS5yZXBsYWNlKCAvXnZhbGlkYXRlLywgXCJcIiApLFxuXHRcdFx0XHRcdHNldHRpbmdzID0gdmFsaWRhdG9yLnNldHRpbmdzO1xuXHRcdFx0XHRpZiAoIHNldHRpbmdzWyBldmVudFR5cGUgXSAmJiAhJCggdGhpcyApLmlzKCBzZXR0aW5ncy5pZ25vcmUgKSApIHtcblx0XHRcdFx0XHRzZXR0aW5nc1sgZXZlbnRUeXBlIF0uY2FsbCggdmFsaWRhdG9yLCB0aGlzLCBldmVudCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdCQoIHRoaXMuY3VycmVudEZvcm0gKVxuXHRcdFx0XHQub24oIFwiZm9jdXNpbi52YWxpZGF0ZSBmb2N1c291dC52YWxpZGF0ZSBrZXl1cC52YWxpZGF0ZVwiLFxuXHRcdFx0XHRcdFwiOnRleHQsIFt0eXBlPSdwYXNzd29yZCddLCBbdHlwZT0nZmlsZSddLCBzZWxlY3QsIHRleHRhcmVhLCBbdHlwZT0nbnVtYmVyJ10sIFt0eXBlPSdzZWFyY2gnXSwgXCIgK1xuXHRcdFx0XHRcdFwiW3R5cGU9J3RlbCddLCBbdHlwZT0ndXJsJ10sIFt0eXBlPSdlbWFpbCddLCBbdHlwZT0nZGF0ZXRpbWUnXSwgW3R5cGU9J2RhdGUnXSwgW3R5cGU9J21vbnRoJ10sIFwiICtcblx0XHRcdFx0XHRcIlt0eXBlPSd3ZWVrJ10sIFt0eXBlPSd0aW1lJ10sIFt0eXBlPSdkYXRldGltZS1sb2NhbCddLCBbdHlwZT0ncmFuZ2UnXSwgW3R5cGU9J2NvbG9yJ10sIFwiICtcblx0XHRcdFx0XHRcIlt0eXBlPSdyYWRpbyddLCBbdHlwZT0nY2hlY2tib3gnXSwgW2NvbnRlbnRlZGl0YWJsZV0sIFt0eXBlPSdidXR0b24nXVwiLCBkZWxlZ2F0ZSApXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lLCBvbGRJRVxuXHRcdFx0XHQvLyBcInNlbGVjdFwiIGlzIHByb3ZpZGVkIGFzIGV2ZW50LnRhcmdldCB3aGVuIGNsaWNraW5nIGEgb3B0aW9uXG5cdFx0XHRcdC5vbiggXCJjbGljay52YWxpZGF0ZVwiLCBcInNlbGVjdCwgb3B0aW9uLCBbdHlwZT0ncmFkaW8nXSwgW3R5cGU9J2NoZWNrYm94J11cIiwgZGVsZWdhdGUgKTtcblxuXHRcdFx0aWYgKCB0aGlzLnNldHRpbmdzLmludmFsaWRIYW5kbGVyICkge1xuXHRcdFx0XHQkKCB0aGlzLmN1cnJlbnRGb3JtICkub24oIFwiaW52YWxpZC1mb3JtLnZhbGlkYXRlXCIsIHRoaXMuc2V0dGluZ3MuaW52YWxpZEhhbmRsZXIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9WYWxpZGF0b3IuZm9ybS9cblx0XHRmb3JtOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuY2hlY2tGb3JtKCk7XG5cdFx0XHQkLmV4dGVuZCggdGhpcy5zdWJtaXR0ZWQsIHRoaXMuZXJyb3JNYXAgKTtcblx0XHRcdHRoaXMuaW52YWxpZCA9ICQuZXh0ZW5kKCB7fSwgdGhpcy5lcnJvck1hcCApO1xuXHRcdFx0aWYgKCAhdGhpcy52YWxpZCgpICkge1xuXHRcdFx0XHQkKCB0aGlzLmN1cnJlbnRGb3JtICkudHJpZ2dlckhhbmRsZXIoIFwiaW52YWxpZC1mb3JtXCIsIFsgdGhpcyBdICk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLnNob3dFcnJvcnMoKTtcblx0XHRcdHJldHVybiB0aGlzLnZhbGlkKCk7XG5cdFx0fSxcblxuXHRcdGNoZWNrRm9ybTogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLnByZXBhcmVGb3JtKCk7XG5cdFx0XHRmb3IgKCB2YXIgaSA9IDAsIGVsZW1lbnRzID0gKCB0aGlzLmN1cnJlbnRFbGVtZW50cyA9IHRoaXMuZWxlbWVudHMoKSApOyBlbGVtZW50c1sgaSBdOyBpKysgKSB7XG5cdFx0XHRcdHRoaXMuY2hlY2soIGVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiB0aGlzLnZhbGlkKCk7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvVmFsaWRhdG9yLmVsZW1lbnQvXG5cdFx0ZWxlbWVudDogZnVuY3Rpb24oIGVsZW1lbnQgKSB7XG5cdFx0XHR2YXIgY2xlYW5FbGVtZW50ID0gdGhpcy5jbGVhbiggZWxlbWVudCApLFxuXHRcdFx0XHRjaGVja0VsZW1lbnQgPSB0aGlzLnZhbGlkYXRpb25UYXJnZXRGb3IoIGNsZWFuRWxlbWVudCApLFxuXHRcdFx0XHR2ID0gdGhpcyxcblx0XHRcdFx0cmVzdWx0ID0gdHJ1ZSxcblx0XHRcdFx0cnMsIGdyb3VwO1xuXG5cdFx0XHRpZiAoIGNoZWNrRWxlbWVudCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRkZWxldGUgdGhpcy5pbnZhbGlkWyBjbGVhbkVsZW1lbnQubmFtZSBdO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy5wcmVwYXJlRWxlbWVudCggY2hlY2tFbGVtZW50ICk7XG5cdFx0XHRcdHRoaXMuY3VycmVudEVsZW1lbnRzID0gJCggY2hlY2tFbGVtZW50ICk7XG5cblx0XHRcdFx0Ly8gSWYgdGhpcyBlbGVtZW50IGlzIGdyb3VwZWQsIHRoZW4gdmFsaWRhdGUgYWxsIGdyb3VwIGVsZW1lbnRzIGFscmVhZHlcblx0XHRcdFx0Ly8gY29udGFpbmluZyBhIHZhbHVlXG5cdFx0XHRcdGdyb3VwID0gdGhpcy5ncm91cHNbIGNoZWNrRWxlbWVudC5uYW1lIF07XG5cdFx0XHRcdGlmICggZ3JvdXAgKSB7XG5cdFx0XHRcdFx0JC5lYWNoKCB0aGlzLmdyb3VwcywgZnVuY3Rpb24oIG5hbWUsIHRlc3Rncm91cCApIHtcblx0XHRcdFx0XHRcdGlmICggdGVzdGdyb3VwID09PSBncm91cCAmJiBuYW1lICE9PSBjaGVja0VsZW1lbnQubmFtZSApIHtcblx0XHRcdFx0XHRcdFx0Y2xlYW5FbGVtZW50ID0gdi52YWxpZGF0aW9uVGFyZ2V0Rm9yKCB2LmNsZWFuKCB2LmZpbmRCeU5hbWUoIG5hbWUgKSApICk7XG5cdFx0XHRcdFx0XHRcdGlmICggY2xlYW5FbGVtZW50ICYmIGNsZWFuRWxlbWVudC5uYW1lIGluIHYuaW52YWxpZCApIHtcblx0XHRcdFx0XHRcdFx0XHR2LmN1cnJlbnRFbGVtZW50cy5wdXNoKCBjbGVhbkVsZW1lbnQgKTtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHQgPSB2LmNoZWNrKCBjbGVhbkVsZW1lbnQgKSAmJiByZXN1bHQ7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRycyA9IHRoaXMuY2hlY2soIGNoZWNrRWxlbWVudCApICE9PSBmYWxzZTtcblx0XHRcdFx0cmVzdWx0ID0gcmVzdWx0ICYmIHJzO1xuXHRcdFx0XHRpZiAoIHJzICkge1xuXHRcdFx0XHRcdHRoaXMuaW52YWxpZFsgY2hlY2tFbGVtZW50Lm5hbWUgXSA9IGZhbHNlO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuaW52YWxpZFsgY2hlY2tFbGVtZW50Lm5hbWUgXSA9IHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoICF0aGlzLm51bWJlck9mSW52YWxpZHMoKSApIHtcblxuXHRcdFx0XHRcdC8vIEhpZGUgZXJyb3IgY29udGFpbmVycyBvbiBsYXN0IGVycm9yXG5cdFx0XHRcdFx0dGhpcy50b0hpZGUgPSB0aGlzLnRvSGlkZS5hZGQoIHRoaXMuY29udGFpbmVycyApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRoaXMuc2hvd0Vycm9ycygpO1xuXG5cdFx0XHRcdC8vIEFkZCBhcmlhLWludmFsaWQgc3RhdHVzIGZvciBzY3JlZW4gcmVhZGVyc1xuXHRcdFx0XHQkKCBlbGVtZW50ICkuYXR0ciggXCJhcmlhLWludmFsaWRcIiwgIXJzICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvVmFsaWRhdG9yLnNob3dFcnJvcnMvXG5cdFx0c2hvd0Vycm9yczogZnVuY3Rpb24oIGVycm9ycyApIHtcblx0XHRcdGlmICggZXJyb3JzICkge1xuXHRcdFx0XHR2YXIgdmFsaWRhdG9yID0gdGhpcztcblxuXHRcdFx0XHQvLyBBZGQgaXRlbXMgdG8gZXJyb3IgbGlzdCBhbmQgbWFwXG5cdFx0XHRcdCQuZXh0ZW5kKCB0aGlzLmVycm9yTWFwLCBlcnJvcnMgKTtcblx0XHRcdFx0dGhpcy5lcnJvckxpc3QgPSAkLm1hcCggdGhpcy5lcnJvck1hcCwgZnVuY3Rpb24oIG1lc3NhZ2UsIG5hbWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHtcblx0XHRcdFx0XHRcdG1lc3NhZ2U6IG1lc3NhZ2UsXG5cdFx0XHRcdFx0XHRlbGVtZW50OiB2YWxpZGF0b3IuZmluZEJ5TmFtZSggbmFtZSApWyAwIF1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGl0ZW1zIGZyb20gc3VjY2VzcyBsaXN0XG5cdFx0XHRcdHRoaXMuc3VjY2Vzc0xpc3QgPSAkLmdyZXAoIHRoaXMuc3VjY2Vzc0xpc3QsIGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdFx0XHRcdHJldHVybiAhKCBlbGVtZW50Lm5hbWUgaW4gZXJyb3JzICk7XG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHRcdGlmICggdGhpcy5zZXR0aW5ncy5zaG93RXJyb3JzICkge1xuXHRcdFx0XHR0aGlzLnNldHRpbmdzLnNob3dFcnJvcnMuY2FsbCggdGhpcywgdGhpcy5lcnJvck1hcCwgdGhpcy5lcnJvckxpc3QgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuZGVmYXVsdFNob3dFcnJvcnMoKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9WYWxpZGF0b3IucmVzZXRGb3JtL1xuXHRcdHJlc2V0Rm9ybTogZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICQuZm4ucmVzZXRGb3JtICkge1xuXHRcdFx0XHQkKCB0aGlzLmN1cnJlbnRGb3JtICkucmVzZXRGb3JtKCk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLmludmFsaWQgPSB7fTtcblx0XHRcdHRoaXMuc3VibWl0dGVkID0ge307XG5cdFx0XHR0aGlzLnByZXBhcmVGb3JtKCk7XG5cdFx0XHR0aGlzLmhpZGVFcnJvcnMoKTtcblx0XHRcdHZhciBlbGVtZW50cyA9IHRoaXMuZWxlbWVudHMoKVxuXHRcdFx0XHQucmVtb3ZlRGF0YSggXCJwcmV2aW91c1ZhbHVlXCIgKVxuXHRcdFx0XHQucmVtb3ZlQXR0ciggXCJhcmlhLWludmFsaWRcIiApO1xuXG5cdFx0XHR0aGlzLnJlc2V0RWxlbWVudHMoIGVsZW1lbnRzICk7XG5cdFx0fSxcblxuXHRcdHJlc2V0RWxlbWVudHM6IGZ1bmN0aW9uKCBlbGVtZW50cyApIHtcblx0XHRcdHZhciBpO1xuXG5cdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBlbGVtZW50c1sgaSBdOyBpKysgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXR0aW5ncy51bmhpZ2hsaWdodC5jYWxsKCB0aGlzLCBlbGVtZW50c1sgaSBdLFxuXHRcdFx0XHRcdFx0dGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLCBcIlwiICk7XG5cdFx0XHRcdFx0dGhpcy5maW5kQnlOYW1lKCBlbGVtZW50c1sgaSBdLm5hbWUgKS5yZW1vdmVDbGFzcyggdGhpcy5zZXR0aW5ncy52YWxpZENsYXNzICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1lbnRzXG5cdFx0XHRcdFx0LnJlbW92ZUNsYXNzKCB0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MgKVxuXHRcdFx0XHRcdC5yZW1vdmVDbGFzcyggdGhpcy5zZXR0aW5ncy52YWxpZENsYXNzICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdG51bWJlck9mSW52YWxpZHM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMub2JqZWN0TGVuZ3RoKCB0aGlzLmludmFsaWQgKTtcblx0XHR9LFxuXG5cdFx0b2JqZWN0TGVuZ3RoOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0LyoganNoaW50IHVudXNlZDogZmFsc2UgKi9cblx0XHRcdHZhciBjb3VudCA9IDAsXG5cdFx0XHRcdGk7XG5cdFx0XHRmb3IgKCBpIGluIG9iaiApIHtcblxuXHRcdFx0XHQvLyBUaGlzIGNoZWNrIGFsbG93cyBjb3VudGluZyBlbGVtZW50cyB3aXRoIGVtcHR5IGVycm9yXG5cdFx0XHRcdC8vIG1lc3NhZ2UgYXMgaW52YWxpZCBlbGVtZW50c1xuXHRcdFx0XHRpZiAoIG9ialsgaSBdICE9PSB1bmRlZmluZWQgJiYgb2JqWyBpIF0gIT09IG51bGwgJiYgb2JqWyBpIF0gIT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBjb3VudDtcblx0XHR9LFxuXG5cdFx0aGlkZUVycm9yczogZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLmhpZGVUaGVzZSggdGhpcy50b0hpZGUgKTtcblx0XHR9LFxuXG5cdFx0aGlkZVRoZXNlOiBmdW5jdGlvbiggZXJyb3JzICkge1xuXHRcdFx0ZXJyb3JzLm5vdCggdGhpcy5jb250YWluZXJzICkudGV4dCggXCJcIiApO1xuXHRcdFx0dGhpcy5hZGRXcmFwcGVyKCBlcnJvcnMgKS5oaWRlKCk7XG5cdFx0fSxcblxuXHRcdHZhbGlkOiBmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiB0aGlzLnNpemUoKSA9PT0gMDtcblx0XHR9LFxuXG5cdFx0c2l6ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lcnJvckxpc3QubGVuZ3RoO1xuXHRcdH0sXG5cblx0XHRmb2N1c0ludmFsaWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCB0aGlzLnNldHRpbmdzLmZvY3VzSW52YWxpZCApIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQkKCB0aGlzLmZpbmRMYXN0QWN0aXZlKCkgfHwgdGhpcy5lcnJvckxpc3QubGVuZ3RoICYmIHRoaXMuZXJyb3JMaXN0WyAwIF0uZWxlbWVudCB8fCBbXSApXG5cdFx0XHRcdFx0LmZpbHRlciggXCI6dmlzaWJsZVwiIClcblx0XHRcdFx0XHQudHJpZ2dlciggXCJmb2N1c1wiIClcblxuXHRcdFx0XHRcdC8vIE1hbnVhbGx5IHRyaWdnZXIgZm9jdXNpbiBldmVudDsgd2l0aG91dCBpdCwgZm9jdXNpbiBoYW5kbGVyIGlzbid0IGNhbGxlZCwgZmluZExhc3RBY3RpdmUgd29uJ3QgaGF2ZSBhbnl0aGluZyB0byBmaW5kXG5cdFx0XHRcdFx0LnRyaWdnZXIoIFwiZm9jdXNpblwiICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0Ly8gSWdub3JlIElFIHRocm93aW5nIGVycm9ycyB3aGVuIGZvY3VzaW5nIGhpZGRlbiBlbGVtZW50c1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdGZpbmRMYXN0QWN0aXZlOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBsYXN0QWN0aXZlID0gdGhpcy5sYXN0QWN0aXZlO1xuXHRcdFx0cmV0dXJuIGxhc3RBY3RpdmUgJiYgJC5ncmVwKCB0aGlzLmVycm9yTGlzdCwgZnVuY3Rpb24oIG4gKSB7XG5cdFx0XHRcdHJldHVybiBuLmVsZW1lbnQubmFtZSA9PT0gbGFzdEFjdGl2ZS5uYW1lO1xuXHRcdFx0fSApLmxlbmd0aCA9PT0gMSAmJiBsYXN0QWN0aXZlO1xuXHRcdH0sXG5cblx0XHRlbGVtZW50czogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgdmFsaWRhdG9yID0gdGhpcyxcblx0XHRcdFx0cnVsZXNDYWNoZSA9IHt9O1xuXG5cdFx0XHQvLyBTZWxlY3QgYWxsIHZhbGlkIGlucHV0cyBpbnNpZGUgdGhlIGZvcm0gKG5vIHN1Ym1pdCBvciByZXNldCBidXR0b25zKVxuXHRcdFx0cmV0dXJuICQoIHRoaXMuY3VycmVudEZvcm0gKVxuXHRcdFx0LmZpbmQoIFwiaW5wdXQsIHNlbGVjdCwgdGV4dGFyZWEsIFtjb250ZW50ZWRpdGFibGVdXCIgKVxuXHRcdFx0Lm5vdCggXCI6c3VibWl0LCA6cmVzZXQsIDppbWFnZSwgOmRpc2FibGVkXCIgKVxuXHRcdFx0Lm5vdCggdGhpcy5zZXR0aW5ncy5pZ25vcmUgKVxuXHRcdFx0LmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBuYW1lID0gdGhpcy5uYW1lIHx8ICQoIHRoaXMgKS5hdHRyKCBcIm5hbWVcIiApOyAvLyBGb3IgY29udGVudGVkaXRhYmxlXG5cdFx0XHRcdHZhciBpc0NvbnRlbnRFZGl0YWJsZSA9IHR5cGVvZiAkKCB0aGlzICkuYXR0ciggXCJjb250ZW50ZWRpdGFibGVcIiApICE9PSBcInVuZGVmaW5lZFwiICYmICQoIHRoaXMgKS5hdHRyKCBcImNvbnRlbnRlZGl0YWJsZVwiICkgIT09IFwiZmFsc2VcIjtcblxuXHRcdFx0XHRpZiAoICFuYW1lICYmIHZhbGlkYXRvci5zZXR0aW5ncy5kZWJ1ZyAmJiB3aW5kb3cuY29uc29sZSApIHtcblx0XHRcdFx0XHRjb25zb2xlLmVycm9yKCBcIiVvIGhhcyBubyBuYW1lIGFzc2lnbmVkXCIsIHRoaXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBmb3JtIGV4cGFuZG8gb24gY29udGVudGVkaXRhYmxlXG5cdFx0XHRcdGlmICggaXNDb250ZW50RWRpdGFibGUgKSB7XG5cdFx0XHRcdFx0dGhpcy5mb3JtID0gJCggdGhpcyApLmNsb3Nlc3QoIFwiZm9ybVwiIClbIDAgXTtcblx0XHRcdFx0XHR0aGlzLm5hbWUgPSBuYW1lO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWdub3JlIGVsZW1lbnRzIHRoYXQgYmVsb25nIHRvIG90aGVyL25lc3RlZCBmb3Jtc1xuXHRcdFx0XHRpZiAoIHRoaXMuZm9ybSAhPT0gdmFsaWRhdG9yLmN1cnJlbnRGb3JtICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNlbGVjdCBvbmx5IHRoZSBmaXJzdCBlbGVtZW50IGZvciBlYWNoIG5hbWUsIGFuZCBvbmx5IHRob3NlIHdpdGggcnVsZXMgc3BlY2lmaWVkXG5cdFx0XHRcdGlmICggbmFtZSBpbiBydWxlc0NhY2hlIHx8ICF2YWxpZGF0b3Iub2JqZWN0TGVuZ3RoKCAkKCB0aGlzICkucnVsZXMoKSApICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJ1bGVzQ2FjaGVbIG5hbWUgXSA9IHRydWU7XG5cdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0fSApO1xuXHRcdH0sXG5cblx0XHRjbGVhbjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuICQoIHNlbGVjdG9yIClbIDAgXTtcblx0XHR9LFxuXG5cdFx0ZXJyb3JzOiBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBlcnJvckNsYXNzID0gdGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLnNwbGl0KCBcIiBcIiApLmpvaW4oIFwiLlwiICk7XG5cdFx0XHRyZXR1cm4gJCggdGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnQgKyBcIi5cIiArIGVycm9yQ2xhc3MsIHRoaXMuZXJyb3JDb250ZXh0ICk7XG5cdFx0fSxcblxuXHRcdHJlc2V0SW50ZXJuYWxzOiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuc3VjY2Vzc0xpc3QgPSBbXTtcblx0XHRcdHRoaXMuZXJyb3JMaXN0ID0gW107XG5cdFx0XHR0aGlzLmVycm9yTWFwID0ge307XG5cdFx0XHR0aGlzLnRvU2hvdyA9ICQoIFtdICk7XG5cdFx0XHR0aGlzLnRvSGlkZSA9ICQoIFtdICk7XG5cdFx0fSxcblxuXHRcdHJlc2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMucmVzZXRJbnRlcm5hbHMoKTtcblx0XHRcdHRoaXMuY3VycmVudEVsZW1lbnRzID0gJCggW10gKTtcblx0XHR9LFxuXG5cdFx0cHJlcGFyZUZvcm06IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5yZXNldCgpO1xuXHRcdFx0dGhpcy50b0hpZGUgPSB0aGlzLmVycm9ycygpLmFkZCggdGhpcy5jb250YWluZXJzICk7XG5cdFx0fSxcblxuXHRcdHByZXBhcmVFbGVtZW50OiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHRcdHRoaXMucmVzZXQoKTtcblx0XHRcdHRoaXMudG9IaWRlID0gdGhpcy5lcnJvcnNGb3IoIGVsZW1lbnQgKTtcblx0XHR9LFxuXG5cdFx0ZWxlbWVudFZhbHVlOiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHRcdHZhciAkZWxlbWVudCA9ICQoIGVsZW1lbnQgKSxcblx0XHRcdFx0dHlwZSA9IGVsZW1lbnQudHlwZSxcblx0XHRcdFx0aXNDb250ZW50RWRpdGFibGUgPSB0eXBlb2YgJGVsZW1lbnQuYXR0ciggXCJjb250ZW50ZWRpdGFibGVcIiApICE9PSBcInVuZGVmaW5lZFwiICYmICRlbGVtZW50LmF0dHIoIFwiY29udGVudGVkaXRhYmxlXCIgKSAhPT0gXCJmYWxzZVwiLFxuXHRcdFx0XHR2YWwsIGlkeDtcblxuXHRcdFx0aWYgKCB0eXBlID09PSBcInJhZGlvXCIgfHwgdHlwZSA9PT0gXCJjaGVja2JveFwiICkge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5maW5kQnlOYW1lKCBlbGVtZW50Lm5hbWUgKS5maWx0ZXIoIFwiOmNoZWNrZWRcIiApLnZhbCgpO1xuXHRcdFx0fSBlbHNlIGlmICggdHlwZSA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgZWxlbWVudC52YWxpZGl0eSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW1lbnQudmFsaWRpdHkuYmFkSW5wdXQgPyBcIk5hTlwiIDogJGVsZW1lbnQudmFsKCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggaXNDb250ZW50RWRpdGFibGUgKSB7XG5cdFx0XHRcdHZhbCA9ICRlbGVtZW50LnRleHQoKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9ICRlbGVtZW50LnZhbCgpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZmlsZVwiICkge1xuXG5cdFx0XHRcdC8vIE1vZGVybiBicm93c2VyIChjaHJvbWUgJiBzYWZhcmkpXG5cdFx0XHRcdGlmICggdmFsLnN1YnN0ciggMCwgMTIgKSA9PT0gXCJDOlxcXFxmYWtlcGF0aFxcXFxcIiApIHtcblx0XHRcdFx0XHRyZXR1cm4gdmFsLnN1YnN0ciggMTIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIExlZ2FjeSBicm93c2Vyc1xuXHRcdFx0XHQvLyBVbml4LWJhc2VkIHBhdGhcblx0XHRcdFx0aWR4ID0gdmFsLmxhc3RJbmRleE9mKCBcIi9cIiApO1xuXHRcdFx0XHRpZiAoIGlkeCA+PSAwICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWwuc3Vic3RyKCBpZHggKyAxICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXaW5kb3dzLWJhc2VkIHBhdGhcblx0XHRcdFx0aWR4ID0gdmFsLmxhc3RJbmRleE9mKCBcIlxcXFxcIiApO1xuXHRcdFx0XHRpZiAoIGlkeCA+PSAwICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWwuc3Vic3RyKCBpZHggKyAxICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBKdXN0IHRoZSBmaWxlIG5hbWVcblx0XHRcdFx0cmV0dXJuIHZhbDtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB0eXBlb2YgdmFsID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHRyZXR1cm4gdmFsLnJlcGxhY2UoIC9cXHIvZywgXCJcIiApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9LFxuXG5cdFx0Y2hlY2s6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdFx0ZWxlbWVudCA9IHRoaXMudmFsaWRhdGlvblRhcmdldEZvciggdGhpcy5jbGVhbiggZWxlbWVudCApICk7XG5cblx0XHRcdHZhciBydWxlcyA9ICQoIGVsZW1lbnQgKS5ydWxlcygpLFxuXHRcdFx0XHRydWxlc0NvdW50ID0gJC5tYXAoIHJ1bGVzLCBmdW5jdGlvbiggbiwgaSApIHtcblx0XHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdFx0fSApLmxlbmd0aCxcblx0XHRcdFx0ZGVwZW5kZW5jeU1pc21hdGNoID0gZmFsc2UsXG5cdFx0XHRcdHZhbCA9IHRoaXMuZWxlbWVudFZhbHVlKCBlbGVtZW50ICksXG5cdFx0XHRcdHJlc3VsdCwgbWV0aG9kLCBydWxlLCBub3JtYWxpemVyO1xuXG5cdFx0XHQvLyBQcmlvcml0aXplIHRoZSBsb2NhbCBub3JtYWxpemVyIGRlZmluZWQgZm9yIHRoaXMgZWxlbWVudCBvdmVyIHRoZSBnbG9iYWwgb25lXG5cdFx0XHQvLyBpZiB0aGUgZm9ybWVyIGV4aXN0cywgb3RoZXJ3aXNlIHVzZXIgdGhlIGdsb2JhbCBvbmUgaW4gY2FzZSBpdCBleGlzdHMuXG5cdFx0XHRpZiAoIHR5cGVvZiBydWxlcy5ub3JtYWxpemVyID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdFx0XHRcdG5vcm1hbGl6ZXIgPSBydWxlcy5ub3JtYWxpemVyO1xuXHRcdFx0fSBlbHNlIGlmIChcdHR5cGVvZiB0aGlzLnNldHRpbmdzLm5vcm1hbGl6ZXIgPT09IFwiZnVuY3Rpb25cIiApIHtcblx0XHRcdFx0bm9ybWFsaXplciA9IHRoaXMuc2V0dGluZ3Mubm9ybWFsaXplcjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgbm9ybWFsaXplciBpcyBkZWZpbmVkLCB0aGVuIGNhbGwgaXQgdG8gcmV0cmVpdmUgdGhlIGNoYW5nZWQgdmFsdWUgaW5zdGVhZFxuXHRcdFx0Ly8gb2YgdXNpbmcgdGhlIHJlYWwgb25lLlxuXHRcdFx0Ly8gTm90ZSB0aGF0IGB0aGlzYCBpbiB0aGUgbm9ybWFsaXplciBpcyBgZWxlbWVudGAuXG5cdFx0XHRpZiAoIG5vcm1hbGl6ZXIgKSB7XG5cdFx0XHRcdHZhbCA9IG5vcm1hbGl6ZXIuY2FsbCggZWxlbWVudCwgdmFsICk7XG5cblx0XHRcdFx0Ly8gRGVsZXRlIHRoZSBub3JtYWxpemVyIGZyb20gcnVsZXMgdG8gYXZvaWQgdHJlYXRpbmcgaXQgYXMgYSBwcmUtZGVmaW5lZCBtZXRob2QuXG5cdFx0XHRcdGRlbGV0ZSBydWxlcy5ub3JtYWxpemVyO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBtZXRob2QgaW4gcnVsZXMgKSB7XG5cdFx0XHRcdHJ1bGUgPSB7IG1ldGhvZDogbWV0aG9kLCBwYXJhbWV0ZXJzOiBydWxlc1sgbWV0aG9kIF0gfTtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRyZXN1bHQgPSAkLnZhbGlkYXRvci5tZXRob2RzWyBtZXRob2QgXS5jYWxsKCB0aGlzLCB2YWwsIGVsZW1lbnQsIHJ1bGUucGFyYW1ldGVycyApO1xuXG5cdFx0XHRcdFx0Ly8gSWYgYSBtZXRob2QgaW5kaWNhdGVzIHRoYXQgdGhlIGZpZWxkIGlzIG9wdGlvbmFsIGFuZCB0aGVyZWZvcmUgdmFsaWQsXG5cdFx0XHRcdFx0Ly8gZG9uJ3QgbWFyayBpdCBhcyB2YWxpZCB3aGVuIHRoZXJlIGFyZSBubyBvdGhlciBydWxlc1xuXHRcdFx0XHRcdGlmICggcmVzdWx0ID09PSBcImRlcGVuZGVuY3ktbWlzbWF0Y2hcIiAmJiBydWxlc0NvdW50ID09PSAxICkge1xuXHRcdFx0XHRcdFx0ZGVwZW5kZW5jeU1pc21hdGNoID0gdHJ1ZTtcblx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRkZXBlbmRlbmN5TWlzbWF0Y2ggPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcmVzdWx0ID09PSBcInBlbmRpbmdcIiApIHtcblx0XHRcdFx0XHRcdHRoaXMudG9IaWRlID0gdGhpcy50b0hpZGUubm90KCB0aGlzLmVycm9yc0ZvciggZWxlbWVudCApICk7XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCAhcmVzdWx0ICkge1xuXHRcdFx0XHRcdFx0dGhpcy5mb3JtYXRBbmRBZGQoIGVsZW1lbnQsIHJ1bGUgKTtcblx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5zZXR0aW5ncy5kZWJ1ZyAmJiB3aW5kb3cuY29uc29sZSApIHtcblx0XHRcdFx0XHRcdGNvbnNvbGUubG9nKCBcIkV4Y2VwdGlvbiBvY2N1cnJlZCB3aGVuIGNoZWNraW5nIGVsZW1lbnQgXCIgKyBlbGVtZW50LmlkICsgXCIsIGNoZWNrIHRoZSAnXCIgKyBydWxlLm1ldGhvZCArIFwiJyBtZXRob2QuXCIsIGUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBlIGluc3RhbmNlb2YgVHlwZUVycm9yICkge1xuXHRcdFx0XHRcdFx0ZS5tZXNzYWdlICs9IFwiLiAgRXhjZXB0aW9uIG9jY3VycmVkIHdoZW4gY2hlY2tpbmcgZWxlbWVudCBcIiArIGVsZW1lbnQuaWQgKyBcIiwgY2hlY2sgdGhlICdcIiArIHJ1bGUubWV0aG9kICsgXCInIG1ldGhvZC5cIjtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGRlcGVuZGVuY3lNaXNtYXRjaCApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCB0aGlzLm9iamVjdExlbmd0aCggcnVsZXMgKSApIHtcblx0XHRcdFx0dGhpcy5zdWNjZXNzTGlzdC5wdXNoKCBlbGVtZW50ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0Ly8gUmV0dXJuIHRoZSBjdXN0b20gbWVzc2FnZSBmb3IgdGhlIGdpdmVuIGVsZW1lbnQgYW5kIHZhbGlkYXRpb24gbWV0aG9kXG5cdFx0Ly8gc3BlY2lmaWVkIGluIHRoZSBlbGVtZW50J3MgSFRNTDUgZGF0YSBhdHRyaWJ1dGVcblx0XHQvLyByZXR1cm4gdGhlIGdlbmVyaWMgbWVzc2FnZSBpZiBwcmVzZW50IGFuZCBubyBtZXRob2Qgc3BlY2lmaWMgbWVzc2FnZSBpcyBwcmVzZW50XG5cdFx0Y3VzdG9tRGF0YU1lc3NhZ2U6IGZ1bmN0aW9uKCBlbGVtZW50LCBtZXRob2QgKSB7XG5cdFx0XHRyZXR1cm4gJCggZWxlbWVudCApLmRhdGEoIFwibXNnXCIgKyBtZXRob2QuY2hhckF0KCAwICkudG9VcHBlckNhc2UoKSArXG5cdFx0XHRcdG1ldGhvZC5zdWJzdHJpbmcoIDEgKS50b0xvd2VyQ2FzZSgpICkgfHwgJCggZWxlbWVudCApLmRhdGEoIFwibXNnXCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUmV0dXJuIHRoZSBjdXN0b20gbWVzc2FnZSBmb3IgdGhlIGdpdmVuIGVsZW1lbnQgbmFtZSBhbmQgdmFsaWRhdGlvbiBtZXRob2Rcblx0XHRjdXN0b21NZXNzYWdlOiBmdW5jdGlvbiggbmFtZSwgbWV0aG9kICkge1xuXHRcdFx0dmFyIG0gPSB0aGlzLnNldHRpbmdzLm1lc3NhZ2VzWyBuYW1lIF07XG5cdFx0XHRyZXR1cm4gbSAmJiAoIG0uY29uc3RydWN0b3IgPT09IFN0cmluZyA/IG0gOiBtWyBtZXRob2QgXSApO1xuXHRcdH0sXG5cblx0XHQvLyBSZXR1cm4gdGhlIGZpcnN0IGRlZmluZWQgYXJndW1lbnQsIGFsbG93aW5nIGVtcHR5IHN0cmluZ3Ncblx0XHRmaW5kRGVmaW5lZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRmb3IgKCB2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggYXJndW1lbnRzWyBpIF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gYXJndW1lbnRzWyBpIF07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdFx0fSxcblxuXHRcdC8vIFRoZSBzZWNvbmQgcGFyYW1ldGVyICdydWxlJyB1c2VkIHRvIGJlIGEgc3RyaW5nLCBhbmQgZXh0ZW5kZWQgdG8gYW4gb2JqZWN0IGxpdGVyYWxcblx0XHQvLyBvZiB0aGUgZm9sbG93aW5nIGZvcm06XG5cdFx0Ly8gcnVsZSA9IHtcblx0XHQvLyAgICAgbWV0aG9kOiBcIm1ldGhvZCBuYW1lXCIsXG5cdFx0Ly8gICAgIHBhcmFtZXRlcnM6IFwidGhlIGdpdmVuIG1ldGhvZCBwYXJhbWV0ZXJzXCJcblx0XHQvLyB9XG5cdFx0Ly9cblx0XHQvLyBUaGUgb2xkIGJlaGF2aW9yIHN0aWxsIHN1cHBvcnRlZCwga2VwdCB0byBtYWludGFpbiBiYWNrd2FyZCBjb21wYXRpYmlsaXR5IHdpdGhcblx0XHQvLyBvbGQgY29kZSwgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlLlxuXHRcdGRlZmF1bHRNZXNzYWdlOiBmdW5jdGlvbiggZWxlbWVudCwgcnVsZSApIHtcblx0XHRcdGlmICggdHlwZW9mIHJ1bGUgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdHJ1bGUgPSB7IG1ldGhvZDogcnVsZSB9O1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgbWVzc2FnZSA9IHRoaXMuZmluZERlZmluZWQoXG5cdFx0XHRcdFx0dGhpcy5jdXN0b21NZXNzYWdlKCBlbGVtZW50Lm5hbWUsIHJ1bGUubWV0aG9kICksXG5cdFx0XHRcdFx0dGhpcy5jdXN0b21EYXRhTWVzc2FnZSggZWxlbWVudCwgcnVsZS5tZXRob2QgKSxcblxuXHRcdFx0XHRcdC8vICd0aXRsZScgaXMgbmV2ZXIgdW5kZWZpbmVkLCBzbyBoYW5kbGUgZW1wdHkgc3RyaW5nIGFzIHVuZGVmaW5lZFxuXHRcdFx0XHRcdCF0aGlzLnNldHRpbmdzLmlnbm9yZVRpdGxlICYmIGVsZW1lbnQudGl0bGUgfHwgdW5kZWZpbmVkLFxuXHRcdFx0XHRcdCQudmFsaWRhdG9yLm1lc3NhZ2VzWyBydWxlLm1ldGhvZCBdLFxuXHRcdFx0XHRcdFwiPHN0cm9uZz5XYXJuaW5nOiBObyBtZXNzYWdlIGRlZmluZWQgZm9yIFwiICsgZWxlbWVudC5uYW1lICsgXCI8L3N0cm9uZz5cIlxuXHRcdFx0XHQpLFxuXHRcdFx0XHR0aGVyZWdleCA9IC9cXCQ/XFx7KFxcZCspXFx9L2c7XG5cdFx0XHRpZiAoIHR5cGVvZiBtZXNzYWdlID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdFx0XHRcdG1lc3NhZ2UgPSBtZXNzYWdlLmNhbGwoIHRoaXMsIHJ1bGUucGFyYW1ldGVycywgZWxlbWVudCApO1xuXHRcdFx0fSBlbHNlIGlmICggdGhlcmVnZXgudGVzdCggbWVzc2FnZSApICkge1xuXHRcdFx0XHRtZXNzYWdlID0gJC52YWxpZGF0b3IuZm9ybWF0KCBtZXNzYWdlLnJlcGxhY2UoIHRoZXJlZ2V4LCBcInskMX1cIiApLCBydWxlLnBhcmFtZXRlcnMgKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1lc3NhZ2U7XG5cdFx0fSxcblxuXHRcdGZvcm1hdEFuZEFkZDogZnVuY3Rpb24oIGVsZW1lbnQsIHJ1bGUgKSB7XG5cdFx0XHR2YXIgbWVzc2FnZSA9IHRoaXMuZGVmYXVsdE1lc3NhZ2UoIGVsZW1lbnQsIHJ1bGUgKTtcblxuXHRcdFx0dGhpcy5lcnJvckxpc3QucHVzaCgge1xuXHRcdFx0XHRtZXNzYWdlOiBtZXNzYWdlLFxuXHRcdFx0XHRlbGVtZW50OiBlbGVtZW50LFxuXHRcdFx0XHRtZXRob2Q6IHJ1bGUubWV0aG9kXG5cdFx0XHR9ICk7XG5cblx0XHRcdHRoaXMuZXJyb3JNYXBbIGVsZW1lbnQubmFtZSBdID0gbWVzc2FnZTtcblx0XHRcdHRoaXMuc3VibWl0dGVkWyBlbGVtZW50Lm5hbWUgXSA9IG1lc3NhZ2U7XG5cdFx0fSxcblxuXHRcdGFkZFdyYXBwZXI6IGZ1bmN0aW9uKCB0b1RvZ2dsZSApIHtcblx0XHRcdGlmICggdGhpcy5zZXR0aW5ncy53cmFwcGVyICkge1xuXHRcdFx0XHR0b1RvZ2dsZSA9IHRvVG9nZ2xlLmFkZCggdG9Ub2dnbGUucGFyZW50KCB0aGlzLnNldHRpbmdzLndyYXBwZXIgKSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRvVG9nZ2xlO1xuXHRcdH0sXG5cblx0XHRkZWZhdWx0U2hvd0Vycm9yczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaSwgZWxlbWVudHMsIGVycm9yO1xuXHRcdFx0Zm9yICggaSA9IDA7IHRoaXMuZXJyb3JMaXN0WyBpIF07IGkrKyApIHtcblx0XHRcdFx0ZXJyb3IgPSB0aGlzLmVycm9yTGlzdFsgaSBdO1xuXHRcdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3MuaGlnaGxpZ2h0ICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3MuaGlnaGxpZ2h0LmNhbGwoIHRoaXMsIGVycm9yLmVsZW1lbnQsIHRoaXMuc2V0dGluZ3MuZXJyb3JDbGFzcywgdGhpcy5zZXR0aW5ncy52YWxpZENsYXNzICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGhpcy5zaG93TGFiZWwoIGVycm9yLmVsZW1lbnQsIGVycm9yLm1lc3NhZ2UgKTtcblx0XHRcdH1cblx0XHRcdGlmICggdGhpcy5lcnJvckxpc3QubGVuZ3RoICkge1xuXHRcdFx0XHR0aGlzLnRvU2hvdyA9IHRoaXMudG9TaG93LmFkZCggdGhpcy5jb250YWluZXJzICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3Muc3VjY2VzcyApIHtcblx0XHRcdFx0Zm9yICggaSA9IDA7IHRoaXMuc3VjY2Vzc0xpc3RbIGkgXTsgaSsrICkge1xuXHRcdFx0XHRcdHRoaXMuc2hvd0xhYmVsKCB0aGlzLnN1Y2Nlc3NMaXN0WyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCB0aGlzLnNldHRpbmdzLnVuaGlnaGxpZ2h0ICkge1xuXHRcdFx0XHRmb3IgKCBpID0gMCwgZWxlbWVudHMgPSB0aGlzLnZhbGlkRWxlbWVudHMoKTsgZWxlbWVudHNbIGkgXTsgaSsrICkge1xuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3MudW5oaWdobGlnaHQuY2FsbCggdGhpcywgZWxlbWVudHNbIGkgXSwgdGhpcy5zZXR0aW5ncy5lcnJvckNsYXNzLCB0aGlzLnNldHRpbmdzLnZhbGlkQ2xhc3MgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0dGhpcy50b0hpZGUgPSB0aGlzLnRvSGlkZS5ub3QoIHRoaXMudG9TaG93ICk7XG5cdFx0XHR0aGlzLmhpZGVFcnJvcnMoKTtcblx0XHRcdHRoaXMuYWRkV3JhcHBlciggdGhpcy50b1Nob3cgKS5zaG93KCk7XG5cdFx0fSxcblxuXHRcdHZhbGlkRWxlbWVudHM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMuY3VycmVudEVsZW1lbnRzLm5vdCggdGhpcy5pbnZhbGlkRWxlbWVudHMoKSApO1xuXHRcdH0sXG5cblx0XHRpbnZhbGlkRWxlbWVudHM6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuICQoIHRoaXMuZXJyb3JMaXN0ICkubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuZWxlbWVudDtcblx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0c2hvd0xhYmVsOiBmdW5jdGlvbiggZWxlbWVudCwgbWVzc2FnZSApIHtcblx0XHRcdHZhciBwbGFjZSwgZ3JvdXAsIGVycm9ySUQsIHYsXG5cdFx0XHRcdGVycm9yID0gdGhpcy5lcnJvcnNGb3IoIGVsZW1lbnQgKSxcblx0XHRcdFx0ZWxlbWVudElEID0gdGhpcy5pZE9yTmFtZSggZWxlbWVudCApLFxuXHRcdFx0XHRkZXNjcmliZWRCeSA9ICQoIGVsZW1lbnQgKS5hdHRyKCBcImFyaWEtZGVzY3JpYmVkYnlcIiApO1xuXG5cdFx0XHRpZiAoIGVycm9yLmxlbmd0aCApIHtcblxuXHRcdFx0XHQvLyBSZWZyZXNoIGVycm9yL3N1Y2Nlc3MgY2xhc3Ncblx0XHRcdFx0ZXJyb3IucmVtb3ZlQ2xhc3MoIHRoaXMuc2V0dGluZ3MudmFsaWRDbGFzcyApLmFkZENsYXNzKCB0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MgKTtcblxuXHRcdFx0XHQvLyBSZXBsYWNlIG1lc3NhZ2Ugb24gZXhpc3RpbmcgbGFiZWxcblx0XHRcdFx0ZXJyb3IuaHRtbCggbWVzc2FnZSApO1xuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBDcmVhdGUgZXJyb3IgZWxlbWVudFxuXHRcdFx0XHRlcnJvciA9ICQoIFwiPFwiICsgdGhpcy5zZXR0aW5ncy5lcnJvckVsZW1lbnQgKyBcIj5cIiApXG5cdFx0XHRcdFx0LmF0dHIoIFwiaWRcIiwgZWxlbWVudElEICsgXCItZXJyb3JcIiApXG5cdFx0XHRcdFx0LmFkZENsYXNzKCB0aGlzLnNldHRpbmdzLmVycm9yQ2xhc3MgKVxuXHRcdFx0XHRcdC5odG1sKCBtZXNzYWdlIHx8IFwiXCIgKTtcblxuXHRcdFx0XHQvLyBNYWludGFpbiByZWZlcmVuY2UgdG8gdGhlIGVsZW1lbnQgdG8gYmUgcGxhY2VkIGludG8gdGhlIERPTVxuXHRcdFx0XHRwbGFjZSA9IGVycm9yO1xuXHRcdFx0XHRpZiAoIHRoaXMuc2V0dGluZ3Mud3JhcHBlciApIHtcblxuXHRcdFx0XHRcdC8vIE1ha2Ugc3VyZSB0aGUgZWxlbWVudCBpcyB2aXNpYmxlLCBldmVuIGluIElFXG5cdFx0XHRcdFx0Ly8gYWN0dWFsbHkgc2hvd2luZyB0aGUgd3JhcHBlZCBlbGVtZW50IGlzIGhhbmRsZWQgZWxzZXdoZXJlXG5cdFx0XHRcdFx0cGxhY2UgPSBlcnJvci5oaWRlKCkuc2hvdygpLndyYXAoIFwiPFwiICsgdGhpcy5zZXR0aW5ncy53cmFwcGVyICsgXCIvPlwiICkucGFyZW50KCk7XG5cdFx0XHRcdH1cblx0XHRcdFx0aWYgKCB0aGlzLmxhYmVsQ29udGFpbmVyLmxlbmd0aCApIHtcblx0XHRcdFx0XHR0aGlzLmxhYmVsQ29udGFpbmVyLmFwcGVuZCggcGxhY2UgKTtcblx0XHRcdFx0fSBlbHNlIGlmICggdGhpcy5zZXR0aW5ncy5lcnJvclBsYWNlbWVudCApIHtcblx0XHRcdFx0XHR0aGlzLnNldHRpbmdzLmVycm9yUGxhY2VtZW50LmNhbGwoIHRoaXMsIHBsYWNlLCAkKCBlbGVtZW50ICkgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwbGFjZS5pbnNlcnRBZnRlciggZWxlbWVudCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gTGluayBlcnJvciBiYWNrIHRvIHRoZSBlbGVtZW50XG5cdFx0XHRcdGlmICggZXJyb3IuaXMoIFwibGFiZWxcIiApICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgdGhlIGVycm9yIGlzIGEgbGFiZWwsIHRoZW4gYXNzb2NpYXRlIHVzaW5nICdmb3InXG5cdFx0XHRcdFx0ZXJyb3IuYXR0ciggXCJmb3JcIiwgZWxlbWVudElEICk7XG5cblx0XHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBpcyBub3QgYSBjaGlsZCBvZiBhbiBhc3NvY2lhdGVkIGxhYmVsLCB0aGVuIGl0J3MgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0Ly8gdG8gZXhwbGljaXRseSBhcHBseSBhcmlhLWRlc2NyaWJlZGJ5XG5cdFx0XHRcdH0gZWxzZSBpZiAoIGVycm9yLnBhcmVudHMoIFwibGFiZWxbZm9yPSdcIiArIHRoaXMuZXNjYXBlQ3NzTWV0YSggZWxlbWVudElEICkgKyBcIiddXCIgKS5sZW5ndGggPT09IDAgKSB7XG5cdFx0XHRcdFx0ZXJyb3JJRCA9IGVycm9yLmF0dHIoIFwiaWRcIiApO1xuXG5cdFx0XHRcdFx0Ly8gUmVzcGVjdCBleGlzdGluZyBub24tZXJyb3IgYXJpYS1kZXNjcmliZWRieVxuXHRcdFx0XHRcdGlmICggIWRlc2NyaWJlZEJ5ICkge1xuXHRcdFx0XHRcdFx0ZGVzY3JpYmVkQnkgPSBlcnJvcklEO1xuXHRcdFx0XHRcdH0gZWxzZSBpZiAoICFkZXNjcmliZWRCeS5tYXRjaCggbmV3IFJlZ0V4cCggXCJcXFxcYlwiICsgdGhpcy5lc2NhcGVDc3NNZXRhKCBlcnJvcklEICkgKyBcIlxcXFxiXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBBZGQgdG8gZW5kIG9mIGxpc3QgaWYgbm90IGFscmVhZHkgcHJlc2VudFxuXHRcdFx0XHRcdFx0ZGVzY3JpYmVkQnkgKz0gXCIgXCIgKyBlcnJvcklEO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQkKCBlbGVtZW50ICkuYXR0ciggXCJhcmlhLWRlc2NyaWJlZGJ5XCIsIGRlc2NyaWJlZEJ5ICk7XG5cblx0XHRcdFx0XHQvLyBJZiB0aGlzIGVsZW1lbnQgaXMgZ3JvdXBlZCwgdGhlbiBhc3NpZ24gdG8gYWxsIGVsZW1lbnRzIGluIHRoZSBzYW1lIGdyb3VwXG5cdFx0XHRcdFx0Z3JvdXAgPSB0aGlzLmdyb3Vwc1sgZWxlbWVudC5uYW1lIF07XG5cdFx0XHRcdFx0aWYgKCBncm91cCApIHtcblx0XHRcdFx0XHRcdHYgPSB0aGlzO1xuXHRcdFx0XHRcdFx0JC5lYWNoKCB2Lmdyb3VwcywgZnVuY3Rpb24oIG5hbWUsIHRlc3Rncm91cCApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCB0ZXN0Z3JvdXAgPT09IGdyb3VwICkge1xuXHRcdFx0XHRcdFx0XHRcdCQoIFwiW25hbWU9J1wiICsgdi5lc2NhcGVDc3NNZXRhKCBuYW1lICkgKyBcIiddXCIsIHYuY3VycmVudEZvcm0gKVxuXHRcdFx0XHRcdFx0XHRcdFx0LmF0dHIoIFwiYXJpYS1kZXNjcmliZWRieVwiLCBlcnJvci5hdHRyKCBcImlkXCIgKSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFtZXNzYWdlICYmIHRoaXMuc2V0dGluZ3Muc3VjY2VzcyApIHtcblx0XHRcdFx0ZXJyb3IudGV4dCggXCJcIiApO1xuXHRcdFx0XHRpZiAoIHR5cGVvZiB0aGlzLnNldHRpbmdzLnN1Y2Nlc3MgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0ZXJyb3IuYWRkQ2xhc3MoIHRoaXMuc2V0dGluZ3Muc3VjY2VzcyApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHRoaXMuc2V0dGluZ3Muc3VjY2VzcyggZXJyb3IsIGVsZW1lbnQgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0dGhpcy50b1Nob3cgPSB0aGlzLnRvU2hvdy5hZGQoIGVycm9yICk7XG5cdFx0fSxcblxuXHRcdGVycm9yc0ZvcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7XG5cdFx0XHR2YXIgbmFtZSA9IHRoaXMuZXNjYXBlQ3NzTWV0YSggdGhpcy5pZE9yTmFtZSggZWxlbWVudCApICksXG5cdFx0XHRcdGRlc2NyaWJlciA9ICQoIGVsZW1lbnQgKS5hdHRyKCBcImFyaWEtZGVzY3JpYmVkYnlcIiApLFxuXHRcdFx0XHRzZWxlY3RvciA9IFwibGFiZWxbZm9yPSdcIiArIG5hbWUgKyBcIiddLCBsYWJlbFtmb3I9J1wiICsgbmFtZSArIFwiJ10gKlwiO1xuXG5cdFx0XHQvLyAnYXJpYS1kZXNjcmliZWRieScgc2hvdWxkIGRpcmVjdGx5IHJlZmVyZW5jZSB0aGUgZXJyb3IgZWxlbWVudFxuXHRcdFx0aWYgKCBkZXNjcmliZXIgKSB7XG5cdFx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3IgKyBcIiwgI1wiICsgdGhpcy5lc2NhcGVDc3NNZXRhKCBkZXNjcmliZXIgKVxuXHRcdFx0XHRcdC5yZXBsYWNlKCAvXFxzKy9nLCBcIiwgI1wiICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB0aGlzXG5cdFx0XHRcdC5lcnJvcnMoKVxuXHRcdFx0XHQuZmlsdGVyKCBzZWxlY3RvciApO1xuXHRcdH0sXG5cblx0XHQvLyBTZWUgaHR0cHM6Ly9hcGkuanF1ZXJ5LmNvbS9jYXRlZ29yeS9zZWxlY3RvcnMvLCBmb3IgQ1NTXG5cdFx0Ly8gbWV0YS1jaGFyYWN0ZXJzIHRoYXQgc2hvdWxkIGJlIGVzY2FwZWQgaW4gb3JkZXIgdG8gYmUgdXNlZCB3aXRoIEpRdWVyeVxuXHRcdC8vIGFzIGEgbGl0ZXJhbCBwYXJ0IG9mIGEgbmFtZS9pZCBvciBhbnkgc2VsZWN0b3IuXG5cdFx0ZXNjYXBlQ3NzTWV0YTogZnVuY3Rpb24oIHN0cmluZyApIHtcblx0XHRcdHJldHVybiBzdHJpbmcucmVwbGFjZSggLyhbXFxcXCFcIiMkJSYnKCkqKywuLzo7PD0+P0BcXFtcXF1eYHt8fX5dKS9nLCBcIlxcXFwkMVwiICk7XG5cdFx0fSxcblxuXHRcdGlkT3JOYW1lOiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHRcdHJldHVybiB0aGlzLmdyb3Vwc1sgZWxlbWVudC5uYW1lIF0gfHwgKCB0aGlzLmNoZWNrYWJsZSggZWxlbWVudCApID8gZWxlbWVudC5uYW1lIDogZWxlbWVudC5pZCB8fCBlbGVtZW50Lm5hbWUgKTtcblx0XHR9LFxuXG5cdFx0dmFsaWRhdGlvblRhcmdldEZvcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7XG5cblx0XHRcdC8vIElmIHJhZGlvL2NoZWNrYm94LCB2YWxpZGF0ZSBmaXJzdCBlbGVtZW50IGluIGdyb3VwIGluc3RlYWRcblx0XHRcdGlmICggdGhpcy5jaGVja2FibGUoIGVsZW1lbnQgKSApIHtcblx0XHRcdFx0ZWxlbWVudCA9IHRoaXMuZmluZEJ5TmFtZSggZWxlbWVudC5uYW1lICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFsd2F5cyBhcHBseSBpZ25vcmUgZmlsdGVyXG5cdFx0XHRyZXR1cm4gJCggZWxlbWVudCApLm5vdCggdGhpcy5zZXR0aW5ncy5pZ25vcmUgKVsgMCBdO1xuXHRcdH0sXG5cblx0XHRjaGVja2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdFx0cmV0dXJuICggL3JhZGlvfGNoZWNrYm94L2kgKS50ZXN0KCBlbGVtZW50LnR5cGUgKTtcblx0XHR9LFxuXG5cdFx0ZmluZEJ5TmFtZTogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0XHRyZXR1cm4gJCggdGhpcy5jdXJyZW50Rm9ybSApLmZpbmQoIFwiW25hbWU9J1wiICsgdGhpcy5lc2NhcGVDc3NNZXRhKCBuYW1lICkgKyBcIiddXCIgKTtcblx0XHR9LFxuXG5cdFx0Z2V0TGVuZ3RoOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQgKSB7XG5cdFx0XHRzd2l0Y2ggKCBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgKSB7XG5cdFx0XHRjYXNlIFwic2VsZWN0XCI6XG5cdFx0XHRcdHJldHVybiAkKCBcIm9wdGlvbjpzZWxlY3RlZFwiLCBlbGVtZW50ICkubGVuZ3RoO1xuXHRcdFx0Y2FzZSBcImlucHV0XCI6XG5cdFx0XHRcdGlmICggdGhpcy5jaGVja2FibGUoIGVsZW1lbnQgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcy5maW5kQnlOYW1lKCBlbGVtZW50Lm5hbWUgKS5maWx0ZXIoIFwiOmNoZWNrZWRcIiApLmxlbmd0aDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHZhbHVlLmxlbmd0aDtcblx0XHR9LFxuXG5cdFx0ZGVwZW5kOiBmdW5jdGlvbiggcGFyYW0sIGVsZW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5kZXBlbmRUeXBlc1sgdHlwZW9mIHBhcmFtIF0gPyB0aGlzLmRlcGVuZFR5cGVzWyB0eXBlb2YgcGFyYW0gXSggcGFyYW0sIGVsZW1lbnQgKSA6IHRydWU7XG5cdFx0fSxcblxuXHRcdGRlcGVuZFR5cGVzOiB7XG5cdFx0XHRcImJvb2xlYW5cIjogZnVuY3Rpb24oIHBhcmFtICkge1xuXHRcdFx0XHRyZXR1cm4gcGFyYW07XG5cdFx0XHR9LFxuXHRcdFx0XCJzdHJpbmdcIjogZnVuY3Rpb24oIHBhcmFtLCBlbGVtZW50ICkge1xuXHRcdFx0XHRyZXR1cm4gISEkKCBwYXJhbSwgZWxlbWVudC5mb3JtICkubGVuZ3RoO1xuXHRcdFx0fSxcblx0XHRcdFwiZnVuY3Rpb25cIjogZnVuY3Rpb24oIHBhcmFtLCBlbGVtZW50ICkge1xuXHRcdFx0XHRyZXR1cm4gcGFyYW0oIGVsZW1lbnQgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0b3B0aW9uYWw6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdFx0dmFyIHZhbCA9IHRoaXMuZWxlbWVudFZhbHVlKCBlbGVtZW50ICk7XG5cdFx0XHRyZXR1cm4gISQudmFsaWRhdG9yLm1ldGhvZHMucmVxdWlyZWQuY2FsbCggdGhpcywgdmFsLCBlbGVtZW50ICkgJiYgXCJkZXBlbmRlbmN5LW1pc21hdGNoXCI7XG5cdFx0fSxcblxuXHRcdHN0YXJ0UmVxdWVzdDogZnVuY3Rpb24oIGVsZW1lbnQgKSB7XG5cdFx0XHRpZiAoICF0aGlzLnBlbmRpbmdbIGVsZW1lbnQubmFtZSBdICkge1xuXHRcdFx0XHR0aGlzLnBlbmRpbmdSZXF1ZXN0Kys7XG5cdFx0XHRcdCQoIGVsZW1lbnQgKS5hZGRDbGFzcyggdGhpcy5zZXR0aW5ncy5wZW5kaW5nQ2xhc3MgKTtcblx0XHRcdFx0dGhpcy5wZW5kaW5nWyBlbGVtZW50Lm5hbWUgXSA9IHRydWU7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHN0b3BSZXF1ZXN0OiBmdW5jdGlvbiggZWxlbWVudCwgdmFsaWQgKSB7XG5cdFx0XHR0aGlzLnBlbmRpbmdSZXF1ZXN0LS07XG5cblx0XHRcdC8vIFNvbWV0aW1lcyBzeW5jaHJvbml6YXRpb24gZmFpbHMsIG1ha2Ugc3VyZSBwZW5kaW5nUmVxdWVzdCBpcyBuZXZlciA8IDBcblx0XHRcdGlmICggdGhpcy5wZW5kaW5nUmVxdWVzdCA8IDAgKSB7XG5cdFx0XHRcdHRoaXMucGVuZGluZ1JlcXVlc3QgPSAwO1xuXHRcdFx0fVxuXHRcdFx0ZGVsZXRlIHRoaXMucGVuZGluZ1sgZWxlbWVudC5uYW1lIF07XG5cdFx0XHQkKCBlbGVtZW50ICkucmVtb3ZlQ2xhc3MoIHRoaXMuc2V0dGluZ3MucGVuZGluZ0NsYXNzICk7XG5cdFx0XHRpZiAoIHZhbGlkICYmIHRoaXMucGVuZGluZ1JlcXVlc3QgPT09IDAgJiYgdGhpcy5mb3JtU3VibWl0dGVkICYmIHRoaXMuZm9ybSgpICkge1xuXHRcdFx0XHQkKCB0aGlzLmN1cnJlbnRGb3JtICkuc3VibWl0KCk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIHRoZSBoaWRkZW4gaW5wdXQgdGhhdCB3YXMgdXNlZCBhcyBhIHJlcGxhY2VtZW50IGZvciB0aGVcblx0XHRcdFx0Ly8gbWlzc2luZyBzdWJtaXQgYnV0dG9uLiBUaGUgaGlkZGVuIGlucHV0IGlzIGFkZGVkIGJ5IGBoYW5kbGUoKWBcblx0XHRcdFx0Ly8gdG8gZW5zdXJlIHRoYXQgdGhlIHZhbHVlIG9mIHRoZSB1c2VkIHN1Ym1pdCBidXR0b24gaXMgcGFzc2VkIG9uXG5cdFx0XHRcdC8vIGZvciBzY3JpcHRlZCBzdWJtaXRzIHRyaWdnZXJlZCBieSB0aGlzIG1ldGhvZFxuXHRcdFx0XHRpZiAoIHRoaXMuc3VibWl0QnV0dG9uICkge1xuXHRcdFx0XHRcdCQoIFwiaW5wdXQ6aGlkZGVuW25hbWU9J1wiICsgdGhpcy5zdWJtaXRCdXR0b24ubmFtZSArIFwiJ11cIiwgdGhpcy5jdXJyZW50Rm9ybSApLnJlbW92ZSgpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dGhpcy5mb3JtU3VibWl0dGVkID0gZmFsc2U7XG5cdFx0XHR9IGVsc2UgaWYgKCAhdmFsaWQgJiYgdGhpcy5wZW5kaW5nUmVxdWVzdCA9PT0gMCAmJiB0aGlzLmZvcm1TdWJtaXR0ZWQgKSB7XG5cdFx0XHRcdCQoIHRoaXMuY3VycmVudEZvcm0gKS50cmlnZ2VySGFuZGxlciggXCJpbnZhbGlkLWZvcm1cIiwgWyB0aGlzIF0gKTtcblx0XHRcdFx0dGhpcy5mb3JtU3VibWl0dGVkID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHByZXZpb3VzVmFsdWU6IGZ1bmN0aW9uKCBlbGVtZW50LCBtZXRob2QgKSB7XG5cdFx0XHRtZXRob2QgPSB0eXBlb2YgbWV0aG9kID09PSBcInN0cmluZ1wiICYmIG1ldGhvZCB8fCBcInJlbW90ZVwiO1xuXG5cdFx0XHRyZXR1cm4gJC5kYXRhKCBlbGVtZW50LCBcInByZXZpb3VzVmFsdWVcIiApIHx8ICQuZGF0YSggZWxlbWVudCwgXCJwcmV2aW91c1ZhbHVlXCIsIHtcblx0XHRcdFx0b2xkOiBudWxsLFxuXHRcdFx0XHR2YWxpZDogdHJ1ZSxcblx0XHRcdFx0bWVzc2FnZTogdGhpcy5kZWZhdWx0TWVzc2FnZSggZWxlbWVudCwgeyBtZXRob2Q6IG1ldGhvZCB9IClcblx0XHRcdH0gKTtcblx0XHR9LFxuXG5cdFx0Ly8gQ2xlYW5zIHVwIGFsbCBmb3JtcyBhbmQgZWxlbWVudHMsIHJlbW92ZXMgdmFsaWRhdG9yLXNwZWNpZmljIGV2ZW50c1xuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuXHRcdFx0dGhpcy5yZXNldEZvcm0oKTtcblxuXHRcdFx0JCggdGhpcy5jdXJyZW50Rm9ybSApXG5cdFx0XHRcdC5vZmYoIFwiLnZhbGlkYXRlXCIgKVxuXHRcdFx0XHQucmVtb3ZlRGF0YSggXCJ2YWxpZGF0b3JcIiApXG5cdFx0XHRcdC5maW5kKCBcIi52YWxpZGF0ZS1lcXVhbFRvLWJsdXJcIiApXG5cdFx0XHRcdFx0Lm9mZiggXCIudmFsaWRhdGUtZXF1YWxUb1wiIClcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoIFwidmFsaWRhdGUtZXF1YWxUby1ibHVyXCIgKVxuXHRcdFx0XHQuZmluZCggXCIudmFsaWRhdGUtbGVzc1RoYW4tYmx1clwiIClcblx0XHRcdFx0XHQub2ZmKCBcIi52YWxpZGF0ZS1sZXNzVGhhblwiIClcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoIFwidmFsaWRhdGUtbGVzc1RoYW4tYmx1clwiIClcblx0XHRcdFx0LmZpbmQoIFwiLnZhbGlkYXRlLWxlc3NUaGFuRXF1YWwtYmx1clwiIClcblx0XHRcdFx0XHQub2ZmKCBcIi52YWxpZGF0ZS1sZXNzVGhhbkVxdWFsXCIgKVxuXHRcdFx0XHRcdC5yZW1vdmVDbGFzcyggXCJ2YWxpZGF0ZS1sZXNzVGhhbkVxdWFsLWJsdXJcIiApXG5cdFx0XHRcdC5maW5kKCBcIi52YWxpZGF0ZS1ncmVhdGVyVGhhbkVxdWFsLWJsdXJcIiApXG5cdFx0XHRcdFx0Lm9mZiggXCIudmFsaWRhdGUtZ3JlYXRlclRoYW5FcXVhbFwiIClcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoIFwidmFsaWRhdGUtZ3JlYXRlclRoYW5FcXVhbC1ibHVyXCIgKVxuXHRcdFx0XHQuZmluZCggXCIudmFsaWRhdGUtZ3JlYXRlclRoYW4tYmx1clwiIClcblx0XHRcdFx0XHQub2ZmKCBcIi52YWxpZGF0ZS1ncmVhdGVyVGhhblwiIClcblx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoIFwidmFsaWRhdGUtZ3JlYXRlclRoYW4tYmx1clwiICk7XG5cdFx0fVxuXG5cdH0sXG5cblx0Y2xhc3NSdWxlU2V0dGluZ3M6IHtcblx0XHRyZXF1aXJlZDogeyByZXF1aXJlZDogdHJ1ZSB9LFxuXHRcdGVtYWlsOiB7IGVtYWlsOiB0cnVlIH0sXG5cdFx0dXJsOiB7IHVybDogdHJ1ZSB9LFxuXHRcdGRhdGU6IHsgZGF0ZTogdHJ1ZSB9LFxuXHRcdGRhdGVJU086IHsgZGF0ZUlTTzogdHJ1ZSB9LFxuXHRcdG51bWJlcjogeyBudW1iZXI6IHRydWUgfSxcblx0XHRkaWdpdHM6IHsgZGlnaXRzOiB0cnVlIH0sXG5cdFx0Y3JlZGl0Y2FyZDogeyBjcmVkaXRjYXJkOiB0cnVlIH1cblx0fSxcblxuXHRhZGRDbGFzc1J1bGVzOiBmdW5jdGlvbiggY2xhc3NOYW1lLCBydWxlcyApIHtcblx0XHRpZiAoIGNsYXNzTmFtZS5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nICkge1xuXHRcdFx0dGhpcy5jbGFzc1J1bGVTZXR0aW5nc1sgY2xhc3NOYW1lIF0gPSBydWxlcztcblx0XHR9IGVsc2Uge1xuXHRcdFx0JC5leHRlbmQoIHRoaXMuY2xhc3NSdWxlU2V0dGluZ3MsIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fSxcblxuXHRjbGFzc1J1bGVzOiBmdW5jdGlvbiggZWxlbWVudCApIHtcblx0XHR2YXIgcnVsZXMgPSB7fSxcblx0XHRcdGNsYXNzZXMgPSAkKCBlbGVtZW50ICkuYXR0ciggXCJjbGFzc1wiICk7XG5cblx0XHRpZiAoIGNsYXNzZXMgKSB7XG5cdFx0XHQkLmVhY2goIGNsYXNzZXMuc3BsaXQoIFwiIFwiICksIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHRoaXMgaW4gJC52YWxpZGF0b3IuY2xhc3NSdWxlU2V0dGluZ3MgKSB7XG5cdFx0XHRcdFx0JC5leHRlbmQoIHJ1bGVzLCAkLnZhbGlkYXRvci5jbGFzc1J1bGVTZXR0aW5nc1sgdGhpcyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJ1bGVzO1xuXHR9LFxuXG5cdG5vcm1hbGl6ZUF0dHJpYnV0ZVJ1bGU6IGZ1bmN0aW9uKCBydWxlcywgdHlwZSwgbWV0aG9kLCB2YWx1ZSApIHtcblxuXHRcdC8vIENvbnZlcnQgdGhlIHZhbHVlIHRvIGEgbnVtYmVyIGZvciBudW1iZXIgaW5wdXRzLCBhbmQgZm9yIHRleHQgZm9yIGJhY2t3YXJkcyBjb21wYWJpbGl0eVxuXHRcdC8vIGFsbG93cyB0eXBlPVwiZGF0ZVwiIGFuZCBvdGhlcnMgdG8gYmUgY29tcGFyZWQgYXMgc3RyaW5nc1xuXHRcdGlmICggL21pbnxtYXh8c3RlcC8udGVzdCggbWV0aG9kICkgJiYgKCB0eXBlID09PSBudWxsIHx8IC9udW1iZXJ8cmFuZ2V8dGV4dC8udGVzdCggdHlwZSApICkgKSB7XG5cdFx0XHR2YWx1ZSA9IE51bWJlciggdmFsdWUgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydCBPcGVyYSBNaW5pLCB3aGljaCByZXR1cm5zIE5hTiBmb3IgdW5kZWZpbmVkIG1pbmxlbmd0aFxuXHRcdFx0aWYgKCBpc05hTiggdmFsdWUgKSApIHtcblx0XHRcdFx0dmFsdWUgPSB1bmRlZmluZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSB8fCB2YWx1ZSA9PT0gMCApIHtcblx0XHRcdHJ1bGVzWyBtZXRob2QgXSA9IHZhbHVlO1xuXHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IG1ldGhvZCAmJiB0eXBlICE9PSBcInJhbmdlXCIgKSB7XG5cblx0XHRcdC8vIEV4Y2VwdGlvbjogdGhlIGpxdWVyeSB2YWxpZGF0ZSAncmFuZ2UnIG1ldGhvZFxuXHRcdFx0Ly8gZG9lcyBub3QgdGVzdCBmb3IgdGhlIGh0bWw1ICdyYW5nZScgdHlwZVxuXHRcdFx0cnVsZXNbIG1ldGhvZCBdID0gdHJ1ZTtcblx0XHR9XG5cdH0sXG5cblx0YXR0cmlidXRlUnVsZXM6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdHZhciBydWxlcyA9IHt9LFxuXHRcdFx0JGVsZW1lbnQgPSAkKCBlbGVtZW50ICksXG5cdFx0XHR0eXBlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICksXG5cdFx0XHRtZXRob2QsIHZhbHVlO1xuXG5cdFx0Zm9yICggbWV0aG9kIGluICQudmFsaWRhdG9yLm1ldGhvZHMgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQgZm9yIDxpbnB1dCByZXF1aXJlZD4gaW4gYm90aCBodG1sNSBhbmQgb2xkZXIgYnJvd3NlcnNcblx0XHRcdGlmICggbWV0aG9kID09PSBcInJlcXVpcmVkXCIgKSB7XG5cdFx0XHRcdHZhbHVlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoIG1ldGhvZCApO1xuXG5cdFx0XHRcdC8vIFNvbWUgYnJvd3NlcnMgcmV0dXJuIGFuIGVtcHR5IHN0cmluZyBmb3IgdGhlIHJlcXVpcmVkIGF0dHJpYnV0ZVxuXHRcdFx0XHQvLyBhbmQgbm9uLUhUTUw1IGJyb3dzZXJzIG1pZ2h0IGhhdmUgcmVxdWlyZWQ9XCJcIiBtYXJrdXBcblx0XHRcdFx0aWYgKCB2YWx1ZSA9PT0gXCJcIiApIHtcblx0XHRcdFx0XHR2YWx1ZSA9IHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBub24tSFRNTDUgYnJvd3NlcnMgdG8gcmV0dXJuIGJvb2xcblx0XHRcdFx0dmFsdWUgPSAhIXZhbHVlO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsdWUgPSAkZWxlbWVudC5hdHRyKCBtZXRob2QgKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5ub3JtYWxpemVBdHRyaWJ1dGVSdWxlKCBydWxlcywgdHlwZSwgbWV0aG9kLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vICdtYXhsZW5ndGgnIG1heSBiZSByZXR1cm5lZCBhcyAtMSwgMjE0NzQ4MzY0NyAoIElFICkgYW5kIDUyNDI4OCAoIHNhZmFyaSApIGZvciB0ZXh0IGlucHV0c1xuXHRcdGlmICggcnVsZXMubWF4bGVuZ3RoICYmIC8tMXwyMTQ3NDgzNjQ3fDUyNDI4OC8udGVzdCggcnVsZXMubWF4bGVuZ3RoICkgKSB7XG5cdFx0XHRkZWxldGUgcnVsZXMubWF4bGVuZ3RoO1xuXHRcdH1cblxuXHRcdHJldHVybiBydWxlcztcblx0fSxcblxuXHRkYXRhUnVsZXM6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdHZhciBydWxlcyA9IHt9LFxuXHRcdFx0JGVsZW1lbnQgPSAkKCBlbGVtZW50ICksXG5cdFx0XHR0eXBlID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoIFwidHlwZVwiICksXG5cdFx0XHRtZXRob2QsIHZhbHVlO1xuXG5cdFx0Zm9yICggbWV0aG9kIGluICQudmFsaWRhdG9yLm1ldGhvZHMgKSB7XG5cdFx0XHR2YWx1ZSA9ICRlbGVtZW50LmRhdGEoIFwicnVsZVwiICsgbWV0aG9kLmNoYXJBdCggMCApLnRvVXBwZXJDYXNlKCkgKyBtZXRob2Quc3Vic3RyaW5nKCAxICkudG9Mb3dlckNhc2UoKSApO1xuXG5cdFx0XHQvLyBDYXN0IGVtcHR5IGF0dHJpYnV0ZXMgbGlrZSBgZGF0YS1ydWxlLXJlcXVpcmVkYCB0byBgdHJ1ZWBcblx0XHRcdGlmICggdmFsdWUgPT09IFwiXCIgKSB7XG5cdFx0XHRcdHZhbHVlID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5ub3JtYWxpemVBdHRyaWJ1dGVSdWxlKCBydWxlcywgdHlwZSwgbWV0aG9kLCB2YWx1ZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gcnVsZXM7XG5cdH0sXG5cblx0c3RhdGljUnVsZXM6IGZ1bmN0aW9uKCBlbGVtZW50ICkge1xuXHRcdHZhciBydWxlcyA9IHt9LFxuXHRcdFx0dmFsaWRhdG9yID0gJC5kYXRhKCBlbGVtZW50LmZvcm0sIFwidmFsaWRhdG9yXCIgKTtcblxuXHRcdGlmICggdmFsaWRhdG9yLnNldHRpbmdzLnJ1bGVzICkge1xuXHRcdFx0cnVsZXMgPSAkLnZhbGlkYXRvci5ub3JtYWxpemVSdWxlKCB2YWxpZGF0b3Iuc2V0dGluZ3MucnVsZXNbIGVsZW1lbnQubmFtZSBdICkgfHwge307XG5cdFx0fVxuXHRcdHJldHVybiBydWxlcztcblx0fSxcblxuXHRub3JtYWxpemVSdWxlczogZnVuY3Rpb24oIHJ1bGVzLCBlbGVtZW50ICkge1xuXG5cdFx0Ly8gSGFuZGxlIGRlcGVuZGVuY3kgY2hlY2tcblx0XHQkLmVhY2goIHJ1bGVzLCBmdW5jdGlvbiggcHJvcCwgdmFsICkge1xuXG5cdFx0XHQvLyBJZ25vcmUgcnVsZSB3aGVuIHBhcmFtIGlzIGV4cGxpY2l0bHkgZmFsc2UsIGVnLiByZXF1aXJlZDpmYWxzZVxuXHRcdFx0aWYgKCB2YWwgPT09IGZhbHNlICkge1xuXHRcdFx0XHRkZWxldGUgcnVsZXNbIHByb3AgXTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCB2YWwucGFyYW0gfHwgdmFsLmRlcGVuZHMgKSB7XG5cdFx0XHRcdHZhciBrZWVwUnVsZSA9IHRydWU7XG5cdFx0XHRcdHN3aXRjaCAoIHR5cGVvZiB2YWwuZGVwZW5kcyApIHtcblx0XHRcdFx0Y2FzZSBcInN0cmluZ1wiOlxuXHRcdFx0XHRcdGtlZXBSdWxlID0gISEkKCB2YWwuZGVwZW5kcywgZWxlbWVudC5mb3JtICkubGVuZ3RoO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRjYXNlIFwiZnVuY3Rpb25cIjpcblx0XHRcdFx0XHRrZWVwUnVsZSA9IHZhbC5kZXBlbmRzLmNhbGwoIGVsZW1lbnQsIGVsZW1lbnQgKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIGtlZXBSdWxlICkge1xuXHRcdFx0XHRcdHJ1bGVzWyBwcm9wIF0gPSB2YWwucGFyYW0gIT09IHVuZGVmaW5lZCA/IHZhbC5wYXJhbSA6IHRydWU7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0JC5kYXRhKCBlbGVtZW50LmZvcm0sIFwidmFsaWRhdG9yXCIgKS5yZXNldEVsZW1lbnRzKCAkKCBlbGVtZW50ICkgKTtcblx0XHRcdFx0XHRkZWxldGUgcnVsZXNbIHByb3AgXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdC8vIEV2YWx1YXRlIHBhcmFtZXRlcnNcblx0XHQkLmVhY2goIHJ1bGVzLCBmdW5jdGlvbiggcnVsZSwgcGFyYW1ldGVyICkge1xuXHRcdFx0cnVsZXNbIHJ1bGUgXSA9ICQuaXNGdW5jdGlvbiggcGFyYW1ldGVyICkgJiYgcnVsZSAhPT0gXCJub3JtYWxpemVyXCIgPyBwYXJhbWV0ZXIoIGVsZW1lbnQgKSA6IHBhcmFtZXRlcjtcblx0XHR9ICk7XG5cblx0XHQvLyBDbGVhbiBudW1iZXIgcGFyYW1ldGVyc1xuXHRcdCQuZWFjaCggWyBcIm1pbmxlbmd0aFwiLCBcIm1heGxlbmd0aFwiIF0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBydWxlc1sgdGhpcyBdICkge1xuXHRcdFx0XHRydWxlc1sgdGhpcyBdID0gTnVtYmVyKCBydWxlc1sgdGhpcyBdICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHRcdCQuZWFjaCggWyBcInJhbmdlbGVuZ3RoXCIsIFwicmFuZ2VcIiBdLCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBwYXJ0cztcblx0XHRcdGlmICggcnVsZXNbIHRoaXMgXSApIHtcblx0XHRcdFx0aWYgKCAkLmlzQXJyYXkoIHJ1bGVzWyB0aGlzIF0gKSApIHtcblx0XHRcdFx0XHRydWxlc1sgdGhpcyBdID0gWyBOdW1iZXIoIHJ1bGVzWyB0aGlzIF1bIDAgXSApLCBOdW1iZXIoIHJ1bGVzWyB0aGlzIF1bIDEgXSApIF07XG5cdFx0XHRcdH0gZWxzZSBpZiAoIHR5cGVvZiBydWxlc1sgdGhpcyBdID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0XHRcdHBhcnRzID0gcnVsZXNbIHRoaXMgXS5yZXBsYWNlKCAvW1xcW1xcXV0vZywgXCJcIiApLnNwbGl0KCAvW1xccyxdKy8gKTtcblx0XHRcdFx0XHRydWxlc1sgdGhpcyBdID0gWyBOdW1iZXIoIHBhcnRzWyAwIF0gKSwgTnVtYmVyKCBwYXJ0c1sgMSBdICkgXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHRcdGlmICggJC52YWxpZGF0b3IuYXV0b0NyZWF0ZVJhbmdlcyApIHtcblxuXHRcdFx0Ly8gQXV0by1jcmVhdGUgcmFuZ2VzXG5cdFx0XHRpZiAoIHJ1bGVzLm1pbiAhPSBudWxsICYmIHJ1bGVzLm1heCAhPSBudWxsICkge1xuXHRcdFx0XHRydWxlcy5yYW5nZSA9IFsgcnVsZXMubWluLCBydWxlcy5tYXggXTtcblx0XHRcdFx0ZGVsZXRlIHJ1bGVzLm1pbjtcblx0XHRcdFx0ZGVsZXRlIHJ1bGVzLm1heDtcblx0XHRcdH1cblx0XHRcdGlmICggcnVsZXMubWlubGVuZ3RoICE9IG51bGwgJiYgcnVsZXMubWF4bGVuZ3RoICE9IG51bGwgKSB7XG5cdFx0XHRcdHJ1bGVzLnJhbmdlbGVuZ3RoID0gWyBydWxlcy5taW5sZW5ndGgsIHJ1bGVzLm1heGxlbmd0aCBdO1xuXHRcdFx0XHRkZWxldGUgcnVsZXMubWlubGVuZ3RoO1xuXHRcdFx0XHRkZWxldGUgcnVsZXMubWF4bGVuZ3RoO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBydWxlcztcblx0fSxcblxuXHQvLyBDb252ZXJ0cyBhIHNpbXBsZSBzdHJpbmcgdG8gYSB7c3RyaW5nOiB0cnVlfSBydWxlLCBlLmcuLCBcInJlcXVpcmVkXCIgdG8ge3JlcXVpcmVkOnRydWV9XG5cdG5vcm1hbGl6ZVJ1bGU6IGZ1bmN0aW9uKCBkYXRhICkge1xuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR2YXIgdHJhbnNmb3JtZWQgPSB7fTtcblx0XHRcdCQuZWFjaCggZGF0YS5zcGxpdCggL1xccy8gKSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHRyYW5zZm9ybWVkWyB0aGlzIF0gPSB0cnVlO1xuXHRcdFx0fSApO1xuXHRcdFx0ZGF0YSA9IHRyYW5zZm9ybWVkO1xuXHRcdH1cblx0XHRyZXR1cm4gZGF0YTtcblx0fSxcblxuXHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL2pRdWVyeS52YWxpZGF0b3IuYWRkTWV0aG9kL1xuXHRhZGRNZXRob2Q6IGZ1bmN0aW9uKCBuYW1lLCBtZXRob2QsIG1lc3NhZ2UgKSB7XG5cdFx0JC52YWxpZGF0b3IubWV0aG9kc1sgbmFtZSBdID0gbWV0aG9kO1xuXHRcdCQudmFsaWRhdG9yLm1lc3NhZ2VzWyBuYW1lIF0gPSBtZXNzYWdlICE9PSB1bmRlZmluZWQgPyBtZXNzYWdlIDogJC52YWxpZGF0b3IubWVzc2FnZXNbIG5hbWUgXTtcblx0XHRpZiAoIG1ldGhvZC5sZW5ndGggPCAzICkge1xuXHRcdFx0JC52YWxpZGF0b3IuYWRkQ2xhc3NSdWxlcyggbmFtZSwgJC52YWxpZGF0b3Iubm9ybWFsaXplUnVsZSggbmFtZSApICk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvalF1ZXJ5LnZhbGlkYXRvci5tZXRob2RzL1xuXHRtZXRob2RzOiB7XG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL3JlcXVpcmVkLW1ldGhvZC9cblx0XHRyZXF1aXJlZDogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50LCBwYXJhbSApIHtcblxuXHRcdFx0Ly8gQ2hlY2sgaWYgZGVwZW5kZW5jeSBpcyBtZXRcblx0XHRcdGlmICggIXRoaXMuZGVwZW5kKCBwYXJhbSwgZWxlbWVudCApICkge1xuXHRcdFx0XHRyZXR1cm4gXCJkZXBlbmRlbmN5LW1pc21hdGNoXCI7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGVsZW1lbnQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJzZWxlY3RcIiApIHtcblxuXHRcdFx0XHQvLyBDb3VsZCBiZSBhbiBhcnJheSBmb3Igc2VsZWN0LW11bHRpcGxlIG9yIGEgc3RyaW5nLCBib3RoIGFyZSBmaW5lIHRoaXMgd2F5XG5cdFx0XHRcdHZhciB2YWwgPSAkKCBlbGVtZW50ICkudmFsKCk7XG5cdFx0XHRcdHJldHVybiB2YWwgJiYgdmFsLmxlbmd0aCA+IDA7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIHRoaXMuY2hlY2thYmxlKCBlbGVtZW50ICkgKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLmdldExlbmd0aCggdmFsdWUsIGVsZW1lbnQgKSA+IDA7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZS5sZW5ndGggPiAwO1xuXHRcdH0sXG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL2VtYWlsLW1ldGhvZC9cblx0XHRlbWFpbDogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50ICkge1xuXG5cdFx0XHQvLyBGcm9tIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL2Zvcm1zLmh0bWwjdmFsaWQtZS1tYWlsLWFkZHJlc3Ncblx0XHRcdC8vIFJldHJpZXZlZCAyMDE0LTAxLTE0XG5cdFx0XHQvLyBJZiB5b3UgaGF2ZSBhIHByb2JsZW0gd2l0aCB0aGlzIGltcGxlbWVudGF0aW9uLCByZXBvcnQgYSBidWcgYWdhaW5zdCB0aGUgYWJvdmUgc3BlY1xuXHRcdFx0Ly8gT3IgdXNlIGN1c3RvbSBtZXRob2RzIHRvIGltcGxlbWVudCB5b3VyIG93biBlbWFpbCB2YWxpZGF0aW9uXG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25hbCggZWxlbWVudCApIHx8IC9eW2EtekEtWjAtOS4hIyQlJicqK1xcLz0/Xl9ge3x9fi1dK0BbYS16QS1aMC05XSg/OlthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8oPzpcXC5bYS16QS1aMC05XSg/OlthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKT8pKiQvLnRlc3QoIHZhbHVlICk7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvdXJsLW1ldGhvZC9cblx0XHR1cmw6IGZ1bmN0aW9uKCB2YWx1ZSwgZWxlbWVudCApIHtcblxuXHRcdFx0Ly8gQ29weXJpZ2h0IChjKSAyMDEwLTIwMTMgRGllZ28gUGVyaW5pLCBNSVQgbGljZW5zZWRcblx0XHRcdC8vIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2RwZXJpbmkvNzI5Mjk0XG5cdFx0XHQvLyBzZWUgYWxzbyBodHRwczovL21hdGhpYXNieW5lbnMuYmUvZGVtby91cmwtcmVnZXhcblx0XHRcdC8vIG1vZGlmaWVkIHRvIGFsbG93IHByb3RvY29sLXJlbGF0aXZlIFVSTHNcblx0XHRcdHJldHVybiB0aGlzLm9wdGlvbmFsKCBlbGVtZW50ICkgfHwgL14oPzooPzooPzpodHRwcz98ZnRwKTopP1xcL1xcLykoPzpcXFMrKD86OlxcUyopP0ApPyg/Oig/ISg/OjEwfDEyNykoPzpcXC5cXGR7MSwzfSl7M30pKD8hKD86MTY5XFwuMjU0fDE5MlxcLjE2OCkoPzpcXC5cXGR7MSwzfSl7Mn0pKD8hMTcyXFwuKD86MVs2LTldfDJcXGR8M1swLTFdKSg/OlxcLlxcZHsxLDN9KXsyfSkoPzpbMS05XVxcZD98MVxcZFxcZHwyWzAxXVxcZHwyMlswLTNdKSg/OlxcLig/OjE/XFxkezEsMn18MlswLTRdXFxkfDI1WzAtNV0pKXsyfSg/OlxcLig/OlsxLTldXFxkP3wxXFxkXFxkfDJbMC00XVxcZHwyNVswLTRdKSl8KD86KD86W2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0tKikqW2EtelxcdTAwYTEtXFx1ZmZmZjAtOV0rKSg/OlxcLig/OlthLXpcXHUwMGExLVxcdWZmZmYwLTldLSopKlthLXpcXHUwMGExLVxcdWZmZmYwLTldKykqKD86XFwuKD86W2EtelxcdTAwYTEtXFx1ZmZmZl17Mix9KSkuPykoPzo6XFxkezIsNX0pPyg/OlsvPyNdXFxTKik/JC9pLnRlc3QoIHZhbHVlICk7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvZGF0ZS1tZXRob2QvXG5cdFx0ZGF0ZTogKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBjYWxsZWQgPSBmYWxzZTtcblxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCB2YWx1ZSwgZWxlbWVudCApIHtcblx0XHRcdFx0aWYgKCAhY2FsbGVkICkge1xuXHRcdFx0XHRcdGNhbGxlZCA9IHRydWU7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLnNldHRpbmdzLmRlYnVnICYmIHdpbmRvdy5jb25zb2xlICkge1xuXHRcdFx0XHRcdFx0Y29uc29sZS53YXJuKFxuXHRcdFx0XHRcdFx0XHRcIlRoZSBgZGF0ZWAgbWV0aG9kIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB2ZXJzaW9uICcyLjAuMCcuXFxuXCIgK1xuXHRcdFx0XHRcdFx0XHRcIlBsZWFzZSBkb24ndCB1c2UgaXQsIHNpbmNlIGl0IHJlbGllcyBvbiB0aGUgRGF0ZSBjb25zdHJ1Y3Rvciwgd2hpY2hcXG5cIiArXG5cdFx0XHRcdFx0XHRcdFwiYmVoYXZlcyB2ZXJ5IGRpZmZlcmVudGx5IGFjcm9zcyBicm93c2VycyBhbmQgbG9jYWxlcy4gVXNlIGBkYXRlSVNPYFxcblwiICtcblx0XHRcdFx0XHRcdFx0XCJpbnN0ZWFkIG9yIG9uZSBvZiB0aGUgbG9jYWxlIHNwZWNpZmljIG1ldGhvZHMgaW4gYGxvY2FsaXphdGlvbnMvYFxcblwiICtcblx0XHRcdFx0XHRcdFx0XCJhbmQgYGFkZGl0aW9uYWwtbWV0aG9kcy5qc2AuXCJcblx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSB8fCAhL0ludmFsaWR8TmFOLy50ZXN0KCBuZXcgRGF0ZSggdmFsdWUgKS50b1N0cmluZygpICk7XG5cdFx0XHR9O1xuXHRcdH0oKSApLFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9kYXRlSVNPLW1ldGhvZC9cblx0XHRkYXRlSVNPOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25hbCggZWxlbWVudCApIHx8IC9eXFxkezR9W1xcL1xcLV0oMD9bMS05XXwxWzAxMl0pW1xcL1xcLV0oMD9bMS05XXxbMTJdWzAtOV18M1swMV0pJC8udGVzdCggdmFsdWUgKTtcblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9udW1iZXItbWV0aG9kL1xuXHRcdG51bWJlcjogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50ICkge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSB8fCAvXig/Oi0/XFxkK3wtP1xcZHsxLDN9KD86LFxcZHszfSkrKT8oPzpcXC5cXGQrKT8kLy50ZXN0KCB2YWx1ZSApO1xuXHRcdH0sXG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL2RpZ2l0cy1tZXRob2QvXG5cdFx0ZGlnaXRzOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25hbCggZWxlbWVudCApIHx8IC9eXFxkKyQvLnRlc3QoIHZhbHVlICk7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvbWlubGVuZ3RoLW1ldGhvZC9cblx0XHRtaW5sZW5ndGg6IGZ1bmN0aW9uKCB2YWx1ZSwgZWxlbWVudCwgcGFyYW0gKSB7XG5cdFx0XHR2YXIgbGVuZ3RoID0gJC5pc0FycmF5KCB2YWx1ZSApID8gdmFsdWUubGVuZ3RoIDogdGhpcy5nZXRMZW5ndGgoIHZhbHVlLCBlbGVtZW50ICk7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25hbCggZWxlbWVudCApIHx8IGxlbmd0aCA+PSBwYXJhbTtcblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9tYXhsZW5ndGgtbWV0aG9kL1xuXHRcdG1heGxlbmd0aDogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50LCBwYXJhbSApIHtcblx0XHRcdHZhciBsZW5ndGggPSAkLmlzQXJyYXkoIHZhbHVlICkgPyB2YWx1ZS5sZW5ndGggOiB0aGlzLmdldExlbmd0aCggdmFsdWUsIGVsZW1lbnQgKTtcblx0XHRcdHJldHVybiB0aGlzLm9wdGlvbmFsKCBlbGVtZW50ICkgfHwgbGVuZ3RoIDw9IHBhcmFtO1xuXHRcdH0sXG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL3JhbmdlbGVuZ3RoLW1ldGhvZC9cblx0XHRyYW5nZWxlbmd0aDogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50LCBwYXJhbSApIHtcblx0XHRcdHZhciBsZW5ndGggPSAkLmlzQXJyYXkoIHZhbHVlICkgPyB2YWx1ZS5sZW5ndGggOiB0aGlzLmdldExlbmd0aCggdmFsdWUsIGVsZW1lbnQgKTtcblx0XHRcdHJldHVybiB0aGlzLm9wdGlvbmFsKCBlbGVtZW50ICkgfHwgKCBsZW5ndGggPj0gcGFyYW1bIDAgXSAmJiBsZW5ndGggPD0gcGFyYW1bIDEgXSApO1xuXHRcdH0sXG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL21pbi1tZXRob2QvXG5cdFx0bWluOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQsIHBhcmFtICkge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSB8fCB2YWx1ZSA+PSBwYXJhbTtcblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9tYXgtbWV0aG9kL1xuXHRcdG1heDogZnVuY3Rpb24oIHZhbHVlLCBlbGVtZW50LCBwYXJhbSApIHtcblx0XHRcdHJldHVybiB0aGlzLm9wdGlvbmFsKCBlbGVtZW50ICkgfHwgdmFsdWUgPD0gcGFyYW07XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvcmFuZ2UtbWV0aG9kL1xuXHRcdHJhbmdlOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQsIHBhcmFtICkge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSB8fCAoIHZhbHVlID49IHBhcmFtWyAwIF0gJiYgdmFsdWUgPD0gcGFyYW1bIDEgXSApO1xuXHRcdH0sXG5cblx0XHQvLyBodHRwczovL2pxdWVyeXZhbGlkYXRpb24ub3JnL3N0ZXAtbWV0aG9kL1xuXHRcdHN0ZXA6IGZ1bmN0aW9uKCB2YWx1ZSwgZWxlbWVudCwgcGFyYW0gKSB7XG5cdFx0XHR2YXIgdHlwZSA9ICQoIGVsZW1lbnQgKS5hdHRyKCBcInR5cGVcIiApLFxuXHRcdFx0XHRlcnJvck1lc3NhZ2UgPSBcIlN0ZXAgYXR0cmlidXRlIG9uIGlucHV0IHR5cGUgXCIgKyB0eXBlICsgXCIgaXMgbm90IHN1cHBvcnRlZC5cIixcblx0XHRcdFx0c3VwcG9ydGVkVHlwZXMgPSBbIFwidGV4dFwiLCBcIm51bWJlclwiLCBcInJhbmdlXCIgXSxcblx0XHRcdFx0cmUgPSBuZXcgUmVnRXhwKCBcIlxcXFxiXCIgKyB0eXBlICsgXCJcXFxcYlwiICksXG5cdFx0XHRcdG5vdFN1cHBvcnRlZCA9IHR5cGUgJiYgIXJlLnRlc3QoIHN1cHBvcnRlZFR5cGVzLmpvaW4oKSApLFxuXHRcdFx0XHRkZWNpbWFsUGxhY2VzID0gZnVuY3Rpb24oIG51bSApIHtcblx0XHRcdFx0XHR2YXIgbWF0Y2ggPSAoIFwiXCIgKyBudW0gKS5tYXRjaCggLyg/OlxcLihcXGQrKSk/JC8gKTtcblx0XHRcdFx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE51bWJlciBvZiBkaWdpdHMgcmlnaHQgb2YgZGVjaW1hbCBwb2ludC5cblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2hbIDEgXSA/IG1hdGNoWyAxIF0ubGVuZ3RoIDogMDtcblx0XHRcdFx0fSxcblx0XHRcdFx0dG9JbnQgPSBmdW5jdGlvbiggbnVtICkge1xuXHRcdFx0XHRcdHJldHVybiBNYXRoLnJvdW5kKCBudW0gKiBNYXRoLnBvdyggMTAsIGRlY2ltYWxzICkgKTtcblx0XHRcdFx0fSxcblx0XHRcdFx0dmFsaWQgPSB0cnVlLFxuXHRcdFx0XHRkZWNpbWFscztcblxuXHRcdFx0Ly8gV29ya3Mgb25seSBmb3IgdGV4dCwgbnVtYmVyIGFuZCByYW5nZSBpbnB1dCB0eXBlc1xuXHRcdFx0Ly8gVE9ETyBmaW5kIGEgd2F5IHRvIHN1cHBvcnQgaW5wdXQgdHlwZXMgZGF0ZSwgZGF0ZXRpbWUsIGRhdGV0aW1lLWxvY2FsLCBtb250aCwgdGltZSBhbmQgd2Vla1xuXHRcdFx0aWYgKCBub3RTdXBwb3J0ZWQgKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvciggZXJyb3JNZXNzYWdlICk7XG5cdFx0XHR9XG5cblx0XHRcdGRlY2ltYWxzID0gZGVjaW1hbFBsYWNlcyggcGFyYW0gKTtcblxuXHRcdFx0Ly8gVmFsdWUgY2FuJ3QgaGF2ZSB0b28gbWFueSBkZWNpbWFsc1xuXHRcdFx0aWYgKCBkZWNpbWFsUGxhY2VzKCB2YWx1ZSApID4gZGVjaW1hbHMgfHwgdG9JbnQoIHZhbHVlICkgJSB0b0ludCggcGFyYW0gKSAhPT0gMCApIHtcblx0XHRcdFx0dmFsaWQgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9uYWwoIGVsZW1lbnQgKSB8fCB2YWxpZDtcblx0XHR9LFxuXG5cdFx0Ly8gaHR0cHM6Ly9qcXVlcnl2YWxpZGF0aW9uLm9yZy9lcXVhbFRvLW1ldGhvZC9cblx0XHRlcXVhbFRvOiBmdW5jdGlvbiggdmFsdWUsIGVsZW1lbnQsIHBhcmFtICkge1xuXG5cdFx0XHQvLyBCaW5kIHRvIHRoZSBibHVyIGV2ZW50IG9mIHRoZSB0YXJnZXQgaW4gb3JkZXIgdG8gcmV2YWxpZGF0ZSB3aGVuZXZlciB0aGUgdGFyZ2V0IGZpZWxkIGlzIHVwZGF0ZWRcblx0XHRcdHZhciB0YXJnZXQgPSAkKCBwYXJhbSApO1xuXHRcdFx0aWYgKCB0aGlzLnNldHRpbmdzLm9uZm9jdXNvdXQgJiYgdGFyZ2V0Lm5vdCggXCIudmFsaWRhdGUtZXF1YWxUby1ibHVyXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHRhcmdldC5hZGRDbGFzcyggXCJ2YWxpZGF0ZS1lcXVhbFRvLWJsdXJcIiApLm9uKCBcImJsdXIudmFsaWRhdGUtZXF1YWxUb1wiLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHQkKCBlbGVtZW50ICkudmFsaWQoKTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHZhbHVlID09PSB0YXJnZXQudmFsKCk7XG5cdFx0fSxcblxuXHRcdC8vIGh0dHBzOi8vanF1ZXJ5dmFsaWRhdGlvbi5vcmcvcmVtb3RlLW1ldGhvZC9cblx0XHRyZW1vdGU6IGZ1bmN0aW9uKCB2YWx1ZSwgZWxlbWVudCwgcGFyYW0sIG1ldGhvZCApIHtcblx0XHRcdGlmICggdGhpcy5vcHRpb25hbCggZWxlbWVudCApICkge1xuXHRcdFx0XHRyZXR1cm4gXCJkZXBlbmRlbmN5LW1pc21hdGNoXCI7XG5cdFx0XHR9XG5cblx0XHRcdG1ldGhvZCA9IHR5cGVvZiBtZXRob2QgPT09IFwic3RyaW5nXCIgJiYgbWV0aG9kIHx8IFwicmVtb3RlXCI7XG5cblx0XHRcdHZhciBwcmV2aW91cyA9IHRoaXMucHJldmlvdXNWYWx1ZSggZWxlbWVudCwgbWV0aG9kICksXG5cdFx0XHRcdHZhbGlkYXRvciwgZGF0YSwgb3B0aW9uRGF0YVN0cmluZztcblxuXHRcdFx0aWYgKCAhdGhpcy5zZXR0aW5ncy5tZXNzYWdlc1sgZWxlbWVudC5uYW1lIF0gKSB7XG5cdFx0XHRcdHRoaXMuc2V0dGluZ3MubWVzc2FnZXNbIGVsZW1lbnQubmFtZSBdID0ge307XG5cdFx0XHR9XG5cdFx0XHRwcmV2aW91cy5vcmlnaW5hbE1lc3NhZ2UgPSBwcmV2aW91cy5vcmlnaW5hbE1lc3NhZ2UgfHwgdGhpcy5zZXR0aW5ncy5tZXNzYWdlc1sgZWxlbWVudC5uYW1lIF1bIG1ldGhvZCBdO1xuXHRcdFx0dGhpcy5zZXR0aW5ncy5tZXNzYWdlc1sgZWxlbWVudC5uYW1lIF1bIG1ldGhvZCBdID0gcHJldmlvdXMubWVzc2FnZTtcblxuXHRcdFx0cGFyYW0gPSB0eXBlb2YgcGFyYW0gPT09IFwic3RyaW5nXCIgJiYgeyB1cmw6IHBhcmFtIH0gfHwgcGFyYW07XG5cdFx0XHRvcHRpb25EYXRhU3RyaW5nID0gJC5wYXJhbSggJC5leHRlbmQoIHsgZGF0YTogdmFsdWUgfSwgcGFyYW0uZGF0YSApICk7XG5cdFx0XHRpZiAoIHByZXZpb3VzLm9sZCA9PT0gb3B0aW9uRGF0YVN0cmluZyApIHtcblx0XHRcdFx0cmV0dXJuIHByZXZpb3VzLnZhbGlkO1xuXHRcdFx0fVxuXG5cdFx0XHRwcmV2aW91cy5vbGQgPSBvcHRpb25EYXRhU3RyaW5nO1xuXHRcdFx0dmFsaWRhdG9yID0gdGhpcztcblx0XHRcdHRoaXMuc3RhcnRSZXF1ZXN0KCBlbGVtZW50ICk7XG5cdFx0XHRkYXRhID0ge307XG5cdFx0XHRkYXRhWyBlbGVtZW50Lm5hbWUgXSA9IHZhbHVlO1xuXHRcdFx0JC5hamF4KCAkLmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRtb2RlOiBcImFib3J0XCIsXG5cdFx0XHRcdHBvcnQ6IFwidmFsaWRhdGVcIiArIGVsZW1lbnQubmFtZSxcblx0XHRcdFx0ZGF0YVR5cGU6IFwianNvblwiLFxuXHRcdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0XHRjb250ZXh0OiB2YWxpZGF0b3IuY3VycmVudEZvcm0sXG5cdFx0XHRcdHN1Y2Nlc3M6IGZ1bmN0aW9uKCByZXNwb25zZSApIHtcblx0XHRcdFx0XHR2YXIgdmFsaWQgPSByZXNwb25zZSA9PT0gdHJ1ZSB8fCByZXNwb25zZSA9PT0gXCJ0cnVlXCIsXG5cdFx0XHRcdFx0XHRlcnJvcnMsIG1lc3NhZ2UsIHN1Ym1pdHRlZDtcblxuXHRcdFx0XHRcdHZhbGlkYXRvci5zZXR0aW5ncy5tZXNzYWdlc1sgZWxlbWVudC5uYW1lIF1bIG1ldGhvZCBdID0gcHJldmlvdXMub3JpZ2luYWxNZXNzYWdlO1xuXHRcdFx0XHRcdGlmICggdmFsaWQgKSB7XG5cdFx0XHRcdFx0XHRzdWJtaXR0ZWQgPSB2YWxpZGF0b3IuZm9ybVN1Ym1pdHRlZDtcblx0XHRcdFx0XHRcdHZhbGlkYXRvci5yZXNldEludGVybmFscygpO1xuXHRcdFx0XHRcdFx0dmFsaWRhdG9yLnRvSGlkZSA9IHZhbGlkYXRvci5lcnJvcnNGb3IoIGVsZW1lbnQgKTtcblx0XHRcdFx0XHRcdHZhbGlkYXRvci5mb3JtU3VibWl0dGVkID0gc3VibWl0dGVkO1xuXHRcdFx0XHRcdFx0dmFsaWRhdG9yLnN1Y2Nlc3NMaXN0LnB1c2goIGVsZW1lbnQgKTtcblx0XHRcdFx0XHRcdHZhbGlkYXRvci5pbnZhbGlkWyBlbGVtZW50Lm5hbWUgXSA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0dmFsaWRhdG9yLnNob3dFcnJvcnMoKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0ZXJyb3JzID0ge307XG5cdFx0XHRcdFx0XHRtZXNzYWdlID0gcmVzcG9uc2UgfHwgdmFsaWRhdG9yLmRlZmF1bHRNZXNzYWdlKCBlbGVtZW50LCB7IG1ldGhvZDogbWV0aG9kLCBwYXJhbWV0ZXJzOiB2YWx1ZSB9ICk7XG5cdFx0XHRcdFx0XHRlcnJvcnNbIGVsZW1lbnQubmFtZSBdID0gcHJldmlvdXMubWVzc2FnZSA9IG1lc3NhZ2U7XG5cdFx0XHRcdFx0XHR2YWxpZGF0b3IuaW52YWxpZFsgZWxlbWVudC5uYW1lIF0gPSB0cnVlO1xuXHRcdFx0XHRcdFx0dmFsaWRhdG9yLnNob3dFcnJvcnMoIGVycm9ycyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwcmV2aW91cy52YWxpZCA9IHZhbGlkO1xuXHRcdFx0XHRcdHZhbGlkYXRvci5zdG9wUmVxdWVzdCggZWxlbWVudCwgdmFsaWQgKTtcblx0XHRcdFx0fVxuXHRcdFx0fSwgcGFyYW0gKSApO1xuXHRcdFx0cmV0dXJuIFwicGVuZGluZ1wiO1xuXHRcdH1cblx0fVxuXG59ICk7XG5cclxuLy8gQWpheCBtb2RlOiBhYm9ydFxuLy8gdXNhZ2U6ICQuYWpheCh7IG1vZGU6IFwiYWJvcnRcIlssIHBvcnQ6IFwidW5pcXVlcG9ydFwiXX0pO1xuLy8gaWYgbW9kZTpcImFib3J0XCIgaXMgdXNlZCwgdGhlIHByZXZpb3VzIHJlcXVlc3Qgb24gdGhhdCBwb3J0IChwb3J0IGNhbiBiZSB1bmRlZmluZWQpIGlzIGFib3J0ZWQgdmlhIFhNTEh0dHBSZXF1ZXN0LmFib3J0KClcblxudmFyIHBlbmRpbmdSZXF1ZXN0cyA9IHt9LFxuXHRhamF4O1xuXG4vLyBVc2UgYSBwcmVmaWx0ZXIgaWYgYXZhaWxhYmxlICgxLjUrKVxuaWYgKCAkLmFqYXhQcmVmaWx0ZXIgKSB7XG5cdCQuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHNldHRpbmdzLCBfLCB4aHIgKSB7XG5cdFx0dmFyIHBvcnQgPSBzZXR0aW5ncy5wb3J0O1xuXHRcdGlmICggc2V0dGluZ3MubW9kZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0aWYgKCBwZW5kaW5nUmVxdWVzdHNbIHBvcnQgXSApIHtcblx0XHRcdFx0cGVuZGluZ1JlcXVlc3RzWyBwb3J0IF0uYWJvcnQoKTtcblx0XHRcdH1cblx0XHRcdHBlbmRpbmdSZXF1ZXN0c1sgcG9ydCBdID0geGhyO1xuXHRcdH1cblx0fSApO1xufSBlbHNlIHtcblxuXHQvLyBQcm94eSBhamF4XG5cdGFqYXggPSAkLmFqYXg7XG5cdCQuYWpheCA9IGZ1bmN0aW9uKCBzZXR0aW5ncyApIHtcblx0XHR2YXIgbW9kZSA9ICggXCJtb2RlXCIgaW4gc2V0dGluZ3MgPyBzZXR0aW5ncyA6ICQuYWpheFNldHRpbmdzICkubW9kZSxcblx0XHRcdHBvcnQgPSAoIFwicG9ydFwiIGluIHNldHRpbmdzID8gc2V0dGluZ3MgOiAkLmFqYXhTZXR0aW5ncyApLnBvcnQ7XG5cdFx0aWYgKCBtb2RlID09PSBcImFib3J0XCIgKSB7XG5cdFx0XHRpZiAoIHBlbmRpbmdSZXF1ZXN0c1sgcG9ydCBdICkge1xuXHRcdFx0XHRwZW5kaW5nUmVxdWVzdHNbIHBvcnQgXS5hYm9ydCgpO1xuXHRcdFx0fVxuXHRcdFx0cGVuZGluZ1JlcXVlc3RzWyBwb3J0IF0gPSBhamF4LmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdHJldHVybiBwZW5kaW5nUmVxdWVzdHNbIHBvcnQgXTtcblx0XHR9XG5cdFx0cmV0dXJuIGFqYXguYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHR9O1xufVxucmV0dXJuICQ7XHJcbn0pKTsiLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWdlbmVyYXRvci1ydW50aW1lXCIpO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vLyBUaGlzIG1ldGhvZCBvZiBvYnRhaW5pbmcgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QgbmVlZHMgdG8gYmVcbi8vIGtlcHQgaWRlbnRpY2FsIHRvIHRoZSB3YXkgaXQgaXMgb2J0YWluZWQgaW4gcnVudGltZS5qc1xudmFyIGcgPSAoZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzIH0pKCkgfHwgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xuXG4vLyBVc2UgYGdldE93blByb3BlcnR5TmFtZXNgIGJlY2F1c2Ugbm90IGFsbCBicm93c2VycyBzdXBwb3J0IGNhbGxpbmdcbi8vIGBoYXNPd25Qcm9wZXJ0eWAgb24gdGhlIGdsb2JhbCBgc2VsZmAgb2JqZWN0IGluIGEgd29ya2VyLiBTZWUgIzE4My5cbnZhciBoYWRSdW50aW1lID0gZy5yZWdlbmVyYXRvclJ1bnRpbWUgJiZcbiAgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoZykuaW5kZXhPZihcInJlZ2VuZXJhdG9yUnVudGltZVwiKSA+PSAwO1xuXG4vLyBTYXZlIHRoZSBvbGQgcmVnZW5lcmF0b3JSdW50aW1lIGluIGNhc2UgaXQgbmVlZHMgdG8gYmUgcmVzdG9yZWQgbGF0ZXIuXG52YXIgb2xkUnVudGltZSA9IGhhZFJ1bnRpbWUgJiYgZy5yZWdlbmVyYXRvclJ1bnRpbWU7XG5cbi8vIEZvcmNlIHJlZXZhbHV0YXRpb24gb2YgcnVudGltZS5qcy5cbmcucmVnZW5lcmF0b3JSdW50aW1lID0gdW5kZWZpbmVkO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuL3J1bnRpbWVcIik7XG5cbmlmIChoYWRSdW50aW1lKSB7XG4gIC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIHJ1bnRpbWUuXG4gIGcucmVnZW5lcmF0b3JSdW50aW1lID0gb2xkUnVudGltZTtcbn0gZWxzZSB7XG4gIC8vIFJlbW92ZSB0aGUgZ2xvYmFsIHByb3BlcnR5IGFkZGVkIGJ5IHJ1bnRpbWUuanMuXG4gIHRyeSB7XG4gICAgZGVsZXRlIGcucmVnZW5lcmF0b3JSdW50aW1lO1xuICB9IGNhdGNoKGUpIHtcbiAgICBnLnJlZ2VuZXJhdG9yUnVudGltZSA9IHVuZGVmaW5lZDtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4hKGZ1bmN0aW9uKGdsb2JhbCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIHZhciBpbk1vZHVsZSA9IHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCI7XG4gIHZhciBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgaWYgKHJ1bnRpbWUpIHtcbiAgICBpZiAoaW5Nb2R1bGUpIHtcbiAgICAgIC8vIElmIHJlZ2VuZXJhdG9yUnVudGltZSBpcyBkZWZpbmVkIGdsb2JhbGx5IGFuZCB3ZSdyZSBpbiBhIG1vZHVsZSxcbiAgICAgIC8vIG1ha2UgdGhlIGV4cG9ydHMgb2JqZWN0IGlkZW50aWNhbCB0byByZWdlbmVyYXRvclJ1bnRpbWUuXG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG4gICAgfVxuICAgIC8vIERvbid0IGJvdGhlciBldmFsdWF0aW5nIHRoZSByZXN0IG9mIHRoaXMgZmlsZSBpZiB0aGUgcnVudGltZSB3YXNcbiAgICAvLyBhbHJlYWR5IGRlZmluZWQgZ2xvYmFsbHkuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRGVmaW5lIHRoZSBydW50aW1lIGdsb2JhbGx5IChhcyBleHBlY3RlZCBieSBnZW5lcmF0ZWQgY29kZSkgYXMgZWl0aGVyXG4gIC8vIG1vZHVsZS5leHBvcnRzIChpZiB3ZSdyZSBpbiBhIG1vZHVsZSkgb3IgYSBuZXcsIGVtcHR5IG9iamVjdC5cbiAgcnVudGltZSA9IGdsb2JhbC5yZWdlbmVyYXRvclJ1bnRpbWUgPSBpbk1vZHVsZSA/IG1vZHVsZS5leHBvcnRzIDoge307XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgcnVudGltZS53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGVbdG9TdHJpbmdUYWdTeW1ib2xdID1cbiAgICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBwcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBydW50aW1lLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGlmICghKHRvU3RyaW5nVGFnU3ltYm9sIGluIGdlbkZ1bikpIHtcbiAgICAgICAgZ2VuRnVuW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcbiAgICAgIH1cbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgcnVudGltZS5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uIElmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLCBob3dldmVyLCB0aGVcbiAgICAgICAgICAvLyByZXN1bHQgZm9yIHRoaXMgaXRlcmF0aW9uIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCB0aGUgc2FtZVxuICAgICAgICAgIC8vIHJlYXNvbi4gTm90ZSB0aGF0IHJlamVjdGlvbnMgb2YgeWllbGRlZCBQcm9taXNlcyBhcmUgbm90XG4gICAgICAgICAgLy8gdGhyb3duIGJhY2sgaW50byB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBhcyBpcyB0aGUgY2FzZVxuICAgICAgICAgIC8vIHdoZW4gYW4gYXdhaXRlZCBQcm9taXNlIGlzIHJlamVjdGVkLiBUaGlzIGRpZmZlcmVuY2UgaW5cbiAgICAgICAgICAvLyBiZWhhdmlvciBiZXR3ZWVuIHlpZWxkIGFuZCBhd2FpdCBpcyBpbXBvcnRhbnQsIGJlY2F1c2UgaXRcbiAgICAgICAgICAvLyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGRlY2lkZSB3aGF0IHRvIGRvIHdpdGggdGhlIHlpZWxkZWRcbiAgICAgICAgICAvLyByZWplY3Rpb24gKHN3YWxsb3cgaXQgYW5kIGNvbnRpbnVlLCBtYW51YWxseSAudGhyb3cgaXQgYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGdlbmVyYXRvciwgYWJhbmRvbiBpdGVyYXRpb24sIHdoYXRldmVyKS4gV2l0aFxuICAgICAgICAgIC8vIGF3YWl0LCBieSBjb250cmFzdCwgdGhlcmUgaXMgbm8gb3Bwb3J0dW5pdHkgdG8gZXhhbWluZSB0aGVcbiAgICAgICAgICAvLyByZWplY3Rpb24gcmVhc29uIG91dHNpZGUgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiwgc28gdGhlXG4gICAgICAgICAgLy8gb25seSBvcHRpb24gaXMgdG8gdGhyb3cgaXQgZnJvbSB0aGUgYXdhaXQgZXhwcmVzc2lvbiwgYW5kXG4gICAgICAgICAgLy8gbGV0IHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gaGFuZGxlIHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBydW50aW1lLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBydW50aW1lLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdClcbiAgICApO1xuXG4gICAgcmV0dXJuIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIHJ1bnRpbWUua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBydW50aW1lLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xufSkoXG4gIC8vIEluIHNsb3BweSBtb2RlLCB1bmJvdW5kIGB0aGlzYCByZWZlcnMgdG8gdGhlIGdsb2JhbCBvYmplY3QsIGZhbGxiYWNrIHRvXG4gIC8vIEZ1bmN0aW9uIGNvbnN0cnVjdG9yIGlmIHdlJ3JlIGluIGdsb2JhbCBzdHJpY3QgbW9kZS4gVGhhdCBpcyBzYWRseSBhIGZvcm1cbiAgLy8gb2YgaW5kaXJlY3QgZXZhbCB3aGljaCB2aW9sYXRlcyBDb250ZW50IFNlY3VyaXR5IFBvbGljeS5cbiAgKGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpcyB9KSgpIHx8IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKVxuKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=